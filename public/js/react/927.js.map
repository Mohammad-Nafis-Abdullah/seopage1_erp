{"version":3,"file":"js/react/927.js","mappings":"iqCAQA,IAAMA,EAAU,CACZ,CACIC,GAAI,EACJC,KAAM,oGAEV,CACID,GAAI,EACJC,KAAM,mEAuLd,QAnLmB,SAAHC,GAAgB,IAAAC,EAAXC,EAAKF,EAALE,MACuBC,EAAAC,GAAZC,EAAAA,EAAAA,UAAS,CAAC,GAAE,GAAjCC,EAAMH,EAAA,GAAEI,EAASJ,EAAA,GACgBK,EAAAJ,GAAZC,EAAAA,EAAAA,UAAS,CAAC,GAAE,GAAjCI,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACkBG,EAAAP,GAAZC,EAAAA,EAAAA,UAAS,IAAG,GAAnCO,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GACsCG,EAAAV,GAAZC,EAAAA,EAAAA,UAAS,IAAG,GAAzDU,EAAkBD,EAAA,GAAEE,EAAqBF,EAAA,GAchD,OACIG,EAAAA,EAAAA,KAACC,EAAAA,SAAc,CAAAC,UACXC,EAAAA,EAAAA,MAAA,QAAMC,UAAU,OAAMF,SAAA,EAElBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYF,SAAA,EACvBF,EAAAA,EAAAA,KAAA,SAAOK,QAAQ,GAAGD,UAAU,mBAAkBF,SAAC,8BAC/CF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,+BAA8BF,UACzCC,EAAAA,EAAAA,MAACG,EAAAA,EAAO,CAACC,MAAOlB,EAAQmB,SAAUlB,EAAUY,SAAA,EACxCC,EAAAA,EAAAA,MAACG,EAAAA,EAAAA,OAAc,CAACF,UAAU,mGAAkGF,SAAA,EACxHF,EAAAA,EAAAA,KAAA,QAAMI,UAAU,UAASF,SACR,QADQlB,EACpBK,aAAM,EAANA,EAAQP,YAAI,IAAAE,EAAAA,GAAIgB,EAAAA,EAAAA,KAAA,QAAMS,MAAO,CAACC,MAAO,QAAQR,SAAC,YAEnDF,EAAAA,EAAAA,KAACW,EAAAA,IAAiB,CAACP,UAAU,aAGjCJ,EAAAA,EAAAA,KAACM,EAAAA,EAAAA,QAAe,CACZF,UAAU,8CACVK,MAAO,CACHG,OAAQ,GACRC,UAAW,QACXC,UAAW,QACbZ,SAEDtB,aAAO,EAAPA,EAASmC,KAAI,SAACC,GAAM,OACjBhB,EAAAA,EAAAA,KAACM,EAAAA,EAAAA,OAAc,CAEXC,MAAOS,EACPZ,UAAW,SAAAa,GAAA,IAAGC,EAAQD,EAARC,SAAUC,EAAMF,EAANE,OAAM,OAC1BD,EACM,sCACAC,EACA,oCACA,4BAA4B,EACrCjB,SAEAc,aAAM,EAANA,EAAQlC,MAVJkC,EAAOnC,GAWC,eAQrCsB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYF,SAAA,EACvBF,EAAAA,EAAAA,KAAA,SAAOK,QAAQ,GAAGD,UAAU,mBAAkBF,SAAC,wBAG/CF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,+BAA8BF,UACzCF,EAAAA,EAAAA,KAACoB,EAAAA,QAAiB,CAAC5B,OAAQA,EAAQC,UAAWA,UAsCtDU,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYF,SAAA,EACvBF,EAAAA,EAAAA,KAAA,SAAOK,QAAQ,SAASD,UAAU,mBAAkBF,SAAC,0CAGrDF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,mBAAkBF,UAC7BF,EAAAA,EAAAA,KAACqB,EAAAA,EAAiB,CACdb,SAAU,SAACc,EAAGC,GACV,IAAMC,EAAOD,EAAOE,UACpB7B,EAAW4B,EACf,UAKZrB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYF,SAAA,EACvBF,EAAAA,EAAAA,KAAA,SAAOK,QAAQ,GAAGD,UAAU,mBAAkBF,SAAC,+CAG/CC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,GAAEF,SAAA,EACbC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,+BAA8BF,SAAA,EACzCF,EAAAA,EAAAA,KAAA,SACII,UAAU,mBACVsB,KAAK,QACL5C,KAAK,qBACLD,GAAG,eACH0B,MAAM,MACNC,SAAU,SAACc,GAAC,OACRvB,EAAsBuB,EAAEK,OAAOpB,MAAM,KAG7CP,EAAAA,EAAAA,KAAA,SACII,UAAU,mBACVC,QAAQ,eAAcH,SACzB,YAILC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,+BAA8BF,SAAA,EACzCF,EAAAA,EAAAA,KAAA,SACII,UAAU,mBACVsB,KAAK,QACL5C,KAAK,qBACLD,GAAG,eACH0B,MAAM,KACNC,SAAU,SAACc,GAAC,OACRvB,EAAsBuB,EAAEK,OAAOpB,MAAM,KAG7CP,EAAAA,EAAAA,KAAA,SACII,UAAU,mBACVC,QAAQ,eAAcH,SACzB,iBAObC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iCAAgCF,SAAA,EAC3CF,EAAAA,EAAAA,KAAC4B,EAAAA,EAAM,CACHC,QAAQ,WACRC,QAAS7C,EACTmB,UAAU,eAAcF,SAC3B,WAIDF,EAAAA,EAAAA,KAAC+B,EAAAA,EAAY,CAACD,QAtKd,SAACR,GACbA,EAAEU,iBACF,IAAMR,EAAO,CACTnC,OAAQA,aAAM,EAANA,EAAQP,KAChBU,OAAQA,aAAM,EAANA,EAAQX,GAChBc,QAAAA,EACAG,mBAAAA,GAGJmC,QAAQC,IAAIV,EAChB,EA4JiDW,WAAW,EAAOC,MAAM,kBAK7E,C,8kCCvGA,QAtF0B,SAAHrD,GAA8B,IAAxBS,EAAMT,EAANS,OAAQC,EAASV,EAATU,UACjC4C,GAAmCC,EAAAA,EAAAA,KAA3BC,EAAKF,EAALE,MAAOC,EAAeH,EAAfG,gBACyBtD,EAAAC,GAAZC,EAAAA,EAAAA,UAAS,IAAG,GAAjCqD,EAAMvD,EAAA,GAAEwD,EAASxD,EAAA,GAEpByD,EAAQC,IAAAA,OAASL,GAAO,SAACM,GAAI,OAAMD,IAAAA,OAASC,EAAKC,QAAQ,IAEzDC,EACW,KAAXN,EACME,EACAA,aAAK,EAALA,EAAOK,QAAO,SAACH,GAAI,OACfD,IAAAA,UAAYC,EAAK/D,MAAMmE,SAASL,IAAAA,UAAYH,GAAQ,IAGlE,OACIzC,EAAAA,EAAAA,KAAA,OAAKI,UAAU,+BAA8BF,UACzCC,EAAAA,EAAAA,MAAC+C,EAAAA,EAAQ,CAAC3C,MAAOf,EAAQgB,SAAUf,EAAUS,SAAA,EACzCC,EAAAA,EAAAA,MAAC+C,EAAAA,EAAAA,OAAe,CAAC9C,UAAU,0BAAyBF,SAAA,EAChDF,EAAAA,EAAAA,KAACkD,EAAAA,EAAAA,MAAc,CACX9C,UAAU,yFACV+C,aAAc,SAAC3D,GAAM,OAAKA,aAAM,EAANA,EAAQV,IAAI,EACtC0B,SAAU,SAACc,GAAC,OAAKoB,EAAUpB,EAAEK,OAAOpB,MAAM,EAC1C6C,YAAY,QAIhBpD,EAAAA,EAAAA,KAAA,QACIS,MAAO,CACH4C,SAAU,WACVC,IAAK,MACLC,MAAO,MACPC,UAAW,oBACbtD,UAEFF,EAAAA,EAAAA,KAACW,EAAAA,IAAiB,UAI1BX,EAAAA,EAAAA,KAACkD,EAAAA,EAAAA,QAAgB,CACb9C,UAAU,8CACVK,MAAO,CACHG,OAAQ,GACRC,UAAW,QACXC,UAAW,QACbZ,SAED6C,GAAiBA,EAAcU,OAC5BV,EAAchC,KAAI,SAAC8B,GAAI,OACnB7C,EAAAA,EAAAA,KAACkD,EAAAA,EAAAA,OAAe,CAEZ3C,MAAOsC,EACPzC,UAAW,SAAAa,GAAA,IAAGC,EAAQD,EAARC,SAAUC,EAAMF,EAANE,OAAM,OAC9BD,EACM,sCACAC,EACA,oCACA,4BAA4B,EACrCjB,SAEI,SAAAwD,GAAA,IAAExC,EAAQwC,EAARxC,SAAQ,OACPf,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gDAAgDK,MAAO,CAAEkD,IAAK,QAASzD,SAAA,EAClFF,EAAAA,EAAAA,KAAA,OACI4D,IAAKf,aAAI,EAAJA,EAAMgB,UACXC,IAAKjB,aAAI,EAAJA,EAAM/D,KACXiF,MAAO,GACPC,OAAQ,GACR5D,UAAU,mBAEbc,GACDlB,EAAAA,EAAAA,KAAA,QAAMI,UAAU,QAAOF,SAAE2C,aAAI,EAAJA,EAAM/D,OAE9BoC,IAAYf,EAAAA,EAAAA,MAAA,QAAMC,UAAU,UAASF,SAAA,CAAC,KAACF,EAAAA,EAAAA,KAAA,KAAGI,UAAU,iCAAiC,SACpF,GAvBLyC,EAAKhE,GAyBI,KAGtBmB,EAAAA,EAAAA,KAAA,OAAKI,UAAU,6BAA4BF,SACtCsC,EAAkB,aAAe,yBAO9D,C","sources":["webpack:///./resources/js/react/single-task/section/task-actions/report/ReportForm.jsx","webpack:///./resources/js/react/single-task/section/task-actions/stop-timer/options/UserSelectionList.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Listbox } from \"@headlessui/react\";\r\nimport { HiOutlineSelector } from \"react-icons/hi\";\r\nimport Button from \"../../../components/Button\";\r\nimport SubmitButton from \"../../../components/SubmitButton\";\r\nimport CKEditorComponent from \"../../../../ckeditor\";\r\nimport UserSelectionList from \"../stop-timer/options/UserSelectionList\";\r\n\r\nconst reports = [\r\n    {\r\n        id: 1,\r\n        name: \"Project Manager/Lead Developer Is Making Me Do Their Work Without Top Managementsâ€™ Authorization\",\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Need Further Clarification From Lead Developer/Project Manager\",\r\n    },\r\n];\r\n\r\nconst ReportForm = ({close}) => {\r\n    const [reason, setReason] = useState({});\r\n    const [person, setPerson] = useState({});\r\n    const [comment, setComment] = useState(\"\");\r\n    const [previousNotedIssue, setPreviousNotedIssue] = useState(\"\");\r\n\r\n    const onSubmit =(e)=>{\r\n        e.preventDefault();\r\n        const data = {\r\n            reason: reason?.name,\r\n            person: person?.id,\r\n            comment,\r\n            previousNotedIssue\r\n        }\r\n\r\n        console.log(data)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <form className=\"px-3\">\r\n                {/* reason selection */}\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"\" className=\"font-weight-bold\">Select Reason for report</label>\r\n                    <div className=\"position-relative w-100 mb-3\">\r\n                        <Listbox value={reason} onChange={setReason}>\r\n                            <Listbox.Button className=\"w-100 bg-white py-2 pl-2 pr-1 border text-left d-flex align-items-center justify-content-between\">\r\n                                <span className=\"mr-auto\">\r\n                                    {reason?.name ?? <span style={{color: '#aaa'}}> -- </span>}\r\n                                </span>\r\n                                <HiOutlineSelector className=\"f-16\" />\r\n                            </Listbox.Button>\r\n\r\n                            <Listbox.Options\r\n                                className=\"position-absolute bg-white p-2 shadow w-100\"\r\n                                style={{\r\n                                    zIndex: 10,\r\n                                    maxHeight: \"350px\",\r\n                                    overflowY: \"auto\",\r\n                                }}\r\n                            >\r\n                                {reports?.map((report) => (\r\n                                    <Listbox.Option\r\n                                        key={report.id}\r\n                                        value={report}\r\n                                        className={({ selected, active }) =>\r\n                                            selected\r\n                                                ? \"task-selection-list-option selected\"\r\n                                                : active\r\n                                                ? \"task-selection-list-option active\"\r\n                                                : \"task-selection-list-option\"\r\n                                        }\r\n                                    >\r\n                                        {report?.name}\r\n                                    </Listbox.Option>\r\n                                ))}\r\n                            </Listbox.Options>\r\n                        </Listbox>\r\n                    </div>\r\n                </div>\r\n                {/* reason selection end */}\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                        Responsible Person\r\n                    </label>\r\n                    <div className=\"position-relative w-100 mb-3\">\r\n                        <UserSelectionList person={person} setPerson={setPerson} />\r\n                        {/* <Listbox value={person} onChange={setPerson}>\r\n                            <Listbox.Button className=\"w-100 bg-white py-2 pl-2 pr-1 border text-left d-flex align-items-center justify-content-between\">\r\n                                <span className=\"mr-auto\">\r\n                                    {reason?.name ||\r\n                                        \"Select Responsible Person.\"}\r\n                                </span>\r\n                                <HiOutlineSelector className=\"f-16\" />\r\n                            </Listbox.Button>\r\n\r\n                            <Listbox.Options\r\n                                className=\"position-absolute bg-white p-2 shadow w-100\"\r\n                                style={{\r\n                                    zIndex: 10,\r\n                                    maxHeight: \"350px\",\r\n                                    overflowY: \"auto\",\r\n                                }}\r\n                            >\r\n                                {reports?.map((report) => (\r\n                                    <Listbox.Option\r\n                                        key={report.id}\r\n                                        value={report}\r\n                                        className={({ selected, active }) =>\r\n                                            selected\r\n                                                ? \"task-selection-list-option selected\"\r\n                                                : active\r\n                                                ? \"task-selection-list-option active\"\r\n                                                : \"task-selection-list-option\"\r\n                                        }\r\n                                    >\r\n                                        {report?.name}\r\n                                    </Listbox.Option>\r\n                                ))}\r\n                            </Listbox.Options>\r\n                        </Listbox> */}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"editor\" className=\"font-weight-bold\">\r\n                        Briefly describe the problem here...\r\n                    </label>\r\n                    <div className=\"ck-editor-holder\">\r\n                        <CKEditorComponent\r\n                            onChange={(e, editor) => {\r\n                                const data = editor.getData();\r\n                                setComment(data);\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                        Did you report the same issue previously?\r\n                    </label>\r\n                    <div className=\"\">\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input\r\n                                className=\"form-check-input\"\r\n                                type=\"radio\"\r\n                                name=\"inlineRadioOptions\"\r\n                                id=\"inlineRadio1\"\r\n                                value=\"yes\"\r\n                                onChange={(e) =>\r\n                                    setPreviousNotedIssue(e.target.value)\r\n                                }\r\n                            />\r\n                            <label\r\n                                className=\"form-check-label\"\r\n                                htmlFor=\"inlineRadio1\"\r\n                            >\r\n                                Yes\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input\r\n                                className=\"form-check-input\"\r\n                                type=\"radio\"\r\n                                name=\"inlineRadioOptions\"\r\n                                id=\"inlineRadio2\"\r\n                                value=\"no\"\r\n                                onChange={(e) =>\r\n                                    setPreviousNotedIssue(e.target.value)\r\n                                }\r\n                            />\r\n                            <label\r\n                                className=\"form-check-label\"\r\n                                htmlFor=\"inlineRadio2\"\r\n                            >\r\n                                No\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"my-3 d-flex align-items-center\">\r\n                    <Button\r\n                        variant=\"tertiary\"\r\n                        onClick={close}\r\n                        className=\"ml-auto mr-2\"\r\n                    >\r\n                        Close\r\n                    </Button>\r\n\r\n                    <SubmitButton onClick={onSubmit} isLoading={false} title=\"Report\" />\r\n                </div>\r\n            </form>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ReportForm;\r\n","import React, { useState } from \"react\";\r\nimport { useUsers } from \"../../../../../hooks/useUsers\";\r\nimport { User } from \"../../../../../utils/user-details\";\r\nimport { Combobox } from \"@headlessui/react\";\r\nimport _ from \"lodash\";\r\nimport { HiOutlineSelector } from \"react-icons/hi\";\r\n\r\nconst UserSelectionList = ({ person, setPerson }) => {\r\n    const { users, usersIsFetching } = useUsers();\r\n    const [search, setSearch] = useState(\"\");\r\n\r\n    let _user = _.filter(users, (user) => !_.isNull(user.role_id));\r\n\r\n    let filteredUsers =\r\n        search === \"\"\r\n            ? _user\r\n            : _user?.filter((user) =>\r\n                  _.lowerCase(user.name).includes(_.lowerCase(search))\r\n              );\r\n\r\n    return (\r\n        <div className=\"position-relative w-100 mb-3\">\r\n            <Combobox value={person} onChange={setPerson}>\r\n                <Combobox.Button className=\"position-relative w-100\">\r\n                    <Combobox.Input\r\n                        className=\"w-100 bg-white py-2 pl-2 pr-1 border d-flex align-items-center justify-content-between\"\r\n                        displayValue={(person) => person?.name}\r\n                        onChange={(e) => setSearch(e.target.value)}\r\n                        placeholder=\"--\"\r\n                    />\r\n\r\n                    {/* Selection box icon */}\r\n                    <span\r\n                        style={{\r\n                            position: \"absolute\",\r\n                            top: \"50%\",\r\n                            right: \"5px\",\r\n                            transform: \"translateY(-50%)\",\r\n                        }}\r\n                    >\r\n                        <HiOutlineSelector />\r\n                    </span>\r\n                </Combobox.Button>\r\n\r\n                <Combobox.Options\r\n                    className=\"position-absolute bg-white p-2 shadow w-100\"\r\n                    style={{\r\n                        zIndex: 10,\r\n                        maxHeight: \"350px\",\r\n                        overflowY: \"auto\",\r\n                    }}\r\n                >\r\n                    {filteredUsers && filteredUsers.length ? (\r\n                        filteredUsers.map((user) => (\r\n                            <Combobox.Option\r\n                                key={user.id}\r\n                                value={user}\r\n                                className={({ selected, active }) =>\r\n                                selected\r\n                                    ? \"task-selection-list-option selected\"\r\n                                    : active\r\n                                    ? \"task-selection-list-option active\"\r\n                                    : \"task-selection-list-option\"\r\n                            }\r\n                            >\r\n                                {({selected}) => (\r\n                                    <div className=\"d-flex align-items-center bg-transparent f-14\" style={{ gap: \"10px\" }}>\r\n                                        <img\r\n                                            src={user?.image_url}\r\n                                            alt={user?.name}\r\n                                            width={24}\r\n                                            height={24}\r\n                                            className=\"rounded-circle\"\r\n                                        />\r\n                                        {selected}\r\n                                        <span className=\"w-100\">{user?.name}</span>\r\n\r\n                                        {selected && <span className=\"ml-auto\"> <i className=\"fa-solid fa-check text-white\" /> </span> }\r\n                                    </div>\r\n                                )}\r\n                            </Combobox.Option>\r\n                        ))\r\n                    ) : (\r\n                        <div className=\"task-selection-list-option\">\r\n                            {usersIsFetching ? \"Loading...\" : \"Nothing found.\"}\r\n                        </div>\r\n                    )}\r\n                </Combobox.Options>\r\n            </Combobox>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserSelectionList;\r\n\r\n// const UserList = (props) => {\r\n//     const user = new User(props.user);\r\n\r\n//     if (!user?.getRoleId()) return null;\r\n//     return (\r\n        \r\n//     );\r\n// };\r\n"],"names":["reports","id","name","_ref","_reason$name","close","_useState2","_slicedToArray","useState","reason","setReason","_useState4","person","setPerson","_useState6","comment","setComment","_useState8","previousNotedIssue","setPreviousNotedIssue","_jsx","React","children","_jsxs","className","htmlFor","Listbox","value","onChange","style","color","HiOutlineSelector","zIndex","maxHeight","overflowY","map","report","_ref2","selected","active","UserSelectionList","CKEditorComponent","e","editor","data","getData","type","target","Button","variant","onClick","SubmitButton","preventDefault","console","log","isLoading","title","_useUsers","useUsers","users","usersIsFetching","search","setSearch","_user","_","user","role_id","filteredUsers","filter","includes","Combobox","displayValue","placeholder","position","top","right","transform","length","_ref3","gap","src","image_url","alt","width","height"],"sourceRoot":""}