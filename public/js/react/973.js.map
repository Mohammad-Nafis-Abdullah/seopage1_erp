{"version":3,"file":"js/react/973.js","mappings":"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","sources":["webpack:///./resources/js/react/UI/comments/components/CustomModal.jsx","webpack:///./resources/js/react/UI/comments/CommentContainerDecider.jsx","webpack:///./resources/js/react/UI/comments/CommentsContainer.jsx","webpack:///./resources/js/react/UI/form/checkbox.css?a080","webpack:///./resources/js/react/UI/form/Cheeckbox.jsx","webpack:///./resources/js/react/global/AvatarGroup.module.css?7b6f","webpack:///./resources/js/react/global/AvatarGroup.jsx","webpack:///./resources/js/react/global/Rating.jsx","webpack:///./resources/js/react/hooks/useRevision.jsx","webpack:///./resources/js/react/hooks/useSingleTask.jsx","webpack:///./resources/js/react/services/api/TaskCommentApiSlice.js","webpack:///./resources/js/react/single-independent-task/components/Accordion.jsx","webpack:///./resources/js/react/single-independent-task/components/Guideline.jsx","webpack:///./resources/js/react/single-independent-task/components/RevisionText.jsx","webpack:///./resources/js/react/single-independent-task/components/loader/GenarelLoader.jsx","webpack:///./resources/js/react/single-independent-task/permissions.js","webpack:///./resources/js/react/single-independent-task/section/comments/CommentSendBox.jsx","webpack:///./resources/js/react/single-independent-task/components/CustomModal.jsx","webpack:///./resources/js/react/single-independent-task/section/comments/CommentWritingModal.jsx","webpack:///./resources/js/react/single-independent-task/section/comments/Widget.jsx","webpack:///./resources/js/react/single-independent-task/section/comments/CommentsSection.jsx","webpack:///./resources/js/react/single-independent-task/section/daily-submission/DailySubmissionItem.jsx","webpack:///./resources/js/react/single-independent-task/section/daily-submission/DailysubmissionDrawerTable.jsx","webpack:///./resources/js/react/single-independent-task/section/daily-submission/drawer-table-support/Single_user_submission_table_column.jsx","webpack:///./resources/js/react/single-independent-task/section/daily-submission/SingleUserSubmissionTableDrawer.jsx","webpack:///./resources/js/react/single-independent-task/section/daily-submission/DailySubmissionSection.jsx","webpack:///./resources/js/react/single-independent-task/section/history/InnerHistoryItemLoader.jsx","webpack:///./resources/js/react/single-independent-task/section/history/Histories.jsx","webpack:///./resources/js/react/single-independent-task/section/history/HistorySection.jsx","webpack:///./resources/js/react/single-independent-task/section/notes/Note.jsx","webpack:///./resources/js/react/single-independent-task/components/form/Input.jsx","webpack:///./resources/js/react/single-independent-task/section/notes/CreateNote.jsx","webpack:///./resources/js/react/single-independent-task/section/notes/EditNote.jsx","webpack:///./resources/js/react/single-independent-task/section/notes/NoteView.jsx","webpack:///./resources/js/react/single-independent-task/section/notes/NoteSection.jsx","webpack:///./resources/js/react/single-independent-task/section/revisions/ViewComment.jsx","webpack:///./resources/js/react/single-independent-task/section/revisions/RevisionSection.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/task-edit-form.module.css?78f7","webpack:///./resources/js/react/single-independent-task/section/comments/DatePicker.jsx","webpack:///./resources/js/react/single-independent-task/components/form/Searchbox.jsx","webpack:///./resources/js/react/single-independent-task/components/Loader.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/TaskCategorySelectionBox.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/AssignedToSelection.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/PrioritySelection.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/SubTaskEditModal.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/preview/Genarel.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/preview/SubmittedWork.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/preview/TimeLog.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/preview/TaskReview.jsx","webpack:///./resources/js/react/single-independent-task/components/HistoryLoader.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/preview/History.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/PreviewSubtask.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/approve-task/ApproveTask.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/SubTask.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/LeadConfirmationModal.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/WorkingEnvironmentForm.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/SubTaskForm.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/SubTaskEditForm.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/SubTaskSection.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/TaskEditForm.jsx","webpack:///./resources/js/react/single-independent-task/section/submitted-work/SubmitionView.jsx","webpack:///./resources/js/react/single-independent-task/section/submitted-work/WorkItem.jsx","webpack:///./resources/js/react/single-independent-task/section/submitted-work/InnerWorkItem.jsx","webpack:///./resources/js/react/single-independent-task/section/submitted-work/SubmittedModalView.jsx","webpack:///./resources/js/react/single-independent-task/section/submitted-work/SubmittedWork.jsx","webpack:///./resources/js/react/single-independent-task/section/daily-submission/TodaysUpdateModalTableRow.jsx","webpack:///./resources/js/react/single-independent-task/section/daily-submission/styles/DailySubmission.module.css?c214","webpack:///./resources/js/react/single-independent-task/section/daily-submission/styles/DataTable.css?09ae","webpack:///./resources/js/react/single-independent-task/section/daily-submission/TodaysUpdateModalTable.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/DailySubmissionControl.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/MarkAsComplete.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/RevisionCreationModal.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/RevisionControl.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/RevisionAcceptAndContinue.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/RevisionView.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/AssigneeRevisionToDev.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/DenyAndContinue.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/DeveloperRevisionView.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/RevisionViewModal.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/RevisionViewControl.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/subtask_creation_guide/GuideLineText.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/SubtaskCreationControl.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/StartTimerConfirmationModal.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/stop-timer/LessTrackTimerModal.jsx","webpack:///./resources/js/react/single-independent-task/components/StartTimerWorkingReportPopup.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/TimerControl.jsx","webpack:///./resources/js/react/single-independent-task/section/helper/timer-start-working-report-error-toaster.js","webpack:///./resources/js/react/single-independent-task/section/task-actions/client-approval/SubmitForClientApproval.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/client-approval/ClientAcceptedTask.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/AssigneeToLeadFromClientRevision.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/ClientRevision.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/client-approval/ClientApproval.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/report/Report.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/TaskAction.jsx","webpack:///./resources/js/react/single-independent-task/section/time-logs/InnerTableRow.jsx","webpack:///./resources/js/react/single-independent-task/section/time-logs/TimeLogTable.jsx","webpack:///./resources/js/react/single-independent-task/section/time-logs/TimeLogItemLoader.jsx","webpack:///./resources/js/react/single-independent-task/section/time-logs/TimeLogSection.jsx","webpack:///./resources/js/react/single-independent-task/SingleIndependentTask.jsx","webpack:///./resources/js/react/single-independent-task/components/Button.jsx","webpack:///./resources/js/react/single-independent-task/components/Dropdown.jsx","webpack:///./resources/js/react/single-independent-task/components/Modal.jsx","webpack:///./resources/js/react/single-independent-task/components/SubmitButton.jsx","webpack:///./resources/js/react/single-independent-task/section/comments/AttachmentUpload.jsx","webpack:///./resources/js/react/single-independent-task/section/comments/Comment.jsx","webpack:///./resources/js/react/single-independent-task/section/comments/EditComment.jsx","webpack:///./resources/js/react/single-independent-task/section/comments/InnerComment.jsx","webpack:///./resources/js/react/single-independent-task/section/comments/ReplyComment.jsx","webpack:///./resources/js/react/single-independent-task/section/comments/ReplyCommentPreview.jsx","webpack:///./resources/js/react/single-task/hooks/useDailySubmission.jsx","webpack:///./resources/js/react/utils/timeCalculate.js","webpack:///./resources/js/react/UI/form/checkbox.css","webpack:///./resources/js/react/global/AvatarGroup.module.css","webpack:///./resources/js/react/single-independent-task/section/daily-submission/styles/DailySubmission.module.css","webpack:///./resources/js/react/single-independent-task/section/daily-submission/styles/DataTable.css","webpack:///./resources/js/react/single-independent-task/section/sub-task/task-edit-form.module.css"],"sourcesContent":["import * as React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { usePopper } from 'react-popper';\r\nimport { motion, AnimatePresence } from 'framer-motion'; \r\n  \r\n\r\nconst CustomModal = ({toggleRef = null,  isOpen, close, children}) => {\r\n    const [modalRef, setModalRef] = React.useState(null); \r\n    const { styles, attributes } = usePopper(toggleRef, modalRef,{\r\n        placement: 'left-start',\r\n        modifiers: [ \r\n            {name: 'offset', options: {offset: [0, 0]}},\r\n        ]\r\n    })\r\n\r\n  return ( \r\n        <div \r\n            ref={setModalRef}\r\n            style={{\r\n                ...styles.popper,\r\n                pointerEvents: isOpen ? 'all' : 'none', \r\n                zIndex: 99,\r\n            }} \r\n            {...attributes.popper}\r\n        >   \r\n\r\n            <AnimatePresence>\r\n                {isOpen && (\r\n                    <motion.div \r\n                        initial={{opacity: 0}}\r\n                        animate={{opacity: 1}}\r\n                        exit={{opacity: 0}}\r\n                        className=''\r\n                    >\r\n                        {children} \r\n\r\n                        <Shadow/>\r\n                    </motion.div>\r\n                )}\r\n            </AnimatePresence>\r\n        </div> \r\n  )\r\n}\r\n\r\nexport default CustomModal \r\n\r\nconst Shadow = () => {\r\n    return ReactDOM.createPortal(\r\n        <div\r\n            style={{\r\n                width: '100vw',\r\n                height: '100vh',\r\n                position: 'fixed',\r\n                top: 0,\r\n                left: 0,\r\n                zIndex: 90,\r\n                background: 'rgba(0,0,0,.1)'\r\n            }} \r\n        />,\r\n        document.querySelector('#sp1SingleTaskPageModal')\r\n    )\r\n}","import React from \"react\";\r\nimport Modal from \"./components/Modal\";\r\nimport CustomModal from \"./components/CustomModal\";\r\n\r\nconst CommentContainerDecider = ({\r\n    fullScreenView,\r\n    toggleRef,\r\n    width,\r\n    isOpen,\r\n    children,\r\n}) => {\r\n    // console.log(width);\r\n    const handleContainer = (children) => {\r\n        if (fullScreenView && width <= 991) {\r\n            return (\r\n                <Modal isOpen={isOpen}>\r\n                    <div\r\n                        className=\"position-relative\"\r\n                        style={{\r\n                            padding: \"75px 23px 18px 25px\",\r\n                            height: \"100vh\",\r\n                            width: \"100vw\",\r\n                        }}\r\n                    >\r\n                        <div\r\n                            className=\"sp1_task_comment_modal\"\r\n                            style={{\r\n                                height: \"100%\",\r\n                                width: \"100%\",\r\n                                maxHeight: \"100vh\",\r\n                            }}\r\n                        >\r\n                            {/* modal body (start) */}\r\n                            {children}\r\n                            {/* modal body (end) */}\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            );\r\n        } else if (!fullScreenView && width <= 991) {\r\n            return (\r\n                <Modal isOpen={isOpen}>\r\n                    <div\r\n                        className=\"position-relative\"\r\n                        style={{\r\n                            padding: \"75px 23px 18px 25px\",\r\n                            height: \"100vh\",\r\n                            width: \"100vw\",\r\n                        }}\r\n                    >\r\n                        <div\r\n                            className=\"sp1_task_comment_modal\"\r\n                            style={{\r\n                                height: \"100%\",\r\n                                width: \"100%\",\r\n                                maxHeight: \"100vh\",\r\n                            }}\r\n                        >\r\n                            {/* modal body (start) */}\r\n                            {children}\r\n                            {/* modal body (end) */}\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            );\r\n        }  \r\n        else if (fullScreenView && width > 991) {\r\n            return (\r\n                <Modal isOpen={isOpen}>\r\n                    <div\r\n                        className=\"position-relative\"\r\n                        style={{\r\n                            padding: \"79px 41px 21px 261px\",\r\n                            height: \"100vh\",\r\n                            width: \"100vw\",\r\n                        }}\r\n                    >\r\n                        <div\r\n                            className=\"sp1_task_comment_modal\"\r\n                            style={{\r\n                                height: \"100%\",\r\n                                width: \"100%\",\r\n                                maxHeight: \"100vh\",\r\n                            }}\r\n                        >\r\n                            {/* modal body (start) */}\r\n                            {children}\r\n                            {/* modal body (end) */}\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            );\r\n        } else if (!fullScreenView && width > 991) {\r\n            return (\r\n                <Modal isOpen={isOpen}>\r\n                    <div\r\n                        className=\"position-relative\"\r\n                        style={{\r\n                            paddingTop: \"79px\",\r\n                        }}\r\n                    >\r\n                        <div\r\n                            style={{\r\n                                margin:\"auto\"\r\n                            }}\r\n                            className=\"sp1_task_comment_modal\"\r\n                        >\r\n                            {/* modal body (start) */}\r\n                            {children}\r\n                            {/* modal body (end) */}\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            );\r\n        }\r\n        // else if (width <= 1200) {\r\n        //     return (\r\n        //         <Modal isOpen={isOpen}>\r\n        //             <div className=\"position-relative\">\r\n        //                 <div className=\"sp1_task_comment_modal --small-device\">\r\n        //                     {/* modal body (start) */}\r\n        //                     {children}\r\n        //                     {/* modal body (end) */}\r\n        //                 </div>\r\n        //             </div>\r\n        //         </Modal>\r\n        //     );\r\n        // }\r\n        else {\r\n            return (\r\n                <Modal isOpen={isOpen}>\r\n                    <div className=\"position-relative\">\r\n                        <div className=\"sp1_task_comment_modal --small-device\">\r\n                            {/* modal body (start) */}\r\n                            {children}\r\n                            {/* modal body (end) */}\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            );\r\n        }\r\n    };\r\n\r\n    return handleContainer(children);\r\n};\r\n\r\nexport default CommentContainerDecider;\r\n","import React from \"react\";\r\nimport { useWindowSize } from \"react-use\";\r\nimport CustomModal from \"./components/CustomModal\";\r\nimport Modal from \"./components/Modal\";\r\nimport CommentsBody from \"./CommentsBody\";\r\nimport { useState } from \"react\";\r\nimport commentDemoData from \"./_Data/commentDemoData\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useGetCommentsQuery } from \"../../services/api/commentsApiSlice\";\r\nimport CommentContainerDecider from \"./CommentContainerDecider\";\r\nimport _ from \"lodash\";\r\n\r\n// const demoComments = commentDemoData(20);\r\n\r\nconst CommentsContainer = ({\r\n    toggleRef = null,\r\n    isOpen,\r\n    close,\r\n    task,\r\n    comments = null,\r\n    onCommentPost,\r\n    taskId,\r\n    singleCommentId,\r\n    showCommentEditor = true,\r\n    showSearchBtn = true,\r\n    showFullScreenBtn = true,\r\n    height = \"89vh\",\r\n}) => {\r\n    // ---------------------------------------------------------\r\n    const param = useParams();\r\n\r\n    // ---------------------------------------------------------\r\n\r\n    const { width } = useWindowSize();\r\n    const [fullScreenView, setFullScreenView] = useState(false);\r\n    const { data, isFetching, isLoading, refetch } = useGetCommentsQuery(\r\n        param?.taskId\r\n    );\r\n    return (\r\n        <CommentContainerDecider\r\n            fullScreenView={fullScreenView}\r\n            isOpen={isOpen}\r\n            toggleRef={toggleRef}\r\n            width={width}\r\n        >\r\n            {/* {isOpen && ( */}\r\n            <CommentsBody\r\n                fullScreenView={fullScreenView}\r\n                setFullScreenView={setFullScreenView}\r\n                isOpen={isOpen}\r\n                close={close}\r\n                // comments={param?.taskId ? data : comments}\r\n                comments={\r\n                    param?.taskId\r\n                        ? singleCommentId\r\n                            ? data?.filter(\r\n                                  (comment) => comment.id === singleCommentId\r\n                              )\r\n                            : data\r\n                        : comments\r\n                }\r\n                // comments={demoComments}\r\n                loading={isLoading}\r\n                fetching={isFetching}\r\n                refetch={refetch}\r\n                taskId={taskId ? taskId : param?.taskId}\r\n                showFullScreenBtn={width <= 991 ? false : showFullScreenBtn}\r\n                height={height}\r\n                showCommentEditor={showCommentEditor}\r\n                showSearchBtn={showSearchBtn}\r\n            />\r\n            {/* )} */}\r\n        </CommentContainerDecider>\r\n    );\r\n};\r\n\r\nexport default CommentsContainer;\r\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[2]!./checkbox.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import \"./checkbox.css\";\r\n\r\nconst Checkbox = ({\r\n    value,\r\n    onChange,\r\n    label,\r\n    checked,\r\n    className = \"\",\r\n    labelClassName = \"\",\r\n    disabled = false,\r\n    ...props\r\n}) => {\r\n    return (\r\n        <label\r\n            className={`d-flex align-items-center sp1_checkbox--label ${labelClassName}${\r\n                disabled ? \" disable\" : \"\"\r\n            }`}\r\n        >\r\n            <input\r\n                type=\"checkbox\"\r\n                value={value}\r\n                checked={checked}\r\n                disabled={disabled}\r\n                onChange={onChange}\r\n                className={`sp1_checkbox mr-2 ${className}`}\r\n            />\r\n            {label}\r\n        </label>\r\n    );\r\n};\r\n\r\nexport default Checkbox;\r\n","import api from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[2]!./AvatarGroup.module.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import React from \"react\";\r\nimport styles from \"./AvatarGroup.module.css\";\r\nimport _ from \"lodash\";\r\n\r\nconst AvatarGroup = ({ users = [], className = \"\", show=2 }) => {\r\n\r\n    const len = _.size(users);\r\n\r\n    const avatars = len > show ? users.splice(0, show) : users;\r\n\r\n    return (\r\n        <div className={styles.avatar_group}>\r\n\r\n\r\n            {len > show && (\r\n                <div  className={`${styles.avatar} ${className} ${styles.empty_avatar}`} >\r\n                    <span> +{len}</span>\r\n                </div>\r\n            )}\r\n            {_.map(avatars, (user, i) => (\r\n                <div key={i} className={`${styles.avatar} ${className}`}>\r\n                    <img\r\n                        src={user.src}\r\n                        alt=\"\"\r\n                        className={styles.avatar_image}\r\n                    />\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AvatarGroup;\r\n","const Rating = ({\r\n    rating,\r\n    className = '',\r\n    iconClassName = '',\r\n}) => {\r\n    return (\r\n        <>\r\n            {[...Array(5)].map((r, idx) =>\r\n                idx <= parseInt(rating) - 1 ? (\r\n                    <i key={idx} className=\"fa-solid fa-star\" style={{color:'#FFA500'}} />\r\n                ) : rating - parseInt(rating) > 0 &&\r\n                  idx === parseInt(rating) ? (\r\n                    <i key={idx} className=\"fa-solid fa-star-half-stroke\" style={{color:'#FFA500'}} />\r\n                ) : (\r\n                    <i key={idx} className=\"fa-regular fa-star\" style={{color: '#b9b9b9'}} />\r\n                ),\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Rating;","\r\n\r\n\r\nexport const useRevision = () => {\r\n\r\n\r\n    // project menager acknowladgement options\r\n    const getProjectManagerAcknowladgementOptions = () =>{\r\n\r\n        const isAlreadyAccepted = false;\r\n\r\n        if(isAlreadyAccepted){\r\n            return []\r\n        }\r\n\r\n        return [\r\n            {\r\n                id: 'PLRx01',\r\n                revision: \"My instruction was incomplete/incorrect and I have to make some changes in the instruction now to make it right\",\r\n                isDeniable: false,\r\n            },\r\n            {\r\n                id: 'PLRx02',\r\n                revision: \"The work done is aligned with my instruction, but after seeing it, I want to give some minor changes\",\r\n                isDeniable: false,\r\n            },\r\n            {\r\n                id: 'PLRx3',\r\n                revision: \"The Lead Developer/project coordinator’s delivered work doesn’t match my shared requirement\",\r\n                isDeniable: true,\r\n            },\r\n            {\r\n                id: 'PLRx04',\r\n                revision: \"The instruction was followed, but the lead developer missed out some default/basic things or best practices which are not essential to write in instruction\",\r\n                isDeniable: true\r\n            },\r\n        ]\r\n    }\r\n\r\n    // lead developer acknowladgement Options\r\n    const getLeadDeveloperAcknowladgementOptions = () => {\r\n        const isAlreadyAccepted = false;\r\n        // if already accepted\r\n        if(isAlreadyAccepted){\r\n            return []\r\n        }else{\r\n            return [\r\n                {\r\n                    id: 'LDRx1',\r\n                    revision: \"The concerned developer’s delivered work doesn’t match my shared requirement\",\r\n                    isDeniable: true,\r\n                },\r\n                {\r\n                    id: 'LDRx2',\r\n                    revision: \"My instruction was incomplete/incorrect and I have to make some changes in the instruction now to make it right.\",\r\n                    isDeniable: false,\r\n                },\r\n                {\r\n                    id: 'LDRx3',\r\n                    revision: \"The work done is aligned with my instruction but after seeing it, I want to give some minor changes.\",\r\n                    isDeniable: false\r\n                },\r\n\r\n                {\r\n                    id: 'LDRx4',\r\n                    revision: \"The instruction was followed but the developer missed out on some default/basic things or best practices which are not essential to mention in instruction.\",\r\n                    isDeniable: true,\r\n                },\r\n            ]\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return{\r\n        getLeadDeveloperAcknowladgementOptions,\r\n        getProjectManagerAcknowladgementOptions\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport {\r\n    useApproveSubmittedTaskMutation,\r\n    useLazyGetSubmittedTaskQuery,\r\n    useLazyGetTaskDetailsQuery\r\n} from '../services/api/SingleTaskPageApi';\r\nimport { User } from '../utils/user-details';\r\n\r\nexport const useSingleTask = () => {\r\n    const auth = new User(window?.Laravel?.user);\r\n\r\n\r\n    /* ********************************** */\r\n    /* ********* Get Task by task ID ********* */\r\n    const [\r\n        getTaskDetails,\r\n        {isFetching: taskDetailsIsFetching}\r\n    ] = useLazyGetTaskDetailsQuery();\r\n\r\n    const getTaskById = async (taskId) => {\r\n        try{\r\n            const res = await getTaskDetails(`/${taskId}/json?mode=basic`).unwrap();\r\n            if(res){\r\n                const task = {\r\n                    ...res.task,\r\n                    taskFiles: res?.taskFiles,\r\n                    parent_task_action: res.parent_task_action,\r\n                    parent_task_title: res.parent_task_heading?.heading || null,\r\n                    working_environment: res.working_environment,\r\n                    working_environment_data: res.working_environment_data,\r\n                    pm_task_guideline: res.task_guideline,\r\n                    task_revisions: res.revisions,\r\n                    taskSubTask: res.Sub_Tasks,\r\n                }\r\n                return task;\r\n            }\r\n        }catch(err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n\r\n     /* *************************************************** */\r\n    /* ********* Get Task submittion Information ********* */\r\n\r\n    const [getSubmittedTask, {isFetching: submittionInfoIsFetching} ] = useLazyGetSubmittedTaskQuery();\r\n\r\n    // method\r\n    const getSubmittionInfo = async (taskId) => {\r\n        try{\r\n            const res = await getSubmittedTask(taskId).unwrap();\r\n            if(res){\r\n                let data = _.orderBy(res, ['task_id', 'submission_no'], ['desc', 'desc']);\r\n                return data;\r\n            }\r\n        }catch(err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n\r\n    /* ********************************** */\r\n    /* ********* Approved Task ********* */\r\n    const [\r\n        approveSubmittedTask,\r\n        {isLoading: approveTaskLoadingStatus}\r\n    ] = useApproveSubmittedTaskMutation();\r\n\r\n    // method\r\n    const approveTask = async (data, callback) => {\r\n        if(!data || _.isEmpty(data)) return;\r\n        try{\r\n            const res = await approveSubmittedTask(data).unwrap();\r\n\r\n            if(res){\r\n                callback &&callback();\r\n                const Toast = Swal.mixin({\r\n                    toast: true,\r\n                    position: 'top-end',\r\n                    showConfirmButton: false,\r\n                    timer: 3000,\r\n                    timerProgressBar: true,\r\n                })\r\n\r\n                Toast.fire({\r\n                    icon: 'success',\r\n                    title: 'Task Approved Successfully'\r\n                })\r\n            }\r\n        }catch(err){ console.log(err) }\r\n    }\r\n\r\n\r\n    return {\r\n        getTaskById,\r\n        approveTask,\r\n        getSubmittionInfo,\r\n        taskDetailsIsFetching,\r\n        approveTaskLoadingStatus,\r\n        submittionInfoIsFetching\r\n    }\r\n}\r\n","import { apiSlice } from \"./apiSlice\";\r\n\r\nconst taskCommentApiSlice = apiSlice.injectEndpoints({\r\n    endpoints: (build) => ({\r\n        // get task comments\r\n        getTaskComments: build.query({\r\n            query: (taskId) => `/account/tasks/${taskId}/comments`,\r\n            providesTags: (result = [], error, arg) => [\r\n                \"TASK_COMMENTS\",\r\n                \"TASK_COMMENT\",\r\n                ...result.map(({ id }) => ({ type: \"TASK_COMMENT\", id })),\r\n            ],\r\n        }),\r\n\r\n        // get task comments\r\n        getTaskCommentReplies: build.query({\r\n            query: (commentId) =>\r\n                `/account/tasks/comments/${commentId}/replies`,\r\n            providesTags: [\"TASK_COMMENT_REPLIES\"],\r\n        }),\r\n\r\n        // widget data\r\n        getTaskCommentWidgetData: build.query({\r\n            query: (taskId) => `/account/tasks/comments-widget-data/${taskId}`,\r\n            providesTags: [\"TASK_COMMENTS_WIDGET\"],\r\n        }),\r\n\r\n        // preview a comment\r\n        getPreviewCommentData: build.query({\r\n            query: (commentId) =>\r\n                `/account/tasks/comments/${commentId}/preview`,\r\n            providesTags: [\"TASK_COMMENT_PREVIEW\"],\r\n        }),\r\n\r\n        // update comment\r\n        updateComment: build.mutation({\r\n            query: ({ data }) => ({\r\n                url: `/account/tasks/comment-edit`,\r\n                method: \"POST\",\r\n                body: data,\r\n                formData: true,\r\n            }),\r\n            invalidatesTags: [\"TASK_COMMENTS_WIDGET\", \"TASK_COMMENT_PREVIEW\"],\r\n        }),\r\n\r\n        // remove file\r\n        removeCommentPreviousUploadedFile: build.mutation({\r\n            query: (data) => ({\r\n                url: `/account/tasks/${data.task_id}/comments/${data.comment_id}/delete-attach-file`,\r\n                method: \"DELETE\",\r\n                body: {\r\n                    ...data,\r\n                    _token: document\r\n                        .querySelector(\"meta[name='csrf-token']\")\r\n                        .getAttribute(\"content\"),\r\n                },\r\n            }),\r\n            invalidatesTags: [\"TASK_COMMENTS_WIDGET\", \"TASK_COMMENT_PREVIEW\"],\r\n        }),\r\n\r\n        // reply comment\r\n        replyTaskComment: build.mutation({\r\n            query: (data) => ({\r\n                url: `/account/tasks/comment-reply`,\r\n                method: \"POST\",\r\n                body: data.formData,\r\n                formData: true,\r\n            }),\r\n            invalidatesTags: (result, error, arg) => [\r\n                { type: \"TASK_COMMENT\", id: arg.commentId },\r\n                \"TASK_COMMENT_REPLIES\",\r\n                \"TASK_COMMENTS_WIDGET\",\r\n                \"TASK_COMMENT_PREVIEW\",\r\n            ],\r\n        }),\r\n\r\n        deleteComment: build.mutation({\r\n            query: (commentId) => ({\r\n                url: `/account/tasks/comments/${commentId}/delete`,\r\n                method: \"DELETE\",\r\n                body: {\r\n                    _token: document\r\n                        .querySelector(\"meta[name='csrf-token']\")\r\n                        .getAttribute(\"content\"),\r\n                },\r\n            }),\r\n\r\n            invalidatesTags: (_result = [], _error, arg) => [\r\n                { type: \"TASK_COMMENT\", id: arg },\r\n                \"TASK_COMMENT_REPLIES\",\r\n                \"TASK_COMMENTS_WIDGET\",\r\n                \"TASK_COMMENT_PREVIEW\",\r\n            ],\r\n        }),\r\n    }),\r\n});\r\n\r\nexport const {\r\n    useGetTaskCommentsQuery,\r\n    useGetTaskCommentRepliesQuery,\r\n    useGetTaskCommentWidgetDataQuery,\r\n    useLazyGetTaskCommentWidgetDataQuery,\r\n    useGetPreviewCommentDataQuery,\r\n    useUpdateCommentMutation,\r\n    useRemoveCommentPreviousUploadedFileMutation,\r\n    useReplyTaskCommentMutation,\r\n    useDeleteCommentMutation,\r\n} = taskCommentApiSlice;\r\n","import * as React from 'react'\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\n\r\n\r\nconst Accordion = ({expendable=true, children, title, headingClass, headingStyle}) => {\r\n    const [expend,setExpend] = React.useState(false);\r\n\r\n    const toggle = () => {\r\n        setExpend(!expend);\r\n    }\r\n\r\n    const init = expendable ? 0 : 300;\r\n\r\n  return (\r\n    <div className='sp1_task_card mb-4'>\r\n        <div \r\n            className={`sp1_task_card--head ${headingClass}` }\r\n            onClick={ () => expendable ? toggle() : null}\r\n            style={{...headingStyle, cursor: expendable ? 'pointer': 'default'}}\r\n        > {title} \r\n\r\n            {expendable ? expend ? \r\n                <span className=\"__icon\">\r\n                    <i className=\"fa-solid fa-chevron-up\"></i>\r\n                </span>\r\n            : <span className=\"__icon\">\r\n                    <i className=\"fa-solid fa-chevron-down\"></i>\r\n                </span>: null\r\n            }\r\n        </div>\r\n\r\n\r\n        <AnimatePresence>\r\n            {expendable ? expend && (\r\n                <motion.div\r\n                    initial={{ height: init }}\r\n                    animate={{height: 800}}\r\n                    exit={{height: 0}}\r\n                    className='sp1_task_card--body'\r\n                >\r\n                    {children}\r\n                </motion.div> \r\n            ): <div className='sp1_task_card--body'>\r\n               {children}  \r\n            </div>\r\n        }\r\n        </AnimatePresence>\r\n\r\n\r\n       \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Accordion","import React from \"react\";\r\nimport { useState, useRef } from \"react\";\r\nimport Modal from \"./Modal\";\r\nimport { useClickAway } from \"react-use\";\r\nimport _ from \"lodash\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Guideline = ({ text, editorContainerClass, workEnv }) => {\r\n    const { task } = useSelector((s) => s.subTask);\r\n    const [expend, setExpend] = useState(false);\r\n    let isLong = text?.length > 400;\r\n    const showText = isLong ? text.slice(0, 400) + \"...\" : text;\r\n    const ref = useRef();\r\n\r\n    const handleExpend = (e) => {\r\n        e.preventDefault();\r\n        setExpend(!expend);\r\n    };\r\n\r\n    useClickAway(ref, () => {\r\n        setExpend(false);\r\n    });\r\n\r\n    return (\r\n        <div className=\"sp1_task_card--sub-card\">\r\n            <div\r\n                className={`sp1_ck_content sp1_guideline_text ${editorContainerClass}`}\r\n                dangerouslySetInnerHTML={{ __html: showText }}\r\n            ></div>\r\n            {isLong ? (\r\n                <a href=\"#\" onClick={handleExpend} className=\"\">\r\n                    {\" \"}\r\n                    Read full description{\" \"}\r\n                </a>\r\n            ) : (\r\n                \"\"\r\n            )}\r\n\r\n            <Modal className=\"sp1_task_card--sub-card-modal\" isOpen={expend}>\r\n                <div\r\n                    ref={ref}\r\n                    className=\"sp1_task_card--sub-card-modal-content\"\r\n                >\r\n                    <div className=\"d-flex align-items-center justify-content-between __header\">\r\n                        <button onClick={() => setExpend(false)}>\r\n                            <i className=\"fa-solid fa-xmark\"></i>\r\n                        </button>\r\n                    </div>\r\n\r\n                    {!_.isEmpty(workEnv) ? (\r\n                        <div className=\"sp1_task_card--sub-card m-4\">\r\n                            <div\r\n                                className=\"px-4 py-3\"\r\n                                style={{ background: \"#F3F5F9\" }}\r\n                            >\r\n                                <h6 className=\"mb-2\">Working Environment</h6>\r\n                                <hr />\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                        <span>\r\n                                            <strong>\r\n                                                Working/Staging Site's URL\r\n                                            </strong>\r\n                                            : <br />{\" \"}\r\n                                            <a\r\n                                                target=\"__blank\"\r\n                                                href={workEnv?.site_url}\r\n                                            >\r\n                                                View on new tab\r\n                                            </a>\r\n                                        </span>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                        <span>\r\n                                            <strong>Frontend Password</strong>:{\" \"}\r\n                                            <br /> {workEnv?.frontend_password}\r\n                                        </span>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                        <span>\r\n                                            <strong>\r\n                                                Working/Staging Site's Login URL\r\n                                            </strong>\r\n                                            : <br />{\" \"}\r\n                                            <a\r\n                                                target=\"__blank\"\r\n                                                href={workEnv?.login_url}\r\n                                            >\r\n                                                View on new tab\r\n                                            </a>{\" \"}\r\n                                        </span>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                        <span>\r\n                                            <strong>\r\n                                                Working/Staging Site's\r\n                                                Username/Email\r\n                                            </strong>\r\n                                            : <br /> {workEnv?.email}\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                        <span>\r\n                                            <strong>Password</strong>: <br />{\" \"}\r\n                                            {workEnv?.password}\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ) : null}\r\n\r\n                    <div className=\"__content\">\r\n                        <div\r\n                            className={`sp1_ck_content word-break ${editorContainerClass}`}\r\n                            dangerouslySetInnerHTML={{ __html: text }}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\" __footer\">\r\n                        <button\r\n                            className=\"btn btn-sm py-1 btn-primary ml-auto\"\r\n                            onClick={() => setExpend(false)}\r\n                        >\r\n                            Close\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Guideline;\r\n","import * as React from 'react'\r\nimport Modal from '../../Insights/ui/Modal';\r\nimport { useClickAway } from 'react-use';\r\nimport Button from './Button';\r\n\r\nconst RevisionText = ({text, index, date, time, revision}) => {\r\n    const [expend, setExpend] = React.useState(false);\r\n    const ref = React.useRef();\r\n\r\n    let isLong = text?.length > 800;\r\n    const showText = isLong ? text?.slice(0, 800) + '...' : text;\r\n\r\n\r\n    const toggleModal = (e) => {\r\n        e.preventDefault();\r\n        setExpend(!expend)\r\n    }\r\n \r\n\r\n    useClickAway(ref, () => {\r\n        setExpend(false)\r\n    })\r\n   \r\n  return (\r\n    <div className=\"sp1_task_card--sub-card\" style={{minHeight: '110px'}}>\r\n        <div className=\"sp1_tc_sc-inx\">\r\n            <h2>{index}</h2>\r\n            <span className=\"d-block\"><strong>Date</strong> {date} </span>\r\n            <span className=\"d-block\"><strong>Time</strong>: {time}</span>\r\n        </div>\r\n        <div className=\"\"> \r\n            {revision?.revisionAcknowledgement ? \r\n                <span className='d-block mb-2'> \r\n                    <span className='font-weight-bold text-danger'> <strong>Reason: </strong>  </span> \r\n                    {revision?.revisionAcknowledgement} {\" \"}\r\n                    {revision?.isDeny ? <span className='badge badge-danger'>Rejected By Developer</span> : null} \r\n                    {revision?.isAccept ? <span className='badge badge-success'>Accepted By Developer</span> : null}\r\n                </span> \r\n            : null}\r\n            <div>\r\n                <span className='font-weight-bold text-success'>Statement:</span>\r\n                <div className='sp1_ck_content' style={{textIndent: '2rem'}} dangerouslySetInnerHTML={{__html: showText}} />\r\n            </div> \r\n\r\n            {isLong ? <a href=\"#\" className='ml-2' onClick={toggleModal}>Read full guideline</a> : ''}\r\n\r\n            <Modal className=\"sp1_task_card--sub-card-modal\" isOpen={expend}>\r\n                <div ref={ref} className='sp1_task_card--sub-card-modal-content'>\r\n                    <div className='d-flex align-items-center justify-content-between __header'>\r\n                        <button onClick={() => setExpend(false)}>\r\n                        <i className=\"fa-solid fa-xmark\"></i>\r\n                        </button>\r\n                    </div>\r\n                    <div className='__content'>\r\n                        <div className=\"sp1_tc_sc-inx\">\r\n                            <h2>{index}</h2>\r\n                            <span className=\"d-block\"><strong>Date</strong> {date} </span>\r\n                            <span className=\"d-block\"><strong>Time</strong>: {time}</span>\r\n                        </div>\r\n                        <div>\r\n                        <span className='d-block mb-2'> <span className='font-weight-bold text-danger'><strong>Reason: </strong></span> {revision?.revisionAcknowledgement}</span>\r\n                            <span className='font-weight-bold text-success'>Commitment:</span>\r\n                            <div className='sp1_ck_content' style={{textIndent: '2rem'}} dangerouslySetInnerHTML={{__html: text}} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=' __footer'>\r\n                        <button className='btn btn-sm py-1 btn-primary ml-auto' onClick={() => setExpend(false)}>\r\n                            Close\r\n                        </button>\r\n                    </div> \r\n                </div>\r\n            </Modal>\r\n        </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RevisionText","import React from \"react\"; \r\nimport {Placeholder} from '../../../global/Placeholder';\r\n\r\nconst GenarelLoader = () => { \r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-12 col-xl-6 pb-3 pb-xl-0\">\r\n                <div className=\"d-flex flex-column\" style={{ gap: \"10px\" }}>\r\n                    <h6 className=\"\">\r\n                       <Placeholder width=\"220px\" />\r\n                    </h6> \r\n                    <div className=\"sp1_st-list-item\">\r\n                        <div className=\"sp1_st-list-item-head\">\r\n                            <Placeholder width=\"80px\" />\r\n                        </div>\r\n                        <div className=\"sp1_st-list-item-value\">\r\n                            <Placeholder width=\"220px\" /> \r\n                        </div>\r\n                    </div> \r\n\r\n                    {/* <div className=\"sp1_st-list-item\">\r\n                        <div className=\"sp1_st-list-item-head\">\r\n                            <Placeholder width=\"80px\" />\r\n                        </div>\r\n                        <div className=\"sp1_st-list-item-value\">\r\n                            <Placeholder width=\"220px\" />\r\n                        </div>\r\n                    </div> */}\r\n\r\n                    {/* <div className=\"sp1_st-list-item\">\r\n                        <div className=\"sp1_st-list-item-head\">\r\n                            <Placeholder width=\"80px\" />\r\n                        </div>\r\n                        <div className=\"sp1_st-list-item-value\">\r\n                            <Placeholder width=\"220px\" />\r\n                        </div>\r\n                    </div> */}\r\n\r\n                    {/* asignee to */}\r\n                    <div className=\"sp1_st-list-item\">\r\n                        <div className=\"sp1_st-list-item-head\">\r\n                            <Placeholder width=\"80px\" />\r\n                        </div>\r\n                        <div className=\"sp1_st-list-item-value\">\r\n                            <div style={{ width: \"32px\", height: \"32px\" }}>\r\n                                <Placeholder\r\n                                    width=\"32px\"\r\n                                    height=\"32px\"\r\n                                    type=\"circle\"\r\n                                    className=\"rounded-circle\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"ml-2\">\r\n                                <Placeholder width=\"130px\" /> \r\n                                <Placeholder width=\"70px\" height=\"10px\" className=\"mt-2\" /> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* assignee by */}\r\n                    <div className=\"sp1_st-list-item\">\r\n                        <div className=\"sp1_st-list-item-head\">\r\n                            <Placeholder width=\"80px\" />\r\n                        </div>\r\n                        <div className=\"sp1_st-list-item-value\">\r\n                            <div style={{ width: \"32px\", height: \"32px\" }}>\r\n                                <Placeholder\r\n                                    width=\"32px\"\r\n                                    height=\"32px\"\r\n                                    type=\"circle\"\r\n                                    className=\"rounded-circle\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"ml-2\">\r\n                                <Placeholder width=\"130px\" /> \r\n                                <Placeholder width=\"70px\" height=\"10px\" className=\"mt-2\" /> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* PRIORITY */}\r\n\r\n                    <div className=\"sp1_st-list-item\">\r\n                        <div className=\"sp1_st-list-item-head\">\r\n                            <Placeholder width=\"80px\" />\r\n                        </div>\r\n                        <div className=\"sp1_st-list-item-value\">\r\n                            <Placeholder width=\"80px\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* category */}\r\n                    <div className=\"sp1_st-list-item\">\r\n                        <div className=\"sp1_st-list-item-head\">\r\n                            <Placeholder width=\"80px\" />\r\n                        </div>\r\n                        <div className=\"sp1_st-list-item-value\">\r\n                            <Placeholder width=\"100px\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GenarelLoader;\r\n","import _ from \"lodash\";\r\nimport { User } from \"../utils/user-details\";\r\n\r\n\r\n// * task page permission\r\n\r\nexport function singleTaskPagePermission (task, auth) {\r\n    let hasPermission = false;\r\n    // check is auth\r\n    const isAuth = auth.getRoleId() === 1;\r\n    const pmPermission = task.projectManagerId === auth.getId();\r\n    hasPermission = true;\r\n\r\n    return hasPermission;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// permission for timer control\r\nexport function timeControlPermision({task, status, loggedUser }){\r\n    let statusPermission = false;\r\n    let assigneePermission = false;\r\n\r\n    let statusId = status ? status.id : -1;\r\n    let assignedUser = task?.assigneeTo;\r\n    let _loggedUser = loggedUser;\r\n\r\n    // if status id 2 or 3 show timer start button\r\n    if([2,3].includes(Number(statusId))){\r\n        statusPermission = true;\r\n    }\r\n\r\n    // if task assign to\r\n    if(assignedUser.getId() === _loggedUser.getId()){\r\n        assigneePermission = true;\r\n    }\r\n    return statusPermission && assigneePermission && _.size(task?.subtask) === 0\r\n}\r\n\r\n\r\n// mark as completed button permission controller\r\nexport function markAsCompletedButtonPermission({task, status, loggedUser}){\r\n    let statusPermission = false;\r\n    let assigneePermission = false;\r\n\r\n    let statusId = status ? status.id : -1;\r\n    let assignedUser = task?.assigneeTo;\r\n    let _loggedUser = new User(loggedUser);\r\n\r\n\r\n\r\n    // if task assign to\r\n    if(assignedUser.getId() === _loggedUser.getId()){\r\n        assigneePermission = true;\r\n        if(_loggedUser?.getRoleId() === 6){\r\n            if([8].includes(Number(statusId))){\r\n                statusPermission = true;\r\n            }\r\n        }else{\r\n            if([2,3].includes(Number(statusId))){\r\n                statusPermission = true;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return statusPermission && assigneePermission;\r\n}\r\n\r\n\r\n// approve button permission\r\nexport function approveButtonPermission({task, status, loggedUser}){\r\n    let statusPermission = false;\r\n    let assigneePermission = false;\r\n\r\n    let statusId = status ? status.id : -1;\r\n    let assignedUser = task?.assigneeBy;\r\n    let _loggedUser = new User(loggedUser);\r\n\r\n    // if status id 6 show timer start button\r\n    if([6].includes(Number(statusId))){\r\n        statusPermission = true;\r\n    }\r\n\r\n    // if task assign to\r\n    if(assignedUser.getId() === _loggedUser.getId()){\r\n        assigneePermission = true;\r\n    }else if(_loggedUser?.getRoleId() === 1){\r\n        assigneePermission = true\r\n    }\r\n\r\n    return statusPermission && assigneePermission;\r\n}\r\n\r\n\r\n// approve button permission\r\nexport function needRevisionPermision({task, status, loggedUser}){\r\n    let statusPermission = false;\r\n    let assigneePermission = false;\r\n\r\n    let statusId = status ? status.id : -1;\r\n    let assignedUser = task?.assigneeBy;\r\n    let _loggedUser = new User(loggedUser);\r\n\r\n    // if status id 6 show timer start button\r\n    if([6].includes(Number(statusId))){\r\n        statusPermission = true;\r\n    }\r\n\r\n    // if task assign to\r\n    if(assignedUser.getId() === _loggedUser.getId()){\r\n        assigneePermission = true;\r\n    }else if(_loggedUser?.getRoleId() === 1){\r\n        assigneePermission = true\r\n    }\r\n\r\n    return statusPermission && assigneePermission;\r\n}\r\n\r\n\r\n// revision button\r\nexport function revisionButtonPermission ({task, status, loggedUser}){\r\n    let statusPermission = false;\r\n    let assigneePermission = false;\r\n\r\n    let statusId = status ? status.id : -1;\r\n    let assignedUser = task?.assigneeTo;\r\n    let _loggedUser = loggedUser;\r\n//    console.log(statusId)\r\n    // if status id 6 show timer start button\r\n    if([1].includes(Number(statusId))){\r\n        statusPermission = true;\r\n    }\r\n\r\n    // if task assign to\r\n    if(assignedUser.getId() === _loggedUser.getId()){\r\n        assigneePermission = true;\r\n    }\r\n\r\n    return statusPermission && assigneePermission;\r\n}\r\n\r\n\r\n\r\n// submit for client approval button permission\r\n\r\nexport function submitForClientApproval({task, status, auth}){\r\n    let statusPermission = false;\r\n    let assigneePermission = false;\r\n    let statusId = status ? status.id : -1;\r\n    let assignedUser = task?.assigneeBy;\r\n\r\n    // if status id 6 show timer start button\r\n    if([8].includes(Number(statusId))){ statusPermission = true; }\r\n\r\n    // if task assign to\r\n    if(\r\n        (assignedUser?.getId() === auth?.getId() &&\r\n        auth?.getRoleId() === 4) ||\r\n        auth?.getRoleId() === 1\r\n    ){\r\n        assigneePermission = true;\r\n    }\r\n\r\n    return statusPermission && assigneePermission;\r\n}\r\n\r\nexport function clientApproveConfirmationButtonPermission({task, status, auth}){\r\n    let statusPermission = false;\r\n    let assigneePermission = false;\r\n    let statusId = status ? status.id : -1;\r\n    let assignedUser = task?.assigneeBy;\r\n\r\n    // if status id 6 show timer start button\r\n    if([9].includes(Number(statusId))){ statusPermission = true; }\r\n\r\n    // if task assign to\r\n    if(\r\n        (assignedUser?.getId() === auth?.getId() &&  auth?.getRoleId() === 4) ||\r\n        auth?.getRoleId() === 1\r\n    ){\r\n        assigneePermission = true;\r\n    }\r\n\r\n    return statusPermission && assigneePermission;\r\n}\r\n\r\n\r\nexport function taskEditPermision({task, status, auth}){\r\n    let statusPermission = false;\r\n    let assigneePermission = false;\r\n    let statusId = status ? status.id : -1;\r\n    let assignedUser = task?.assigneeBy;\r\n\r\n    // if status id 6 show timer start button\r\n    if([1,2,3].includes(Number(statusId))){ statusPermission = true; }\r\n\r\n    // if task assign to\r\n    if(\r\n        (assignedUser?.getId() === auth?.getId() ) ||\r\n        auth?.getRoleId() === 1\r\n    ){\r\n        assigneePermission = true;\r\n    }\r\n\r\n    return statusPermission && assigneePermission;\r\n}\r\n\r\n\r\n// sub task creation permission\r\n\r\nexport function subTaskCreationPermision({task, status, auth}){\r\n    let statusPermission = false;\r\n    let assigneePermission = false;\r\n    let statusId = status ? status.id : -1;\r\n    let assignedUser = task?.assigneeTo;\r\n    let assignedBy = task?.assignedBy;\r\n\r\n    // if status id 6 show timer start button\r\n    if([1,2,3].includes(Number(statusId))){ statusPermission = true }\r\n\r\n    // if task assign to\r\n    if(\r\n        (\r\n            assignedUser?.getId() === auth?.getId() ||\r\n            assignedBy?.getId() === auth?.getId()\r\n            &&  _.includes([5,6,9,10], auth?.getRoleId())\r\n        ) \r\n        // ||\r\n        // auth?.getRoleId() === 1\r\n    ){\r\n        assigneePermission = true;\r\n    }\r\n\r\n    return statusPermission && assigneePermission;\r\n}\r\n","import dayjs from 'dayjs';\r\nimport * as React from 'react';\r\nimport styled from 'styled-components';\r\nimport CKEditorComponent from '../../../ckeditor';\r\nimport UploadFilesInLine from '../../../file-upload/UploadFilesInLine';\r\nimport { useStoreCommentMutation } from '../../../services/api/SingleTaskPageApi';\r\nimport { User } from '../../../utils/user-details';\r\nimport Button from '../../components/Button';\r\n\r\nconst CommentSendBox = ({onCommentPost, task}) => {\r\n  const [editMode, setEditMode] = React.useState(false);\r\n  const [comment, setComment] = React.useState('');\r\n  const [files, setFiles] = React.useState([]);\r\n  const [error, setError] = React.useState(null);\r\n\r\n  const auth = new User(window?.Laravel?.user);\r\n\r\n  const [storeComment, {isLoading}] = useStoreCommentMutation();\r\n\r\n  const handleEditorChange = (e, editor) => {\r\n    const data = editor.getData();\r\n    setComment(data);\r\n  }\r\n\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // if text not provide show error message\r\n    if(!comment){\r\n        setError(s => ({...s, comment: \"Please provide a comment before submitting.\"}));\r\n        return;\r\n    }\r\n\r\n    // make form data\r\n    const fd = new FormData();\r\n    fd.append('comment', comment);\r\n    fd.append('task_id', task?.id);\r\n    fd.append('_token', document.querySelector(\"meta[name='csrf-token']\").getAttribute(\"content\"));\r\n    Array.from(files).forEach((file) => {\r\n        fd.append('file[]', file);\r\n    });\r\n\r\n    await storeComment({data: fd, task_id: task?.id})\r\n    .unwrap()\r\n    .then(res=>{\r\n      setEditMode(false);\r\n      setComment(\"\");\r\n      setFiles('');\r\n      let comment = {...res}\r\n      comment.last_updated_at = dayjs(res?.last_updated_at).unix();\r\n      onCommentPost(comment);\r\n    }).catch(err => console.log(err))\r\n\r\n  }\r\n\r\n  const commentMode = () => {\r\n    if(editMode){\r\n      return (\r\n        <div className='w-100'>\r\n            <div className='ck-editor-holder'>\r\n              <CKEditorComponent data={comment} onChange={handleEditorChange} />\r\n            </div>\r\n            {error?.comment ? <ErrorText>{error?.comment}</ErrorText> : null }\r\n\r\n            <div className='mt-2'>\r\n              <h6>Attach Files</h6>\r\n              <UploadFilesInLine\r\n                files={files}\r\n                setFiles={setFiles}\r\n                uploadInputClass='comment-file-upload'\r\n                fileWrapperClass='comment-uploaded-file'\r\n              />\r\n            </div>\r\n          <div className='mt-3 d-flex align-items-center'>\r\n            {isLoading ?\r\n                  <Button className='cursor-processing mr-2'>\r\n                      <div\r\n                          className=\"spinner-border text-white\"\r\n                          role=\"status\"\r\n                          style={{width: '18px', height: '18px' }}\r\n                      >\r\n                      </div>\r\n                      Processing...\r\n                  </Button> :\r\n                <Button className='mr-2' onClick={handleSubmit}>Send</Button>}\r\n\r\n            <Button\r\n              variant='secondary'\r\n              onClick={() => setEditMode(false)}\r\n            >Close</Button>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return <div\r\n      onClick={() => setEditMode(true)}\r\n      className='__box'\r\n    ><span>Write a comment ...</span></div>\r\n  }\r\n\r\n  return (\r\n    <div className='sp1_task_comment_send_box'>\r\n        <>\r\n            <div className='__avatar rounded-circle mr-2' style={{width: '36px', height: '36px'}}>\r\n                <img\r\n                  src={auth?.getAvatar()}\r\n                  alt='sender_name'\r\n                  width=\"36px\"\r\n                  height=\"36px\"\r\n                  className='rounded-circle'\r\n                />\r\n            </div>\r\n        </>\r\n          <div className='__send-box'>\r\n            {commentMode()}\r\n          </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CommentSendBox\r\n\r\n\r\nconst ErrorText = styled.div`\r\n    color: red;\r\n    padding: 10px 0;\r\n`;\r\n","import * as React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { usePopper } from 'react-popper';\r\nimport { motion, AnimatePresence } from 'framer-motion'; \r\n  \r\n\r\nconst CustomModal = ({toggleRef = null,  isOpen, close, children}) => {\r\n    const [modalRef, setModalRef] = React.useState(null); \r\n    const { styles, attributes } = usePopper(toggleRef, modalRef,{\r\n        placement: 'left-start',\r\n        modifiers: [ \r\n            {name: 'offset', options: {offset: [0, 0]}},\r\n        ]\r\n    })\r\n\r\n  return ( \r\n        <div \r\n            ref={setModalRef}\r\n            style={{\r\n                ...styles.popper,\r\n                pointerEvents: isOpen ? 'all' : 'none', \r\n                zIndex: 99,\r\n            }} \r\n            {...attributes.popper}\r\n        >   \r\n\r\n            <AnimatePresence>\r\n                {isOpen && (\r\n                    <motion.div \r\n                        initial={{opacity: 0}}\r\n                        animate={{opacity: 1}}\r\n                        exit={{opacity: 0}}\r\n                        className=''\r\n                    >\r\n                        {children} \r\n\r\n                        <Shadow/>\r\n                    </motion.div>\r\n                )}\r\n            </AnimatePresence>\r\n        </div> \r\n  )\r\n}\r\n\r\nexport default CustomModal \r\n\r\nconst Shadow = () => {\r\n    return ReactDOM.createPortal(\r\n        <div\r\n            style={{\r\n                width: '100vw',\r\n                height: '100vh',\r\n                position: 'fixed',\r\n                top: 0,\r\n                left: 0,\r\n                zIndex: 90,\r\n                background: 'rgba(0,0,0,.1)'\r\n            }} \r\n        />,\r\n        document.querySelector('#sp1SingleTaskPageModal')\r\n    )\r\n}","import React from 'react'\r\nimport Modal from '../../components/Modal'\r\nimport Button from '../../components/Button'\r\nimport CKEditorComponent from '../../../ckeditor'\r\n\r\nconst CommentWritingModal = ({isOpen, close}) => {\r\n  return (\r\n    <Modal isOpen={isOpen} className=\"sp1_st_cnt_modal\">\r\n        <div className='sp1_st_comment_preview'>\r\n            <div className='sp1_st_comment_panel' style={{maxWidth: '60vw', minHeight: '50vh'}}> \r\n                <div className='border-bottom pb-2 d-flex'>\r\n                    <Button\r\n                        aria-label=\"close-modal\"\r\n                        className='_close-modal'\r\n                        onClick={close}\r\n                    >\r\n                        <i className=\"fa-solid fa-xmark\" />\r\n                    </Button>\r\n                </div> \r\n\r\n\r\n                {/* comment */}\r\n                <div className='mt-3 w-100'>\r\n                   <div className=\"sp1_st_write_comment-sendbox\">\r\n                       <div style={{minWidth: '48px'}}>\r\n                            <img \r\n                                src=\"/user-uploads/avatar/40164f31bc7d575c7dbe99b24b408d75.png\" \r\n                                alt=\"\"\r\n                                width={48}\r\n                                height={48}\r\n                                className='rounded-circle'\r\n                            />\r\n                       </div> \r\n                         \r\n                        <div> \r\n                            <div className='sp1_st_write_comment_editor'>\r\n                                <CKEditorComponent/>\r\n                            </div> \r\n                            <div className='py-3'>\r\n                                <div>Attach Files here (if need) <i className='fa-solid fa-paperclip ml-1 text-primary' /></div>\r\n                                <div className='sp1_st_write_comment_editor_attach'>\r\n                                    <i className=\"fa-solid fa-cloud-arrow-up\"></i>\r\n                                    <span>Attach Files</span>\r\n                                </div> \r\n                            </div>\r\n                        </div> \r\n                   </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default CommentWritingModal","import React, { useState, useEffect } from \"react\";\r\nimport _ from \"lodash\";\r\nimport { useGetTaskCommentWidgetDataQuery } from \"../../../services/api/TaskCommentApiSlice\";\r\nimport dayjs from \"dayjs\";\r\nimport { timeCalculate } from \"../../../utils/timeCalculate\";\r\nimport Modal from \"../../components/Modal\";\r\nimport CommentPreview from \"./CommentPreview\";\r\nimport CommentsContainer from \"../../../UI/comments/CommentsContainer\";\r\nimport { useGetCommentsQuery } from \"../../../services/api/commentsApiSlice\";\r\n\r\n// widget item\r\n\r\nconst WidgetItem = ({ comment }) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    if (!comment) return null;\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"d-flex justify-content-between sp1_tark_right_item align-items-start pt-1 pb-2\">\r\n                <div\r\n                    className=\"w-100 sp1_st_comment-view\"\r\n                    style={{ overflow: \"hidden\" }}\r\n                >\r\n                    <p className=\"mb-0 pb-0\">\r\n                        <a\r\n                            href={`/account/employees/${comment.user.id}`}\r\n                            className=\"hover-underline text-primary\"\r\n                        >\r\n                            {comment.user.name}\r\n                        </a>{\" \"}\r\n                        {comment.is_deleted\r\n                            ? \"deleted \"\r\n                            : comment.mention\r\n                            ? \"replied to \"\r\n                            : \"added \"}{\" \"}\r\n                        a comment\r\n                    </p>\r\n                    <p\r\n                        className=\"text-ellipsis d-flex align-items-center mb-0 pb-0\"\r\n                        style={{ color: \"#AEAFB9\" }}\r\n                    >\r\n                        {comment.is_deleted\r\n                            ? timeCalculate(comment.deleted_at)\r\n                            : timeCalculate(comment.created_date)}\r\n                    </p>\r\n                </div>\r\n\r\n                <div className=\"d-flex align-items-center\">\r\n                    <a\r\n                        href=\"#\"\r\n                        className={`mr-2 py-2 sp1_task_righ_action_btn ${\r\n                            isOpen ? \"text-primary\" : \"\"\r\n                        }`}\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            setIsOpen(true);\r\n                        }}\r\n                    >\r\n                        <i className=\"fa-regular fa-eye\"></i>\r\n                    </a>\r\n                    {/* <a href=\"#\" className=\"mr-2 py-2 sp1_task_righ_action_btn\"><i className=\"fa-regular fa-pen-to-square\"></i></a> */}\r\n                </div>\r\n            </div>\r\n\r\n            {/* <Modal isOpen={isOpen}>\r\n                <CommentPreview\r\n                    isOpen={isOpen}\r\n                    close={() => setIsOpen(false)}\r\n                    commentId={comment.id}\r\n                />\r\n            </Modal> */}\r\n            <CommentsContainer\r\n                singleCommentId={comment.id}\r\n                close={() => setIsOpen(false)}\r\n                isOpen={isOpen}\r\n                showCommentEditor={false}\r\n                showFullScreenBtn={false}\r\n                showSearchBtn={false}\r\n                height=\"50vh\"\r\n            />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst Widget = ({ task }) => {\r\n    // console.log(task);\r\n    // const { data, isLoading } = useGetTaskCommentWidgetDataQuery(task.id, {\r\n    //     skip: !task.id,\r\n    // });\r\n    const { data: comments, isLoading } = useGetCommentsQuery(task.id, {\r\n        skip: !task.id,\r\n    });\r\n\r\n    const handleOrdering = (comments = []) => {\r\n        const sortedComments = [...comments];\r\n\r\n        sortedComments.sort((a, b) => {\r\n            if (a.is_deleted && b.is_deleted) {\r\n                const a_day = dayjs(a.deleted_at);\r\n                const b_day = dayjs(b.deleted_at);\r\n                return b_day.diff(a_day);\r\n            } else if (a.is_deleted) {\r\n                const a_day = dayjs(a.deleted_at);\r\n                const b_day = dayjs(b.created_date);\r\n                return b_day.diff(a_day);\r\n            } else if (b.is_deleted) {\r\n                const a_day = dayjs(a.created_date);\r\n                const b_day = dayjs(b.deleted_at);\r\n                return b_day.diff(a_day);\r\n            } else {\r\n                const a_day = dayjs(a.created_date);\r\n                const b_day = dayjs(b.created_date);\r\n                return b_day.diff(a_day);\r\n            }\r\n        });\r\n\r\n        return sortedComments;\r\n    };\r\n\r\n    // console.log({ widget: data });\r\n    return (\r\n        <React.Fragment>\r\n            {_.map(handleOrdering(comments), (comment) => (\r\n                <WidgetItem key={comment.id} comment={comment} />\r\n            ))}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Widget;\r\n","import * as React from \"react\";\r\nimport Comment from \"./Comment\";\r\nimport CommentModal from \"./CommentModal\";\r\nimport Button from \"../../components/Button\";\r\nimport CommentWritingModal from \"./CommentWritingModal\";\r\nimport { useLazyGetTaskDetailsQuery } from \"../../../services/api/SingleTaskPageApi\";\r\nimport _ from \"lodash\";\r\nimport Widget from \"./Widget\";\r\nimport { useGetTaskCommentsQuery } from \"../../../services/api/TaskCommentApiSlice\";\r\nimport CommentsContainer from \"../../../UI/comments/CommentsContainer\";\r\n\r\nconst CommentSection = ({ task, isLoading }) => {\r\n    // const [comments, setComments] = React.useState([]);\r\n    const [modalIsOpen, setModalIsOpen] = React.useState(false);\r\n    const [openAddCommentModal, setOpenAddCommentModal] = React.useState(false);\r\n    const [modalToggleRef, setModalToggleRef] = React.useState(null);\r\n\r\n    const toggleModalButton = () => setModalIsOpen(!modalIsOpen);\r\n    const toggleAddCommentModal = () =>\r\n        setOpenAddCommentModal(!openAddCommentModal);\r\n    const closeAddCommentModal = () => setOpenAddCommentModal(false);\r\n\r\n    // const [getTaskDetails, { isFetching }] = useLazyGetTaskDetailsQuery();\r\n    const { data, isLoading: isFetching } = useGetTaskCommentsQuery(task.id, {\r\n        skip: !task.id,\r\n    });\r\n\r\n    const comments = _.orderBy(data, \"id\", \"desc\");\r\n\r\n    // console.log({comments})\r\n    // // if task notes fetch completed store data into redux store\r\n    // React.useEffect(() => {\r\n    //     if (task && task.id) {\r\n    //         getTaskDetails(`/${task?.id}/json?mode=task_comment`)\r\n    //             .unwrap()\r\n    //             .then((res) => {\r\n    //                 let r = _.orderBy([...res], \"id\", \"desc\");\r\n    //                 setComments(r);\r\n    //             })\r\n    //             .catch((err) => {\r\n    //                 console.log(err);\r\n    //             });\r\n    //     }\r\n    // }, []);\r\n\r\n    // on comment post\r\n    const onCommentPost = (comment) => {\r\n        const _comments = [...comments];\r\n        _comments.unshift(comment);\r\n        // setComments(_comments);\r\n    };\r\n\r\n    const updateComments = (comment) => {\r\n        let _comments = comments;\r\n        _comments = _.map(_comments, (c) =>\r\n            c.id === comment.id ? comment : c\r\n        );\r\n        // setComments(_comments);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                className=\"sp1_task_right_card mb-3\"\r\n                ref={setModalToggleRef}\r\n                style={{ zIndex: modalIsOpen ? \"99\" : \"\" }}\r\n            >\r\n                {/* <CommentModal\r\n                    isOpen={modalIsOpen}\r\n                    toggleRef={modalToggleRef}\r\n                    comments={comments}\r\n                    task={task}\r\n                    isLoading={isFetching}\r\n                    close={() => setModalIsOpen(false)}\r\n                    onCommentPost={onCommentPost}\r\n                    updateComments={updateComments}\r\n                /> */}\r\n\r\n                <CommentsContainer\r\n                    isOpen={modalIsOpen}\r\n                    toggleRef={modalToggleRef}\r\n                    comments={comments}\r\n                    task={task}\r\n                    close={() => setModalIsOpen(false)}\r\n                    onCommentPost={onCommentPost}\r\n                />\r\n\r\n                <button\r\n                    aria-label=\"openCommentModalButton\"\r\n                    className=\"sp1_task_right_dl_toggle\"\r\n                    onClick={toggleModalButton}\r\n                    style={{ zIndex: modalIsOpen ? \"110\" : \"\" }}\r\n                >\r\n                    <i\r\n                        className={`fa-solid fa-circle-chevron-${\r\n                            modalIsOpen ? \"right\" : \"left\"\r\n                        }`}\r\n                        style={{ color: \"#276fec\" }}\r\n                    />\r\n                </button>\r\n\r\n                <div className=\"d-flex border-bottom pb-2 align-items-center justify-content-between mb-2 font-weight-bold\">\r\n                    <h6 className=\"f-16 mb-0\">Comment</h6>\r\n                    {(isLoading || isFetching) && (\r\n                        <div\r\n                            className=\"spinner-border text-dark ml-2 mr-auto\"\r\n                            role=\"status\"\r\n                            style={{\r\n                                width: \"16px\",\r\n                                height: \"16px\",\r\n                                border: \"0.14em solid rgba(0, 0, 0, .25)\",\r\n                                borderRightColor: \"transparent\",\r\n                            }}\r\n                        />\r\n                    )}\r\n                    <Button\r\n                        variant=\"tertiary\"\r\n                        className=\"sp1_tark_add_item\"\r\n                        aria-label=\"addButton\"\r\n                        onClick={toggleModalButton}\r\n                    >\r\n                        <i\r\n                            className=\"fa-solid fa-plus\"\r\n                            style={{ fontSize: \"12px\" }}\r\n                        />\r\n                        Comment\r\n                    </Button>\r\n\r\n                    <CommentWritingModal\r\n                        isOpen={openAddCommentModal}\r\n                        close={closeAddCommentModal}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"sp1_task_right_card--body\">\r\n                    <Widget task={task} />\r\n\r\n                    {/*\r\n                    {!isFetching && !isLoading ? (\r\n                        comments?.length > 0 ? (\r\n                            comments?.map((comment) => (\r\n                                <Comment key={comment.id} comment={comment} />\r\n                            ))\r\n                        ) : (\r\n                            <div\r\n                                className=\"d-flex align-items-center justify-content-center\"\r\n                                style={{\r\n                                    color: \"#B4BCC4\",\r\n                                    fontSize: \"15px\",\r\n                                    textAlign: \"center\",\r\n                                    height: \"100%\",\r\n                                    width: \"100%\",\r\n                                }}\r\n                            >\r\n                                No Comment is Available\r\n                            </div>\r\n                        )\r\n                    ) : (\r\n                        <div\r\n                            className=\"d-flex align-items-center justify-content-center\"\r\n                            style={{\r\n                                color: \"#5A6169\",\r\n                                fontSize: \"15px\",\r\n                                textAlign: \"center\",\r\n                                height: \"100%\",\r\n                                width: \"100%\",\r\n                            }}\r\n                        >\r\n                            <div\r\n                                className=\"spinner-border text-dark ml-2\"\r\n                                role=\"status\"\r\n                                style={{\r\n                                    width: \"16px\",\r\n                                    height: \"16px\",\r\n                                    border: \"0.14em solid rgba(0, 0, 0, .25)\",\r\n                                    borderRightColor: \"transparent\",\r\n                                    marginRight: \"10px\",\r\n                                }}\r\n                            />\r\n                            Loading...\r\n                        </div>\r\n                    )} */}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CommentSection;\r\n","import dayjs from \"dayjs\";\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { AiFillEyeInvisible, AiFillEye } from \"react-icons/ai\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst DailySubmissionItem = ({ item, setModalData, modalData }) => {\r\n    // const [show,setShow] = useState(false);\r\n    const { task } = useSelector((s) => s.subTask);\r\n\r\n    if (!item) return null;\r\n\r\n    return (\r\n        <tr\r\n            onClick={() => {\r\n                setModalData((prev) => {\r\n                    if (prev?.id === item.id) {\r\n                        return null;\r\n                    } else {\r\n                        return item;\r\n                    }\r\n                });\r\n            }}\r\n            className=\"sp1_tlr_tr\"\r\n            style={{\r\n                verticalAlign: \"middle\",\r\n                margin: \"0 auto\",\r\n                cursor: \"pointer\",\r\n            }}\r\n        >\r\n            <td\r\n                className=\"sp1_tlr_td\"\r\n                style={{ minWidth: \"100px\", textAlign: \"left\" }}\r\n            >\r\n                <span className=\"singleline-ellipsis\">\r\n                    <span className=\"text-primary\">Task#{task.id}</span>\r\n                    {\" submitted by \"}\r\n                    <span className=\"text-primary\">{item.developer_name}</span>\r\n                </span>\r\n            </td>\r\n            <td className=\"sp1_tlr_td\" style={{ minWidth: \"100px\" }}>\r\n                {dayjs(item.submission_creation_date).format(\"MMM DD, YYYY\")}\r\n            </td>\r\n            <td className=\"sp1_tlr_td\" style={{ minWidth: \"50px\" }}>\r\n                {modalData?.id === item.id ? (\r\n                    <AiFillEyeInvisible\r\n                        style={{\r\n                            height: \"20px\",\r\n                            width: \"20px\",\r\n                            cursor: \"pointer\",\r\n                        }}\r\n                    />\r\n                ) : (\r\n                    <AiFillEye\r\n                        style={{\r\n                            height: \"20px\",\r\n                            width: \"20px\",\r\n                            cursor: \"pointer\",\r\n                        }}\r\n                    />\r\n                )}\r\n            </td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default DailySubmissionItem;\r\n","import { useRef } from \"react\";\r\nimport { useClickAway, useWindowSize } from \"react-use\";\r\nimport Button from \"../../components/Button\";\r\nimport CustomModal from \"../../components/CustomModal\";\r\nimport Modal from \"../../components/Modal\";\r\nimport { get_data_dailySubmission } from \"./fake-data/data_dailySubmission\";\r\nimport DailySubmissionItem from \"./DailySubmissionItem\";\r\n\r\nconst DailysubmissionDrawerTable = ({ isOpen, close, toggle, data, modalData, setModalData }) => {\r\n    const ref = useRef(null);\r\n    const { width: deviceWidth } = useWindowSize();\r\n    // useClickAway(ref, close);\r\n\r\n    // console.log(get_data_dailySubmission());\r\n\r\n    const content = () => {\r\n        return (\r\n            <div ref={ref} className=\"sp1-subtask-form --modal-panel\">\r\n                <div className='sp1-subtask-form --modal-panel-header'>\r\n                    <h6>Daily Submission</h6>\r\n                    <Button\r\n                        aria-label=\"close-modal\"\r\n                        className='_close-modal'\r\n                        onClick={close}\r\n                    >\r\n                        <i className=\"fa-solid fa-xmark\" />\r\n                    </Button>\r\n                </div>\r\n\r\n                <div className=\"sp1-subtask-form --modal-panel-body\">\r\n                    <table className=\"mt-3 sp1_tlr_table sp1_tlr_tbody\">\r\n                        {/* {deviceWidth > 800 ? <Table data={data} />: <CardView data={data} />} */}\r\n                        {\r\n                            data?.map((singleData) => (\r\n                                <DailySubmissionItem key={singleData.id} item={singleData} setModalData={setModalData} modalData={modalData} />\r\n                            ))\r\n                        }\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    if (deviceWidth > 1200) {\r\n        return (\r\n            <CustomModal isOpen={isOpen} toggleRef={toggle}>\r\n                {content()}\r\n            </CustomModal>\r\n        );\r\n    } else {\r\n        return (\r\n            <Modal isOpen={isOpen}>\r\n                {content()}\r\n            </Modal>\r\n        );\r\n    }\r\n};\r\n\r\nexport default DailysubmissionDrawerTable;","import { convertTime } from \"../../../../utils/converTime\";\r\n\r\nconst timeFormatter = (time = '') => {\r\n    // console.log(time);\r\n    const [year, month, date] = time.split(\" \")[0].split(\"-\");\r\n    let month_name = '';\r\n    switch (month) {\r\n        case '01':\r\n            month_name = \"Jan\";\r\n            break;\r\n\r\n        case '02':\r\n            month_name = \"Feb\";\r\n            break;\r\n\r\n        case '03':\r\n            month_name = \"Mar\";\r\n            break;\r\n\r\n        case '04':\r\n            month_name = \"Apr\";\r\n            break;\r\n\r\n        case '05':\r\n            month_name = \"May\";\r\n            break;\r\n\r\n        case '06':\r\n            month_name = \"Jun\";\r\n            break;\r\n\r\n        case '07':\r\n            month_name = \"Jul\";\r\n            break;\r\n\r\n        case '08':\r\n            month_name = \"Aug\";\r\n            break;\r\n\r\n        case '09':\r\n            month_name = \"Sep\";\r\n            break;\r\n\r\n        case '10':\r\n            month_name = \"Oct\";\r\n            break;\r\n\r\n        case '11':\r\n            month_name = \"Nov\";\r\n            break;\r\n\r\n        case '12':\r\n            month_name = \"Dec\";\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n    return `${month_name} ${date}, ${year}`\r\n}\r\n\r\n\r\nexport const columnSchema = [\r\n    {\r\n        id: 'report_date',\r\n        header: 'Report Date',\r\n        draggable: true,\r\n        // accessor: 'report_date',\r\n        accessorKey: 'submission_creation_date',\r\n        cell: (cell) => (\r\n            <div style={{ padding: '0 0.5rem' }}>\r\n                {timeFormatter(cell.getValue())}\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 'page_link',\r\n        header: 'Page Link',\r\n        draggable: true,\r\n        // accessor: 'page_link',\r\n        accessorKey: 'link_name',\r\n        cell: (cell) => (\r\n            <div style={{ padding: '0 0.5rem' }}>\r\n                <a href={cell.getValue()} target=\"_blank\">\r\n                View Link\r\n                </a>\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 'sections',\r\n        header: 'Sections',\r\n        draggable: true,\r\n        // accessor: 'sections',\r\n        accessorKey: 'section_name',\r\n        cell: (cell) => (\r\n            <div style={{ padding: '0 0.5rem' }}>\r\n                {cell.getValue()}\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 'comment',\r\n        header: 'Comment',\r\n        draggable: true,\r\n        // accessor: 'comment',\r\n        accessorKey: 'comment',\r\n        cell: (cell) => (\r\n            <div style={{ minWidth: '20rem', maxWidth: '20rem', width: '100%' }} dangerouslySetInnerHTML={{__html:cell.getValue()}}/>\r\n        )\r\n    },\r\n    {\r\n        id: 'total_time_spent',\r\n        header: 'Total Time Spent',\r\n        draggable: true,\r\n        // accessor: 'total_time_spent',\r\n        accessorKey: 'hours_spent',\r\n        cell: (cell) => (\r\n            <div style={{ padding: '0 0.5rem' }}>\r\n                {convertTime(cell.getValue())}\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 'attachment_url',\r\n        header: 'Screenshots/Screen records of the sections',\r\n        draggable: true,\r\n        // accessor: 'attachment_url',\r\n        accessorKey: 'attachments',\r\n        cell: (cell) => (\r\n            <div style={{ padding: '0 0.5rem' }}>\r\n                <a href={cell.getValue()} target=\"_blank\"></a>\r\n                View Link\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 'site_url',\r\n        header: `Working/Staging Site's URL`,\r\n        draggable: true,\r\n        // accessor: 'site_url',\r\n        accessorKey: 'site_url',\r\n        cell: (cell) => (\r\n            <div style={{ padding: '0 0.5rem' }}>\r\n                <a href={cell.getValue()} target=\"_blank\">\r\n                    View Link\r\n                </a>\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 'frontend_password',\r\n        header: 'Frontend Password',\r\n        draggable: true,\r\n        // accessor: 'frontend_password',\r\n        accessorKey: 'frontend_password',\r\n        cell: (cell) => (\r\n            <div style={{ padding: '0 0.5rem' }}>\r\n                {cell.getValue()?cell.getValue():'No Password'}\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 'submission_date',\r\n        header: 'Report Submission Date',\r\n        draggable: true,\r\n        // accessor: 'submission_date',\r\n        accessorKey: 'submission_creation_date',\r\n        cell: (cell) => (\r\n            <div style={{ padding: '0 0.5rem' }}>\r\n                {timeFormatter(cell.getValue())}\r\n            </div>\r\n        )\r\n    }\r\n]","import { useRef } from \"react\";\r\nimport { useClickAway, useWindowSize } from \"react-use\";\r\nimport Button from \"../../components/Button\";\r\nimport CustomModal from \"../../components/CustomModal\";\r\nimport Modal from \"../../components/Modal\";\r\nimport { get_data_dailySubmission } from \"./fake-data/data_dailySubmission\";\r\nimport DailySubmissionItem from \"./DailySubmissionItem\";\r\nimport DataTable from \"../../../global/table/DataTable\";\r\nimport { columnSchema } from \"./drawer-table-support/Single_user_submission_table_column\";\r\n\r\nconst SingleUserSubmissionTableDrawer = ({ isOpen, close, toggle, data, setModalData }) => {\r\n    const ref = useRef(null);\r\n    const { width: deviceWidth } = useWindowSize();\r\n    // useClickAway(ref, close);\r\n\r\n    const content = () => {\r\n        return (\r\n            <div ref={ref} className=\"sp1-subtask-form --modal-panel\">\r\n                <div className='sp1-subtask-form --modal-panel-header'>\r\n                    <h6>Daily Submission</h6>\r\n                    <Button\r\n                        aria-label=\"close-modal\"\r\n                        className='_close-modal'\r\n                        onClick={() => {\r\n                            setModalData(null);\r\n                        }}\r\n                    >\r\n                        <i className=\"fa-solid fa-xmark\" />\r\n                    </Button>\r\n                </div>\r\n\r\n                <div className=\"sp1-subtask-form --modal-panel-body\">\r\n                    <DataTable\r\n                        tableData={data?[data]:[]}\r\n                        tableColumns={columnSchema}\r\n                        tableName=\"single-user-submission-table\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    if (deviceWidth > 1200) {\r\n        return (\r\n            <CustomModal isOpen={isOpen} toggleRef={toggle}>\r\n                {content()}\r\n            </CustomModal>\r\n        );\r\n    } else {\r\n        return (\r\n            <Modal isOpen={isOpen}>\r\n                {content()}\r\n            </Modal>\r\n        );\r\n    }\r\n};\r\n\r\nexport default SingleUserSubmissionTableDrawer;","import { useEffect, useState } from \"react\";\r\nimport DailysubmissionDrawerTable from \"./DailysubmissionDrawerTable\";\r\nimport DailySubmissionItem from \"./DailySubmissionItem\";\r\nimport SingleUserSubmissionTableDrawer from \"./SingleUserSubmissionTableDrawer\";\r\nimport { useGetDailyTasksSubmissionQuery } from \"../../../services/api/dailySubmissionApiSlice\";\r\n\r\n\r\nconst DailySubmissionSection = ({ task }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [modalTableIsOpen, setModalTableIsOpen] = useState(false);\r\n  const [modalRefButton, setModalRefButton] = useState(null);\r\n  const [singleUserSubmissionTableDrawerRef, setSingleUserSubmissionTableDrawerRef] = useState(null);\r\n  const [modalData, setModalData] = useState(null);\r\n\r\n\r\n  const { data, isLoading } = useGetDailyTasksSubmissionQuery(task?.id);\r\n    // control modal\r\n  const toggle = () => setIsOpen(prev => !prev);\r\n  const close = () => setIsOpen(false);\r\n\r\n  // const modalTableToggle = () => setModalTableIsOpen(prev=> !prev);\r\n  const modalTableOpen = () => setModalTableIsOpen(true);\r\n  const modalTableClose = () => setModalTableIsOpen(false);\r\n\r\n  useEffect(() => {\r\n    if (modalData) {\r\n      modalTableOpen();\r\n    } else {\r\n      modalTableClose();\r\n    }\r\n  }, [modalData])\r\n\r\n  const handleModalRef = (ref) => {\r\n    setModalRefButton(ref);\r\n    setSingleUserSubmissionTableDrawerRef(ref);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className='sp1_task_right_card mb-3'\r\n      ref={handleModalRef}\r\n      style={{ zIndex: isOpen ? '99' : '' }}>\r\n\r\n      <div className='d-flex border-bottom pb-2 align-items-center justify-content-between mb-2 font-weight-bold'>\r\n        <span className=\"f-16\">Daily Submission</span>\r\n        {isLoading &&\r\n          <div\r\n            className=\"spinner-border text-dark ml-2 mr-auto\"\r\n            role=\"status\"\r\n            style={{\r\n              width: '16px',\r\n              height: '16px',\r\n              border: '0.14em solid rgba(0, 0, 0, .25)',\r\n              borderRightColor: 'transparent'\r\n            }}\r\n          />\r\n        }\r\n      </div>\r\n\r\n\r\n      {/* side drop toggle button */}\r\n      {/* {_.size(timeLogs) > 0 && } */}\r\n      <button\r\n        aria-label='openCommentModalButton'\r\n        className='sp1_task_right_dl_toggle'\r\n        onClick={toggle}\r\n        style={{ zIndex: isOpen ? 110 : '' }}\r\n      >\r\n        <i\r\n          className={`fa-solid fa-circle-chevron-${isOpen ? 'right' : 'left'}`}\r\n          style={{ color: \"#276fec\" }}\r\n        />\r\n      </button>\r\n      {/* side drop toggle button end */}\r\n\r\n\r\n      <DailysubmissionDrawerTable\r\n        isOpen={isOpen}\r\n        close={close}\r\n        toggle={modalRefButton}\r\n        data={data?.daily_submissions}\r\n        modalData={modalData}\r\n        setModalData={setModalData} />\r\n\r\n      <SingleUserSubmissionTableDrawer\r\n        isOpen={modalTableIsOpen}\r\n        close={modalTableClose}\r\n        toggle={singleUserSubmissionTableDrawerRef}\r\n        data={modalData}\r\n        setModalData={setModalData} />\r\n\r\n\r\n      <div className=\"sp1_task_right_card--body\">\r\n        {data?.daily_submissions.length > 0 ?\r\n          <table className=\"sp1_tlr_table\">\r\n            <tbody className=\"sp1_tlr_tbody\">\r\n              {!isLoading &&\r\n                data?.daily_submissions?.map((singleData) => (\r\n                  <DailySubmissionItem key={singleData.id} item={singleData} setModalData={setModalData} modalData={modalData} />\r\n                ))\r\n              }\r\n            </tbody>\r\n          </table>\r\n          :\r\n          <div\r\n            className=\"d-flex align-items-center justify-content-center\"\r\n            style={{\r\n              color: \"#B4BCC4\",\r\n              fontSize: \"15px\",\r\n              textAlign: \"center\",\r\n              height: \"100%\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            No Submission is Available\r\n          </div>\r\n        }\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DailySubmissionSection;","import React from 'react'\r\nimport { Placeholder } from '../../../global/Placeholder'\r\n\r\nconst InnerHistoryItemLoader = () => {\r\n  return (\r\n    <div className=\"d-flex align-items-center sp1_tark_right_item py-2\">\r\n        <div className=''>\r\n            <Placeholder\r\n              width={48}\r\n              height={48}\r\n            />\r\n        </div>\r\n        <div className='px-3 w-100'>\r\n            <Placeholder className='mb-2'/>  \r\n            <Placeholder/>\r\n        </div>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default InnerHistoryItemLoader ","import React, {lazy} from 'react'\r\nimport CustomModal from '../../components/CustomModal'\r\nimport Button from '../../components/Button';\r\nconst InnerHistoryItem = lazy(() => import('./InnerHistoryItem'));\r\nimport InnerHistoryItemLoader from './InnerHistoryItemLoader';\r\nimport Modal from '../../components/Modal';\r\nimport { useWindowSize } from \"react-use\";\r\n\r\n\r\nconst Histories = ({isOpen, close, toggle, data = []}) => {\r\n  const {width: deviceWidth} = useWindowSize();\r\n  \r\n  const content = () => {\r\n    return (\r\n        <div className='sp1-subtask-form --modal-panel'>\r\n            <div className='sp1-subtask-form --modal-panel-header'> \r\n                 <h6> History </h6> \r\n                <Button\r\n                    aria-label=\"close-modal\"\r\n                    className='_close-modal'\r\n                    onClick={close}\r\n                >\r\n                    <i className=\"fa-solid fa-xmark\" />\r\n                </Button> \r\n            </div>\r\n\r\n            <div className=\"sp1-subtask-form --modal-panel-body\">\r\n                <div className='mt-3'>\r\n                    {data ? data.map(d => (\r\n                        <React.Fragment key={d.id}>\r\n                            <React.Suspense fallback={<InnerHistoryItemLoader />}>\r\n                                <InnerHistoryItem history={d} />\r\n                            </React.Suspense>\r\n                        </React.Fragment>\r\n                    )):null}\r\n                </div>      \r\n            </div>\r\n        </div>\r\n    )\r\n  }\r\n \r\n\r\n  if(deviceWidth > 1200){\r\n    return (\r\n        <CustomModal isOpen={isOpen} toggleRef={toggle}>\r\n            <React.Fragment>{content()}</React.Fragment>       \r\n        </CustomModal>\r\n    );\r\n    }else{\r\n        return (\r\n            <Modal isOpen={isOpen}>\r\n                <React.Fragment>{content()}</React.Fragment>       \r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Histories\r\n","import React, {lazy, Suspense} from 'react'\r\nconst HistoryItem = lazy(() => import('./HistoryItem'));\r\nimport { Placeholder } from '../../../global/Placeholder';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { storeHistories } from '../../../services/features/subTaskSlice';\r\nimport { useLazyGetTaskDetailsQuery } from '../../../services/api/SingleTaskPageApi';\r\nimport Histories from './Histories';\r\nimport useSWR from 'swr';\r\n\r\nconst fetcher = (url) => axios.get(url).then(res => res.data); \r\n\r\nconst HistorySection = () => {\r\n  const {task, histories} = useSelector(s => s.subTask);\r\n  const [modalRefButton, setModalRefButton] = React.useState(null); \r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const { data, error, isLoading:isFetching } = useSWR(`/account/task/${task.id}/json?mode=task_history`, fetcher, {\r\n    refreshInterval: 5000\r\n  });\r\n\r\n  //fetch all task \r\n  // const [getTaskDetails, {isFetching}] = useLazyGetTaskDetailsQuery('', {\r\n  //   skip: histories?.length\r\n  // })\r\n\r\n   //if task notes fetch completed store data into redux store\r\n  //  React.useEffect(()=> {\r\n  //   if(task && task.id){\r\n  //     getTaskDetails(`/${task?.id}/json?mode=task_history`)\r\n  //     .unwrap()\r\n  //     .then(res => {\r\n  //       if(res){\r\n  //         dispatch(storeHistories(res));\r\n  //       }\r\n  //     })\r\n  //     .catch(err => {\r\n  //       console.log(err)\r\n  //     })\r\n  //   } \r\n  // }, [task]); \r\n\r\n  React.useEffect(()=> {\r\n    if(!isFetching && data){\r\n      dispatch(storeHistories(data));\r\n    }  \r\n  }, [data, isFetching]); \r\n  \r\n\r\n  // control modal\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  const close = () => setIsOpen(false);\r\n\r\n\r\n  return (\r\n    <div className='sp1_task_right_card mb-3' ref={setModalRefButton} style={{zIndex: isOpen ? 99 : ''}}>\r\n        <div className='d-flex border-bottom pb-2 align-items-center justify-content-between mb-2 font-weight-bold'>\r\n        <span className=\"f-16\">History</span> \r\n        {isFetching && \r\n                <div \r\n                    className=\"spinner-border text-dark ml-2 mr-auto\" \r\n                    role=\"status\"\r\n                    style={{\r\n                        width: '16px',\r\n                        height: '16px',\r\n                        border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                        borderRightColor: 'transparent' \r\n                    }}\r\n                />\r\n          }\r\n        </div>\r\n\r\n\r\n        {/* side drop toggle button */}\r\n          <button \r\n            aria-label='openCommentModalButton'  \r\n            className='sp1_task_right_dl_toggle'\r\n            onClick={toggle}\r\n            style={{zIndex: isOpen ? '110' : ''}}\r\n          >\r\n            <i \r\n              className={`fa-solid fa-circle-chevron-${ isOpen ? 'right' : 'left'}`} \r\n              style={{color: \"#276fec\"}} \r\n            />\r\n        </button>\r\n        {/* side drop toggle button end */}\r\n \r\n          {/* histories details */}\r\n          <Histories\r\n            isOpen={isOpen}\r\n            close={close}\r\n            data={histories} \r\n            toggle={modalRefButton}\r\n          />\r\n\r\n        <div className=\"sp1_task_right_card--body\">\r\n          {!isFetching ? histories ? histories.map( history => (\r\n            <React.Fragment key={history.id}>\r\n              <Suspense fallback={<div className='sp1_tark_right_item py-2 '> <Placeholder /> </div>}>\r\n                <HistoryItem history={history} />\r\n              </Suspense>\r\n            </React.Fragment>\r\n          )):<div\r\n            className='d-flex align-items-center justify-content-center'\r\n            style={{\r\n              color: '#B4BCC4',\r\n              fontSize: '15px',\r\n              textAlign: 'center',\r\n              height: '100%',\r\n              width: '100%',\r\n            }}\r\n          >\r\n              Empty History\r\n          </div> : \r\n          <div className='d-flex align-items-center justify-content-center'\r\n            style={{\r\n              color: '#5A6169',\r\n              fontSize: '15px',\r\n              textAlign: 'center',\r\n              height: '100%',\r\n              width: '100%',\r\n            }}\r\n          > \r\n              <div \r\n                    className=\"spinner-border text-dark ml-2\" \r\n                    role=\"status\"\r\n                    style={{\r\n                        width: '16px',\r\n                        height: '16px',\r\n                        border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                        borderRightColor: 'transparent',\r\n                        marginRight: '10px'\r\n                    }}\r\n                />\r\n              Loading...\r\n          </div> }\r\n        </div>\r\n\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default HistorySection","import { Link } from \"react-router-dom\"\r\n\r\nconst Note = ({note}) => {\r\n  return (\r\n    <div className=\"d-flex align-items-center justify-content-between sp1_tark_right_item\">\r\n        <div className='w-100 text-ellipsis'>\r\n          {note?.title || 'Untitled'} \r\n        </div>\r\n\r\n        <div className=\"d-flex align-items-center\">\r\n            <Link to={`?note=${note.id}&type=view`} className=\"mr-2 py-2 sp1_task_righ_action_btn\">\r\n              <i className=\"fa-regular fa-eye\"></i>\r\n            </Link>\r\n            <Link to={`?note=${note.id}&type=edit`} className=\"mr-2 py-2 sp1_task_righ_action_btn\">\r\n              <i className=\"fa-regular fa-pen-to-square\"></i>\r\n            </Link>\r\n        </div>\r\n    </div> \r\n  )\r\n}\r\n\r\nexport default Note","import React from 'react'\r\n\r\nconst Input = ({\r\n    label,\r\n    id,\r\n    readOnly=false,\r\n    placeholder='',\r\n    inputClass='',\r\n    labelClass='',\r\n    type='text',\r\n    className='',\r\n    value,\r\n    defaultValue,\r\n    onChange,\r\n    error,\r\n    ...rest\r\n}) => {\r\n  return (\r\n    <div className={`form-group my-3 w-100 ${className}`}>\r\n        <label\r\n            htmlFor={id}\r\n            className={`f-14 text-dark-gray mb-1 ${labelClass}`}\r\n            data-label=\"true\"\r\n        >\r\n            {label}\r\n            {rest.required && <sup className='f-14 mr-1'>*</sup> }\r\n        </label>\r\n        <input\r\n            type={type}\r\n            className={`form-control singleline-ellipsis height-35 w-100 f-14 ${inputClass}`}\r\n            placeholder={placeholder}\r\n            id={id}\r\n            value={value}\r\n            defaultValue={defaultValue}\r\n            onChange={onChange}\r\n            readOnly={readOnly}\r\n            onWheel={e => e.currentTarget.blur()}\r\n            {...rest}\r\n        />\r\n\r\n        {error? <div className='' style={{color: 'red'}}> {error} </div> : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Input\r\n","import * as React from 'react' \r\nimport Button from '../../components/Button' \r\nimport _ from 'lodash'\r\nimport CKEditorComponent from '../../../ckeditor'\r\nimport UploadFilesInLine from '../../../file-upload/UploadFilesInLine'\r\nimport { useCrateNoteMutation } from '../../../services/api/SingleTaskPageApi'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { storeNotes } from '../../../services/features/subTaskSlice'\r\nimport Input from '../../components/form/Input'\r\nimport CustomModal from '../../components/CustomModal'\r\nimport { useWindowSize } from 'react-use'\r\nimport Modal from '../../components/Modal'\r\n\r\n\r\n\r\n\r\n\r\nconst CreateNote = ({isOpen, close,toggleRef}) => {\r\n  const {task, notes} = useSelector(s => s.subTask); \r\n  const [files, setFiles] = React.useState([]);\r\n  const [title, setTitle] = React.useState('');\r\n  const [errTitle, setErrTitle] = React.useState(null);\r\n  const [note,setNote] = React.useState('');\r\n  const dispatch = useDispatch();  \r\n  const { width: deviceWidth} = useWindowSize();\r\n\r\n\r\n const [crateNote, {isLoading}] = useCrateNoteMutation();\r\n\r\n  // handle onchange\r\nconst handleChange = (e, setState) =>{\r\n    e.preventDefault();\r\n    let value = e.target.value;\r\n    setState(value);\r\n}\r\n\r\n  const handleSubmit = e => { \r\n    e.preventDefault();\r\n    if(!title){\r\n        setErrTitle('Title name required');\r\n        return null;\r\n    }\r\n    const fd = new FormData(); \r\n    fd.append('title', title);\r\n    fd.append('note', note);\r\n    fd.append('taskId', task?.id);\r\n    fd.append('_token', document.querySelector(\"meta[name='csrf-token']\").getAttribute(\"content\"));\r\n    Array.from(files).forEach((file) => {\r\n        fd.append('file[]', file);\r\n    });\r\n\r\n    \r\n    crateNote(fd).unwrap().then(res => {\r\n            if(res?.status === 'success'){\r\n                let _notes = [...notes];\r\n                _notes.push(res?.note);\r\n                dispatch(storeNotes(_notes));\r\n\r\n                Swal.fire({\r\n                    position: 'center',\r\n                    icon: 'success',\r\n                    title: \"Data has been stored Successfully\",\r\n                    showConfirmButton: false,\r\n                    timer: 2500\r\n                }) \r\n\r\n                close();\r\n            }\r\n    }).catch((err) => {\r\n        console.log(err)\r\n    })\r\n\r\n  }\r\n\r\n\r\n  const handleEditorChange = (e, editor) => {\r\n    const data = editor.getData();\r\n    setNote(data);\r\n  }  \r\n\r\n  const content = () => {\r\n    return (  \r\n        <div className='sp1-subtask-form --modal-panel'>\r\n            <div className='sp1-subtask-form --modal-panel-header'> \r\n                 <h6>Write Notes</h6> \r\n                <Button\r\n                    aria-label=\"close-modal\"\r\n                    className='_close-modal'\r\n                    onClick={close}\r\n                >\r\n                    <i className=\"fa-solid fa-xmark\" />\r\n                </Button> \r\n            </div>\r\n\r\n                <div className=\"sp1-subtask-form --modal-panel-body\">\r\n                    <div className='py-3'>\r\n                        <Input \r\n                            id='title'\r\n                            label=\"Title\"\r\n                            type=\"text\" \r\n                            placeholder='Enter a task title'\r\n                            name='title'\r\n                            required={true}\r\n                            value={title}\r\n                            error= {errTitle}\r\n                            onChange={e => handleChange(e, setTitle)}\r\n                        />\r\n\r\n                        <div className='sp1_st_write_comment_editor' style={{minHeight: '100px'}}>\r\n                            <h6 className='mb-3 f-14' style={{color:'#777'}}>Write Note</h6>\r\n                            <CKEditorComponent onChange={handleEditorChange}/>\r\n                        </div>\r\n\r\n                        <div className='mt-3'>\r\n                            <h6 className='mb-3 f-14' style={{color:'#777'}}>Upload Files</h6>\r\n                            <UploadFilesInLine  \r\n                                files={files} \r\n                                setFiles={setFiles} \r\n                            />\r\n                        </div>\r\n\r\n\r\n                        <div className=\"mt-5\"> \r\n                                <div className=\"d-flex align-items-center\">\r\n                                    <Button\r\n                                        variant='secondary'\r\n                                        className='mr-2'\r\n                                        onClick={close}\r\n                                    > \r\n                                        Cancel\r\n                                    </Button> \r\n        \r\n                                    {!isLoading ? (\r\n                                        <Button onClick={handleSubmit}>\r\n                                            <i className=\"fa-regular fa-paper-plane\"></i>\r\n                                            Keep as Notes\r\n                                        </Button>\r\n                                    ) : (\r\n                                    <Button className='cursor-processing'>\r\n                                        <div \r\n                                            className=\"spinner-border text-white\" \r\n                                            role=\"status\"\r\n                                            style={{\r\n                                                width: '18px',\r\n                                                height: '18px', \r\n                                            }}\r\n                                        >\r\n                                        </div>\r\n                                        Processing...\r\n                                    </Button>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            </div> \r\n    )\r\n  }\r\n\r\n  if(deviceWidth > 1200){\r\n    return (\r\n        <CustomModal \r\n            isOpen={isOpen} \r\n            toggleRef={toggleRef}\r\n        > \r\n           <React.Fragment>\r\n            {content()}\r\n           </React.Fragment>\r\n        </CustomModal>\r\n      )\r\n }else{\r\n    return (\r\n        <Modal isOpen={isOpen}> \r\n            <React.Fragment>\r\n                {content()}\r\n            </React.Fragment>\r\n        </Modal>\r\n      )\r\n }\r\n\r\n}\r\n\r\nexport default CreateNote ","import * as React from 'react' \r\nimport Button from '../../components/Button' \r\nimport _ from 'lodash'\r\nimport CKEditorComponent from '../../../ckeditor'\r\nimport UploadFilesInLine from '../../../file-upload/UploadFilesInLine'\r\nimport { useCrateNoteMutation, useDeleteNoteUploadedFileMutation, useGetTaskDetailsQuery, useUpdateNoteMutation } from '../../../services/api/SingleTaskPageApi'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { storeNotes } from '../../../services/features/subTaskSlice'\r\nimport Input from '../../components/form/Input'\r\nimport { useEffect } from 'react'\r\nimport { useSearchParams } from 'react-router-dom'\r\nimport CustomModal from '../../components/CustomModal'\r\nimport { useWindowSize } from 'react-use' \r\nimport Modal from '../../components/Modal'\r\n\r\nconst EditNote = ({isOpen, close, toggleRef}) => {\r\n  const {task, notes} = useSelector(s => s.subTask); \r\n  const [files, setFiles] = React.useState([]);\r\n  const [title, setTitle] = React.useState('');\r\n  const [errTitle, setErrTitle] = React.useState(null);\r\n  const [note,setNote] = React.useState('');\r\n  const [attachedFiles, setAttachedFiles] = React.useState([]);\r\n  const dispatch = useDispatch();\r\n  const { width: deviceWidth} = useWindowSize();\r\n  const [searchParams] = useSearchParams();\r\n  const noteId = searchParams.get('note');\r\n  const type = searchParams.get('type');\r\n\r\n\r\n\r\n   const [updateNote, {isLoading}] = useUpdateNoteMutation();\r\n\r\n  // fetch all task \r\n  const {data, isFetching} = useGetTaskDetailsQuery(`/${noteId}/json?mode=task_note_edit`, {\r\n    skip: type ? (type !== 'edit' || !noteId) : true,\r\n    refetchOnMountOrArgChange: true\r\n  }) \r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    clearField();\r\n    if(!isFetching && data){ \r\n        setTitle(data?.title);\r\n        setNote(data?.note);\r\n        setAttachedFiles(data?.files || []);\r\n    }\r\n  }, [data, noteId, isFetching]);\r\n\r\n  const clearField = () => {\r\n    setTitle('');\r\n    setNote('');\r\n    setAttachedFiles([]);\r\n  }\r\n\r\n  const handleClose = () => {\r\n    clearField();\r\n    close();\r\n  }\r\n\r\n\r\n // handle onchange\r\nconst handleChange = (e, setState) =>{\r\n    e.preventDefault();\r\n    let value = e.target.value;\r\n    setState(value);\r\n}\r\n\r\n\r\n// handle submittion\r\n  const handleSubmit = e => { \r\n    e.preventDefault();\r\n    if(!title){\r\n        setErrTitle('Title name required');\r\n        return null;\r\n    }\r\n    const fd = new FormData(); \r\n    fd.append('title', title);\r\n    fd.append('note', note);\r\n    fd.append('taskId', task?.id);\r\n    fd.append('_token', document.querySelector(\"meta[name='csrf-token']\").getAttribute(\"content\"));\r\n    fd.append('_method', 'PUT');\r\n    Array.from(files).forEach((file) => {\r\n        fd.append('file[]', file);\r\n    });\r\n\r\n    \r\n    updateNote({data: fd, id: noteId}).unwrap().then(res => { \r\n            if(res?.status === 'success'){  \r\n                let _notes = [...notes];\r\n                _notes = _notes?.map(note => {\r\n                    if(Number(note?.id) === Number(res?.note?.id)){\r\n                        return res?.note;\r\n                    }else return note\r\n                })\r\n  \r\n                Swal.fire({\r\n                    position: 'center',\r\n                    icon: 'success',\r\n                    title: res?.message,\r\n                    showConfirmButton: false,\r\n                    timer: 2500\r\n                }) \r\n\r\n                dispatch(storeNotes(_notes)); \r\n\r\n                handleClose();\r\n            }\r\n    }).catch((err) => {\r\n        console.log(err)\r\n    })\r\n\r\n  }\r\n\r\n\r\n  // handle editor\r\n  const handleEditorChange = (e, editor) => {\r\n    const data = editor.getData();\r\n    setNote(data);\r\n  }  \r\n\r\n  // handle loading state\r\nReact.useEffect(() => { \r\n    if (isLoading || isFetching) {\r\n        document.getElementsByTagName('body')[0].style.cursor = 'progress';\r\n      } else {\r\n        document.getElementsByTagName('body')[0].style.cursor = 'default';\r\n      }\r\n}, [isLoading, isFetching])\r\n\r\n\r\n\r\n\r\n  // handle uplaoded file delete request\r\nconst [deleteNoteUploadedFile] = useDeleteNoteUploadedFileMutation();\r\n\r\nconst handleFileDelete = (e, file) => { \r\n    // delete\r\n    deleteNoteUploadedFile(file?.id).unwrap();\r\n   \r\n    // delete form ui\r\n    let previousFile = [...attachedFiles];\r\n    let index = previousFile?.indexOf(file);\r\n    previousFile.splice(index,1);\r\n    setAttachedFiles(previousFile);\r\n}\r\n\r\n\r\n    const content = () => {\r\n        return (\r\n        <div className='sp1-subtask-form --modal-panel'>\r\n            <div className='sp1-subtask-form --modal-panel-header'> \r\n                 <h6>Update Notes\r\n                        {isFetching && <div \r\n                            className=\"spinner-border text-dark ml-2\" \r\n                            role=\"status\"\r\n                            style={{\r\n                                width: '16px',\r\n                                height: '16px',\r\n                                border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                                borderRightColor: 'transparent' \r\n                            }}\r\n                        />}\r\n                  </h6> \r\n                <Button\r\n                    aria-label=\"close-modal\"\r\n                    className='_close-modal'\r\n                    onClick={handleClose}\r\n                >\r\n                    <i className=\"fa-solid fa-xmark\" />\r\n                </Button> \r\n            </div>\r\n\r\n            <div className=\"sp1-subtask-form --modal-panel-body\">\r\n                {isFetching && \r\n                    <div className='w-100' style={{\r\n                        width: '100%',\r\n                        height: '100%',\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        left: 0,\r\n                        zIndex: 1\r\n                    }}/>\r\n                }\r\n                <div className='py-3'>\r\n                    <Input \r\n                        id='title'\r\n                        label=\"Title\"\r\n                        type=\"text\" \r\n                        placeholder='Enter a task title'\r\n                        name='title'\r\n                        required={true}\r\n                        value={title}\r\n                        error= {errTitle}\r\n                        onChange={e => handleChange(e, setTitle)}\r\n                    />\r\n\r\n                    <div className='sp1_st_write_comment_editor pr-0' style={{minHeight: '100px'}}>\r\n                        <h6 className='mb-3 f-14' style={{color:'#777'}}>Write Note</h6>\r\n                        <CKEditorComponent data={note} onChange={handleEditorChange}/>\r\n                    </div>\r\n\r\n                    <div className='mt-3'>\r\n                        <h6 className='mb-3 f-14' style={{color:'#777'}}>Upload Files</h6>\r\n                        <UploadFilesInLine  \r\n                            files={files} \r\n                            setFiles={setFiles} \r\n                            previous={attachedFiles}\r\n                            onPreviousFileDelete={handleFileDelete}\r\n                        />\r\n                    </div>\r\n\r\n\r\n                    <div className=\"mt-5\"> \r\n                            <div className=\"d-flex align-items-center\">\r\n                                <Button\r\n                                    variant='secondary'\r\n                                    className='mr-2'\r\n                                    onClick={handleClose}\r\n                                > \r\n                                    Cancel\r\n                                </Button> \r\n    \r\n                                {!isLoading ? (\r\n                                    <Button onClick={handleSubmit}>\r\n                                        <i className=\"fa-regular fa-paper-plane\"></i>\r\n                                        Update\r\n                                    </Button>\r\n                                ) : (\r\n                                <Button className='cursor-processing'>\r\n                                    <div \r\n                                        className=\"spinner-border text-white\" \r\n                                        role=\"status\"\r\n                                        style={{\r\n                                            width: '18px',\r\n                                            height: '18px', \r\n                                        }}\r\n                                    >\r\n                                    </div>\r\n                                    Processing...\r\n                                </Button>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n\r\n\r\n if(deviceWidth > 1200){\r\n    return (\r\n        <CustomModal \r\n            isOpen={isOpen} \r\n            toggleRef={toggleRef}\r\n        > \r\n            <React.Fragment>\r\n            {content()}\r\n            </React.Fragment>\r\n        </CustomModal>\r\n      )\r\n }else{\r\n    return (\r\n        <Modal isOpen={isOpen}> \r\n            <React.Fragment>\r\n            {content()}\r\n            </React.Fragment>\r\n        </Modal>\r\n      )\r\n }\r\n}\r\n\r\nexport default EditNote;","import * as React from 'react'\r\nimport Button from '../../components/Button'\r\nimport CustomModal from '../../components/CustomModal' \r\nimport { useGetTaskDetailsQuery } from '../../../services/api/SingleTaskPageApi'\r\nimport { useSearchParams } from 'react-router-dom'\r\nimport { User } from '../../../utils/user-details'\r\nimport ContentLoader from \"react-content-loader\"\r\nimport UploadFilesInLine from '../../../file-upload/UploadFilesInLine'\r\nimport { useWindowSize } from 'react-use'\r\nimport Modal from '../../components/Modal'\r\n\r\n\r\nconst NoteView = ({close, isOpen, toggleRef}) => {\r\n    const [searchParams] = useSearchParams();\r\n    const noteId = searchParams.get('note');\r\n    const type = searchParams.get('type');\r\n    const { width: deviceWidth} = useWindowSize();\r\n\r\n    // fetch all task \r\n    const {data, isFetching} = useGetTaskDetailsQuery(`/${noteId}/json?mode=task_note_edit`, {\r\n        skip: type ? (type !== 'view' || !noteId) : true,\r\n        refetchOnMountOrArgChange: true\r\n    }) \r\n    \r\n  const user = data ?  new User(data.user) : null;\r\n\r\n  const content = () =>{\r\n    return(\r\n        <div className='sp1-subtask-form --modal-panel'>\r\n            <div className='sp1-subtask-form --modal-panel-header'> \r\n                <h6>Notes</h6> \r\n                {isFetching && <div \r\n                    className=\"spinner-border text-dark ml-2 mr-auto\" \r\n                    role=\"status\"\r\n                    style={{\r\n                        width: '16px',\r\n                        height: '16px',\r\n                        border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                        borderRightColor: 'transparent'\r\n                    }}\r\n                />} \r\n                <Button\r\n                    aria-label=\"close-modal\"\r\n                    className='_close-modal'\r\n                    onClick={close}\r\n                >\r\n                    <i className=\"fa-solid fa-xmark\" />\r\n                </Button> \r\n            </div>\r\n\r\n            <div className=\"sp1-subtask-form --modal-panel-body\">\r\n                <div className='py-3'>\r\n                    <div>\r\n                        {isFetching ? <>Loading...</> : \r\n                        <>\r\n                            <div className='d-flex align-items-center'>\r\n                                <div className=''>\r\n                                    <img src={user?.getAvatar()} alt=\"\" width={40} height={40} />\r\n                                </div>\r\n                                <div className='px-3'>\r\n                                    <h6 className='mb-0'>{user?.getName()}</h6>\r\n                                    <span className='' style={{color: '#A5ACB5'}}>{user?.getDesignationName()}</span>\r\n                                </div>\r\n                            </div> \r\n                            <div className='mt-4'>\r\n                                <h6 className='font-weight-bold'>{data?.title}</h6>\r\n                                <div className='sp1_ck_content mb-5' dangerouslySetInnerHTML={{__html: data?.note}} />\r\n                                {data?.files && <UploadFilesInLine previous={data?.files} mode='preview'/>}\r\n                            </div>\r\n                        </>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n  }\r\n\r\n  if(deviceWidth > 1200){\r\n    return (\r\n        <CustomModal \r\n            isOpen={isOpen} \r\n            toggleRef={toggleRef}\r\n        > \r\n            <React.Fragment>\r\n            {content()}\r\n            </React.Fragment>\r\n        </CustomModal>\r\n    )\r\n  }else{\r\n    return <Modal isOpen={isOpen} > \r\n        <React.Fragment>\r\n            {content()}\r\n        </React.Fragment>\r\n     </Modal>\r\n  }\r\n}\r\n\r\nexport default NoteView","import React from 'react'\r\nimport Note from './Note'\r\nimport CreateNote from './CreateNote';\r\nimport Button from '../../components/Button';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { storeNotes } from '../../../services/features/subTaskSlice';\r\nimport { useLazyGetTaskDetailsQuery } from '../../../services/api/SingleTaskPageApi';\r\nimport EditNote from './EditNote';\r\nimport NoteView from './NoteView';\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\n\r\nconst NoteSection = () => {\r\n  const {task, notes} = useSelector(s => s.subTask); \r\n  const [mode, setMode] = React.useState('');\r\n\r\n  const [modalRefButton, setModalRefButton] = React.useState(null); \r\n\r\n  const dispatch = useDispatch();   \r\n  const navigate = useNavigate();\r\n  const [searchParams] = useSearchParams();\r\n  const paramType = searchParams.get('type');\r\n\r\n\r\n  // fetch all task \r\n  const [getTaskDetails, {isFetching}] = useLazyGetTaskDetailsQuery('', {\r\n    skip: notes?.length\r\n  })\r\n\r\n  // control mode \r\n  React.useEffect(() => {\r\n    let _mode = paramType ? paramType : '';\r\n    setMode(_mode);\r\n  }, [paramType])\r\n\r\n\r\n  // if task notes fetch completed store data into redux store\r\n  React.useEffect(()=> {\r\n    if(task && task.id){\r\n      getTaskDetails(`/${task?.id}/json?mode=task_note`)\r\n      .unwrap()\r\n      .then(res => {\r\n        if(res){\r\n          dispatch(storeNotes(res));\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n    } \r\n  }, [task]);\r\n \r\n \r\n  // close modal\r\n  const close = (e) => { \r\n    navigate(`/account/tasks/${task.id}`); \r\n  }\r\n\r\n  return (\r\n    <div className='sp1_task_right_card mb-3' ref={setModalRefButton} style={{zIndex: mode ? '99' : ''}}>\r\n       <div className='d-flex border-bottom pb-2 align-items-center justify-content-between mb-2 font-weight-bold'>\r\n          <span className=\"f-16\">Notes</span>\r\n          {isFetching && \r\n                <div \r\n                    className=\"spinner-border text-dark ml-2 mr-auto\" \r\n                    role=\"status\"\r\n                    style={{\r\n                        width: '16px',\r\n                        height: '16px',\r\n                        border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                        borderRightColor: 'transparent' \r\n                    }}\r\n                />\r\n          }\r\n          <Button\r\n              variant='tertiary'\r\n              className=\"sp1_tark_add_item\" \r\n              aria-label=\"addButton\"\r\n              onClick={() => navigate(`?type=create`)}\r\n          > \r\n              {mode === 'create' ? (\r\n                <> <i className=\"fa-solid fa-xmark\" style= {{fontSize: '12px'}}/> Close </> \r\n                ) :\r\n                (\r\n                  <> <i className=\"fa-solid fa-plus\"  style= {{fontSize: '12px'}} /> Note  </>\r\n                )\r\n              }\r\n          </Button>\r\n        </div>\r\n\r\n        {/* left dropdown */}\r\n        {mode && <button \r\n          aria-label='openCommentModalButton'  \r\n          \r\n          className='sp1_task_right_dl_toggle'\r\n          onClick={close}\r\n          style={{zIndex: mode ? '110' : ''}}\r\n        >\r\n            <i \r\n              className={`fa-solid fa-circle-chevron-${ mode ? 'right' : 'left'}`} \r\n              style={{color: \"#276fec\"}} \r\n            />\r\n        </button>}\r\n      {/* left dropdown */}\r\n\r\n        {/* create new */} \r\n        <CreateNote \r\n            close={close}  \r\n            isOpen={mode === 'create'} \r\n            toggleRef={modalRefButton}\r\n        /> \r\n\r\n        {/* edit note */} \r\n        <EditNote \r\n          close={close} \r\n          isOpen={ mode === 'edit'}   \r\n          toggleRef={modalRefButton}\r\n        />  \r\n\r\n\r\n        {/* note view */}\r\n        <NoteView \r\n          close={close}\r\n          isOpen={mode === 'view'} \r\n          toggleRef={modalRefButton}\r\n        /> \r\n\r\n        <div className=\"sp1_task_right_card--body\">\r\n          { !isFetching ? notes?.length > 0 ? notes.map(note => (\r\n            <Note \r\n              key={note.id} \r\n              note={note}  \r\n            /> \r\n          )): <div\r\n            className='d-flex align-items-center justify-content-center'\r\n            style={{\r\n              color: '#B4BCC4',\r\n              fontSize: '15px',\r\n              textAlign: 'center',\r\n              height: '100%',\r\n              width: '100%',\r\n            }}\r\n          >\r\n              Empty Notes\r\n            </div> : \r\n            <div className='d-flex align-items-center justify-content-center'\r\n            style={{\r\n              color: '#5A6169',\r\n              fontSize: '15px',\r\n              textAlign: 'center',\r\n              height: '100%',\r\n              width: '100%',\r\n            }}\r\n          > \r\n              <div \r\n                    className=\"spinner-border text-dark ml-2\" \r\n                    role=\"status\"\r\n                    style={{\r\n                        width: '16px',\r\n                        height: '16px',\r\n                        border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                        borderRightColor: 'transparent',\r\n                        marginRight: '10px'\r\n                    }}\r\n                />\r\n              Loading...\r\n            </div> }\r\n        </div>\r\n\r\n   </div>\r\n  )\r\n}\r\n\r\nexport default NoteSection","import * as React from 'react'\r\nimport Button from '../../components/Button'\r\nimport CustomModal from '../../components/CustomModal' \r\n\r\n\r\nconst  ViewComment = ({close, isOpen, toggleRef, comment}) => { \r\n  return (\r\n    <CustomModal isOpen={isOpen} toggleRef={toggleRef}>\r\n        <div className='sp1-subtask-form --modal-panel'>\r\n            <div className='sp1-subtask-form --modal-panel-header'> \r\n                <Button\r\n                    aria-label=\"close-modal\"\r\n                    className='_close-modal ml-auto'\r\n                    onClick={close}\r\n                >\r\n                    <i className=\"fa-solid fa-xmark\" />\r\n                </Button> \r\n            </div>\r\n\r\n            <div className=\"sp1-subtask-form --modal-panel-body\">\r\n                <div className='py-3'>\r\n                    <div>\r\n                        {/* comment here... */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </CustomModal>\r\n    \r\n  )\r\n}\r\n\r\nexport default ViewComment \r\n\r\n","import React from 'react'\r\nimport Rating from '../../../global/Rating'\r\nimport useSWR from 'swr';\r\nimport axios from 'axios';\r\nimport { useSelector } from 'react-redux'\r\nimport ViewComment from './ViewComment';\r\n\r\n\r\nconst fetcher = (url) => axios.get(url).then(res => res.data); \r\n\r\nconst RevisionSection = ({task}) => { \r\n  const [toggleRef, setToggleRef] = React.useState(null);\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n\r\n  const toggle = (e) => {\r\n    e.preventDefault();\r\n    setIsOpen(!isOpen);\r\n  }\r\n\r\n  const close = e => {\r\n    setIsOpen(false);\r\n  }\r\n\r\n\r\n  const { data, error, isLoading } = useSWR(`/account/task/${task.id}/json?mode=task_approve`, fetcher);\r\n\r\n\r\n  const cmt = data?.comment;\r\n  const commentLength = cmt?.length > 250; \r\n  let comment = commentLength ? cmt?.slice(0, 250): cmt;  \r\n  comment = comment || `<span className='' style=\"color: #A7A9B2\">No Comment is Available</span>`\r\n \r\n  return (\r\n    <div className=\"sp1_task_right_card mb-3\" ref={setToggleRef} style={{maxHeight:'450px'}}>  \r\n\r\n        {/* side drop toggle button */}\r\n        {isOpen && (\r\n            <button \r\n                aria-label='openCommentModalButton'  \r\n                \r\n                className='sp1_task_right_dl_toggle'\r\n                onClick={toggle}\r\n                style={{zIndex: isOpen ? '110' : ''}}\r\n            >\r\n                <i \r\n                className={`fa-solid fa-circle-chevron-${ isOpen ? 'right' : 'left'}`} \r\n                style={{color: \"#276fec\"}} \r\n                />\r\n            </button>\r\n        )}\r\n        {/* side drop toggle button end */}\r\n\r\n        <div className=\"d-flex border-bottom pb-2 align-items-center justify-content-between mb-2 font-weight-bold\">\r\n            <span className=\"f-16\">Task Review</span> \r\n        </div> \r\n       \r\n        <div className=\"d-flex align-items-center mb-2\">\r\n            <div className=\"\" style={{width: '150px'}}>Deadline Meet : </div>\r\n            <div className=\"d-flex align-items-center\">\r\n                <Rating rating={Number(data?.deadline_meet)} />\r\n            </div>\r\n        </div> \r\n\r\n        <div className=\"d-flex align-items-center mb-2\">\r\n            <div className=\"\" style={{width: '150px'}}>Submission Quality: </div>\r\n            <div className=\"d-flex align-items-center\">  \r\n                <Rating rating={Number(data?.submission_quality)} />\r\n            </div>\r\n        </div> \r\n\r\n        <div className=\"d-flex align-items-center mb-2\">\r\n            <div className=\"\" style={{width: '150px'}}>Req. Fullfillment: </div>\r\n            <div className=\"d-flex align-items-center\"> \r\n            <Rating rating={Number(data?.req_fullfillment)} />\r\n            </div>\r\n        </div> \r\n\r\n        <div className=\"d-flex align-items-center mb-2\">\r\n            <div className=\"\" style={{width: '150px'}}>Overall Task Ratings: </div>\r\n            <div className=\"d-flex align-items-center\"> \r\n                <Rating rating={Number(data?.overall_tasks)} /> \r\n            </div>\r\n        </div> \r\n\r\n        <div className=\"mb-2\">\r\n            <span className=\"font-weight-bold d-block mb-1\">Comments:</span>\r\n            <div style={{color:'#777', fontSize: '13px'}}>\r\n                <div className='sp1_ck_content' dangerouslySetInnerHTML={{__html: comment}}></div> \r\n                { commentLength && <a href=\"#\" onClick={toggle} >Read More</a>}\r\n            </div>\r\n        </div> \r\n        <ViewComment isOpen={isOpen} toggleRef={toggleRef} close={close} comment={data?.comment} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RevisionSection","import api from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[1]!../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[2]!./task-edit-form.module.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import * as React from 'react';\r\nimport DatePicker from 'react-datepicker';\r\n\r\nconst DatePickerComponent = ({date, selected, setDate, minDate, maxDate, placeholderText,...rest}) => {\r\n\r\n  return (\r\n        <DatePicker\r\n            selected={date}\r\n            dateFormat='dd-MM-yyyy'\r\n            onChange={(d) => setDate(d)}\r\n            className='w-100 border-0 py-2'\r\n            minDate={minDate}\r\n            maxDate={maxDate}\r\n            placeholderText={placeholderText}\r\n            {...rest}\r\n        />\r\n  )\r\n}\r\n\r\nexport default DatePickerComponent;\r\n","/* eslint-disable react/display-name */\r\nimport PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n\r\nconst SearchBox = ({value, onChange, placeholder=\"Search\", autoFocus=false, className=\"\", ...props}) => {\r\n        const ref = React.useRef(null);\r\n        React.useEffect(() => {\r\n            if (autoFocus) {\r\n                ref.current.focus();\r\n            }\r\n        }, [autoFocus, ref])\r\n        return (\r\n            <div className='cnx__ins__ui_search'>\r\n                <input \r\n                    type='text' \r\n                    placeholder= {placeholder}\r\n                    value={value}\r\n                    className={`cnx__ins__ui_search_input ${className}`}\r\n                    onChange={e => onChange(e.currentTarget.value)}  \r\n                    ref={ref}   \r\n                    {...props}\r\n                />\r\n\r\n                {/* search icons */}\r\n                    <div className='cnx__ins__ui_search_icon'>\r\n                        <svg \r\n                            xmlns=\"http://www.w3.org/2000/svg\" \r\n                            className='cnx__ins__ui_search_icon_svg mb-1'\r\n                            viewBox=\"0 0 24 24\" width=\"15\" height=\"15\">\r\n                            <path d=\"M23.707,22.293l-5.969-5.969a10.016,10.016,0,1,0-1.414,1.414l5.969,5.969a1,1,0,0,0,1.414-1.414ZM10,18a8,8,0,1,1,8-8A8.009,8.009,0,0,1,10,18Z\"/>\r\n                        </svg>\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\nSearchBox.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    placeholder: PropTypes.string,\r\n    className: PropTypes.string,\r\n    autoFocus: PropTypes.bool,\r\n}\r\n\r\n\r\nexport default SearchBox;","const Loader = ({title =\"Loading...\"}) => {\r\n  return (\r\n        <div className='d-flex align-items-center'>\r\n            <div\r\n                className=\"spinner-border text-dark mr-2\"\r\n                role=\"status\"\r\n                style={{\r\n                    width: \"16px\",\r\n                    height: \"16px\",\r\n                    border: \"0.14em solid rgba(0, 0, 0, .25)\",\r\n                    borderRightColor: \"transparent\",\r\n                }}\r\n            /> \r\n            <span>{title}</span>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default Loader;","import { Combobox } from '@headlessui/react'\r\nimport * as React from 'react'\r\nimport SearchBox from '../../components/form/Searchbox';\r\nimport _  from 'lodash';\r\nimport { useParams } from 'react-router-dom';\r\nimport Loader from '../../components/Loader';\r\nimport { useGetTaskDetailsQuery } from '../../../../react-latest/services/api/SingleTaskPageApi';\r\n\r\n\r\n\r\nconst TaskCategorySelectionBox = ({selected, onSelect, taskId}) => {\r\n    const [query, setQuery] = React.useState('');\r\n\r\n    const params = useParams();\r\n    const {\r\n        data:categories,\r\n        isFetching\r\n    } = useGetTaskDetailsQuery(`/${params?.taskId || taskId}/json?mode=category`);\r\n\r\n\r\n    const filteredData =\r\n    query === ''\r\n      ? categories\r\n      : categories?.filter((cat) => {\r\n          return cat?.category_name.toLowerCase().includes(query.toLowerCase())\r\n        })\r\n\r\n  return (\r\n    <Combobox value={selected} onChange={onSelect}>\r\n        <div className=\"form-group position-relative my-3\">\r\n            <label htmlFor=\"\">Task category<sup>*</sup></label>\r\n            <Combobox.Button className=\"d-flex align-items-center w-100 sp1-selection-display-button\">\r\n                <Combobox.Input\r\n                    onChange={e => setQuery(e.target.value)}\r\n                    placeholder='--'\r\n                    displayValue={(value) => value?.category_name || ''}\r\n                    className=\"form-control height-35 f-14 sp1-selection-display w-100\"\r\n                />\r\n                <div className='__icon'>\r\n                    <i className=\"fa-solid fa-sort\"></i>\r\n                </div>\r\n            </Combobox.Button>\r\n\r\n            <Combobox.Options className=\"sp1-select-options\">\r\n\r\n                {isFetching && (\r\n                    <div className='sp1-select-option-nodata'>\r\n                        <Loader />\r\n                    </div>\r\n                )}\r\n\r\n                {filteredData?.length===0 ?\r\n                    <div className='sp1-select-option-nodata'>\r\n                         Nothing found.\r\n                    </div>\r\n                :filteredData?.map((cat, catIdx) => (\r\n                <Combobox.Option\r\n                    key={catIdx}\r\n                    className={({ active }) =>  `sp1-select-option ${ active ? 'active' : ''}`}\r\n                    value={cat}\r\n                >\r\n                    {({ selected }) => (\r\n                        <>\r\n                            <span\r\n                                className={`block truncate ${\r\n                                selected ? 'font-medium' : 'font-normal'\r\n                                }`}\r\n                            >\r\n                                {cat?.category_name}\r\n                            </span>\r\n                            {selected ? (\r\n                                <span className=\"ml-auto\"> <i className='fa-solid fa-check'/> </span>\r\n                            ) : null}\r\n                        </>\r\n                    )}\r\n                </Combobox.Option>\r\n            ))}\r\n            </Combobox.Options>\r\n        </div>\r\n    </Combobox >\r\n  )\r\n}\r\n\r\nexport default TaskCategorySelectionBox\r\n","import { Combobox } from \"@headlessui/react\";\r\nimport * as React from \"react\";\r\nimport _ from \"lodash\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n    useDeveloperInProgressTaskQuery,\r\n    useGetTaskDetailsQuery,\r\n} from \"../../../services/api/SingleTaskPageApi\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { Placeholder } from '../../../global/Placeholder'\r\n\r\nconst AssginedToSelection = ({ selected, onSelect }) => {\r\n    const [query, setQuery] = React.useState(\"\");\r\n\r\n    const params = useParams();\r\n    const { data: employees, isFetching } = useGetTaskDetailsQuery(\r\n        `/${params?.taskId}/json?mode=employees`\r\n    );\r\n\r\n    const filteredData =\r\n        query === \"\"\r\n            ? employees\r\n            : employees?.filter((employee) => {\r\n                  return employee?.name\r\n                      .toLowerCase()\r\n                      .includes(query.toLowerCase());\r\n              });\r\n\r\n    return (\r\n        <Combobox value={selected} onChange={onSelect}>\r\n            <div className=\"form-group position-relative my-3\">\r\n                <label htmlFor=\"\">Assigned To</label>\r\n                <Combobox.Button className=\"d-flex align-items-center w-100 sp1-selection-display-button\">\r\n                    <Combobox.Input\r\n                        onChange={(e) => setQuery(e.target.value)}\r\n                        placeholder=\"--\"\r\n                        displayValue={(value) => value?.name || \"\"}\r\n                        className=\"form-control height-35 f-14 sp1-selection-display w-100\"\r\n                    />\r\n                    <div className=\"__icon\">\r\n                        <i className=\"fa-solid fa-sort\"></i>\r\n                    </div>\r\n                </Combobox.Button>\r\n\r\n                <Combobox.Options className=\"sp1-select-options\">\r\n                    {isFetching && (\r\n                        <div className=\"sp1-select-option-nodata\">\r\n                            <Loader />\r\n                        </div>\r\n                    )}\r\n\r\n                    {filteredData?.length === 0 ? (\r\n                        <div className=\"sp1-select-option-nodata\">\r\n                            Nothing found.\r\n                        </div>\r\n                    ) : (\r\n                        filteredData?.map((employee) => (\r\n                            <Option key={employee.id} employee={employee} />\r\n                        ))\r\n                    )}\r\n                </Combobox.Options>\r\n            </div>\r\n        </Combobox>\r\n    );\r\n};\r\n\r\nexport default AssginedToSelection;\r\n\r\nconst Option = ({ employee }) => {\r\n    const { data, isLoading } = useDeveloperInProgressTaskQuery(\r\n        employee?.id,\r\n        { skip: !employee?.id }\r\n    );\r\n  \r\n    if(isLoading){\r\n        return <div className=\"sp1-select-option mb-2\">\r\n            <div className=\"d-flex align-items-center px-3\"> \r\n                <Placeholder />\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <Combobox.Option\r\n            key={employee?.id}\r\n            className={({ active }) =>\r\n                `sp1-select-option ${active ? \"active\" : \"\"}`\r\n            }\r\n            value={{\r\n                ...employee,\r\n                isOverloaded: data?.status === 400,\r\n            }}\r\n        >\r\n            {({ selected }) => (\r\n                <div\r\n                    className=\"d-flex align-items-center\"\r\n                    style={{ gap: \"10px\" }}\r\n                >\r\n                    <div\r\n                        className=\"rounded-circle\"\r\n                        style={{\r\n                            width: \"28px\",\r\n                            height: \"28px\",\r\n                            overflow: \"hidden\",\r\n                        }}\r\n                    >\r\n                        <img\r\n                            src={employee?.image_url}\r\n                            alt={employee?.name}\r\n                            width={100}\r\n                            height={100}\r\n                            className=\"rounded-circle\"\r\n                            style={{\r\n                                width: \"100%\",\r\n                                height: \"100%\",\r\n                                objectFit: \"fill\",\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <span\r\n                        className={`block truncate ${\r\n                            selected ? \"font-medium\" : \"font-normal\"\r\n                        }`}\r\n                    >\r\n                        <span className=\"mr-2\">{employee?.name}</span>\r\n                        {data?.status === 400 ? <span className=\"badge badge-danger\">Overloaded</span> : \r\n                        employee?.developer_status === 1 ? (\r\n                            <span className=\"badge badge-warning\">\r\n                                Working...\r\n                            </span>\r\n                        ) : (\r\n                            <span className=\"badge badge-primary\">\r\n                                Open to Work\r\n                            </span>\r\n                        )}\r\n\r\n\r\n                    </span>\r\n                    {selected ? (\r\n                        <span className=\"ml-auto\">\r\n                            <i className=\"fa-solid fa-check\"></i>\r\n                        </span>\r\n                    ) : null}\r\n                </div>\r\n            )}\r\n        </Combobox.Option>\r\n    );\r\n};\r\n","import * as React from 'react';\r\nimport { Listbox } from '@headlessui/react'\r\n\r\n\r\n\r\nconst priority = [\"Emergency\", \"Urgent\", \"Regular\"]\r\n\r\n\r\nconst PrioritySelection = ({selected, setSelected}) => { \r\n    return(\r\n        <Listbox value={selected} onChange={setSelected}>\r\n            <div className=\"form-group position-relative my-3\">\r\n                <label htmlFor=\"\"> Priority <sup>*</sup> </label>\r\n                    <Listbox.Button className=\" sp1-selection-display-button form-control height-35 f-14 sp1-selection-display bg-white w-100\">{selected}\r\n                    \r\n                    <div className='__icon'>\r\n                        <i className=\"fa-solid fa-sort\"></i>\r\n                    </div>\r\n                </Listbox.Button>\r\n                <Listbox.Options  className=\"sp1-select-options\">\r\n                    {priority?.map((s, i) => (\r\n                        <Listbox.Option \r\n                            key={i}\r\n                            className={({ active }) =>  `sp1-select-option ${ active ? 'active' : ''}`}\r\n                            value={s}\r\n                        > {s} </Listbox.Option>\r\n                    ))}\r\n                </Listbox.Options>\r\n            </div>\r\n        </Listbox>\r\n    )\r\n}\r\n\r\nexport default PrioritySelection;","import React, { useState } from \"react\";\r\nimport _ from \"lodash\";\r\nimport Modal from \"../../components/Modal\";\r\nimport { useLocation, useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport Card from \"../../../global/Card\";\r\nimport styles from \"./task-edit-form.module.css\";\r\nimport { CompareDate } from \"../../../utils/dateController\";\r\nimport Input from \"../../components/form/Input\";\r\nimport DatePicker from \"../comments/DatePicker\";\r\nimport CKEditorComponent from \"../../../ckeditor\";\r\nimport Button from '../../../global/Button';\r\nimport TaskCategorySelectionBox from \"./TaskCategorySelectionBox\";\r\nimport AssignedToSelection from \"./AssignedToSelection\";\r\nimport PrioritySelection from \"./PrioritySelection\";\r\nimport UploadFilesInLine from \"../../../file-upload/UploadFilesInLine\";\r\n\r\nimport {\r\n    useDeleteUplaodedFileMutation,\r\n    useGetTaskDetailsQuery,\r\n    useEditSubtaskMutation,\r\n} from \"../../../services/api/SingleTaskPageApi\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useGetMilestoneDetailsQuery } from \"../../../services/api/projectApiSlice\";\r\n\r\nconst dayjs = new CompareDate();\r\n\r\n// Edit form Provider\r\nconst EditFormProvider = ({ task }) => {\r\n    const [searchParams] = useSearchParams(); // get search params\r\n    const isVisible = searchParams.get(\"modal\") === \"edit\"; // check has modal\r\n    const taskId = searchParams.get(\"task\"); // get task id\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    const close = () => navigate(location.pathname, {replace: true});\r\n\r\n\r\n    const [   editSubtask, { isLoading, error } ] = useEditSubtaskMutation();\r\n    // handle submission\r\n    const handleSubmission = (formData) => {\r\n        editSubtask({data: formData, id: task?.id}).unwrap().then(res => {\r\n            toast.success(\"Task Updated successfully!\");\r\n            close();\r\n        }).catch((err) => {\r\n            if(err?.status === 422){\r\n                toast.warn(\"Please fill out all required fields\")\r\n            }\r\n        })\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <Modal isOpen={isVisible}>\r\n            <Card className={styles.form_card}>\r\n                <Card.Head\r\n                  onClose={close}\r\n                  className={styles.form_card_head}\r\n                >\r\n                    <h6> Edit Task # {taskId} </h6>\r\n                </Card.Head>\r\n\r\n                <Card.Body className={styles.form_card_body}>\r\n                    <div className=\"\">\r\n                        {task && (\r\n                            <SubTaskEditModal\r\n                                task={task}\r\n                                onSubmit={handleSubmission}\r\n                                isLoading={isLoading}\r\n                                onClose={close}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default EditFormProvider;\r\n\r\nconst SubTaskEditModal = ({ task, onSubmit, isLoading, onClose}) => {\r\n    const editDataIsFetching = !task;\r\n    //form data\r\n    const [title, setTitle] = useState(task.title);\r\n    const [milestone, setMilestone] = useState({id: task.milestoneID, milestone_title: task.milestoneTitle});\r\n    const [parentTask, setParentTask] = useState(task.parentTaskTitle);\r\n    const [startDate, setStateDate] = useState(new Date(task.startDate));\r\n    const [dueDate, setDueDate] = useState(new Date(task.dueDate));\r\n    const [project, setProject] = useState(task.projectName);\r\n    const [taskCategory, setTaskCategory] = useState({\r\n        id: task.category.id,\r\n        category_name: task.category.name,\r\n    });\r\n    const [assignedTo, setAssignedTo] = useState({\r\n        id: task.assigneeTo.id,\r\n        name: task.assigneeTo.name,\r\n    });\r\n    const [description, setDescription] = useState(task.description);\r\n    const [priority, setPriority] = useState(task.priority);\r\n    const [estimateTimeHour, setEstimateTimeHour] = useState(\r\n        task.estimateHours\r\n    );\r\n    const [estimateTimeMin, setEstimateTimeMin] = useState(\r\n        task.estimateMinutes\r\n    );\r\n    const [attachedFiles, setAttachedFiles] = useState([]);\r\n    const [files, setFiles] = React.useState([]);\r\n    const [error, setError] = useState(null);\r\n\r\n    const { data: estimation, isFetching } = useGetTaskDetailsQuery(\r\n        `/${task.id}/json?mode=estimation_time`\r\n    );\r\n\r\n    const required_error = error?.status === 422 ? error?.data : null;\r\n\r\n    // handle onchange\r\n    const handleChange = (e, setState) => {\r\n        e.preventDefault();\r\n        let value = e.target.value;\r\n        setState(value);\r\n    };\r\n\r\n    // check validation\r\n    const isValid = () => {\r\n      let count = 0;\r\n      const err = new Object();\r\n\r\n      const errorMessages = {\r\n        requiredField: 'This field is required.',\r\n        startDate: 'Please select a start date.',\r\n        dueDate: 'Please select a due date.',\r\n        taskCategory: 'Please select a task category.',\r\n        assignedTo: 'Please select a user.',\r\n        overloadedUser: (name, gender) =>\r\n          `You cannot assign this task to ${name} because ${\r\n            gender === 'male' ? 'he ' : 'she '\r\n          } has more than 10 submittable tasks.`,\r\n        description: 'This field is required.',\r\n      };\r\n\r\n      const showError = (field) => {\r\n        err[field] = errorMessages[field];\r\n        count++;\r\n      }\r\n\r\n\r\n      if(!title) showError('title');\r\n      if(!startDate) showError('startDate');\r\n      if(!dueDate) showError('dueDate');\r\n      if(!taskCategory) showError('taskCategory');\r\n      if(!assignedTo) showError('assignedTo');\r\n\r\n      if (assignedTo && assignedTo?.isOverloaded) {\r\n        err.assignedTo = overloadedUser(assignedTo.name, genderPronoun);\r\n        count++;\r\n      }\r\n\r\n      if(!description) showError('description');\r\n\r\n      setError(error);\r\n      return count === 0;\r\n\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n         //form data\r\n         const _startDate = dayjs.dayjs(startDate).format(\"DD-MM-YYYY\");\r\n         const _dueDate = dayjs.dayjs(dueDate).format(\"DD-MM-YYYY\");\r\n\r\n         const fd = new FormData();\r\n         fd.append(\"milestone_id\", task?.milestoneID);\r\n         fd.append(\"task_id\", task?.parentTaskId);\r\n         fd.append(\"title\", title);\r\n         fd.append(\"start_date\", _startDate);\r\n         fd.append(\"due_date\", _dueDate);\r\n         fd.append(\"project_id\", task?.projectId);\r\n         fd.append(\"task_category_id\", taskCategory?.id);\r\n         fd.append(\"user_id\", assignedTo?.id);\r\n         fd.append(\"description\", description);\r\n         fd.append(\"board_column_id\", task?.boardColumn.id);\r\n         fd.append(\"priority\", _.lowerCase(priority));\r\n         fd.append(\"estimate_hours\", estimateTimeHour);\r\n         fd.append(\"estimate_minutes\", estimateTimeMin);\r\n         fd.append(\"deliverable_id\", milestone?.deliverable_type ?? '');\r\n         fd.append(\"image_url\", null);\r\n         fd.append(\"addedFiles\", null);\r\n         fd.append('subTaskID', task?.subtaskId);\r\n         fd.append(\"_method\", \"PUT\");\r\n         fd.append(\r\n             \"_token\",\r\n             document\r\n                 .querySelector(\"meta[name='csrf-token']\")\r\n                 .getAttribute(\"content\")\r\n         );\r\n         Array.from(files).forEach((file) => {\r\n             fd.append(\"file[]\", file);\r\n         });\r\n\r\n        if(isValid()){\r\n         onSubmit(fd);\r\n        }else{\r\n         toast.warn('Please fill out all required fields!');\r\n        }\r\n\r\n    };\r\n\r\n\r\n      const {data: projects, isFetching: isFetchingMilestone} = useGetMilestoneDetailsQuery(task?.projectId)\r\n\r\n\r\n\r\n    // handle uploaded file delete request\r\n    const [deleteUplaodedFile] = useDeleteUplaodedFileMutation();\r\n    const handleFileDelete = (e, file) => {\r\n        // delete\r\n        deleteUplaodedFile(file?.id).unwrap();\r\n\r\n        // delete form ui\r\n        let previousFile = [...attachedFiles];\r\n        let index = previousFile?.indexOf(file);\r\n        previousFile.splice(index, 1);\r\n        setAttachedFiles(previousFile);\r\n    };\r\n\r\n    // handle loading state\r\n    React.useEffect(() => {\r\n        if (isLoading || editDataIsFetching) {\r\n            document.getElementsByTagName(\"body\")[0].style.cursor = \"progress\";\r\n        } else {\r\n            document.getElementsByTagName(\"body\")[0].style.cursor = \"default\";\r\n        }\r\n    }, [isLoading, editDataIsFetching]);\r\n\r\n    //   editor\r\n    const handleEditorChange = (e, editor) => {\r\n        const data = editor.getData();\r\n        setDescription(data);\r\n    };\r\n\r\n    const estimateError = (err) => {\r\n        let errText = \"\";\r\n        let hoursErr = err?.estimate_hours?.[0];\r\n        let minErr = err?.estimate_minutes?.[0];\r\n        if (hoursErr) errText += hoursErr;\r\n        if (minErr) errText += minErr;\r\n        return errText;\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"sp1-subtask-form --modal-panel-body position-relative\">\r\n                {editDataIsFetching && (\r\n                    <div\r\n                        className=\"w-100\"\r\n                        style={{\r\n                            width: \"100%\",\r\n                            height: \"100%\",\r\n                            position: \"absolute\",\r\n                            top: 0,\r\n                            left: 0,\r\n                            zIndex: 1,\r\n                        }}\r\n                    />\r\n                )}\r\n                <div className=\"sp1-subtask-form --form row\">\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <Input\r\n                            id=\"title\"\r\n                            label=\"Title\"\r\n                            type=\"text\"\r\n                            placeholder=\"Enter a task title\"\r\n                            name=\"title\"\r\n                            required={true}\r\n                            value={title}\r\n                            error={required_error?.title?.[0]}\r\n                            onChange={(e) => handleChange(e, setTitle)}\r\n                        />\r\n                    </div>\r\n\r\n                    {/* project */}\r\n                    {/* <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label\r\n                                className={`f-14 text-dark-gray mb-1`}\r\n                                data-label=\"true\"\r\n                            >\r\n                                Project\r\n                            </label>\r\n                            <input\r\n                                className={`form-control height-35 f-14`}\r\n                                readOnly\r\n                                defaultValue={project}\r\n                            />\r\n                        </div>\r\n                    </div> */}\r\n\r\n\r\n                    {/* Project Milestone Selection Menu */}\r\n                    {/* <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label\r\n                                className={`f-14 text-dark-gray mb-1`}\r\n                                data-label=\"true\"\r\n                            >\r\n                                Milestone\r\n                            </label>\r\n                            <input\r\n                                className={`form-control height-35 f-14`}\r\n                                readOnly\r\n                                defaultValue={milestone?.milestone_title}\r\n                            />\r\n                        </div>\r\n                    </div> */}\r\n\r\n\r\n                    {/* parent task */}\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label\r\n                                className={`f-14 text-dark-gray mb-1`}\r\n                                data-label=\"true\"\r\n                            >\r\n                                Parent Task\r\n                            </label>\r\n                            <input\r\n                                className={`form-control height-35 f-14`}\r\n                                readOnly\r\n                                defaultValue={task?.parentTaskTitle}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\">\r\n                                Start Date <sup className=\"f-14\">*</sup>\r\n                            </label>\r\n                            <div className=\"form-control height-35 f-14\">\r\n                                <DatePicker\r\n                                    placeholderText={`Ex: ${dayjs\r\n                                        .dayjs()\r\n                                        .format(\"DD-MM-YYYY\")}`}\r\n                                    minDate={dayjs\r\n                                        .dayjs(task?.start_date)\r\n                                        .toDate()}\r\n                                    maxDate={\r\n                                        dueDate ||\r\n                                        dayjs.dayjs(task?.due_date).toDate()\r\n                                    }\r\n                                    date={startDate}\r\n                                    setDate={setStateDate}\r\n                                />\r\n                            </div>\r\n                            {required_error?.start_date?.[0] && (\r\n                                <div style={{ color: \"red\" }}>\r\n                                    {required_error?.start_date?.[0]}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\">\r\n                                Due Date <sup className=\"f-14\">*</sup>\r\n                            </label>\r\n                            <div className=\"form-control height-35 f-14\">\r\n                                <DatePicker\r\n                                    placeholderText={`Ex: ${dayjs\r\n                                        .dayjs()\r\n                                        .format(\"DD-MM-YYYY\")}`}\r\n                                    minDate={\r\n                                        startDate ||\r\n                                        dayjs.dayjs(task?.start_date).toDate()\r\n                                    }\r\n                                    maxDate={dayjs\r\n                                        .dayjs(task?.due_date)\r\n                                        .toDate()}\r\n                                    date={dueDate}\r\n                                    setDate={setDueDate}\r\n                                />\r\n                            </div>\r\n                            {required_error?.due_date?.[0] && (\r\n                                <div style={{ color: \"red\" }}>\r\n                                    {required_error?.due_date?.[0]}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <TaskCategorySelectionBox\r\n                            selected={taskCategory}\r\n                            onSelect={setTaskCategory}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <AssignedToSelection\r\n                            selected={assignedTo}\r\n                            onSelect={setAssignedTo}\r\n                        />\r\n                    </div>\r\n                    {/*\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <TaskObserverSelection />\r\n                    </div> */}\r\n\r\n                    {/* <div className=\"col-12 col-md-6\">\r\n                        <StatusSelection />\r\n                    </div> */}\r\n\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <PrioritySelection\r\n                            selected={priority}\r\n                            setSelected={setPriority}\r\n                        />\r\n                    </div>\r\n\r\n                    {/* Set Estimate Time */}\r\n                    {/* <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\" className=\"f-14 text-dark-gray\">\r\n                                Set Estimate Time{\" \"}\r\n                                <sup className=\"f-14\"> * </sup>\r\n                            </label>\r\n                            <div className=\"d-flex align-items-center\">\r\n                                <input\r\n                                    type=\"number\"\r\n                                    onWheel={(e) => e.currentTarget.blur()}\r\n                                    className=\"form-control height-35 f-14 mr-2\"\r\n                                    value={estimateTimeHour}\r\n                                    onChange={(e) =>\r\n                                        handleChange(e, setEstimateTimeHour)\r\n                                    }\r\n                                />{\" \"}\r\n                                hrs\r\n                                <input\r\n                                    type=\"number\"\r\n                                    onWheel={(e) => e.currentTarget.blur()}\r\n                                    className=\"form-control height-35 f-14 mr-2 ml-2\"\r\n                                    value={estimateTimeMin}\r\n                                    onChange={(e) =>\r\n                                        handleChange(e, setEstimateTimeMin)\r\n                                    }\r\n                                />{\" \"}\r\n                                min\r\n                            </div>\r\n\r\n                            <div style={{ color: \"red\" }}>\r\n                                {estimateError(required_error)}\r\n                            </div>\r\n                            <div style={{ color: \"red\" }}>\r\n                                Estimation time can't exceed{\" \"}\r\n                                {estimation?.hours_left} hours{\" \"}\r\n                                {estimation?.minutes_left} minutes\r\n                            </div>\r\n                        </div>\r\n                    </div> */}\r\n\r\n                    <div className=\"col-12\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\"> Description </label>\r\n                            <div\r\n                                className=\"sp1_st_write_comment_editor\"\r\n                                style={{ minHeight: \"100px\" }}\r\n                            >\r\n                                <CKEditorComponent\r\n                                    data={description}\r\n                                    onChange={handleEditorChange}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12\">\r\n                        <UploadFilesInLine\r\n                            onPreviousFileDelete={handleFileDelete}\r\n                            previous={attachedFiles}\r\n                            files={files}\r\n                            setFiles={setFiles}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-12 mt-3 mb-5\">\r\n                        <div className=\"d-flex align-items-center justify-content-end\">\r\n                            <Button\r\n                                variant=\"secondary\"\r\n                                className=\"mr-2\"\r\n                                onClick={onClose}\r\n                            >\r\n                                Cancel\r\n                            </Button>\r\n\r\n\r\n                            <Button\r\n                              onClick={handleSubmit}\r\n                              isLoading={isLoading}\r\n                            >\r\n                                <i className=\"fa-regular fa-paper-plane\"></i>\r\n                                Update\r\n                            </Button>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n","import React from \"react\"; \r\nimport { User } from \"../../../../utils/user-details\"; \r\nimport Accordion from \"../../../components/Accordion\";\r\nimport Guideline from \"../../../components/Guideline\";\r\nimport RevisionText from \"../../../components/RevisionText\";\r\nimport GenarelLoader from \"../../../components/loader/GenarelLoader\";\r\nimport ArticleLoader from \"../../../components/loader/ArticleLoader\";\r\nimport dayjs from \"dayjs\";\r\nimport { Placeholder } from \"../../../../global/Placeholder\";\r\n\r\nconst Genarel = ({task, isFetching}) => { \r\n    const loggedUser = new User(window?.Laravel?.user);\r\n\r\n    \r\n    return (\r\n        <div className=\"row\">\r\n            {isFetching ? <GenarelLoader /> : \r\n                <React.Fragment>\r\n                    <div className=\"col-12 col-xl-6 pb-3 pb-xl-0\">\r\n                        <div className=\"d-flex flex-column\" style={{ gap: \"10px\" }}>\r\n                            <h6 className=\"\">\r\n                                Task: <a target=\"__blank\" href={`/account/tasks/${task?.id}`} className=\"text-primary font-weight-normal\">\r\n                                    {task?.getSubtaskTitle()}\r\n                                </a>\r\n                            </h6>\r\n                            {\r\n                                task?.isSubtask && (\r\n                                    <div className=\"sp1_st-list-item\">\r\n                                        <div className=\"sp1_st-list-item-head\">\r\n                                            Parent Task :\r\n                                        </div>\r\n                                        <div className=\"sp1_st-list-item-value\">\r\n                                            <a href={`/account/tasks/${task?.parentTaskId}`} className=\"text-dark text-hover-underline\">\r\n                                                {task?.parentTaskTitle}\r\n                                            </a>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            }\r\n\r\n                            {/* project name */}\r\n                            {/* <div className=\"sp1_st-list-item\">\r\n                                <div className=\"sp1_st-list-item-head\">Project : </div>\r\n                                <div className=\"sp1_st-list-item-value\">\r\n                                    <span className=\"dot-color bg-danger mr-2\" />\r\n                                    <a href={`/account/projects/${task?.projectId}`} className=\"text-dark text-hover-underline\"> \r\n                                        {task?.projectName} \r\n                                    </a>\r\n                                </div>\r\n                            </div> */}\r\n\r\n                            {/* milestone */}\r\n                            {/* <div className=\"sp1_st-list-item\">\r\n                                <div className=\"sp1_st-list-item-head\">\r\n                                    Milestone :{\" \"}\r\n                                </div>\r\n                                <div className=\"sp1_st-list-item-value\">\r\n                                    <span className=\"dot-color bg-primary mr-2\" />\r\n                                    {task?.milestoneTitle}\r\n                                </div>\r\n                            </div> */}\r\n\r\n                            {/* asignee to */}\r\n                            <div className=\"sp1_st-list-item\">\r\n                                <div className=\"sp1_st-list-item-head\">\r\n                                    Assigned To :{\" \"}\r\n                                </div>\r\n                                <div className=\"sp1_st-list-item-value\">\r\n                                    <div style={{ width: \"32px\", height: \"32px\" }}>\r\n                                        <img\r\n                                            src={task?.assigneeTo?.getAvatar()}\r\n                                            alt={task?.assigneeTo?.getName()}\r\n                                            width=\"32px\"\r\n                                            height=\"32px\"\r\n                                            className=\"rounded-circle\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"ml-2\">\r\n                                        <span\r\n                                            className={`d-block f-14 font-weight-bold`}\r\n                                        >\r\n                                            <a href={task?.assigneeTo?.getUserLink()} className=\"text-dark hover-underline\">{task?.assigneeTo?.getName()}</a> \r\n                                            {Number(task?.assigneeTo?.getId()) ===\r\n                                                Number(loggedUser?.getId()) && (\r\n                                                <sup\r\n                                                    className=\"rounded-pill bg-dark text-white px-1\"\r\n                                                    style={{ fontSize: \"10px\" }}\r\n                                                >\r\n                                                    {\" \"}\r\n                                                    It's You{\" \"}\r\n                                                </sup>\r\n                                            )}\r\n                                        </span>\r\n\r\n                                        <span style={{ fontSize: \"12px\" }}>\r\n                                            {task?.assigneeTo?.getDesignationName()}\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* assignee by */}\r\n                            <div className=\"sp1_st-list-item\">\r\n                                <div className=\"sp1_st-list-item-head\">\r\n                                    Assigned by:{\" \"}\r\n                                </div>\r\n                                <div className=\"sp1_st-list-item-value\">\r\n                                    <div style={{ width: \"32px\", height: \"32px\" }}>\r\n                                        <img\r\n                                            src={task?.assigneeBy?.getAvatar()}\r\n                                            alt={task?.assigneeBy?.getName()}\r\n                                            width=\"32px\"\r\n                                            height=\"32px\"\r\n                                            className=\"rounded-circle\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"ml-2\">\r\n                                        <span\r\n                                            className={`d-block f-14 font-weight-bold`}\r\n                                        >\r\n                                            <a \r\n                                                href={task?.assigneeBy?.getUserLink()}\r\n                                                className=\"text-dark hover-underline\"\r\n                                            >\r\n                                                {task?.assigneeBy?.getName()}\r\n                                            </a>\r\n                                            {Number(task?.assigneeBy?.getId()) ===\r\n                                                Number(loggedUser?.getId()) && (\r\n                                                <sup\r\n                                                    className=\"rounded-pill bg-dark text-white px-1\"\r\n                                                    style={{ fontSize: \"10px\" }}\r\n                                                >\r\n                                                    It's You\r\n                                                </sup>\r\n                                            )}\r\n                                        </span>\r\n\r\n                                        <span style={{ fontSize: \"12px\" }}>\r\n                                            {task?.assigneeBy?.getDesignationName()}\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* PRIORITY */}\r\n\r\n                            <div className=\"sp1_st-list-item\">\r\n                                <div className=\"sp1_st-list-item-head\">Priority : </div>\r\n                                <div className=\"sp1_st-list-item-value\">\r\n                                    <span\r\n                                        className=\"dot-color mr-2\"\r\n                                        style={{ background: \"rgba(252, 189, 1, 1)\" }}\r\n                                    />\r\n                                    {task?.priority}\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* category */}\r\n                            <div className=\"sp1_st-list-item\">\r\n                                <div className=\"sp1_st-list-item-head\">\r\n                                    Task Category :{\" \"}\r\n                                </div>\r\n                                <div className=\"sp1_st-list-item-value\">\r\n                                    {task?.category?.name}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </React.Fragment>\r\n            }\r\n\r\n            <div\r\n                className=\"col-12 col-xl-6 d-flex flex-column py-3 px-3\"\r\n                style={{ gap: \"10px\", background: \"#F0F2F6\" }}\r\n            >\r\n                <div className=\"font-weight-bold d-block\"> Status: </div>\r\n\r\n                {\r\n                    isFetching ?\r\n                    <Placeholder width=\"80px\" />:\r\n                    <div\r\n                    className=\"d-flex align-items-center\"\r\n                    style={{ gap: \"6px\" }}\r\n                >\r\n                    <span\r\n                        className=\"dot-color mr-2\"\r\n                        style={{ background: task?.boardColumn?.labelColor }}\r\n                    />\r\n                    <span className=\"font-weight-bold\">{task?.boardColumn.columnName}</span>\r\n                </div>\r\n                }\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-6 col-sm-5 col-md-3 col-xl-6\">\r\n                        Start Date{\" \"}\r\n                    </div>\r\n                    <div className=\"col-6 col-sm-7 col-md-9 col-xl-6\">\r\n                        : {isFetching ?\r\n                    <Placeholder width=\"80px\" />:\r\n                    task?.getStartDate(\"MMM DD, YYYY\")}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-6 col-sm-5 col-md-3 col-xl-6\">\r\n                        Due Date{\" \"}\r\n                    </div>\r\n                    <div className=\"col-6 col-sm-7 col-md-9 col-xl-6\">\r\n                        : {isFetching ?\r\n                    <Placeholder width=\"80px\" />:\r\n                    task?.getDueDate(\"MMM DD, YYYY\")}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Time Estimate */}\r\n                {/* <div className=\"row\">\r\n                    <div className=\"col-6 col-sm-5 col-md-3 col-xl-6\">\r\n                        Time Estimate{\" \"}\r\n                    </div>\r\n                    <div className=\"col-6 col-sm-7 col-md-9 col-xl-6\">\r\n                        : {task?.getEstimateTime()}\r\n                    </div>\r\n                </div> */}\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-6 col-sm-5 col-md-3 col-xl-6\">\r\n                    Total Hours Logged{\" \"}\r\n                    </div>\r\n                    <div className=\"col-6 col-sm-7 col-md-9 col-xl-6\">\r\n                        : {isFetching ?\r\n                    <Placeholder width=\"80px\" />:\r\n                    task?.parentTaskTimeLog || \"--\"}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* <div className=\"row\">\r\n                    <div className=\"col-6 col-sm-5 col-md-3 col-xl-6\">\r\n                        Parent Task Hours Logged{\" \"}\r\n                    </div>\r\n                    <div className=\"col-6 col-sm-7 col-md-9 col-xl-6\">\r\n                        : {task?.parentTaskTimeLog || \"--\"}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-6 col-sm-5 col-md-3 col-xl-6\">\r\n                        Subtask Hours Logged:{\" \"}\r\n                    </div>\r\n                    <div className=\"col-6 col-sm-7 col-md-9 col-xl-6\">\r\n                        : {task?.subTaskTimeLog || \"--\"}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-6 col-sm-5 col-md-3 col-xl-6\">\r\n                        Total Hours Logged{\" \"}\r\n                    </div>\r\n                    <div className=\"col-6 col-sm-7 col-md-9 col-xl-6\">\r\n                        : {task?.totalTimeLog || \"--\"}\r\n                    </div>\r\n                </div> */}\r\n            </div>\r\n\r\n            <div className=\"col-12 border-top py-4 mt-4\">\r\n                {/* <Accordion expendable={false} title=\"General Guidelines\">\r\n                    {\r\n                        isFetching ? \r\n                        <ArticleLoader /> :\r\n                        <Guideline text={task?.guidelines} editorContainerClass=\"modal-guideline-editor-text\" />\r\n                    }\r\n                </Accordion> */}\r\n\r\n                {_.size(task?.revisions) > 0 &&\r\n                    <Accordion\r\n                        title={_.last(task?.revisions)?.revisionStatus}\r\n                        headingClass=\"d-flex align-items-center justify-content-between\"\r\n                        headingStyle={{\r\n                            background: \"rgba(227,62,79,1)\",\r\n                            color: \"#fff\",\r\n                        }}\r\n                    >\r\n\r\n                        {_.map(task?.revisions, (revision, index) => (\r\n                                <RevisionText\r\n                                    key={revision.id}\r\n                                    index={index + 1}\r\n                                    date={dayjs(revision.createdAt).format('MMM DD, YYYY')}\r\n                                    time={dayjs(revision.createdAt).format('hh:mm a')}\r\n                                    text={revision?.comment}\r\n                                />\r\n                            ))\r\n                        }\r\n                        \r\n                    </Accordion>\r\n                }\r\n\r\n                <Accordion expendable={false} title=\"Task Descriptions\">\r\n                    <Guideline text={task?.description} />\r\n                </Accordion>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Genarel;\r\n","import React, { Suspense, lazy } from 'react'\r\nimport Loader from '../../../components/Loader'\r\nconst SubmittedWorkItem = lazy(() => import('./SubmittedWorkItem'))\r\n\r\nconst SubmittedWork = ({task, submittedWork, loading}) => { \r\n  return (\r\n    <React.Fragment>\r\n        <h6 className='font-weight-bold'>Submitted Work</h6>\r\n        <div className='d-flex flex-column h-100' style={{gap:'10px'}}>\r\n\r\n            {loading && <div className='mt-3'><Loader /></div>}  \r\n            {submittedWork.length > 0 ? submittedWork.map((s) => (\r\n                <React.Fragment key={s?.task_id}>\r\n                    <Suspense fallback={<div className='mt-3'><Loader /></div>}>\r\n                        <SubmittedWorkItem data={s} task={task} />\r\n                    </Suspense>\r\n                </React.Fragment> \r\n            )): null}\r\n        </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default SubmittedWork","import React from \"react\";\r\nimport { TimeLog } from \"../../../../utils/single-task\"; \r\nimport Loader from \"../../../components/Loader\"; \r\n\r\nconst TimeLogContainer = ({ task, timeLog, isLoading }) => {\r\n\r\n    \r\n    return (\r\n        <div className=\"sp1_modal_timelog_view\">\r\n            <div><h6> Session Logs </h6> </div>\r\n            <div>\r\n                <table className=\"sp1_subtask_log-tbl\">\r\n                        <thead className=\"__thead\">\r\n                            <tr>\r\n                                <th>Employee</th>\r\n                                <th>Start Time</th>\r\n                                <th>End Time</th>\r\n                                <th>Memo</th>\r\n                                <th>Hours Logged</th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                </table>\r\n                <div className=\"sp1_modal_timelog_view-tbl-contanier\">  \r\n                    <table className=\"sp1_subtask_log-tbl\"> \r\n                        <tbody className=\"__tbody\"> \r\n                            {timeLog\r\n                                ? timeLog.map((log) => (\r\n                                    <TableRow key={log.id} log={log} />\r\n                                ))\r\n                                : null}\r\n\r\n                            {isLoading && <tr><td className=\"py-2 text-center\" colSpan={5}><Loader /></td></tr>}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TimeLogContainer;\r\n\r\nconst TableRow = ({ log }) => {\r\n    const timeLog = new TimeLog(log);\r\n    const user = timeLog?.user;\r\n\r\n\r\n    return (\r\n        <tr className=\"__tbody_tr\">\r\n            <td className=\"__tbody_td _tbody_td_employee\">\r\n                <img src={user?.getAvatar()} alt={user?.getName()} />\r\n                <span className=\"px-2\">{user?.getName()}</span>\r\n            </td> \r\n            <td className='__tbody_td _tbody_td_start_time'>\r\n                {timeLog?.getStartTime()} <br/>\r\n                {timeLog?.getStartTime('hh:mm a')}\r\n            </td>\r\n            \r\n            <td className='__tbody_td _tbody_td_start_time _tbody_td_start_end'>\r\n                {!timeLog?.endTime ? <span className=\"text-success font-weight-bold\">Active</span> :\r\n                    <>\r\n                        {timeLog?.getEndTime()} <br/>\r\n                        {timeLog?.getEndTime('hh:mm a')}\r\n                    </>\r\n                }\r\n\r\n            </td> \r\n            <td className=\"__tbody_td _tbody_td_memo\">{timeLog?.memo}</td> \r\n            <td className=\"__tbody_td _tbody_td_hour_logged\">{timeLog?.hoursLogged}</td>\r\n        </tr>\r\n    );\r\n};\r\n","import React from 'react'\r\nimport Rating from '../../../../global/Rating';\r\nimport Loader from '../../../components/Loader';\r\n\r\nconst TaskReview = ({review, isLoading}) => {\r\n    const data = review; \r\n    let comment = data?.comment || `<span className='' style=\"color: #A7A9B2\">No Comment is Available</span>`;\r\n   \r\n    return (\r\n        <div className=\"sp1_task_right_card mb-3\" style={{maxHeight:'450px'}}>  \r\n          {/* side drop toggle button end */}\r\n          <div className=\"d-flex border-bottom pb-2 align-items-center justify-content-between mb-2 font-weight-bold\">\r\n              <span className=\"f-16\">Task Review</span> \r\n          </div> \r\n\r\n          {isLoading ? <Loader/> : <React.Fragment>\r\n            \r\n            <div className=\"d-flex align-items-center mb-2\">\r\n                <div className=\"\" style={{width: '150px'}}>Deadline Meet : </div>\r\n                <div className=\"d-flex align-items-center\">\r\n                    <Rating rating={Number(data?.deadline_meet)} />\r\n                </div>\r\n            </div> \r\n    \r\n            <div className=\"d-flex align-items-center mb-2\">\r\n                <div className=\"\" style={{width: '150px'}}>Submission Quality: </div>\r\n                <div className=\"d-flex align-items-center\">  \r\n                    <Rating rating={Number(data?.submission_quality)} />\r\n                </div>\r\n            </div> \r\n    \r\n            <div className=\"d-flex align-items-center mb-2\">\r\n                <div className=\"\" style={{width: '150px'}}>Req. Fullfillment: </div>\r\n                <div className=\"d-flex align-items-center\"> \r\n                <Rating rating={Number(data?.req_fullfillment)} />\r\n                </div>\r\n            </div> \r\n    \r\n            <div className=\"d-flex align-items-center mb-2\">\r\n                <div className=\"\" style={{width: '150px'}}>Overall Task Ratings: </div>\r\n                <div className=\"d-flex align-items-center\"> \r\n                    <Rating rating={Number(data?.overall_tasks)} /> \r\n                </div>\r\n            </div> \r\n    \r\n            <div className=\"mb-2\">\r\n                <span className=\"font-weight-bold d-block mb-1\">Comments:</span>\r\n                <div style={{color:'#777', fontSize: '13px'}}>\r\n                    <div className='sp1_ck_content' dangerouslySetInnerHTML={{__html: comment}}></div>\r\n                </div>\r\n            </div> \r\n            </React.Fragment>} \r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskReview","import React from \"react\";\r\nimport ContentLoader from \"react-content-loader\";\r\n\r\nconst HistoryLoader = (props) => (\r\n    <ContentLoader\r\n        speed={2}\r\n        width={450}\r\n        height={45}\r\n        viewBox=\"0 0 450 45\"\r\n        backgroundColor=\"#f3f3f3\"\r\n        foregroundColor=\"#ecebeb\"\r\n        {...props}\r\n    >\r\n        <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"46\" height=\"48\" />\r\n        <rect x=\"62\" y=\"29\" rx=\"0\" ry=\"0\" width=\"227\" height=\"12\" />\r\n        <rect x=\"60\" y=\"5\" rx=\"0\" ry=\"0\" width=\"344\" height=\"12\" />\r\n    </ContentLoader>\r\n);\r\n\r\nexport default HistoryLoader;\r\n","import React, {lazy, Suspense} from 'react'\r\nimport Loader from '../../../components/Loader' \r\nimport HistoryLoader from '../../../components/HistoryLoader';\r\nconst InnerHistoryItem = lazy(()=> import('../../history/InnerHistoryItem'));\r\n\r\nconst History = ({histories, isLoading}) => { \r\n  return (\r\n    <React.Fragment>\r\n        <h6 className='font-weight-bold'> Histories </h6> \r\n        <div className='mt-3 px-2'>  \r\n          {histories.length > 0 ? histories.map(d => (\r\n             <React.Fragment key={d.id}>\r\n               <Suspense fallback={<HistoryLoader />}>\r\n                  <InnerHistoryItem history={d} />\r\n              </Suspense>\r\n             </React.Fragment> \r\n          )):null} \r\n          {isLoading && <Loader />}\r\n        </div> \r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default History\r\n\r\n\r\n\r\n// history loader","import * as React from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport Genarel from \"./preview/Genarel\";\r\nimport { SingleTask } from \"../../../utils/single-task\";\r\nimport {\r\n    useGetTaskDetailsQuery,\r\n    useLazyGetSubmittedTaskQuery,\r\n    useLazyGetTaskDetailsQuery,\r\n} from \"../../../services/api/SingleTaskPageApi\";\r\nimport SubmittedWork from \"./preview/SubmittedWork\";\r\nimport TimeLog from \"./preview/TimeLog\";\r\nimport TaskReview from \"./preview/TaskReview\";\r\nimport History from \"./preview/History\";\r\nimport Comments from \"./preview/Comments\";\r\nimport _ from \"lodash\";\r\nimport { useSingleTask } from \"../../../hooks/useSingleTask\";\r\nimport CommentsBody from \"../../../UI/comments/CommentsBody\";\r\nimport { useGetCommentsQuery } from \"../../../services/api/commentsApiSlice\";\r\n\r\nconst PreviewSubtask = ({ parentTask, subTask }) => {\r\n    const [task, setTask] = React.useState(null);\r\n    const taskID = subTask?.id;\r\n    const [submittedWork, setSubmittedWork] = React.useState([]);\r\n    const [timeLog, setTimeLog] = React.useState([]);\r\n    const [review, setReview] = React.useState(null);\r\n    const [histories, setHistories] = React.useState([]);\r\n    const [comments, setComments] = React.useState([]);\r\n    const [isCommentShow, setIsCommentShow] = React.useState(false);\r\n\r\n    const {\r\n        getTaskById,\r\n        getSubmittionInfo,\r\n        taskDetailsIsFetching,\r\n        submittionInfoIsFetching,\r\n    } = useSingleTask();\r\n\r\n    const [getTaskDetails, { isFetching: detailFetchingStateLoading }] =\r\n        useLazyGetTaskDetailsQuery();\r\n\r\n    const {\r\n        data: subTaskComments,\r\n        isFetching: commentsFetching,\r\n        isLoading: commentsLoading,\r\n        refetch: commentsRefetch,\r\n    } = useGetCommentsQuery(subTask?.id);\r\n\r\n    // fetch task details\r\n    React.useEffect(() => {\r\n        (async () => {\r\n            let task = await getTaskById(taskID);\r\n            task = new SingleTask(task);\r\n            setTask(task);\r\n        })();\r\n    }, []);\r\n\r\n    //   fetch submitted rtk api\r\n    const fetchData = (url, cb) => {\r\n        getTaskDetails(`/${task?.id}/json?mode=${url}`)\r\n            .unwrap()\r\n            .then((res) => {\r\n                let d = _.orderBy(res, \"id\", \"desc\");\r\n                cb(d);\r\n            })\r\n            .catch((err) => console.error(err));\r\n    };\r\n\r\n    // fetch submitted works when submitted tab clieked\r\n    const fetchSubmittedWork = async (e) => {\r\n        e.preventDefault();\r\n        if (submittedWork.length === 0) {\r\n            const data = await getSubmittionInfo(taskID);\r\n            console.log({ data });\r\n            setSubmittedWork([...data]);\r\n        }\r\n    };\r\n\r\n    // fetch timelog data on tab click\r\n    const fetchTimeLogData = (e) => {\r\n        e.preventDefault();\r\n        if (timeLog.length === 0) {\r\n            fetchData(\"task_time_log\", setTimeLog);\r\n        }\r\n    };\r\n\r\n    // fetch review\r\n    const fetchReviewData = (e) => {\r\n        e.preventDefault();\r\n        fetchData(\"task_approve\", setReview);\r\n    };\r\n\r\n    // fetch histories\r\n    const fetchHistories = (e) => {\r\n        e.preventDefault();\r\n        fetchData(\"task_history\", setHistories);\r\n    };\r\n\r\n    // fetch comments\r\n    const fetchComments = (e) => {\r\n        e.preventDefault();\r\n        fetchData(\"task_comment\", setComments);\r\n    };\r\n\r\n    // on comment post\r\n    const onCommentPost = (comment) => {\r\n        const _comments = [...comments];\r\n        _comments.unshift(comment);\r\n        setComments(_comments);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {/* tab */}\r\n            <div\r\n                className=\"nav flex-column nav-pills sp1-subtask-modal-sidebar\"\r\n                id=\"v-pills-tab\"\r\n                role=\"tablist\"\r\n                aria-orientation=\"vertical\"\r\n            >\r\n                <a\r\n                    className=\"nav-link active\"\r\n                    id=\"v-pills-general-tab\"\r\n                    data-toggle=\"pill\"\r\n                    href=\"#v-pills-home\"\r\n                    role=\"tab\"\r\n                    aria-controls=\"v-pills-home\"\r\n                    aria-selected=\"true\"\r\n                    onClick={() => setIsCommentShow(false)}\r\n                >\r\n                    General\r\n                </a>\r\n                <a\r\n                    className=\"nav-link\"\r\n                    id=\"v-pills-submitted-work-tab\"\r\n                    data-toggle=\"pill\"\r\n                    href=\"#v-pills-submitted-work\"\r\n                    role=\"tab\"\r\n                    aria-controls=\"v-pills-submitted-work\"\r\n                    aria-selected=\"false\"\r\n                    onClick={(e) => {\r\n                        fetchSubmittedWork(e);\r\n                        setIsCommentShow(false);\r\n                    }}\r\n                >\r\n                    Submitted Works\r\n                </a>\r\n                <a\r\n                    className=\"nav-link\"\r\n                    id=\"v-pills-comments-tab\"\r\n                    data-toggle=\"pill\"\r\n                    href=\"#v-pills-comments\"\r\n                    role=\"tab\"\r\n                    aria-controls=\"v-pills-comments\"\r\n                    aria-selected=\"false\"\r\n                    onClick={(e) => {\r\n                        commentsRefetch(e);\r\n                        setIsCommentShow(true);\r\n                    }}\r\n                >\r\n                    Comment\r\n                </a>\r\n                <a\r\n                    className=\"nav-link\"\r\n                    id=\"v-pills-time-log-work-tab\"\r\n                    data-toggle=\"pill\"\r\n                    href=\"#v-pills-time-log-work\"\r\n                    role=\"tab\"\r\n                    aria-controls=\"v-pills-time-log-work\"\r\n                    aria-selected=\"false\"\r\n                    onClick={(e) => {\r\n                        fetchTimeLogData(e);\r\n                        setIsCommentShow(false);\r\n                    }}\r\n                >\r\n                    Time Logs\r\n                </a>\r\n                <a\r\n                    className=\"nav-link\"\r\n                    id=\"v-pills-history-tab\"\r\n                    data-toggle=\"pill\"\r\n                    href=\"#v-pills-history\"\r\n                    role=\"tab\"\r\n                    aria-controls=\"v-pills-history\"\r\n                    aria-selected=\"false\"\r\n                    onClick={(e) => {\r\n                        fetchHistories(e);\r\n                        setIsCommentShow(false);\r\n                    }}\r\n                >\r\n                    History\r\n                </a>\r\n                <a\r\n                    className=\"nav-link\"\r\n                    id=\"v-pills-task-review-work-tab\"\r\n                    data-toggle=\"pill\"\r\n                    href=\"#v-pills-task-review-work\"\r\n                    role=\"tab\"\r\n                    aria-controls=\"v-pills-task-review-work\"\r\n                    aria-selected=\"false\"\r\n                    onClick={(e) => {\r\n                        fetchReviewData(e);\r\n                        setIsCommentShow(false);\r\n                    }}\r\n                >\r\n                    Task Review\r\n                </a>\r\n            </div>\r\n\r\n            <div\r\n                className={`tab-content ${\r\n                    isCommentShow ? \"p-0\" : \"p-3\"\r\n                } sp1-subtask-modal-tab-content`}\r\n                id=\"v-pills-tabContent\"\r\n            >\r\n                <div\r\n                    className=\"tab-pane fade show active sp1_st_tab_panel\"\r\n                    id=\"v-pills-home\"\r\n                    role=\"tabpanel\"\r\n                    aria-labelledby=\"v-pills-general-tab\"\r\n                >\r\n                    <div className=\"mr-3\">\r\n                        <Genarel\r\n                            isFetching={taskDetailsIsFetching}\r\n                            taskID={taskID}\r\n                            task={task}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div\r\n                    className=\"tab-pane fade\"\r\n                    id=\"v-pills-submitted-work\"\r\n                    role=\"tabpanel\"\r\n                    aria-labelledby=\"v-pills-submitted-work-tab\"\r\n                >\r\n                    <div className=\"mr-3\">\r\n                        <SubmittedWork\r\n                            task={task}\r\n                            submittedWork={submittedWork}\r\n                            loading={submittionInfoIsFetching}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div\r\n                    className=\"tab-pane fade\"\r\n                    id=\"v-pills-comments\"\r\n                    role=\"tabpanel\"\r\n                    aria-labelledby=\"v-pills-comments-tab\"\r\n                >\r\n                    {/* <Comments\r\n                        task={task}\r\n                        comments={comments}\r\n                        onCommentPost={onCommentPost}\r\n                        isLoading={detailFetchingStateLoading}\r\n                    /> */}\r\n                    <CommentsBody\r\n                        close={() => {}}\r\n                        comments={subTaskComments}\r\n                        loading={commentsLoading}\r\n                        onSubmit={() => {}}\r\n                        isOpen={true}\r\n                        fullScreenView={false}\r\n                        setFullScreenView={() => {}}\r\n                        height={\"741px\"}\r\n                        fetching={commentsFetching}\r\n                        refetch={commentsRefetch}\r\n                        showFullScreenBtn={false}\r\n                        taskId={subTask?.id}\r\n                        showCloseBtn={false}\r\n                    />\r\n                </div>\r\n\r\n                <div\r\n                    className=\"tab-pane fade\"\r\n                    id=\"v-pills-time-log-work\"\r\n                    role=\"tabpanel\"\r\n                    aria-labelledby=\"v-pills-time-log-work-tab\"\r\n                >\r\n                    <div className=\"mr-3\">\r\n                        <TimeLog\r\n                            task={task}\r\n                            timeLog={timeLog}\r\n                            isLoading={detailFetchingStateLoading}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div\r\n                    className=\"tab-pane fade\"\r\n                    id=\"v-pills-history\"\r\n                    role=\"tabpanel\"\r\n                    aria-labelledby=\"v-pills-history-tab\"\r\n                >\r\n                    <div className=\"mr-3\">\r\n                        <History\r\n                            histories={histories}\r\n                            isLoading={detailFetchingStateLoading}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div\r\n                    className=\"tab-pane fade\"\r\n                    id=\"v-pills-task-review-work\"\r\n                    role=\"tabpanel\"\r\n                    aria-labelledby=\"v-pills-task-review-work-tab\"\r\n                >\r\n                    <TaskReview\r\n                        review={review}\r\n                        isLoading={detailFetchingStateLoading}\r\n                    />\r\n                </div>\r\n            </div>\r\n            {/* end tab */}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default PreviewSubtask;\r\n","import { Rating } from '@smastrom/react-rating';\r\nimport '@smastrom/react-rating/style.css';\r\nimport dayjs from 'dayjs';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { HiOutlineSelector } from 'react-icons/hi';\r\nimport { useDispatch } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport CKEditorComponent from '../../../../ckeditor/index';\r\nimport FileUploader from '../../../../file-upload/FileUploader';\r\nimport { Placeholder } from '../../../../global/Placeholder';\r\nimport { useSingleTask } from '../../../../hooks/useSingleTask';\r\nimport { useApproveSubmittedTaskMutation, useGetSubmittedTaskQuery } from '../../../../services/api/SingleTaskPageApi';\r\nimport Button from '../../../components/Button';\r\nimport Modal from '../../../components/Modal';\r\nimport SubmitButton from '../../../components/SubmitButton';\r\n\r\nconst ApproveTask = ({task, status, auth}) => {\r\n  const dispatch = useDispatch();\r\n  const [showApproveForm, setShowApproveForm] = useState(false);\r\n  const [completedWithInDeadline, setCompletedWithInDeadline] = useState(1);\r\n  const [submittedStar, setSubmittedStar] = useState(1);\r\n  const [fullfilledStar, setFullfilledStar] = useState(1);\r\n  const [comment, setComment] = useState('');\r\n\r\n  const [oldSubmittion, setOldSubmittion] = useState([]);\r\n  const [latestSubmittion, setLatestSubmittion] = useState({});\r\n\r\n  const [approveSubmittedTask, {isLoading}] = useApproveSubmittedTaskMutation();\r\n  const { data: getSubmittedTask, isFetching  } = useGetSubmittedTaskQuery(task?.id);\r\n\r\n  const { approveTask,  approveTaskLoadingStatus } = useSingleTask();\r\n\r\n  const [err, setErr] = useState(null);\r\n\r\n \r\n useEffect(() => {\r\n    if(getSubmittedTask){\r\n        const data = _.sortBy(getSubmittedTask, ['submission_no']);\r\n        const latest = _.last(data);\r\n        const old = _.initial(data);\r\n        setOldSubmittion([...old]);\r\n        setLatestSubmittion(latest);\r\n    }\r\n }, [isFetching]);\r\n\r\n  const close = (e) => {\r\n    e.preventDefault();\r\n    setShowApproveForm(false)\r\n  }\r\n\r\n  // editor data \r\n  const onWriteOnEditor = (e, editor) => {\r\n    const data = editor.getData();\r\n    setComment(data);\r\n  }\r\n\r\n\r\n  const isValid = () =>{\r\n    let count = 0;\r\n    const error = new Object();\r\n\r\n    if(!comment){\r\n        error.comment = \"Please add a comment!\"\r\n        count ++;\r\n    }\r\n\r\n    setErr(error);\r\n    return !count;\r\n  }\r\n\r\n  // submit \r\n  const handleOnSubmit = async (e) =>{\r\n    e.preventDefault();\r\n    const data = {\r\n        rating: completedWithInDeadline,\r\n        rating2: submittedStar,\r\n        rating3: fullfilledStar,\r\n        comment,\r\n        task_id: task?.id,\r\n        user_id: auth?.getId()\r\n    }   \r\n\r\n    if(isValid()){ \r\n        const cb = () => setShowApproveForm(false);\r\n        await approveTask(data, cb ); \r\n    }else{\r\n        toast.warn(\"Please add a comment!\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <Button\r\n            variant='success'\r\n            onClick={() => setShowApproveForm(true)}\r\n            className='d-flex align-items-center border-success'\r\n        >\r\n            <i className=\"fa-solid fa-handshake-angle\"></i>\r\n            <span className=\"d-inline ml-1\">Approve</span>\r\n        </Button>\r\n\r\n        <Modal isOpen={showApproveForm} className=\"sp1_single_task--modal w-100\">\r\n            <div className=\"sp1_single_task--modal-panerl-wrapper w-100\">\r\n                <div\r\n                    className=\"sp1_single_task--modal-panel w-100\"\r\n                    style={{ maxWidth: '600px', minWidth: '320px' }}\r\n                >\r\n                    <div className=\"border-bottom pb-2 pl-3 pr-2 mb-3 d-flex align-items-center justify-content-between\">\r\n                        <div className=\"font-weight-bold f-16\"> Approve Task </div>\r\n                        <Button onClick={close} className=\"\">\r\n                            <i className=\"fa-solid fa-xmark\" />\r\n                        </Button>\r\n                    </div>\r\n\r\n                    <div className=\"px-3\">\r\n                         { _.size(oldSubmittion) > 0 &&\r\n                            <div className='mb-3'>\r\n                                <div className=\"sp1_st--approve-card\"> \r\n                                    <div className=\"sp1_st--approve-card-header\" data-toggle=\"collapse\" href=\"#oldSubmittedSuccess\" role=\"button\"   aria-expanded=\"false\" aria-controls=\"oldSubmittedSuccess\">\r\n                                        Old Submitted Works ({_.size(oldSubmittion)})\r\n                                        <button>\r\n                                            <HiOutlineSelector />\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"collapse multi-collapse shadow-none\" id=\"oldSubmittedSuccess\">\r\n                                    <div className=\"card card-body\">\r\n                                        {\r\n                                            _.size(oldSubmittion) > 0 ?\r\n                                            _.map(oldSubmittion, (task)=>(\r\n                                                <SubmittedWorkCard key={`${task.id}_${task?.submission_no}`} data={task} isLoading={isFetching}/>\r\n                                            )):\r\n                                            <span>\r\n                                                No Old Submittion!\r\n                                            </span>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                         }\r\n                        {/* content */}\r\n                        {\r\n                            // getSubmittedTask?.submission_no === getSubmittedTask.\r\n                        }\r\n                        <SubmittedWorkCard data={latestSubmittion} latest={true} isLoading={isFetching} />\r\n                    </div>\r\n                    {\r\n                        !isFetching && \r\n                        <div className=\"mt-4 px-3\">\r\n                            <form action=\"\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"\" className='font-weight-bold'>Is This Task Completed Within Deadline?<sup className='f-16'>*</sup></label>\r\n                                    <div className=''>\r\n                                        <Rating\r\n                                            style={{ maxWidth: 120 }}\r\n                                            value={completedWithInDeadline}\r\n                                            onChange={setCompletedWithInDeadline}\r\n                                            radius='small'\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n    \r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"\" className='font-weight-bold'>How Beautifully The Task Is Submitted?<sup className='f-16'>*</sup></label>\r\n                                    <div className=''>\r\n                                        <Rating\r\n                                            style={{ maxWidth: 120 }}\r\n                                            value={submittedStar}\r\n                                            onChange={setSubmittedStar}\r\n                                            radius='small'\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n    \r\n    \r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"\" className='font-weight-bold'>\r\n                                        How Perfectly The Task Requirements Are Fullfilled?<sup className='f-16'>*</sup>\r\n                                    </label>\r\n                                    <div className=''>\r\n                                        <Rating\r\n                                            style={{ maxWidth: 120 }}\r\n                                            value={fullfilledStar}\r\n                                            onChange={setFullfilledStar}\r\n                                            radius='small'\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n    \r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"\" className='font-weight-bold'>\r\n                                        Any Recommendations For Developer?<sup className='f-16'>*</sup>\r\n                                    </label>\r\n                                    <div className='ck-editor-holder'>\r\n                                        <CKEditorComponent onChange={onWriteOnEditor} />\r\n                                    </div>\r\n                                </div>\r\n    \r\n                                <div className=\"mt-3 d-flex align-items-center\">\r\n                                    <Button onClick={close} variant=\"tertiary\" className=\"ml-auto mr-2\">\r\n                                       Close \r\n                                    </Button>\r\n    \r\n                                    {/* {!isLoading ? (\r\n                                        <React.Fragment>\r\n                                            <Button onClick={handleOnSubmit}>Approve</Button>\r\n                                        </React.Fragment>\r\n                                    ) : (\r\n                                        <React.Fragment>\r\n                                            <Button className=\"cursor-processing\">\r\n                                                <div\r\n                                                    className=\"spinner-border text-white\"\r\n                                                    role=\"status\"\r\n                                                    style={{\r\n                                                        width: \"18px\",\r\n                                                        height: \"18px\",\r\n                                                    }}\r\n                                                />{\" \"}\r\n                                                Processing...\r\n                                            </Button>\r\n                                        </React.Fragment>\r\n                                    )} */}\r\n                                    <SubmitButton onClick={handleOnSubmit} title=\"Approve\" isLoading={approveTaskLoadingStatus} />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    }\r\n                    \r\n                </div>\r\n            </div>\r\n        </Modal> \r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ApproveTask\r\n\r\n\r\n// Submitted work\r\n\r\nconst SubmittedWorkCard = ({data, latest=false, className=\"\", style, isLoading = false}) => {\r\n\r\n    const links = _.compact(_.split(data?.links, ','));\r\n    const attaches =  _.compact(_.split(data?.attaches, ','));\r\n   \r\n\r\n    if(isLoading){\r\n        return <div className={`sp1_st--approve-card mb-3 ${className}`} style={style}> \r\n            <div className=\"sp1_st--approve-card-header\">\r\n                <Placeholder height=\"14px\" width='80px' className='mb-2' />\r\n                <Placeholder height=\"14px\" width='50px' className='mb-2' />\r\n            </div>\r\n\r\n            <div className='sp1_st--approve-card-body'>\r\n                <div className='mb-2'>\r\n                    <Placeholder height=\"14px\" width='80px' className='mb-2'/>\r\n\r\n                    <div className='ml-2'>\r\n                        <Placeholder height=\"14px\" width='100%' className='mb-2'/>\r\n                        <Placeholder height=\"14px\" width='100%' className='mb-2'/>\r\n                        <Placeholder height=\"14px\" width='100%' className='mb-2'/>\r\n                    </div> \r\n                </div>\r\n\r\n                <div className='mb-2'>\r\n                    <Placeholder height=\"14px\" width='80px' className='mb-2'/>\r\n\r\n                    <div className='ml-2'>\r\n                        <Placeholder height=\"14px\" width='100%' className='mb-2'/>\r\n                        <Placeholder height=\"14px\" width='100%' className='mb-2'/>\r\n                        <Placeholder height=\"14px\" width='50%' className='mb-2'/>\r\n                    </div> \r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    \r\n    return(\r\n        <div className={`sp1_st--approve-card mb-3 ${className}`} style={style}> \r\n            <div className=\"sp1_st--approve-card-header\">\r\n                <span>{latest ? 'Latest': \"Old\"} Submittion {!latest && `(${data?.submission_no})`}</span>\r\n                <span>\r\n                    {dayjs(data?.submission_date).format('MMM DD, YYYY hh:mm a')}\r\n                </span>\r\n            </div>\r\n\r\n            <div className='sp1_st--approve-card-body'>\r\n                <div className='mb-2'>\r\n                    <div className='font-weight-bold f-12' style={{color: '#81868E'}}> Links</div>\r\n                    <ol style={{listStyle: 'unset'}}>\r\n                        {_.map(links, (link, index) =>(\r\n                            <li key={`${link}_${index}`} style={{listStyle: 'numaric'}}>\r\n                                <a href={link}>{link}</a>\r\n                            </li>\r\n                        ))}\r\n                    </ol>\r\n                </div>\r\n\r\n                <div className='mb-2'>\r\n                    <div className=\"font-weight-bold f-12\" style={{color: '#81868E'}}>Description</div>\r\n                    <div className='sp1_ck_content p-2' dangerouslySetInnerHTML={{__html: data?.text ?? `<span style=\"color:rgb(180,188,196);\">Comment Not Available</span>`}}/>\r\n                </div>\r\n\r\n\r\n                <div className=\"mt-3\">\r\n                <span\r\n                    className=\"d-block f-12 font-weight-bold mb-2\"\r\n                    style={{ color: \"#767581\" }}\r\n                >\r\n                    Attached Files\r\n                </span>\r\n                {_.size(attaches) > 0 ? (\r\n                    <FileUploader>\r\n                        {_.map(attaches, (file, index) => (\r\n                            <FileUploader.Preview\r\n                                key={`${file}_${index}`}\r\n                                fileName={file}\r\n                                downloadAble={true}\r\n                                deleteAble={false}\r\n                                downloadUrl={`${file}`}\r\n                                previewUrl={`${file}`}\r\n                                fileType={_.includes([\"png\",\"jpg\", \"jpeg\", \"gif\", \"svg\"], _.last(_.split(file, '.'))) ? 'images' : 'others'}\r\n                                ext=\"\"\r\n                            />\r\n                        ))}\r\n                    </FileUploader>\r\n                    ) : (\r\n                        <span\r\n                            className=\"px-2\"\r\n                            style={{ color: \"rgb(180, 188, 196)\" }}\r\n                        >\r\n                            No Attachment is available\r\n                        </span>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import _ from \"lodash\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useCheckEditableSubTaskQuery, useLazyCheckSubTaskTimerQuery } from \"../../../services/api/SingleTaskPageApi\";\r\nimport { SingleTask } from \"../../../utils/single-task\";\r\nimport { User } from \"../../../utils/user-details\";\r\nimport Button from \"../../components/Button\";\r\nimport Modal from \"../../components/Modal\";\r\nimport PreviewSubtask from \"./PreviewSubtask\";\r\nimport ApproveTask from \"../task-actions/approve-task/ApproveTask\";\r\n\r\nconst SubTask = ({ subTask, task, status, toggleEditForm }) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const auth = new User(window?.Laravel?.user);\r\n\r\n\r\n    const [checkSubTaskTimer, {isFetching}] = useLazyCheckSubTaskTimerQuery()\r\n      // check task edit\r\n\r\n        const { data } = useCheckEditableSubTaskQuery(subTask?.id);\r\n        const isEditable = data?.task === 0;\r\n\r\n    const toggle = (e) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      setIsOpen(true);\r\n    }\r\n\r\n\r\n    const hasEditPermission = () => {\r\n        return Number(subTask?.added_by) === auth?.getId() && _.includes([1,2,3], status?.id);\r\n    }\r\n\r\n    const onEdit = (e) => {\r\n        e.preventDefault();\r\n        checkSubTaskTimer(subTask?.id)\r\n        .unwrap()\r\n        .then(res=>{\r\n            if(res?.status === 200){\r\n                toggleEditForm(e, subTask?.id)\r\n            }else{\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: 'You cannot edit the task because timer is already running',\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const onModalEditButtonClick = (e) => {\r\n        e.preventDefault();\r\n        checkSubTaskTimer(subTask?.id)\r\n        .unwrap()\r\n        .then(res=>{\r\n            if(res?.status === 200){\r\n                window.location = `/account/tasks/${subTask?.id}/edit`\r\n            }else{\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: 'You cannot edit the task because timer is already running',\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <div\r\n            className=\"d-flex align-items-center justify-content-between sp1_tark_right_item\"\r\n            style={{ gap: \"16px\" }}\r\n        >\r\n            <div className=\"w-100 text-ellipsis\">\r\n                <div onClick={toggle} className=\"hover-underline\" style={{cursor: 'pointer'}}>\r\n                    {subTask?.title}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"d-flex align-items-center\">\r\n                <div\r\n                    onClick={toggle}\r\n                    className=\"mr-2 py-2 sp1_task_righ_action_btn\"\r\n                    style={{cursor: 'pointer'}}\r\n                >\r\n                    <i className=\"fa-regular fa-eye\"></i>\r\n                </div>\r\n                {\r\n                    isEditable && hasEditPermission() && <div\r\n                        onClick={onEdit}\r\n                        className=\"mr-2 py-2 sp1_task_righ_action_btn\"\r\n                        style={{cursor: 'pointer'}}\r\n                    >\r\n                        {isFetching ?  <div\r\n                            className=\"spinner-border text-dark ml-2\"\r\n                            role=\"status\"\r\n                            style={{\r\n                                width: \"16px\",\r\n                                height: \"16px\",\r\n                                border: \"0.14em solid rgba(0, 0, 0, .25)\",\r\n                                borderRightColor: \"transparent\",\r\n                            }}\r\n                        /> :<i className=\"fa-regular fa-pen-to-square\"></i>}\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n\r\n\r\n            {/* task Preview Modal */}\r\n            <React.Fragment>\r\n                <Modal\r\n                    className={`sp1_subtask_offsetcanvas--modal`}\r\n                    isOpen={isOpen}\r\n                >\r\n                    <div\r\n                        className={`sp1_subtask_offsetcanvas ${\r\n                            isOpen ? \"open\" : \"\"\r\n                        }`}\r\n                    >\r\n                        <div className=\"d-flex align-items-center justify-content-between p-2 sp1_subtask_offsetcanvas--bar\">\r\n                            <div className=\"pl-3\">\r\n                                <span className=\"font-weight-bold f-16\">\r\n                                    Sub Task # {subTask?.id} :{\" \"}\r\n                                    <span className=\"font-weight-normal\">\r\n                                        {subTask?.title}\r\n                                    </span>{\" \"}\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"d-flex align-items-center ml-auto\">\r\n                                {/* <ApproveTask\r\n                                    task={subTask}\r\n                                    auth={auth}\r\n                                />\r\n\r\n                                <Button variant=\"success\" onClick={() => setIsOpen(false)} className=\"mr-2 bg-danger\">\r\n                                    Revision\r\n                                </Button> */}\r\n\r\n                                {isEditable && hasEditPermission() && <a href=\"#\" onClick={onModalEditButtonClick} className=\"border text-dark mr-2 py-1 px-2\">\r\n                                    {isFetching ?  <div\r\n                                        className=\"spinner-border text-dark ml-2\"\r\n                                        role=\"status\"\r\n                                        style={{\r\n                                            width: \"16px\",\r\n                                            height: \"16px\",\r\n                                            border: \"0.14em solid rgba(0, 0, 0, .25)\",\r\n                                            borderRightColor: \"transparent\",\r\n                                        }}\r\n                                    /> :<i className=\"fa-regular fa-pen-to-square\"></i>}\r\n                                </a>}\r\n                                <a\r\n                                    href={`/account/tasks/${subTask?.id}`}\r\n                                    target=\"_blank\"\r\n                                    className=\"border text-dark mr-2 py-1 px-2\"\r\n                                >\r\n                                    {/* <i className=\"fa-solid fa-up-right-and-down-left-from-center\" /> */}\r\n                                    <i className=\"fa-solid fa-arrow-up-right-from-square\"></i>\r\n                                </a>\r\n                                <Button onClick={() => setIsOpen(false)} className=\"\">\r\n                                    <i className=\"fa-solid fa-xmark\" />\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"sp1_subtask_offsetcanvas--body\">\r\n                            <PreviewSubtask\r\n                                parentTask={task}\r\n                                subTask={subTask}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            </React.Fragment>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SubTask;\r\n","import React from 'react'\r\nimport Modal from '../../components/Modal'\r\nimport Button from '../../components/Button'\r\nimport {User} from '../../../utils/user-details';\r\n\r\nconst LeadConfirmationModal = ({isOpen, onConfirm}) => {\r\n  const [buttonVisible, setButtonVisible] = React.useState(false);\r\n  const [countDown, setCountDown] = React.useState(20);\r\n  const auth = new User(window.Laravel.user);\r\n\r\n  React.useEffect(() => { \r\n    if(auth.getRoleId() && auth.getRoleId() === 6){\r\n      let count = countDown ?? 0;\r\n\r\n      let timeIntervelId = setInterval(() => {\r\n          setCountDown(count--);\r\n      }, 1000);\r\n  \r\n  \r\n      let timeOutId = setTimeout(() => {\r\n        setButtonVisible(true);\r\n        clearInterval(timeIntervelId)\r\n      }, 22000);\r\n  \r\n      \r\n  \r\n      return () => {\r\n        clearTimeout(timeOutId);\r\n        clearInterval(timeIntervelId);\r\n      };\r\n    }\r\n    \r\n    \r\n    return () =>  onConfirm(); \r\n  }, []);\r\n\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} className=\"subtask-timer-confirmation--modal\">\r\n        <div className='subtask-timer-confirmation--panel'>\r\n           <div className=\"subtask-timer-confirmation--content\">\r\n                <h4 className='mb-3'> Do You Understand The Following Things? </h4>\r\n                \r\n                <ol type='A' style={{marginLeft: '30px'}}>\r\n                    <li> Your teams job is not to decide what the look and feel of a website will be based on a few reference websites </li>\r\n                    <li>Your teams job is not to research a theme based on an instruction shared by the PM. </li>\r\n                    <li>Your teams job is not to research a plugin based on a problem shared by PM.</li>\r\n                    <li>Your teams job is not to choose the color scheme of a website.</li>\r\n                    <li>Your teams job is not to talk to the support for example the shopify support team, theme support, plugin support and any other support for any solution.</li>\r\n                    <li>Your teams job is not to create the training videos for the client after the completion of a project. </li>\r\n                    <li>You understand that all your teams hours have to be logged/tracked and you team mates will questioned if each of them doesn’t log at least 7 hours for any reason.</li>\r\n                </ol>\r\n\r\n\r\n                <p>In general, anything that has to do with requirements define (of any sort) has to be done by the project manager. Your teams job is to execute the work based on the defined requirements.  </p> \r\n\r\n                <p>If for any reason, project manager needs your help for any of those things, he will have to create a separate task for each of them and those tasks have to be authorized by the top management mandatorily.</p>\r\n                \r\n                <p> Report immediately if you are asked to do any of these and if it was’t authorized by top management. You should see a text like “Authorized by top management” at the right side of the task title if it was authorized.In case, you don’t report, the extra time taken for these will be considered as your lackings (as they will remain unaccountable) and you will receive negative performance score.”</p>\r\n\r\n                <div className='d-flex align-items-center'>\r\n                     <Button \r\n                        onClick={onConfirm} \r\n                        className='ml-auto'\r\n                        disabled={!buttonVisible}\r\n                      > \r\n                        Yes, I Fully Understand This {!buttonVisible && `(${countDown})`}\r\n                      </Button> \r\n                </div>\r\n           </div>\r\n        </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default LeadConfirmationModal","import React, { useState } from \"react\";\r\nimport Input from \"../../components/form/Input\";\r\nimport Button from \"../../components/Button\";\r\nimport { useWorkingEnvironmentMutation } from \"../../../services/api/SingleTaskPageApi\";\r\nimport SubmitButton from \"../../components/SubmitButton\";\r\nimport { checkIsURL } from \"../../../utils/check-is-url\";\r\nimport { toast } from \"react-toastify\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst WorkingEnvironmentForm = ({ task, onSubmit, close }) => {\r\n    const [siteUrl, setSiteUrl] = useState(\"\");\r\n    const [frontendPassword, setFrontendPassword] = useState(\"\");\r\n    const [loginUrl, setLoginUrl] = useState(\"\");\r\n    const [\r\n        siteLoginCredentialUserNameOrEmail,\r\n        setSiteLoginCredentialUserNameOrEmail,\r\n    ] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [err, setErr] = useState(null);\r\n\r\n    const [workingEnvironment, { isLoading }] = useWorkingEnvironmentMutation();\r\n\r\n    // handle input change\r\n    const handleChange = (e, setState) => {\r\n        e.preventDefault();\r\n        setState(e.target.value);\r\n    };\r\n\r\n    const isValid = () => {\r\n        let count = 0;\r\n        const error = new Object();\r\n\r\n        if (!siteUrl) {\r\n            count++;\r\n            error.siteUrl = \"You have to provide Working/Staging Site's URL\";\r\n        } else if (!checkIsURL(siteUrl)) {\r\n            count++;\r\n            error.siteUrl = \"Please enter a valid URL\";\r\n            toast.warn(\"Please enter a valid Working/Staging Site's URL\", {\r\n                position: \"top-right\",\r\n            });\r\n        }\r\n\r\n        if (!loginUrl) {\r\n            count++;\r\n            error.loginUrl =\r\n                \"You have to provide Working/Staging Site's Admin Panel URL\";\r\n        } else if (!checkIsURL(loginUrl)) {\r\n            count++;\r\n            error.loginUrl = \"Please enter a valid URL\";\r\n            toast.warn(\r\n                \"Please enter a valid Working/Staging Site's Admin Panel URL\",\r\n                { position: \"top-right\" }\r\n            );\r\n        }\r\n\r\n        if (!siteLoginCredentialUserNameOrEmail) {\r\n            count++;\r\n            error.username =\r\n                \"You have to provide Working/Staging Site's Admin Username/Email\";\r\n        }\r\n\r\n        if (!password) {\r\n            count++;\r\n            error.password =\r\n                \"You have to provide Working/Staging Site's Admin Password\";\r\n        }\r\n\r\n        if (!frontendPassword) {\r\n            count++;\r\n            error.frontendPassword =\r\n                \"You have to provide Working/Staging Site's Frontend Password\";\r\n        }\r\n\r\n        setErr(error);\r\n        return !count;\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        const data = {\r\n            project_id: task?.projectId,\r\n            site_url: siteUrl,\r\n            login_url: loginUrl,\r\n            email: siteLoginCredentialUserNameOrEmail,\r\n            password: password,\r\n            task_id: task?.id,\r\n            frontend_password: frontendPassword,\r\n        };\r\n\r\n        if (isValid()) {\r\n            try {\r\n                await workingEnvironment(data)\r\n                    .unwrap()\r\n                    .then((res) => {\r\n                        close();\r\n                        Swal.fire(\r\n                            \"Working environment store successfully\",\r\n                            \"You can create subtask now\",\r\n                            \"success\"\r\n                        ).then(({isConfirmed})=>{\r\n                            onSubmit();\r\n                        });\r\n                    });\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        } else {\r\n            toast.error(\"Please provide all required fields\", {\r\n                position: \"top-right\",\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"sp1-subtask-form w-100 --form -row\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 lg:col-6\">\r\n                    <Input\r\n                        id=\"siteURL\"\r\n                        label=\"Working/Staging Site's URL\"\r\n                        type=\"text\"\r\n                        placeholder=\"Type Working/Staging Site's URL\"\r\n                        name=\"stie_url\"\r\n                        required={true}\r\n                        value={siteUrl}\r\n                        error={err?.siteUrl}\r\n                        onChange={(e) => handleChange(e, setSiteUrl)}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-12 lg:col-6\">\r\n                    <Input\r\n                        id=\"frontendPassword\"\r\n                        label=\"Frontend Password\"\r\n                        type=\"text\"\r\n                        placeholder=\"Frontent Password\"\r\n                        name=\"frontend-end-password\"\r\n                        required={true}\r\n                        value={frontendPassword}\r\n                        error={err?.frontendPassword}\r\n                        onChange={(e) => handleChange(e, setFrontendPassword)}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-4\">\r\n                    <Input\r\n                        id=\"loginUrl\"\r\n                        label=\"Working/Staging Site's Admin Panel URL\"\r\n                        type=\"text\"\r\n                        placeholder=\"Type Working/Staging Site's Admin Panel URL\"\r\n                        name=\"login_url\"\r\n                        required={true}\r\n                        value={loginUrl}\r\n                        error={err?.loginUrl}\r\n                        onChange={(e) => handleChange(e, setLoginUrl)}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-5 h-100\">\r\n                    <Input\r\n                        id=\"siteLoginCredential\"\r\n                        label=\"Working/Staging Site's Admin Panel Username/Email\"\r\n                        type=\"text\"\r\n                        placeholder=\"Type Working/Staging Site's Admin Panel Username/Email\"\r\n                        name=\"site-login-credential\"\r\n                        required={true}\r\n                        value={siteLoginCredentialUserNameOrEmail}\r\n                        error={err?.username}\r\n                        onChange={(e) =>\r\n                            handleChange(\r\n                                e,\r\n                                setSiteLoginCredentialUserNameOrEmail\r\n                            )\r\n                        }\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-3\">\r\n                    <div className=\"h-100 d-md-flex align-items-end\">\r\n                        <Input\r\n                            id=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"text\"\r\n                            placeholder=\"Password\"\r\n                            name=\"password\"\r\n                            className=\"mt-md-auto\"\r\n                            required={true}\r\n                            value={password}\r\n                            error={err?.password}\r\n                            onChange={(e) => handleChange(e, setPassword)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"col-12 mt-3\">\r\n                <div className=\"d-flex align-items-center justify-content-end\">\r\n                    <Button\r\n                        variant=\"secondary\"\r\n                        className=\"mr-2\"\r\n                        onClick={close}\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n\r\n                    <SubmitButton onClick={handleSubmit} isLoading={isLoading}>\r\n                        <i className=\"fa-regular fa-paper-plane\" />\r\n                        Create\r\n                    </SubmitButton>\r\n\r\n                    {/* {isLoading ? (\r\n                        <Button onClick={handleSubmit}>\r\n                            \r\n                        </Button>\r\n                    ) : (\r\n                        <Button className=\"cursor-processing\">\r\n                            <div\r\n                                className=\"spinner-border text-white\"\r\n                                role=\"status\"\r\n                                style={{\r\n                                    width: \"18px\",\r\n                                    height: \"18px\",\r\n                                }}\r\n                            ></div>\r\n                            Processing...\r\n                        </Button>\r\n                    )} */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WorkingEnvironmentForm;\r\n","import React, { useState } from \"react\";\r\nimport CKEditorComponent from \"../../../ckeditor\";\r\nimport UploadFilesInLine from \"../../../file-upload/UploadFilesInLine\";\r\nimport Button from \"../../components/Button\";\r\nimport Input from \"../../components/form/Input\";\r\nimport DatePicker from \"../comments/DatePicker\";\r\nimport AssginedToSelection from \"./AssignedToSelection\";\r\nimport PrioritySelection from \"./PrioritySelection\";\r\nimport TaskCategorySelectionBox from \"./TaskCategorySelectionBox\";\r\n\r\nimport _ from \"lodash\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport {\r\n    useCheckRestrictedWordsMutation,\r\n    useCreateSubtaskMutation,\r\n    useLazyGetTaskDetailsQuery,\r\n} from \"../../../services/api/SingleTaskPageApi\";\r\n\r\nimport { Listbox } from \"@headlessui/react\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { setWorkingEnvironmentStatus, storeSubTasks } from \"../../../services/features/subTaskSlice\";\r\nimport { checkIsURL } from \"../../../utils/check-is-url\";\r\nimport { CompareDate } from \"../../../utils/dateController\";\r\nimport { SingleTask } from \"../../../utils/single-task\";\r\nimport { User } from \"../../../utils/user-details\";\r\nimport LeadConfirmationModal from \"./LeadConfirmationModal\";\r\nimport WorkingEnvironmentForm from \"./WorkingEnvironmentForm\";\r\nimport { useRefetchTaskDetails } from \"../../SingleIndependentTask\";\r\n\r\nconst SubTaskForm = ({ close, isFirstSubtask = false }) => {\r\n    const refetchTask = useRefetchTaskDetails();\r\n    const { task:taskDetails, subTask, isWorkingEnvironmentSubmit } = useSelector((s) => s.subTask);\r\n    const dispatch = useDispatch();\r\n    const dayjs = new CompareDate();\r\n\r\n    //   form data\r\n    const [title, setTitle] = useState(\"\");\r\n    const [parentTask, setParentTask] = useState(\"\");\r\n    const [startDate, setStateDate] = useState(null);\r\n    const [dueDate, setDueDate] = useState(null);\r\n    const [taskCategory, setTaskCategory] = useState(\"\");\r\n    const [assignedTo, setAssignedTo] = useState(null);\r\n    // const [taskObserver, setTaskObserver] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    // const [status, setStatus] = useState(\"To Do\");\r\n    const [priority, setPriority] = useState(\"Regular\");\r\n\r\n    // const [estimateTimeHour, setEstimateTimeHour] = useState(0);\r\n    // const [estimateTimeMin, setEstimateTimeMin] = useState(0);\r\n    \r\n    const [files, setFiles] = React.useState([]);\r\n\r\n    const [pageType, setPageType] = React.useState(\"\");\r\n    const [pageTypeOthers, setPageTypeOthers] = React.useState(\"\");\r\n    const [pageName, setPageName] = React.useState(\"\");\r\n    const [pageURL, setPageURL] = React.useState(\"\");\r\n    const [numberOfPage, setNumberOfPage] = React.useState(0);\r\n    const [existingDesignLink, setExistingDesignLink] = React.useState(\"\");\r\n    const [pageTypePriority, setPageTypePriority ] = React.useState(\"\");\r\n    const [pageTypeName, setPageTypeName] = React.useState(\"\");\r\n\r\n    const [err, setErr] = useState(null);\r\n\r\n    const task = new SingleTask(taskDetails);\r\n    const auth = new User(window?.Laravel?.user);\r\n\r\n\r\n    // const params = useParams();\r\n    const [createSubtask, { isLoading, error }] = useCreateSubtaskMutation();\r\n    // const {  } = useGetTaskDetailsQuery(`/${task?.id}/json?mode=estimation_time`);\r\n    const [ getTaskDetails, {data: estimation, isFetching}] = useLazyGetTaskDetailsQuery();\r\n\r\n    const [showForm, setShowForm] = React.useState(false);\r\n\r\n    const required_error = error?.status === 422 ? error?.data : null;\r\n    const [containViolation, setContainViolation] = React.useState(false);\r\n\r\n    const navigate = useNavigate();\r\n\r\n\r\n    // const [\r\n    //     checkRestrictedWords,\r\n    //     {isLoading: checking}\r\n    // ] = useCheckRestrictedWordsMutation();\r\n    const checking = false;\r\n    \r\n\r\n    // handle change\r\n    React.useEffect(() => {\r\n        setParentTask(task?.title);\r\n    }, [task]);\r\n\r\n    React.useEffect(() => {\r\n        getTaskDetails(`/${task?.id}/json?mode=estimation_time`).unwrap();\r\n    }, [])\r\n\r\n    // handle onchange\r\n    const handleChange = (e, setState) => {\r\n        e.preventDefault();\r\n        let value = e.target.value;\r\n        setState(value);\r\n    };\r\n\r\n\r\n    const isValid = () => {\r\n        let count = 0;\r\n        const error = new Object();\r\n\r\n        if(!title){\r\n            error.title = 'The title field is required';\r\n            count++;\r\n        }\r\n\r\n        if(!startDate){\r\n            error.startDate = 'You have to select a start date';\r\n            count++;\r\n        }\r\n\r\n        if(!dueDate){\r\n            error.dueDate = 'You have to select a due date';\r\n            count++;\r\n        }\r\n\r\n\r\n        if(!taskCategory){\r\n            error.taskCategory = \"You have to select task category\";\r\n            count++;\r\n        }\r\n\r\n        if(!assignedTo){\r\n            error.assignedTo = \"You have to select an user\";\r\n            count++;\r\n        }\r\n\r\n        if(assignedTo && assignedTo?.isOverloaded){\r\n            toast.warn(`You cannot assign this task to ${assignedTo?.name}  because ${assignedTo?.gender === 'male' ? 'He ' : 'She '} has more than 04 Submittable tasks.`)\r\n            count++;\r\n        }\r\n\r\n\r\n        if(!pageType){\r\n            error.taskType = \"You have to Select task type\";\r\n            count++;\r\n        }else{\r\n            if(_.toLower(pageType) === _.toLower('New Page Design')){\r\n                if(!pageTypePriority){\r\n                    error.pageTypePriority = \"You have to Select page type\";\r\n                    count++;\r\n                }\r\n\r\n                if(!pageName){\r\n                    error.pageName= \"You have to Select page name\";\r\n                    count++;\r\n                }\r\n\r\n                if(!pageURL){\r\n                    error.pageUrl= \"You have to provide page URL\";\r\n                    count++;\r\n                }else if(!checkIsURL(pageURL)){\r\n                    error.pageUrl= \"You have to provide a valid page URL\";\r\n                    toast.warn(\"You have to provide a valid page URL\");\r\n                    count++;\r\n                }\r\n            }\r\n\r\n\r\n            if(_.toLower(pageType) === _.toLower('Others')){\r\n                if(!pageTypeOthers){\r\n                    error.pageTypeOthers = \"You have to select an option\"\r\n                    count++;\r\n                }\r\n\r\n                if(!pageName){\r\n                    error.pageName= \"You have to Select page name\";\r\n                    count++;\r\n                }\r\n\r\n                if(!pageURL){\r\n                    error.pageUrl= \"You have to provide page URL\";\r\n                    count++;\r\n                }else if(!checkIsURL(pageURL)){\r\n                    error.pageUrl= \"You have to provide a valid page URL\";\r\n                    toast.warn(\"You have to provide a valid page URL\");\r\n                    count++;\r\n                }\r\n            }\r\n\r\n            if(_.toLower(pageType) === _.toLower('Cloning Existing Design')){\r\n                if(!pageTypeName){\r\n                    error.pageTypeName = \"You have to select an option\"\r\n                    count++;\r\n                }\r\n\r\n                if(!numberOfPage){\r\n                    error.numberOfPage= \"The minimum required number is 1\"\r\n                    count++;\r\n                }\r\n\r\n                if(!existingDesignLink){\r\n                    error.existingDesignLink= \"You have to provide Exiting Design Link\";\r\n                    count++;\r\n                }else if(!checkIsURL(existingDesignLink)){\r\n                    error.existingDesignLink= \"You have to provide a valid Exiting Design Link\";\r\n                    toast.warn(\"You have to provide a valid Exiting Design Link\");\r\n                    count++;\r\n                }\r\n            }\r\n\r\n\r\n            if(!description){\r\n                error.description = \"The description field is required\";\r\n                count++;\r\n            }\r\n        }\r\n\r\n        setErr(error);\r\n        return !count;\r\n    }\r\n\r\n\r\n\r\n    // handle submission\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const _startDate = dayjs.dayjs(startDate).format(\"DD-MM-YYYY\");\r\n        const _dueDate = dayjs.dayjs(dueDate).format(\"DD-MM-YYYY\");\r\n\r\n        const fd = new FormData();\r\n        // fd.append(\"milestone_id\", task?.milestoneID);\r\n        fd.append(\"task_id\", task?.id);\r\n        fd.append(\"title\", title);\r\n        fd.append(\"start_date\", _startDate);\r\n        fd.append(\"due_date\", _dueDate);\r\n        // fd.append(\"project_id\", task?.projectId);\r\n        fd.append(\"task_category_id\", taskCategory?.id);\r\n        fd.append(\"user_id\", assignedTo?.id);\r\n        fd.append(\"description\", description);\r\n        fd.append(\"board_column_id\", task?.boardColumn?.id);\r\n        fd.append(\"priority\", _.lowerCase(priority));\r\n        // fd.append(\"estimate_hours\", estimateTimeHour);\r\n        // fd.append(\"estimate_minutes\", estimateTimeMin);\r\n        fd.append(\"image_url\", null);\r\n        fd.append(\"subTaskID\", null);\r\n        fd.append(\"addedFiles\", null);\r\n        fd.append('task_type', pageType ?? null);\r\n        fd.append('page_type', pageTypePriority);\r\n        fd.append('page_name', pageName);\r\n        fd.append('page_url', pageURL);\r\n        fd.append('task_type_other', pageTypeOthers);\r\n        fd.append('page_type_name', pageTypeName);\r\n        fd.append('number_of_pages', numberOfPage);\r\n        fd.append('existing_design_link', existingDesignLink);\r\n        fd.append(\r\n            \"_token\",\r\n            document\r\n                .querySelector(\"meta[name='csrf-token']\")\r\n                .getAttribute(\"content\")\r\n        );\r\n        Array.from(files).forEach((file) => {\r\n            fd.append(\"file[]\", file);\r\n        });\r\n\r\n        // const submit = async () => {\r\n\r\n            if(isValid()){\r\n                await createSubtask(fd)\r\n                .unwrap()\r\n                .then((res) => {\r\n                    if (res?.status === \"success\") {\r\n                        let _subtask = [\r\n                            ...subTask,\r\n                            { id: res?.sub_task?.id, title: res?.sub_task?.title },\r\n                        ];\r\n                        dispatch(storeSubTasks(_subtask));\r\n                        close();\r\n\r\n                        Swal.fire({\r\n                            position: \"center\",\r\n                            icon: \"success\",\r\n                            title: res.message,\r\n                            showConfirmButton: false,\r\n                            timer: 2500,\r\n                        });\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    if (err?.status === 422) {\r\n                        Swal.fire({\r\n                            position: \"center\",\r\n                            icon: \"error\",\r\n                            title: \"Please fill up all required fields\",\r\n                            showConfirmButton: true,\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if (isLoading) {\r\n            document.getElementsByTagName(\"body\")[0].style.cursor = \"progress\";\r\n        } else {\r\n            document.getElementsByTagName(\"body\")[0].style.cursor = \"default\";\r\n        }\r\n    }, [isLoading]);\r\n\r\n    // editor data handle\r\n    const handleEditorChange = (e, editor) => {\r\n        const data = editor.getData();\r\n        setDescription(data);\r\n    };\r\n\r\n    const estimateError = (err) => {\r\n        const text = _.head(err?.errors?.hours)\r\n        return text\r\n    };\r\n\r\n    useEffect(() => {\r\n        // const showEnv = _.size(task?.subtask) === 0 ? true : false;\r\n        if(auth.getRoleId() === 6){\r\n            dispatch(setWorkingEnvironmentStatus(!isFirstSubtask));\r\n        }\r\n    }, [isFirstSubtask])\r\n\r\n\r\n    // useEffect(()=>{\r\n    //   console.log({isFirstSubtask,isWorkingEnvironmentSubmit});\r\n    // },[isFirstSubtask,isWorkingEnvironmentSubmit]);\r\n\r\n    // useEffect(()=>{\r\n    //   console.log({isWorkingEnvironmentSubmit,isFirstSubtask,task});\r\n    // },[isWorkingEnvironmentSubmit,isFirstSubtask,task])\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"sp1-subtask-form --modal-panel\">\r\n                <div className=\"sp1-subtask-form --modal-panel-header\">\r\n                    <h6>\r\n                        { !isWorkingEnvironmentSubmit ? \"Working Environment\" : \"Create Sub Task\"}\r\n                    </h6>\r\n                    <Button\r\n                        aria-label=\"close-modal\"\r\n                        className=\"_close-modal\"\r\n                        onClick={close}\r\n                    >\r\n                        <i className=\"fa-solid fa-xmark\" />\r\n                    </Button>\r\n                </div>\r\n\r\n                <div className=\"sp1-subtask-form --modal-panel-body sp1_subtask_form\">\r\n                    {/* working environment form */}\r\n                    {!isWorkingEnvironmentSubmit &&\r\n                        <WorkingEnvironmentForm\r\n                            task={task}\r\n                            onSubmit={() =>{\r\n                                refetchTask()\r\n                            }}\r\n                            close={close}\r\n                        /> }\r\n                    {/* end working environment form */}\r\n\r\n                    {isWorkingEnvironmentSubmit &&\r\n                        <LeadConfirmationModal\r\n                            isOpen={!showForm}\r\n                            onConfirm={() => setShowForm(true)}\r\n                        />\r\n                    }\r\n                    {showForm && (\r\n                        <div className=\"sp1-subtask-form --form row\">\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <Input\r\n                                    id=\"title\"\r\n                                    label=\"Title\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter a task title\"\r\n                                    name=\"title\"\r\n                                    required={true}\r\n                                    value={title}\r\n                                    error={err?.title || required_error?.title?.[0]}\r\n                                    onChange={(e) => handleChange(e, setTitle)}\r\n                                />\r\n                            </div>\r\n\r\n\r\n                            {/* Milestone */}\r\n                            {/* <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group my-3\">\r\n                                    <label\r\n                                        className={`f-14 text-dark-gray mb-1`}\r\n                                        data-label=\"true\"\r\n                                    >\r\n                                        Milestone\r\n                                    </label>\r\n                                    <input\r\n                                        className={`form-control height-35 f-14`}\r\n                                        readOnly\r\n                                        defaultValue={milestone}\r\n                                    />\r\n                                </div>\r\n                            </div> */}\r\n\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group my-3\">\r\n                                    <label\r\n                                        className={`f-14 text-dark-gray mb-1`}\r\n                                        data-label=\"true\"\r\n                                    >\r\n                                        Parent Task\r\n                                    </label>\r\n                                    <input\r\n                                        className={`form-control height-35 f-14`}\r\n                                        readOnly\r\n                                        defaultValue={parentTask}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            {/* Project */}\r\n                            {/* <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group my-3\">\r\n                                    <label\r\n                                        className={`f-14 text-dark-gray mb-1`}\r\n                                        data-label=\"true\"\r\n                                    >\r\n                                        Project\r\n                                    </label>\r\n                                    <input\r\n                                        className={`form-control height-35 f-14`}\r\n                                        readOnly\r\n                                        defaultValue={project}\r\n                                    />\r\n                                </div>\r\n                            </div> */}\r\n\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group my-3\">\r\n                                    <label htmlFor=\"\">\r\n                                        Start Date <sup className=\"f-14\">*</sup>\r\n                                    </label>\r\n                                    <div className=\"form-control height-35 f-14\">\r\n                                        <DatePicker\r\n                                            placeholderText={`Ex: ${dayjs\r\n                                                .dayjs()\r\n                                                .format(\"DD-MM-YYYY\")}`}\r\n                                            minDate={dayjs.dayjs(task?.startDate).toDate()}\r\n                                            maxDate={\r\n                                                dueDate ||\r\n                                                dayjs.dayjs(task?.dueDate).toDate()\r\n                                            }\r\n                                            date={startDate}\r\n                                            setDate={setStateDate}\r\n                                        />\r\n                                    </div>\r\n                                    {required_error?.start_date?.[0] && (\r\n                                        <div style={{ color: \"red\" }}>\r\n                                            {required_error?.start_date?.[0]}\r\n                                        </div>\r\n                                    )}\r\n\r\n                                    {err?.startDate && (\r\n                                        <div style={{ color: \"red\" }}>\r\n                                            {err?.startDate}\r\n                                        </div>\r\n                                    )}\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group my-3\">\r\n                                    <label htmlFor=\"\">\r\n                                        Due Date <sup className=\"f-14\">*</sup>\r\n                                    </label>\r\n                                    <div className=\"form-control height-35 f-14\">\r\n                                        <DatePicker\r\n                                            placeholderText={`Ex: ${dayjs\r\n                                                .dayjs()\r\n                                                .format(\"DD-MM-YYYY\")}`}\r\n                                            minDate={\r\n                                                startDate || dayjs.dayjs(task?.startDate).toDate()\r\n                                            }\r\n                                            maxDate={dayjs.dayjs(task?.dueDate).toDate()}\r\n                                            date={dueDate}\r\n                                            setDate={setDueDate}\r\n                                        />\r\n                                    </div>\r\n                                    {required_error?.due_date?.[0] && (\r\n                                        <div style={{ color: \"red\" }}>\r\n                                            {required_error?.due_date?.[0]}\r\n                                        </div>\r\n                                    )}\r\n\r\n                                    {err?.dueDate && (\r\n                                        <div style={{ color: \"red\" }}>\r\n                                            {err?.dueDate}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <TaskCategorySelectionBox\r\n                                    selected={taskCategory}\r\n                                    onSelect={setTaskCategory}\r\n                                />\r\n\r\n                                {err?.taskCategory && (\r\n                                    <div style={{ color: \"red\" }}>\r\n                                        {err?.taskCategory}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <AssginedToSelection\r\n                                    selected={assignedTo}\r\n                                    onSelect={setAssignedTo}\r\n                                />\r\n\r\n                                {err?.assignedTo && (\r\n                                    <div style={{ color: \"red\" }}>\r\n                                        {err?.assignedTo}\r\n                                    </div>\r\n                                )}\r\n\r\n                                {assignedTo?.isOverloaded && <div style={{ color: \"red\" }}>\r\n                                        {`You cannot assign this task to ${assignedTo?.name}  because ${assignedTo?.gender === 'male' ? 'He ' : 'She '} has more than 10 Submittable tasks.`}\r\n                                    </div>}\r\n                            </div>\r\n                            {/*\r\n                    <div className=\"col-6\">\r\n                        <TaskObserverSelection />\r\n                    </div> */}\r\n\r\n                            {/* <div className=\"col-12 col-md-6\">\r\n                                <StatusSelection />\r\n                            </div> */}\r\n\r\n                            {/* Page Type  */}\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <Listbox value={pageType} onChange={setPageType}>\r\n                                    <div className=\"form-group position-relative my-3\">\r\n                                        <label htmlFor=\"\"> Task Type <sup>*</sup> </label>\r\n                                            <Listbox.Button className=\" sp1-selection-display-button form-control height-35 f-14 sp1-selection-display bg-white w-100\">\r\n                                            <span className=\"singleline-ellipsis pr-3\">\r\n                                                {pageType ?? \"--\"}\r\n                                            </span>\r\n\r\n                                            <div className='__icon'>\r\n                                                <i className=\"fa-solid fa-sort\"></i>\r\n                                            </div>\r\n                                        </Listbox.Button>\r\n                                        <Listbox.Options  className=\"sp1-select-options\">\r\n                                            {[\"New Page Design\", \"Cloning Existing Design\", \"Others\"]?.map((s, i) => (\r\n                                                <Listbox.Option\r\n                                                    key={i}\r\n                                                    className={({ active }) =>  `sp1-select-option ${ active ? 'active' : ''}`}\r\n                                                    value={s}\r\n                                                >\r\n                                                    {({selected}) => (\r\n                                                        <>\r\n                                                          {s}\r\n\r\n                                                          {selected ? <i className=\"fa-solid fa-check ml-2\" />: ''}\r\n                                                        </>\r\n                                                    )}\r\n                                                </Listbox.Option>\r\n                                            ))}\r\n                                        </Listbox.Options>\r\n                                    </div>\r\n                                </Listbox>\r\n\r\n                                {required_error?.pageType?.[0] && (\r\n                                        <div style={{ color: \"red\" }}>\r\n                                            {required_error?.pageType?.[0]}\r\n                                        </div>\r\n                                    )}\r\n\r\n\r\n\r\n                                {err?.taskType && (\r\n                                    <div style={{ color: \"red\" }}>\r\n                                        {err?.taskType}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n\r\n                            {\r\n                                pageType === \"New Page Design\"?\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <Listbox value={pageTypePriority} onChange={setPageTypePriority}>\r\n                                        <div className=\"form-group position-relative my-3\">\r\n                                            <label htmlFor=\"\"> Page Type <sup>*</sup> </label>\r\n                                                <Listbox.Button className=\" sp1-selection-display-button form-control height-35 f-14 sp1-selection-display bg-white w-100\">\r\n                                                <span className=\"singleline-ellipsis pr-3\">\r\n                                                    {pageTypePriority ?? \"--\"}\r\n                                                </span>\r\n\r\n                                                <div className='__icon'>\r\n                                                    <i className=\"fa-solid fa-sort\"></i>\r\n                                                </div>\r\n                                            </Listbox.Button>\r\n                                            <Listbox.Options  className=\"sp1-select-options\">\r\n                                                {[\r\n                                                    \"Primary Page Development\",\r\n                                                    \"Secondary Page Development\",\r\n                                                ]?.map((s, i) => (\r\n                                                    <Listbox.Option\r\n                                                        key={i}\r\n                                                        className={({ active }) =>  `sp1-select-option ${ active ? 'active' : ''}`}\r\n                                                        value={s}\r\n                                                    >\r\n                                                        {({selected}) => (\r\n                                                            <>\r\n                                                            {s}\r\n\r\n                                                            {selected ? <i className=\"fa-solid fa-check ml-2\" />: ''}\r\n                                                            </>\r\n                                                        )}\r\n\r\n                                                    </Listbox.Option>\r\n                                                ))}\r\n                                            </Listbox.Options>\r\n                                        </div>\r\n                                    </Listbox>\r\n\r\n\r\n                                {err?.pageTypePriority && (\r\n                                    <div style={{ color: \"red\" }}>\r\n                                        {err?.pageTypePriority}\r\n                                    </div>\r\n                                )}\r\n                                </div> : null\r\n                            }\r\n\r\n                            {/* Others */}\r\n                            {\r\n                                pageType === \"Others\"?\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <Listbox value={pageTypeOthers} onChange={setPageTypeOthers}>\r\n                                        <div className=\"form-group position-relative my-3\">\r\n                                            <label htmlFor=\"\"> Others <sup>*</sup> </label>\r\n                                                <Listbox.Button className=\" sp1-selection-display-button form-control height-35 f-14 sp1-selection-display bg-white w-100\">\r\n                                                <span className=\"singleline-ellipsis pr-3\">\r\n                                                    {pageTypeOthers ?? \"--\"}\r\n                                                </span>\r\n\r\n                                                <div className='__icon'>\r\n                                                    <i className=\"fa-solid fa-sort\"></i>\r\n                                                </div>\r\n                                            </Listbox.Button>\r\n                                            <Listbox.Options  className=\"sp1-select-options\">\r\n                                                {[\r\n                                                    \"Page Design Change\",\r\n                                                    \"Speed Optimization\",\r\n                                                    \"Fixing Issues/Bugs\",\r\n                                                    \"Responsiveness Issue Fixing/Making Something Responsive\"\r\n                                                ]?.map((s, i) => (\r\n                                                    <Listbox.Option\r\n                                                        key={i}\r\n                                                        className={({ active }) =>  `sp1-select-option ${ active ? 'active' : ''}`}\r\n                                                        value={s}\r\n                                                    >\r\n                                                        {({selected}) => (\r\n                                                            <>\r\n                                                            {s}\r\n\r\n                                                            {selected ? <i className=\"fa-solid fa-check ml-2\" />: ''}\r\n                                                            </>\r\n                                                        )}\r\n\r\n                                                    </Listbox.Option>\r\n                                                ))}\r\n                                            </Listbox.Options>\r\n                                        </div>\r\n                                    </Listbox>\r\n\r\n\r\n                                    {err?.pageTypeOthers && (\r\n                                        <div style={{ color: \"red\" }}>\r\n                                            {err?.pageTypeOthers}\r\n                                        </div>\r\n                                    )}\r\n                                </div> : null\r\n                            }\r\n\r\n                           {\r\n                             pageType ?\r\n                                <React.Fragment>\r\n                                    {\r\n                                        pageType === \"Cloning Existing Design\" ?\r\n                                            <>\r\n                                                {/* <div className=\"col-12 col-md-6\">\r\n                                                    <Input\r\n                                                        id=\"page_type_name\"\r\n                                                        label=\"Page type name\"\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Enter page type name...\"\r\n                                                        name=\"pageTypeName\"\r\n                                                        required={true}\r\n                                                        value={pageTypeName}\r\n\r\n                                                        onChange={(e) => handleChange(e, setPageTypeName)}\r\n                                                    />\r\n                                                </div> */}\r\n                                                <div className=\"col-12 col-md-6\">\r\n                                                    <Listbox value={pageTypeName} onChange={setPageTypeName}>\r\n                                                        <div className=\"form-group position-relative my-3\">\r\n                                                            <label htmlFor=\"\"> Page Type Name <sup>*</sup> </label>\r\n                                                                <Listbox.Button className=\" sp1-selection-display-button form-control height-35 f-14 sp1-selection-display bg-white w-100\">\r\n                                                                <span className=\"singleline-ellipsis pr-3\">\r\n                                                                    {pageTypeName ?? \"--\"}\r\n                                                                </span>\r\n\r\n                                                                <div className='__icon'>\r\n                                                                    <i className=\"fa-solid fa-sort\"></i>\r\n                                                                </div>\r\n                                                            </Listbox.Button>\r\n                                                            <Listbox.Options  className=\"sp1-select-options\">\r\n                                                                {[\r\n                                                                    \"Primary Page Development\",\r\n                                                                    \"Secondary Page Development\",\r\n                                                                ]?.map((s, i) => (\r\n                                                                    <Listbox.Option\r\n                                                                        key={i}\r\n                                                                        className={({ active }) =>  `sp1-select-option ${ active ? 'active' : ''}`}\r\n                                                                        value={s}\r\n                                                                    >\r\n                                                                        {({selected}) => (\r\n                                                                            <>\r\n                                                                            {s}\r\n\r\n                                                                            {selected ? <i className=\"fa-solid fa-check ml-2\" />: ''}\r\n                                                                            </>\r\n                                                                        )}\r\n\r\n                                                                    </Listbox.Option>\r\n                                                                ))}\r\n                                                            </Listbox.Options>\r\n                                                        </div>\r\n                                                    </Listbox>\r\n                                                    {err?.pageTypeName || required_error?.page_type?.[0]}\r\n                                                </div>\r\n                                            </>\r\n\r\n                                            :\r\n                                            <>\r\n\r\n                                                <div className=\"col-12 col-md-6\">\r\n                                                    <Input\r\n                                                        id=\"page_name\"\r\n                                                        label=\"Page Name\"\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Enter page name\"\r\n                                                        name=\"page name\"\r\n                                                        required={true}\r\n                                                        value={pageName}\r\n                                                        error={err?.pageName}\r\n                                                        onChange={(e) => handleChange(e, setPageName)}\r\n                                                    />\r\n                                                </div>\r\n\r\n\r\n                                                <div className=\"col-12 col-md-6\">\r\n                                                    <Input\r\n                                                        id=\"page_url\"\r\n                                                        label=\"Page URL\"\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Enter page url\"\r\n                                                        name=\"page url\"\r\n                                                        required={true}\r\n                                                        value={pageURL}\r\n                                                        error={err?.pageUrl || required_error?.page_url?.[0]}\r\n                                                        onChange={(e) => handleChange(e, setPageURL)}\r\n                                                    />\r\n                                                </div>\r\n                                            </>\r\n                                    }\r\n\r\n\r\n\r\n\r\n                                    {\r\n                                        pageType=== \"Cloning Existing Design\"?\r\n                                        <>\r\n                                            <div className=\"col-12 col-md-6\">\r\n                                                <Input\r\n                                                    id=\"number_of_pages\"\r\n                                                    label=\"Number of Pages\"\r\n                                                    type=\"number\"\r\n                                                    placeholder=\"--\"\r\n                                                    name=\"number_of_pages\"\r\n                                                    required={true}\r\n                                                    value={numberOfPage}\r\n                                                    error={err?.numberOfPage}\r\n                                                    onChange={(e) => handleChange(e, setNumberOfPage)}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            <div className=\"col-12 col-md-6\">\r\n                                                <Input\r\n                                                    id=\"exiting_project_url\"\r\n                                                    label=\"Existing Design Link\"\r\n                                                    type=\"Link\"\r\n                                                    placeholder=\"--\"\r\n                                                    name=\"exiting_project_url\"\r\n                                                    required={true}\r\n                                                    value={existingDesignLink}\r\n                                                    error={err?.existingDesignLink}\r\n                                                    onChange={(e) => handleChange(e, setExistingDesignLink)}\r\n                                                />\r\n                                            </div>\r\n                                        </> : null\r\n                                    }\r\n                                </React.Fragment>\r\n                             :null\r\n                           }\r\n                            {/*  */}\r\n\r\n\r\n\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <PrioritySelection\r\n                                    selected={priority}\r\n                                    setSelected={setPriority}\r\n                                />\r\n                            </div>\r\n\r\n\r\n                            {/* Set Estimate Time */}\r\n                            {/* <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group my-3\">\r\n                                    <label\r\n                                        htmlFor=\"\"\r\n                                        className=\"f-14 text-dark-gray\"\r\n                                    >\r\n                                        Set Estimate Time{\" \"}\r\n                                        <sup className=\"f-14\"> * </sup>\r\n                                    </label>\r\n                                    <div className=\"d-flex align-items-center\">\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            className=\"form-control height-35 f-14 mr-2\"\r\n                                            value={estimateTimeHour}\r\n                                            onWheel={e => e.currentTarget.blur()}\r\n                                            onChange={(e) =>handleChange( e,setEstimateTimeHour)}\r\n                                        />{\" \"}\r\n                                        hrs\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            className=\"form-control height-35 f-14 mr-2 ml-2\"\r\n                                            value={estimateTimeMin}\r\n                                            onWheel={e => e.currentTarget.blur()}\r\n                                            onChange={(e) =>\r\n                                                handleChange(\r\n                                                    e,\r\n                                                    setEstimateTimeMin\r\n                                                )\r\n                                            }\r\n                                        />{\" \"}\r\n                                        min\r\n                                    </div>\r\n\r\n                                    <div style={{ color: \"red\" }}>\r\n                                        {estimateError(required_error)}\r\n                                    </div>\r\n\r\n                                    <div style={{ color: \"#F73B12\" }}>\r\n                                    Estimation time can't exceed {estimation?.hours_left} hours {estimation?.minutes_left} minutes\r\n                                    </div>\r\n                                </div>\r\n                            </div> */}\r\n\r\n\r\n\r\n\r\n                            <div className=\"col-12\">\r\n                                <div className=\"form-group my-3\">\r\n                                    <label htmlFor=\"\"> Description </label>\r\n                                    <div\r\n                                        className=\"sp1_st_write_comment_editor\"\r\n                                        style={{ minHeight: \"100px\" }}\r\n                                    >\r\n                                        <CKEditorComponent\r\n                                            onChange={handleEditorChange}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    {required_error?.description?.[0] && <span className=\"text-danger\"><small> {required_error?.description?.[0]} </small></span>}\r\n                                    {err?.description && <span className=\"text-danger\"><small> {err?.description} </small></span>}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-12\">\r\n                                <UploadFilesInLine\r\n                                    files={files}\r\n                                    setFiles={setFiles}\r\n                                />\r\n                            </div>\r\n\r\n\r\n                           {/* {err?.violationWord ? <div className=\"alert alert-danger mt-2 w-100 text-center\" dangerouslySetInnerHTML={{__html: err?.violationWord}} />: null} */}\r\n\r\n                            <div className=\"col-12 mt-3 pb-3\">\r\n                                <div className=\"d-flex align-items-center justify-content-end\">\r\n                                    <Button\r\n                                        variant=\"secondary\"\r\n                                        className=\"mr-2\"\r\n                                        onClick={close}\r\n                                    >\r\n                                        Cancel\r\n                                    </Button>\r\n\r\n                                    {!isLoading && !checking ? (\r\n                                        <Button onClick={handleSubmit}>\r\n                                            <i className=\"fa-regular fa-paper-plane\"></i>\r\n                                            Create\r\n                                        </Button>\r\n                                    ) : (\r\n                                        <Button className=\"cursor-processing\">\r\n                                            <div\r\n                                                className=\"spinner-border text-white\"\r\n                                                role=\"status\"\r\n                                                style={{\r\n                                                    width: \"18px\",\r\n                                                    height: \"18px\",\r\n                                                }}\r\n                                            ></div>\r\n                                            Processing...\r\n                                        </Button>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SubTaskForm;\r\n","import React, { useState } from 'react'\r\nimport Button from '../../components/Button'\r\nimport Input from '../../components/form/Input'\r\nimport TaskCategorySelectionBox from './TaskCategorySelectionBox'\r\nimport AssginedToSelection from './AssignedToSelection'\r\nimport PrioritySelection from './PrioritySelection'\r\nimport DatePicker from '../comments/DatePicker'\r\nimport CKEditorComponent from '../../../ckeditor'\r\nimport UploadFilesInLine from '../../../file-upload/UploadFilesInLine'\r\nimport _ from 'lodash'\r\nimport { useDeleteUplaodedFileMutation, useEditSubtaskMutation, useGetTaskDetailsQuery, useLazyGetTaskDetailsQuery } from '../../../services/api/SingleTaskPageApi'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { storeSubTasks } from '../../../services/features/subTaskSlice'\r\nimport { CompareDate } from '../../../utils/dateController'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst dayjs = new CompareDate();\r\n\r\n\r\nconst  SubtTaskEditForm= ({close, editId}) => {\r\n    const { task, subTask } = useSelector(s => s.subTask);\r\n    const dispatch = useDispatch();\r\n\r\n//   form data\r\n  const [title, setTitle] = useState('');\r\n  const [milestone, setMilestone] = useState('');\r\n  const [parentTask, setParentTask] = useState('');\r\n  const [startDate, setStateDate] = useState(new Date());\r\n  const [dueDate, setDueDate] = useState(new Date());\r\n  const [project, setProject] = useState(\"\");\r\n  const [taskCategory, setTaskCategory] = useState('')\r\n  const [assignedTo, setAssignedTo] = useState('');\r\n  const [taskObserver, setTaskObserver] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [status, setStatus] = useState('To Do');\r\n  const [priority, setPriority] = useState('Medium');\r\n  const [estimateTimeHour, setEstimateTimeHour ] = useState('');\r\n  const [estimateTimeMin, setEstimateTimeMin ] = useState('');\r\n  const [attachedFiles, setAttachedFiles] = useState([]);\r\n  const [files, setFiles] = React.useState([]);\r\n\r\n    const params = useParams();\r\n\r\nconst [\r\n    editSubtask,\r\n    { isLoading, error }\r\n] = useEditSubtaskMutation();\r\n\r\nconst [\r\n    getTaskDetails,\r\n    { data: edit, isFetching: editDataIsFetching}\r\n] = useLazyGetTaskDetailsQuery();\r\n\r\n\r\n// find edited subtask\r\nconst editSubTask = subTask.find(d => d.id === editId);\r\n\r\nconst { data: estimation, isFetching } = useGetTaskDetailsQuery(`/${params?.taskId}/json?mode=estimation_time`);\r\n\r\n\r\nconst required_error = error?.status === 422 ? error?.data: null;\r\n\r\n\r\n// handle change\r\nReact.useEffect(() => {\r\n    const formatedDate = (d) => {\r\n        let day = dayjs.dayjs(d).toDate();\r\n        return day;\r\n    }\r\n    getTaskDetails(`/${editId}/json?mode=sub_task_edit`).unwrap().then(res => {\r\n        if(res){\r\n            const assigneeTo = res?.users?.[0];\r\n\r\n            setTitle(res.heading);\r\n            setMilestone(res.milestone_title);\r\n            setParentTask(task?.heading);\r\n            setStateDate(formatedDate(res.start_date));\r\n            setDueDate(formatedDate(res.due_date));\r\n            setProject(res.project_name);\r\n            setTaskCategory(res.task_category);\r\n            setAssignedTo(assigneeTo ? {id: assigneeTo?.id, name: assigneeTo?.name}: '');\r\n            setDescription(res.description);\r\n            setPriority(_.startCase(res.priority));\r\n            setEstimateTimeHour(res.estimate_hours);\r\n            setEstimateTimeMin(res.estimate_minutes);\r\n            setAttachedFiles(res.files);\r\n\r\n\r\n\r\n        }\r\n    }).catch((err) => {\r\n        console.log(err)\r\n    } )\r\n}, [task, editId])\r\n\r\n\r\n\r\n// handle onchange\r\nconst handleChange = (e, setState) =>{\r\n    e.preventDefault();\r\n    let value = e.target.value;\r\n    setState(value);\r\n}\r\n\r\n// handle submission\r\nconst handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  const _startDate = dayjs.dayjs(startDate).format('DD-MM-YYYY');\r\n  const _dueDate = dayjs.dayjs(dueDate).format('DD-MM-YYYY');\r\n\r\n  const fd = new FormData();\r\n    fd.append('milestone_id', task?.milestone_id);\r\n    fd.append('task_id', task?.id);\r\n    fd.append('title', title);\r\n    fd.append('start_date', _startDate);\r\n    fd.append('due_date', _dueDate);\r\n    fd.append('project_id', task?.project_id);\r\n    fd.append('task_category_id', taskCategory?.id);\r\n    fd.append('user_id', assignedTo?.id);\r\n    fd.append('description', description);\r\n    fd.append('board_column_id', task?.board_column_id);\r\n    fd.append('priority', _.lowerCase(priority));\r\n    fd.append('estimate_hours', estimateTimeHour);\r\n    fd.append('estimate_minutes', estimateTimeMin);\r\n    fd.append('image_url', null);\r\n    fd.append('subTaskID', editSubTask?.subtask_id);\r\n    fd.append('addedFiles', null);\r\n    fd.append('_method', 'PUT');\r\n    fd.append('_token', document.querySelector(\"meta[name='csrf-token']\").getAttribute(\"content\"));\r\n    Array.from(files).forEach((file) => {\r\n        fd.append('file[]', file);\r\n    });\r\n\r\n    editSubtask({data: fd, id: editId}).unwrap().then(res => {\r\n            if(res?.status === 'success'){\r\n\r\n                 let _subtask = [...subTask];\r\n                 _subtask = _subtask?.map(s => {\r\n                    if(Number(s?.id) === Number(res?.sub_task?.id)){\r\n                        return res?.sub_task\r\n                    }else return s;\r\n                 })\r\n\r\n                dispatch(storeSubTasks(_subtask));\r\n\r\n                Swal.fire({\r\n                    position: 'center',\r\n                    icon: 'success',\r\n                    title: res?.message,\r\n                    showConfirmButton: false,\r\n                    timer: 2500\r\n                })\r\n\r\n                close();\r\n            }\r\n    }).catch((err) => {\r\n        if(err?.status === 422){\r\n            Swal.fire({\r\n                position: 'center',\r\n                icon: 'error',\r\n                title: \"Please fill out all required fields\",\r\n                showConfirmButton: true,\r\n            })\r\n        }\r\n    })\r\n}\r\n\r\n// handle uplaoded file delete request\r\nconst [deleteUplaodedFile] = useDeleteUplaodedFileMutation();\r\nconst handleFileDelete = (e, file) => {\r\n    // delete\r\n    deleteUplaodedFile(file?.id).unwrap();\r\n\r\n    // delete form ui\r\n    let previousFile = [...attachedFiles];\r\n    let index = previousFile?.indexOf(file);\r\n    previousFile.splice(index,1);\r\n    setAttachedFiles(previousFile);\r\n}\r\n\r\n\r\n// handle loading state\r\nReact.useEffect(() => {\r\n    if (isLoading || editDataIsFetching) {\r\n        document.getElementsByTagName('body')[0].style.cursor = 'progress';\r\n      } else {\r\n        document.getElementsByTagName('body')[0].style.cursor = 'default';\r\n      }\r\n}, [isLoading, editDataIsFetching])\r\n\r\n\r\n\r\nconst handleEditorChange = (e, editor) => {\r\n    const data = editor.getData();\r\n    setDescription(data);\r\n}\r\n\r\nconst estimateError= (err) =>{\r\n    let errText = '';\r\n    let hoursErr = err?.estimate_hours?.[0];\r\n    let minErr = err?.estimate_minutes?.[0];\r\n    if(hoursErr) errText += hoursErr;\r\n    if(minErr) errText += minErr;\r\n    return errText;\r\n}\r\n\r\n  return (\r\n    <>\r\n        <div className='sp1-subtask-form --modal-panel'>\r\n            <div className='sp1-subtask-form --modal-panel-header'>\r\n                 <h6>\r\n                        Edit Sub Task\r\n                        {editDataIsFetching && <div\r\n                            className=\"spinner-border text-dark ml-2\"\r\n                            role=\"status\"\r\n                            style={{\r\n                                width: '16px',\r\n                                height: '16px',\r\n                                border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                                borderRightColor: 'transparent'\r\n                            }}\r\n                        />}\r\n                </h6>\r\n                <Button\r\n                    aria-label=\"close-modal\"\r\n                    className='_close-modal'\r\n                    onClick={close}\r\n                >\r\n                    <i className=\"fa-solid fa-xmark\" />\r\n                </Button>\r\n            </div>\r\n\r\n            <div className=\"sp1-subtask-form --modal-panel-body position-relative\">\r\n                {editDataIsFetching &&\r\n                    <div className='w-100' style={{\r\n                        width: '100%',\r\n                        height: '100%',\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        left: 0,\r\n                        zIndex: 1\r\n                    }}/>\r\n                }\r\n                <div className='sp1-subtask-form --form row'>\r\n                    <div className=\"col-6\">\r\n                        <Input\r\n                            id='title'\r\n                            label=\"Title\"\r\n                            type=\"text\"\r\n                            placeholder='Enter a task title'\r\n                            name='title'\r\n                            required={true}\r\n                            value={title}\r\n                            error= {required_error?.title?.[0]}\r\n                            onChange={e => handleChange(e, setTitle)}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label\r\n                                className={`f-14 text-dark-gray mb-1`}\r\n                                data-label=\"true\"\r\n                            >\r\n                                Milestone\r\n                            </label>\r\n                            <input\r\n                                className={`form-control height-35 f-14`}\r\n                                readOnly\r\n                                defaultValue={milestone}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label\r\n                                className={`f-14 text-dark-gray mb-1`}\r\n                                data-label=\"true\"\r\n                            >\r\n                                Parent Task\r\n                            </label>\r\n                            <input\r\n                                className={`form-control height-35 f-14`}\r\n                                readOnly\r\n                                defaultValue={parentTask}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label\r\n                                className={`f-14 text-dark-gray mb-1`}\r\n                                data-label=\"true\"\r\n                            >\r\n                                Project\r\n                            </label>\r\n                            <input\r\n                                className={`form-control height-35 f-14`}\r\n                                readOnly\r\n                                defaultValue={project}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\">Start Date <sup className='f-14'>*</sup></label>\r\n                            <div className=\"form-control height-35 f-14\">\r\n                                <DatePicker\r\n                                    placeholderText={`Ex: ${dayjs.dayjs().format('DD-MM-YYYY')}`}\r\n                                    minDate={dayjs.dayjs(task?.start_date).toDate()}\r\n                                    maxDate={dueDate || dayjs.dayjs(task?.due_date).toDate()}\r\n                                    date={startDate}\r\n                                    setDate={setStateDate}\r\n                                />\r\n                            </div>\r\n                            {\r\n                                required_error?.start_date?.[0] &&\r\n                               <div style={{color: 'red'}}>{required_error?.start_date?.[0]}</div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='col-6'>\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\">Due Date <sup className='f-14'>*</sup></label>\r\n                            <div className=\"form-control height-35 f-14\">\r\n                                <DatePicker\r\n                                    placeholderText={`Ex: ${dayjs.dayjs().format('DD-MM-YYYY')}`}\r\n                                    minDate={startDate || dayjs.dayjs(task?.start_date).toDate()}\r\n                                    maxDate={dayjs.dayjs(task?.due_date).toDate()}\r\n                                    date={dueDate}\r\n                                    setDate={setDueDate}\r\n                                />\r\n                            </div>\r\n                            {\r\n                                required_error?.due_date?.[0] &&\r\n                               <div style={{color: 'red'}}>{required_error?.due_date?.[0]}</div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <TaskCategorySelectionBox selected={taskCategory} onSelect={setTaskCategory}  />\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <AssginedToSelection selected={assignedTo} onSelect={setAssignedTo} />\r\n                    </div>\r\n{/*\r\n                    <div className=\"col-6\">\r\n                        <TaskObserverSelection />\r\n                    </div> */}\r\n\r\n                    {/* <div className=\"col-6\">\r\n                        <StatusSelection />\r\n                    </div> */}\r\n\r\n                    <div className=\"col-6\">\r\n                        <PrioritySelection selected={priority} setSelected={setPriority} />\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\" className='f-14 text-dark-gray'>Set Estimate Time <sup className='f-14'> * </sup></label>\r\n                            <div className=\"d-flex align-items-center\">\r\n                                <input\r\n                                    type='number'\r\n                                    onWheel={e => e.currentTarget.blur()}\r\n                                    className=\"form-control height-35 f-14 mr-2\"\r\n                                    value={estimateTimeHour}\r\n                                    onChange={(e) => handleChange(e, setEstimateTimeHour)}\r\n                                /> hrs\r\n                                <input\r\n                                    type='number'\r\n                                    onWheel={e => e.currentTarget.blur()}\r\n                                    className=\"form-control height-35 f-14 mr-2 ml-2\"\r\n                                    value={estimateTimeMin}\r\n                                    onChange={e => handleChange(e, setEstimateTimeMin)}\r\n                                /> min\r\n                            </div>\r\n\r\n                            <div style={{color: 'red'}}>\r\n                                {estimateError(required_error)}\r\n                            </div>\r\n                            <div style={{color: 'red'}}>\r\n                            Estimation time can't exceed {estimation?.hours_left} hours {estimation?.minutes_left} minutes\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\"> Description </label>\r\n                            <div className='sp1_st_write_comment_editor' style={{minHeight: '100px'}}>\r\n                                <CKEditorComponent data={description} onChange={handleEditorChange} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className='col-12'>\r\n                        <UploadFilesInLine\r\n                            onPreviousFileDelete={handleFileDelete}\r\n                            previous={attachedFiles}\r\n                            files={files}\r\n                            setFiles={setFiles}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-12 mt-3\">\r\n\r\n                        <div className=\"d-flex align-items-center justify-content-end\">\r\n                            <Button\r\n                                variant='secondary'\r\n                                className='mr-2'\r\n                                onClick={close}\r\n                            >\r\n                                Cancel\r\n                            </Button>\r\n\r\n                            {!isLoading ? (\r\n                                <Button onClick={handleSubmit}>\r\n                                    <i className=\"fa-regular fa-paper-plane\"></i>\r\n                                    Update\r\n                                </Button>\r\n                            ) : (\r\n                            <Button className='cursor-processing'>\r\n                                <div\r\n                                    className=\"spinner-border text-white\"\r\n                                    role=\"status\"\r\n                                    style={{\r\n                                        width: '18px',\r\n                                        height: '18px',\r\n                                    }}\r\n                                >\r\n                                </div>\r\n                                Processing...\r\n                            </Button>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SubtTaskEditForm\r\n","import React from \"react\";\r\nimport SubTask from \"./SubTask\";\r\nimport SubTaskForm from \"./SubTaskForm\";\r\nimport Button from \"../../components/Button\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    useGetTaskDetailsQuery,\r\n    useLazyGetInProgressTaskStatusQuery,\r\n    useLazyGetTaskDetailsQuery,\r\n} from \"../../../services/api/SingleTaskPageApi\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { storeSubTasks } from \"../../../services/features/subTaskSlice\";\r\nimport SubtTaskEditForm from \"./SubTaskEditForm\";\r\nimport CustomModal from \"../../components/CustomModal\";\r\nimport {useWindowSize} from 'react-use';\r\nimport Modal from \"../../components/Modal\";\r\nimport _ from \"lodash\";\r\nimport { User } from \"../../../utils/user-details\";\r\nimport { SingleTask } from '../../../utils/single-task';\r\nimport { subTaskCreationPermision } from \"../../permissions\";\r\nimport { toast } from \"react-toastify\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst SubTaskSection = ({status}) => {\r\n    const { task, subTask } = useSelector((s) => s.subTask);\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const [edit, setEdit] = React.useState(null);\r\n    const [formMode, setFormMode] = React.useState(\"add\");\r\n    const [isTaskModalOpen, setIsTaskModalOpen] = React.useState(false);\r\n    const [subtaskModalToggleRef, setSubtaskModalToggleRef] =\r\n        React.useState(null);\r\n    const {width} = useWindowSize();\r\n    const auth = new User(window?.Laravel?.user);\r\n    \r\n    // check in progress task history \r\n    const [getInProgressTaskStatus, { isFetching: inProgressTaskStatus }] = useLazyGetInProgressTaskStatusQuery();\r\n\r\n    const toggleAddButton = async () => {\r\n        // try{\r\n        //     const res = await getInProgressTaskStatus(`/${auth?.getId()}`).unwrap();\r\n        //     if(res.status === 400){\r\n        //         toast.error(res?.message, {theme: 'colored'})\r\n        //     }else{\r\n        //         setIsTaskModalOpen(!isTaskModalOpen);\r\n        //     }\r\n \r\n        // }catch(err){\r\n        //     console.log(err)\r\n        // }\r\n\r\n        setIsTaskModalOpen(!isTaskModalOpen);\r\n    }\r\n\r\n    const closeAddModal = () => {\r\n        setIsTaskModalOpen(false);\r\n        setFormMode(\"add\");\r\n        navigate(`/account/tasks/${task?.id}`);\r\n    };\r\n    const toggleEditButton = (e) => {\r\n        setFormMode(\"edit\");\r\n        setIsTaskModalOpen(!isTaskModalOpen);\r\n    };\r\n\r\n    // edit modal form control\r\n    const toggleEditForm = (e, id) => {\r\n        e.preventDefault();\r\n        setEdit(id);\r\n        setIsTaskModalOpen(true);\r\n    };\r\n\r\n    const closeEditForm = () => {\r\n        setEdit(null);\r\n        setIsTaskModalOpen(false);\r\n    };\r\n\r\n    // handle create new subtask\r\n    // const handleCreateSubTask = () => {\r\n    //     // if parent task has not already any subtask\r\n    //     // show the Working Environment form\r\n    //     // else create from\r\n    // };\r\n\r\n    // edit modal form control end\r\n    // const {\r\n    //   data,\r\n    //   isFetching\r\n    // } = useGetTaskDetailsQuery(`/${task?.id}/json?mode=sub_task`, {\r\n    //   skip: subTask?.length\r\n    // });\r\n\r\n    // fetch all task\r\n    const [getTaskDetails, { isFetching }] = useLazyGetTaskDetailsQuery(\"\", {\r\n        skip: subTask?.length,\r\n    });\r\n\r\n\r\n\r\n    // useEffect(()=>{\r\n    //     console.log({task,subTask,isFetching});\r\n    //   },[task,subTask,isFetching])\r\n\r\n\r\n\r\n    // if task notes fetch completed store data into redux store\r\n    React.useEffect(() => {\r\n        if (task && task.id) {\r\n            getTaskDetails(`/${task?.id}/json?mode=sub_task`)\r\n                .unwrap()\r\n                .then((res) => {\r\n                    if (res) {\r\n                        dispatch(storeSubTasks(res));\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        }\r\n    }, [task]);\r\n\r\n    // React.useEffect(() => {\r\n    //   if(!isFetching && data){\r\n    //     dispatch(storeSubTasks(data));\r\n    //   }\r\n    // },[data])\r\n\r\n    const Task = new SingleTask(task);\r\n\r\n    return (\r\n        <div\r\n            className=\"sp1_task_right_card mb-3\"\r\n            ref={setSubtaskModalToggleRef}\r\n            style={{ zIndex: isTaskModalOpen ? \"99\" : \"\" }}\r\n        >\r\n            {\r\n                width > 1200 ?\r\n                <React.Fragment>\r\n                    {/* modal */}\r\n                        <CustomModal\r\n                            toggleRef={subtaskModalToggleRef}\r\n                            isOpen={isTaskModalOpen}\r\n                            close={closeAddModal}\r\n                            formMode={formMode}\r\n                        >\r\n                            {\r\n                            // !edit ?\r\n                                <SubTaskForm\r\n                                    close={closeAddModal}\r\n                                    isFirstSubtask={!Task.workEnvData}\r\n                                /> \r\n                            // : <SubtTaskEditForm close={closeEditForm} editId={edit} /> \r\n                            }\r\n                        </CustomModal>\r\n                </React.Fragment>:\r\n                <React.Fragment>\r\n                    {/* modal */}\r\n                        <Modal isOpen={isTaskModalOpen}>\r\n                            {!edit ? (\r\n                                <SubTaskForm\r\n                                    close={closeAddModal}\r\n                                    isFirstSubtask={!Task.workEnvData}\r\n                                />\r\n                            ) : (<SubtTaskEditForm close={closeEditForm} editId={edit} /> )}\r\n                        </Modal>\r\n                </React.Fragment>\r\n            }\r\n\r\n            {/* left dropdown */}\r\n\r\n            {isTaskModalOpen && (\r\n                <button\r\n                    aria-label=\"openCommentModalButton\"\r\n                    \r\n                    className=\"sp1_task_right_dl_toggle\"\r\n                    onClick={toggleAddButton}\r\n                    style={{ zIndex: isTaskModalOpen ? \"110\" : \"\" }}\r\n                >\r\n                    <i\r\n                        className={`fa-solid fa-circle-chevron-${\r\n                            isTaskModalOpen ? \"right\" : \"left\"\r\n                        }`}\r\n                        style={{ color: \"#276fec\" }}\r\n                    />\r\n                </button>\r\n            )}\r\n            {/* left dropdown */}\r\n\r\n            <div className=\"d-flex border-bottom pb-2 align-items-center justify-content-between mb-2 font-weight-bold\">\r\n                <div className=\"f-16\">\r\n                    <span>Sub Task</span>\r\n                    {isFetching && (\r\n                        <div\r\n                            className=\"spinner-border text-dark ml-2\"\r\n                            role=\"status\"\r\n                            style={{\r\n                                width: \"16px\",\r\n                                height: \"16px\",\r\n                                border: \"0.14em solid rgba(0, 0, 0, .25)\",\r\n                                borderRightColor: \"transparent\",\r\n                            }}\r\n                        />\r\n                    )}\r\n                </div>\r\n\r\n               {\r\n                    subTaskCreationPermision({task: Task, auth, status}) && \r\n                        <Button\r\n                            variant=\"tertiary\"\r\n                            className=\"sp1_tark_add_item\"\r\n                            aria-label=\"addButton\"\r\n                            onClick={toggleAddButton}\r\n                        >\r\n                            {isTaskModalOpen ? (\r\n                                <React.Fragment>\r\n                                    <i className=\"fa-solid fa-xmark\" style={{ fontSize: \"12px\" }} /> Close\r\n                                </React.Fragment>\r\n                            ) : (\r\n                                <React.Fragment>\r\n                                    {inProgressTaskStatus ? \r\n                                    <Loader title=\"Loading...\" />\r\n                                    : <><i className=\"fa-solid fa-plus\" style={{ fontSize: \"12px\" }} />  Sub Task</>}\r\n                                </React.Fragment>\r\n                            )}\r\n                        </Button>\r\n               } \r\n            </div>\r\n\r\n            <div className=\"sp1_task_right_card--body\">\r\n                {!isFetching ? (\r\n                    _.size(subTask) !== 0 ? (\r\n                        subTask?.map((sub) => (\r\n                            <SubTask\r\n                                key={sub.id}\r\n                                subTask={sub}\r\n                                task={task}\r\n                                status={status}\r\n                                toggleEditForm={toggleEditForm}\r\n                            />\r\n                        ))\r\n                    ) : (\r\n                        <div\r\n                            className=\"d-flex align-items-center justify-content-center\"\r\n                            style={{\r\n                                color: \"#B4BCC4\",\r\n                                fontSize: \"15px\",\r\n                                textAlign: \"center\",\r\n                                height: \"100%\",\r\n                                width: \"100%\",\r\n                            }}\r\n                        >\r\n                            Sub Task is Not Available\r\n                        </div>\r\n                    )\r\n                ) : (\r\n                    <div\r\n                        className=\"d-flex align-items-center justify-content-center\"\r\n                        style={{\r\n                            color: \"#5A6169\",\r\n                            fontSize: \"15px\",\r\n                            textAlign: \"center\",\r\n                            height: \"100%\",\r\n                            width: \"100%\",\r\n                        }}\r\n                    >\r\n                        <div\r\n                            className=\"spinner-border text-dark ml-2\"\r\n                            role=\"status\"\r\n                            style={{\r\n                                width: \"16px\",\r\n                                height: \"16px\",\r\n                                border: \"0.14em solid rgba(0, 0, 0, .25)\",\r\n                                borderRightColor: \"transparent\",\r\n                                marginRight: \"10px\",\r\n                            }}\r\n                        />\r\n                        Loading...\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SubTaskSection;","import React, { useState, useEffect } from \"react\";\r\nimport _ from \"lodash\";\r\nimport Modal from \"../../components/Modal\";\r\nimport { useLocation, useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport Card from \"../../../global/Card\";\r\nimport styles from \"./task-edit-form.module.css\";\r\nimport { CompareDate } from \"../../../utils/dateController\";\r\nimport Input from \"../../components/form/Input\";\r\nimport DatePicker from \"../comments/DatePicker\";\r\nimport CKEditorComponent from \"../../../ckeditor\";\r\nimport Button from  '../../../global/Button'\r\nimport TaskCategorySelectionBox from \"./TaskCategorySelectionBox\";\r\nimport AssignedToSelection from \"./AssignedToSelection\";\r\nimport PrioritySelection from \"./PrioritySelection\";\r\nimport UploadFilesInLine from \"../../../file-upload/UploadFilesInLine\";\r\n\r\nimport {\r\n    useDeleteUplaodedFileMutation,\r\n    useGetTaskDetailsQuery,\r\n    useEditSubtaskMutation,\r\n} from \"../../../services/api/SingleTaskPageApi\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { storeSubTasks } from \"../../../services/features/subTaskSlice\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useUpdateTaskMutation } from \"../../../services/api/tasksApiSlice\";\r\nimport { useGetMilestoneDetailsQuery, useLazyGetMilestoneDetailsQuery } from \"../../../services/api/projectApiSlice\";\r\nimport { Listbox } from \"@headlessui/react\";\r\nimport Loader from \"../../../global/Loader\";\r\nimport { convertTime } from \"../../../utils/converTime\";\r\n\r\nconst dayjs = new CompareDate();\r\n\r\n// Edit form Provider\r\nconst EditFormProvider = ({ task }) => {\r\n    const [searchParams] = useSearchParams(); // get search params\r\n    const isVisible = searchParams.get(\"modal\") === \"edit\"; // check has modal\r\n    const taskId = searchParams.get(\"task\"); // get task id\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    const close = () => navigate(location.pathname, {replace: true});\r\n\r\n\r\n    const [updateTask, { isLoading, error }] = useUpdateTaskMutation();\r\n    // handle submission\r\n    const handleSubmission = (formData) => {\r\n        updateTask(formData).unwrap().then(res => {\r\n            if(res?.status === 200){\r\n                toast.success(\"Task Updated successfully!\");\r\n                close();\r\n            }\r\n        }).catch((err) => {\r\n            if(err?.status === 422){\r\n                toast.warn(\"Please fill out all required fields\")\r\n            }\r\n        })\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <Modal isOpen={isVisible}>\r\n            <Card className={styles.form_card}>\r\n                <Card.Head\r\n                  onClose={close}\r\n                  className={styles.form_card_head}\r\n                >\r\n                    <h6> Edit Task # {taskId} </h6>\r\n                </Card.Head>\r\n\r\n                <Card.Body className={styles.form_card_body}>\r\n                    <div className=\"\">\r\n                        {task && (\r\n                            <TaskEditForm\r\n                                task={task}\r\n                                onSubmit={handleSubmission}\r\n                                isLoading={isLoading}\r\n                                onClose={close}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default EditFormProvider;\r\n\r\nconst TaskEditForm = ({ task, onSubmit, isLoading, onClose}) => {\r\n    const editDataIsFetching = !task;\r\n    //form data\r\n    const [title, setTitle] = useState(task.title);\r\n    const [milestone, setMilestone] = useState({id: task.milestoneID, milestone_title: task.milestoneTitle});\r\n    const [parentTask, setParentTask] = useState(task.parentTaskTitle);\r\n    const [startDate, setStateDate] = useState(new Date(task.startDate));\r\n    const [dueDate, setDueDate] = useState(new Date(task.dueDate));\r\n    const [project, setProject] = useState(task.projectName);\r\n    const [taskCategory, setTaskCategory] = useState({\r\n        id: task.category.id,\r\n        category_name: task.category.name,\r\n    });\r\n    const [assignedTo, setAssignedTo] = useState({\r\n        id: task.assigneeTo.id,\r\n        name: task.assigneeTo.name,\r\n    });\r\n    const [description, setDescription] = useState(task.description);\r\n    const [priority, setPriority] = useState(task.priority);\r\n    const [estimateTimeHour, setEstimateTimeHour] = useState(\r\n        task.estimateHours\r\n    );\r\n    const [estimateTimeMin, setEstimateTimeMin] = useState(\r\n        task.estimateMinutes\r\n    );\r\n    const [attachedFiles, setAttachedFiles] = useState([]);\r\n    const [files, setFiles] = React.useState([]);\r\n    const [error, setError] = useState(null);\r\n\r\n    const { data: estimation, isFetching } = useGetTaskDetailsQuery(\r\n        `/${task.id}/json?mode=estimation_time`\r\n    );\r\n\r\n    const required_error = error?.status === 422 ? error?.data : null;\r\n\r\n    // handle onchange\r\n    const handleChange = (e, setState) => {\r\n        e.preventDefault();\r\n        let value = e.target.value;\r\n        setState(value);\r\n    };\r\n\r\n\r\n    // check validation\r\n    const isValid = () => {\r\n      let count = 0;\r\n      const err = new Object();\r\n\r\n      const errorMessages = {\r\n        requiredField: 'This field is required.',\r\n        startDate: 'Please select a start date.',\r\n        dueDate: 'Please select a due date.',\r\n        taskCategory: 'Please select a task category.',\r\n        assignedTo: 'Please select a user.',\r\n        overloadedUser: (name, gender) =>\r\n          `You cannot assign this task to ${name} because ${\r\n            gender === 'male' ? 'he ' : 'she '\r\n          } has more than 10 submittable tasks.`,\r\n        description: 'This field is required.',\r\n      };\r\n\r\n      const showError = (field) => {\r\n        err[field] = errorMessages[field];\r\n        count++;\r\n      }\r\n\r\n\r\n      if(!title) showError('title');\r\n      if(!startDate) showError('startDate');\r\n      if(!dueDate) showError('dueDate');\r\n      if(!taskCategory) showError('taskCategory');\r\n      if(!assignedTo) showError('assignedTo');\r\n\r\n      if (assignedTo && assignedTo?.isOverloaded) {\r\n        err.assignedTo = overloadedUser(assignedTo.name, genderPronoun);\r\n        count++;\r\n      }\r\n\r\n      if(!description) showError('description');\r\n\r\n      setError(error);\r\n      return count === 0;\r\n\r\n    }\r\n\r\n\r\n\r\n    const handleSubmit = () => {\r\n         //form data\r\n         const _startDate = dayjs.dayjs(startDate).format(\"DD-MM-YYYY\");\r\n         const _dueDate = dayjs.dayjs(dueDate).format(\"DD-MM-YYYY\");\r\n\r\n         const fd = new FormData();\r\n         fd.append(\"milestone_id\", task?.milestoneID);\r\n         fd.append(\"task_id\", task?.id);\r\n         fd.append(\"heading\", title);\r\n         fd.append(\"start_date\", _startDate);\r\n         fd.append(\"due_date\", _dueDate);\r\n         fd.append(\"project_id\", task?.projectId);\r\n         fd.append(\"category_id\", taskCategory?.id);\r\n         fd.append(\"user_id\", assignedTo?.id);\r\n         fd.append(\"description\", description);\r\n         fd.append(\"board_column_id\", task?.boardColumn.id);\r\n         fd.append(\"priority\", _.lowerCase(priority));\r\n         fd.append(\"estimate_hours\", estimateTimeHour);\r\n         fd.append(\"estimate_minutes\", estimateTimeMin);\r\n         fd.append(\"deliverable_id\", milestone?.deliverable_type ?? '');\r\n         fd.append(\"image_url\", null);\r\n         fd.append(\"addedFiles\", null);\r\n         fd.append(\"_method\", \"POST\");\r\n         fd.append(\r\n             \"_token\",\r\n             document\r\n                 .querySelector(\"meta[name='csrf-token']\")\r\n                 .getAttribute(\"content\")\r\n         );\r\n         Array.from(files).forEach((file) => {\r\n             fd.append(\"file[]\", file);\r\n         });\r\n\r\n        if(isValid()){\r\n         onSubmit(fd);\r\n        }else{\r\n         toast.warn('Please fill out all required fields!');\r\n        }\r\n\r\n    };\r\n\r\n\r\n      const {data: projects, isFetching: isFetchingMilestone} = useGetMilestoneDetailsQuery(task?.projectId)\r\n\r\n\r\n\r\n    // handle uploaded file delete request\r\n    const [deleteUplaodedFile] = useDeleteUplaodedFileMutation();\r\n    const handleFileDelete = (e, file) => {\r\n        // delete\r\n        deleteUplaodedFile(file?.id).unwrap();\r\n\r\n        // delete form ui\r\n        let previousFile = [...attachedFiles];\r\n        let index = previousFile?.indexOf(file);\r\n        previousFile.splice(index, 1);\r\n        setAttachedFiles(previousFile);\r\n    };\r\n\r\n    // handle loading state\r\n    React.useEffect(() => {\r\n        if (isLoading || editDataIsFetching) {\r\n            document.getElementsByTagName(\"body\")[0].style.cursor = \"progress\";\r\n        } else {\r\n            document.getElementsByTagName(\"body\")[0].style.cursor = \"default\";\r\n        }\r\n    }, [isLoading, editDataIsFetching]);\r\n\r\n    //   editor\r\n    const handleEditorChange = (e, editor) => {\r\n        const data = editor.getData();\r\n        setDescription(data);\r\n    };\r\n\r\n    const estimateError = (err) => {\r\n        let errText = \"\";\r\n        let hoursErr = err?.estimate_hours?.[0];\r\n        let minErr = err?.estimate_minutes?.[0];\r\n        if (hoursErr) errText += hoursErr;\r\n        if (minErr) errText += minErr;\r\n        return errText;\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"sp1-subtask-form --modal-panel-body position-relative\">\r\n                {editDataIsFetching && (\r\n                    <div\r\n                        className=\"w-100\"\r\n                        style={{\r\n                            width: \"100%\",\r\n                            height: \"100%\",\r\n                            position: \"absolute\",\r\n                            top: 0,\r\n                            left: 0,\r\n                            zIndex: 1,\r\n                        }}\r\n                    />\r\n                )}\r\n                <div className=\"sp1-subtask-form --form row\">\r\n                    <div className=\"col-6\">\r\n                        <Input\r\n                            id=\"title\"\r\n                            label=\"Title\"\r\n                            type=\"text\"\r\n                            placeholder=\"Enter a task title\"\r\n                            name=\"title\"\r\n                            required={true}\r\n                            value={title}\r\n                            error={required_error?.title?.[0]}\r\n                            onChange={(e) => handleChange(e, setTitle)}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label\r\n                                className={`f-14 text-dark-gray mb-1`}\r\n                                data-label=\"true\"\r\n                            >\r\n                                Project\r\n                            </label>\r\n                            <input\r\n                                className={`form-control height-35 f-14`}\r\n                                readOnly\r\n                                defaultValue={project}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    {/* Project Milestone Selection Menu */}\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <Listbox value={milestone} onChange={setMilestone}>\r\n                            <div className=\"form-group position-relative my-3\">\r\n                                <label\r\n                                    className={`f-14 text-dark-gray mb-1`}\r\n                                    data-label=\"true\"\r\n                                >\r\n                                    Milestone\r\n                                </label>\r\n                                <Listbox.Button className=\" sp1-selection-display-button form-control height-35 f-14 sp1-selection-display bg-white w-100\">\r\n                                    <span className=\"singleline-ellipsis\" >{milestone?.milestone_title ?? '--'}</span>\r\n                                    <div className='__icon'>\r\n                                        <i className=\"fa-solid fa-sort\"></i>\r\n                                    </div>\r\n                                </Listbox.Button>\r\n                                <Listbox.Options  className=\"sp1-select-options\">\r\n                                    {isFetchingMilestone && <span className=\"w-full d-block py-2 px-3\">Loading...</span>}\r\n\r\n                                    {_.map(projects?.milestones, (milestone) => (\r\n                                        <Listbox.Option\r\n                                            key={milestone.id}\r\n                                            className={({ active }) =>  `sp1-select-option ${styles.list_border}${ active ? 'active' : ''}`}\r\n                                            value={milestone}\r\n                                        >\r\n                                          {milestone?.milestone_title}\r\n                                        </Listbox.Option>\r\n                                    ))}\r\n                                </Listbox.Options>\r\n\r\n                                {error?.milestone && (\r\n                                    <div style={{ color: \"red\" }}>\r\n                                        {error?.milestone}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </Listbox>\r\n                    </div>\r\n\r\n                    {/* Project Deliverable */}\r\n                    <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group my-3\">\r\n                                    <label\r\n                                        className={`f-14 text-dark-gray mb-1`}\r\n                                        data-label=\"true\"\r\n                                    >\r\n                                        Project Deliverable\r\n                                    </label>\r\n                                    <div className=\"sp1-selection-display-button form-control height-35 f-14 sp1-selection-display bg-white w-100\">\r\n                                        <span className=\"singleline-ellipsis\">{isFetchingMilestone ? 'Loading...' : _.find(projects?.milestones, d => d.id === milestone.id)?.deliverable_type}</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                     {/*task.isSubtask && (\r\n                        <div className=\"col-6\">\r\n                            <div className=\"form-group my-3\">\r\n                                <label\r\n                                    className={`f-14 text-dark-gray mb-1`}\r\n                                    data-label=\"true\"\r\n                                >\r\n                                    Parent Task\r\n                                </label>\r\n                                <input\r\n                                    className={`form-control height-35 f-14`}\r\n                                    readOnly\r\n                                    defaultValue={parentTask}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    )} */}\r\n\r\n\r\n\r\n                    <div className=\"col-6\">\r\n\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\">\r\n                                Start Date <sup className=\"f-14\">*</sup>\r\n                            </label>\r\n                            <div className=\"form-control height-35 f-14\">\r\n                                <DatePicker\r\n                                    placeholderText={`Ex: ${dayjs\r\n                                        .dayjs()\r\n                                        .format(\"DD-MM-YYYY\")}`}\r\n                                    minDate={dayjs\r\n                                        .dayjs(task?.start_date)\r\n                                        .toDate()}\r\n                                    maxDate={\r\n                                        dueDate ||\r\n                                        dayjs.dayjs(task?.due_date).toDate()\r\n                                    }\r\n                                    date={startDate}\r\n                                    setDate={setStateDate}\r\n                                />\r\n                            </div>\r\n                            {required_error?.start_date?.[0] && (\r\n                                <div style={{ color: \"red\" }}>\r\n                                    {required_error?.start_date?.[0]}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\">\r\n                                Due Date <sup className=\"f-14\">*</sup>\r\n                            </label>\r\n                            <div className=\"form-control height-35 f-14\">\r\n                                <DatePicker\r\n                                    placeholderText={`Ex: ${dayjs\r\n                                        .dayjs()\r\n                                        .format(\"DD-MM-YYYY\")}`}\r\n                                    minDate={\r\n                                        startDate ||\r\n                                        dayjs.dayjs(task?.start_date).toDate()\r\n                                    }\r\n                                    maxDate={dayjs\r\n                                        .dayjs(task?.due_date)\r\n                                        .toDate()}\r\n                                    date={dueDate}\r\n                                    setDate={setDueDate}\r\n                                />\r\n                            </div>\r\n                            {required_error?.due_date?.[0] && (\r\n                                <div style={{ color: \"red\" }}>\r\n                                    {required_error?.due_date?.[0]}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <TaskCategorySelectionBox\r\n                            selected={taskCategory}\r\n                            onSelect={setTaskCategory}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <AssignedToSelection\r\n                            selected={assignedTo}\r\n                            onSelect={setAssignedTo}\r\n                        />\r\n                    </div>\r\n                    {/*\r\n                    <div className=\"col-6\">\r\n                        <TaskObserverSelection />\r\n                    </div> */}\r\n\r\n                    {/* <div className=\"col-6\">\r\n                        <StatusSelection />\r\n                    </div> */}\r\n\r\n                    <div className=\"col-6\">\r\n                        <PrioritySelection\r\n                            selected={priority}\r\n                            setSelected={setPriority}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\" className=\"f-14 text-dark-gray\">\r\n                                Set Estimate Time{\" \"}\r\n                                <sup className=\"f-14\"> * </sup>\r\n                            </label>\r\n                            <div className=\"d-flex align-items-center\">\r\n                                <input\r\n                                    type=\"number\"\r\n                                    onWheel={(e) => e.currentTarget.blur()}\r\n                                    className=\"form-control height-35 f-14 mr-2\"\r\n                                    value={estimateTimeHour}\r\n                                    onChange={(e) =>\r\n                                        handleChange(e, setEstimateTimeHour)\r\n                                    }\r\n                                />{\" \"}\r\n                                hrs\r\n                                <input\r\n                                    type=\"number\"\r\n                                    onWheel={(e) => e.currentTarget.blur()}\r\n                                    className=\"form-control height-35 f-14 mr-2 ml-2\"\r\n                                    value={estimateTimeMin}\r\n                                    onChange={(e) =>\r\n                                        handleChange(e, setEstimateTimeMin)\r\n                                    }\r\n                                />{\" \"}\r\n                                min\r\n                            </div>\r\n\r\n                            <div style={{ color: \"red\" }}>\r\n                                {estimateError(required_error)}\r\n                            </div>\r\n                            <div style={{ color: \"red\" }}>\r\n                                {/* {console.log({a: projects?.minutes_left})} */}\r\n                                Estimation time can't exceed{\" \"}\r\n                                {convertTime(Number(projects?.minutes_left) > 0 ? Number(projects?.minutes_left) : 0)}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\"> Description </label>\r\n                            <div\r\n                                className=\"sp1_st_write_comment_editor\"\r\n                                style={{ minHeight: \"100px\" }}\r\n                            >\r\n                                <CKEditorComponent\r\n                                    data={description}\r\n                                    onChange={handleEditorChange}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12\">\r\n                        <UploadFilesInLine\r\n                            onPreviousFileDelete={handleFileDelete}\r\n                            previous={attachedFiles}\r\n                            files={files}\r\n                            setFiles={setFiles}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-12 mt-3 mb-5\">\r\n                        <div className=\"d-flex align-items-center justify-content-end\">\r\n                            <Button\r\n                                variant=\"secondary\"\r\n                                className=\"mr-2\"\r\n                                onClick={onClose}\r\n                            >\r\n                                Cancel\r\n                            </Button>\r\n\r\n\r\n                            <Button\r\n                              onClick={handleSubmit}\r\n                              isLoading={isLoading}\r\n                            >\r\n                                <i className=\"fa-regular fa-paper-plane\"></i>\r\n                                Update\r\n                            </Button>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport CustomModal from \"../../components/CustomModal\";\r\nimport Button from \"../../components/Button\";\r\nimport { User } from \"../../../utils/user-details\";\r\nimport dayjs from \"dayjs\";\r\nimport FileUploader from \"../../../file-upload/FileUploader\";\r\nimport { useWindowSize } from 'react-use'\r\nimport Modal from \"../../components/Modal\";\r\n\r\nconst SubmitionView = ({ isOpen, close, toggle, data, isLoading }) => {\r\n    const links = _.compact(_.split(data?.links, ','));\r\n    const attaches = _.compact(_.split(data?.attaches, ',')); \r\n    const { width: deviceWidth } = useWindowSize();\r\n\r\n    const content = () => {\r\n        return(\r\n            <div className=\"sp1-subtask-form --modal-panel --modal-submitted\">\r\n                <div className=\"sp1-subtask-form --modal-panel-header\">\r\n                    <div className=\"d-flex align-items-center\">\r\n                        <h6>Submitted Task </h6>\r\n                        {isLoading && (\r\n                            <div\r\n                                className=\"spinner-border text-dark ml-2\"\r\n                                role=\"status\"\r\n                                style={{\r\n                                    width: \"16px\",\r\n                                    height: \"16px\",\r\n                                    border: \"0.14em solid rgba(0, 0, 0, .25)\",\r\n                                    borderRightColor: \"transparent\",\r\n                                }}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                    <Button\r\n                        aria-label=\"close-modal\"\r\n                        className=\"_close-modal\"\r\n                        onClick={close}\r\n                    >\r\n                        <i className=\"fa-solid fa-xmark\" />\r\n                    </Button>\r\n                </div>\r\n\r\n                <div className=\"sp1-subtask-form --modal-panel-body --modal-submitted-body\">\r\n                    <div className=\"mt-3 d-flex flex-column\" style={{ gap: \"10px\" }} >\r\n                        <div>\r\n                            <span className=\"fs-14 font-weight-bold d-block mb-3\" style={{ color: \"#767581\" }} >\r\n                                Submitted By\r\n                            </span>\r\n\r\n                            <div className=\"d-flex align-items-center\">\r\n                                <div>\r\n                                    {\r\n                                        data?.image ? (\r\n                                            <img\r\n                                            src={`/user-uploads/avatar/${data?.image}`}\r\n                                            alt={data?.name}\r\n                                            width={32}\r\n                                            height={32}\r\n                                            className=\"rounded-circle\"\r\n                                        />):(\r\n                                            <div className=\"sp1-item-center rounded-circle border\" style={{ width: '32px', height: '32px' }} >\r\n                                                <span className=\"font-weight-bold\" style={{fontSize:'1.2rem'}}>{data?.name?.slice(0,1)}</span>\r\n                                            </div>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                                <div className=\"d-flex flex-column px-2\">\r\n                                    <a className=\"text-underline text-primary\" href={`/account/employees/${data?.user_id}`} style={{ color: \"#767581\" }} > {data?.name} </a>\r\n                                    <span className=\"d-block\" style={{ color: \"#767581\" }}>\r\n                                        {dayjs(data?.submission_date).format( \"MMM DD, YYYY\" )} at {dayjs(data?.submission_date).format(\"hh:mm a\" )}\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex flex-column mt-3\" style={{ gap: \"10px\" }} >\r\n                            <span className=\"d-block fs-14 font-weight-bold\" style={{ color: \"#767581\" }} > Links </span>\r\n                            <ul style={{  listStyle: \"unset\", marginLeft: \"30px\"}} >\r\n                                {links?.map((link, i) => (\r\n                                    <li style={{ listStyle: \"unset\" }}  key={link + i} >\r\n                                        <a className=\"hover-underline text-primary\" target=\"_blank\" href={link} > {link} </a>\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n\r\n                        <div className=\"mt-2 mt-3\">\r\n                            <span className=\"d-block fs-12 font-weight-bold mb-2\" style={{ color: \"#767581\" }}>\r\n                                Description\r\n                            </span>\r\n                            {data?.text ? (\r\n                                <div className=\"sp1_ck_content\" dangerouslySetInnerHTML={{ __html: data?.text }} />\r\n                            ) : (\r\n                                <span style={{ color: \"rgb(180, 188, 196)\" }}>\r\n                                    No description is available\r\n                                </span>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"mt-3\">\r\n                            <span className=\"d-block fs-12 font-weight-bold mb-2\" style={{ color: \"#767581\" }}>\r\n                                Attached Files\r\n                            </span>\r\n\r\n                            {_.size(attaches) > 0 ? (\r\n                                <FileUploader>\r\n                                    {_.map(attaches, (file, index) => (\r\n                                        <FileUploader.Preview\r\n                                            key={`${file}_${index}`}\r\n                                            fileName={file}\r\n                                            downloadAble={true}\r\n                                            deleteAble={false}\r\n                                            downloadUrl={`${file}`}\r\n                                            previewUrl={`${file}`}\r\n                                            fileType={_.includes([\"png\",\"jpg\", \"jpeg\", \"gif\", \"svg\"], _.last(_.split(file, '.'))) ? 'images' : 'others'}\r\n                                            ext=\"\"\r\n                                        />\r\n                                    ))}\r\n                                </FileUploader>\r\n                                ) : (\r\n                                    <span\r\n                                        className=\"\"\r\n                                        style={{ color: \"rgb(180, 188, 196)\" }}\r\n                                    >\r\n                                        No Attachment is available\r\n                                    </span>\r\n                                )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if(deviceWidth > 1200){\r\n        return (\r\n            <CustomModal isOpen={isOpen} toggleRef={toggle}>\r\n                {content()}\r\n            </CustomModal>\r\n        )\r\n    }else{\r\n        return (\r\n            <React.Fragment>\r\n                <Modal isOpen={isOpen}> { content() } </Modal> \r\n            </React.Fragment>\r\n        );\r\n    }\r\n};\r\n\r\nexport default SubmitionView;\r\n","import React from 'react'\r\nimport SubmitionView from './SubmitionView';\r\nimport { Link, useSearchParams } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\n\r\nconst WorkItem = ({data, toggle, modalRef, close, isLoading}) => { \r\n  const [searchParams] = useSearchParams();\r\n  const previewId = searchParams.get('submitted-work') || 0;\r\n\r\n  return (\r\n    <div className=\"d-flex align-items-center justify-content-between sp1_tark_right_item\">\r\n        <div> \r\n            <a className='hover-underline text-primary' href={`/account/tasks/${data?.task_id}`}> Task#{data?.task_id} </a>\r\n            ({data?.submission_no}) submitted by <a className='hover-underline text-primary' href={`/account/employees/${data?.user_id}`}>{data?.name}</a> </div>\r\n\r\n        <div>{dayjs(data?.submission_date).format('MMM DD, YYYY')}</div>\r\n\r\n        <div className=\"d-flex align-items-center\">\r\n            <Link to={`?submitted-work=${data?.task_id}${data?.submission_no}`} className=\"mr-2 py-2 sp1_task_righ_action_btn\">\r\n              <i className=\"fa-regular fa-eye\"></i>\r\n            </Link>\r\n        </div> \r\n\r\n       {\r\n        Number(previewId) === Number(`${data?.task_id}${data?.submission_no}`) && \r\n        <SubmitionView\r\n            isOpen={Number(previewId) === Number(`${data?.task_id}${data?.submission_no}`)}\r\n            toggle={modalRef}\r\n            data={data}\r\n            close={close}\r\n            isLoading={isLoading}\r\n        />\r\n       } \r\n    </div> \r\n  )\r\n}\r\n\r\nexport default WorkItem","import React from 'react'\r\nimport { User } from '../../../utils/user-details'\r\nimport { Link } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\n\r\nconst InnerWorkItem = ({data}) => { \r\n  return (\r\n    <div className=\"d-flex align-items-center justify-content-between sp1_tark_right_item px-0 py-2\" styte={{gap: \"16px\"}}>\r\n        <div> \r\n            <a \r\n              className='hover-underline text-primary' \r\n              href={`/account/tasks/${data?.task_id}`}\r\n            > \r\n              Task#{data?.task_id} \r\n            </a>\r\n            ({data?.submission_no}) submitted by <a className='hover-underline text-primary' href={`/account/employees/${data?.user_id}`}>{data?.name}</a> </div>\r\n\r\n        <div>{dayjs(data?.submission_date).format('MMM DD, YYYY')}</div>  \r\n\r\n        <div className=\"d-flex align-items-center\">\r\n            <Link to={`?submitted-work=${data?.task_id}${data?.submission_no}`} className=\"mr-2 py-2 sp1_task_righ_action_btn\">\r\n              <i className=\"fa-regular fa-eye\"></i>\r\n            </Link>\r\n        </div> \r\n    </div> \r\n  )\r\n}\r\n\r\nexport default InnerWorkItem","import React from 'react'\r\nimport CustomModal from '../../components/CustomModal'\r\nimport Button from '../../components/Button'\r\nimport InnerWorkItem from './InnerWorkItem'\r\nimport Modal from '../../components/Modal'\r\nimport { useWindowSize } from 'react-use'\r\n\r\nconst SubmittedModalView = ({\r\n    isOpen, \r\n    toggle,\r\n    data,\r\n    close,\r\n    isLoading\r\n}) => {\r\n  const { width: deviceWidth } = useWindowSize();\r\n \r\n  const content = () => {\r\n        return(\r\n            <div className='sp1-subtask-form --modal-panel --modal-submitted'>\r\n                <div className='sp1-subtask-form --modal-panel-header'> \r\n                    <div className='d-flex align-items-center'>\r\n                        <h6>Submitted Task </h6>\r\n                        {isLoading && <div \r\n                            className=\"spinner-border text-dark ml-2\" \r\n                            role=\"status\"\r\n                            style={{\r\n                                width: '16px',\r\n                                height: '16px',\r\n                                border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                                borderRightColor: 'transparent' \r\n                            }}\r\n                        />}\r\n                    </div> \r\n                    <Button\r\n                        aria-label=\"close-modal\"\r\n                        className='_close-modal'\r\n                        onClick={close}\r\n                    >\r\n                        <i className=\"fa-solid fa-xmark\" />\r\n                    </Button> \r\n                </div>\r\n\r\n                <div className=\"sp1-subtask-form --modal-panel-body px-0\">\r\n                    {data?.map(d => (\r\n                        <InnerWorkItem key={`${d.task_id}_${d.submission_no}`} data={d} />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        )\r\n  }\r\n\r\n\r\n  return (\r\n        deviceWidth > 1200 ? \r\n        <React.Fragment>\r\n            <CustomModal isOpen={isOpen} toggleRef={toggle} > {content()} </CustomModal>\r\n        </React.Fragment> : \r\n        <React.Fragment>\r\n            <Modal isOpen={isOpen}> { content() } </Modal> \r\n        </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default SubmittedModalView","import * as React from 'react' \r\nimport WorkItem from './WorkItem';\r\nimport useSWR from 'swr';\r\nimport SubmitionView from './SubmitionView';\r\nimport { useLocation, useNavigate, useSearchParams } from 'react-router-dom';\r\nimport SubmittedModalView from './SubmittedModalView';\r\nimport _ from 'lodash';\r\n\r\nconst fetcher = (url) => axios.get(url).then(res => res.data); \r\n\r\nconst SubmittedWork = ({task}) => { \r\n  const [modalRefButton, setModalRefButton] = React.useState(null); \r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const navigate = useNavigate(); \r\n  const location = useLocation();\r\n  const { data, error, isLoading } = useSWR(`/account/tasks/get-task-submissions/${task?.id}`, fetcher, {refreshInterval: 1000 * 3600});\r\n  const [searchParams] = useSearchParams();\r\n  const preview = searchParams.get('submitted-work');\r\n  const modal = searchParams.get('view-modal')\r\n    // control modal\r\n  const toggle = (e) => {\r\n    e.preventDefault();\r\n    if(preview || modal){\r\n      if(location.state && location.state.from){\r\n        navigate(location.state.from);\r\n      }else{navigate(`/account/tasks/${task?.id}`);} \r\n    }else{\r\n      navigate(`/account/tasks/${task?.id}?view-modal=submitted-work`) \r\n    }\r\n  };\r\n  const close = () => { \r\n    if(location.state && location.state.from){\r\n      navigate(location.state.from);\r\n    }else{navigate(`/account/tasks/${task?.id}`);} \r\n  }\r\n \r\n  return (\r\n    <div className='sp1_task_right_card mb-3'  \r\n    ref={setModalRefButton} \r\n    style={{zIndex:  (preview || modal === 'submitted-work') ? 99 : ''}}>\r\n        <div className='d-flex border-bottom pb-2 align-items-center justify-content-between mb-2 font-weight-bold'>\r\n        <span className=\"f-16\">Submitted Works</span> \r\n          {isLoading && \r\n            <div \r\n                className=\"spinner-border text-dark ml-2 mr-auto\" \r\n                role=\"status\"\r\n                style={{\r\n                    width: '16px',\r\n                    height: '16px',\r\n                    border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                    borderRightColor: 'transparent' \r\n                }}\r\n            />\r\n          }\r\n        </div>\r\n\r\n\r\n        {/* side drop toggle button */}\r\n       {\r\n        _.size(data) > 0 &&\r\n        <button \r\n            aria-label='openCommentModalButton'\r\n            className='sp1_task_right_dl_toggle'\r\n            onClick={toggle}\r\n            style={{zIndex:  (preview || modal === 'submitted-work') ? '110' : ''}}\r\n          >\r\n            <i \r\n              className={`fa-solid fa-circle-chevron-${ (preview || modal === 'submitted-work') ? 'right' : 'left'}`} \r\n              style={{color: \"#276fec\"}} \r\n            />\r\n        </button>\r\n       } \r\n\r\n        <SubmittedModalView\r\n            isOpen={modal === 'submitted-work'}\r\n            toggle={modalRefButton}\r\n            data={_.orderBy(data, ['task_id', 'submission_no'], ['desc', 'desc'])}\r\n            close={close}\r\n            isLoading={isLoading}\r\n        />\r\n\r\n        {/* side drop toggle button end */} \r\n        <div className=\"sp1_task_right_card--body\"> \r\n        {\r\n          _.size(data) > 0 ? \r\n            _.map(_.orderBy(data, ['task_id', 'submission_no'], ['desc', 'desc']), item => (\r\n              <WorkItem \r\n                key={item?.submission_date + item?.submission_no} \r\n                data={item} \r\n                toggle={toggle} \r\n                close={close}\r\n                isLoading={isLoading}\r\n                modalRef={modalRefButton} \r\n              />\r\n            )):\r\n            <div\r\n                className=\"d-flex align-items-center justify-content-center\"\r\n                style={{\r\n                    color: \"#B4BCC4\",\r\n                    fontSize: \"15px\",\r\n                    textAlign: \"center\",\r\n                    height: \"100%\",\r\n                    width: \"100%\",\r\n                }}\r\n            >\r\n                No Submitted Work is Available\r\n            </div>\r\n        }\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SubmittedWork ","/* eslint-disable react/prop-types */\r\nimport { useState } from \"react\";\r\nimport FileUploader from \"../../../file-upload/FileUploader\";\r\nimport CKEditorComponent from \"../../../ckeditor\";\r\nimport SubmitButton from \"../../components/SubmitButton\";\r\nimport { convertTime } from \"../../../utils/converTime\";\r\nimport { Placeholder } from \"../../../global/Placeholder\";\r\nimport Checkbox from \"../../../UI/form/Cheeckbox\";\r\nimport { useSubmitDailySubmissionMutation } from \"../../../services/api/dailySubmissionApiSlice\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\n\r\nconst TodaysUpdateModalTableRow = ({ data, date, index, open, setOpen, loading, refetch }) => {\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const [attachmentLink, setAttachmentLink] = useState('');\r\n    const [checked, setChecked] = useState(false);\r\n    const [files, setFiles] = useState([]);\r\n    const [taskDescription, setTaskDescription] = useState('');\r\n    const [updatedValue,] = useState(null);\r\n    const [completedSection, setCompletedSection] = useState('');\r\n    const [submitDailySubmission, { isLoading: isSubmitting }] = useSubmitDailySubmissionMutation();\r\n    \r\n\r\n    // error state\r\n    const [attachmentLinkError, setAttachmentLinkError] = useState('');\r\n    const [taskDescriptionError, setTaskDescriptionError] = useState('');\r\n    const [completedSectionError, setCompletedSectionError] = useState('')\r\n\r\n    // check validation of attachmentLink and taskDescription\r\n    const isValid = () => {\r\n        let valid = true;\r\n        if (attachmentLink === '') {\r\n            setAttachmentLinkError('You must provide the link of your work');\r\n            valid = false;\r\n        }\r\n        if (taskDescription === '') {\r\n            setTaskDescriptionError(\"Please describe what you've done !\");\r\n            valid = false;\r\n        }\r\n        if (completedSection === '') {\r\n            setCompletedSectionError(\"You must provide at least one section name that you have completed\");\r\n            valid = false;\r\n        }\r\n        return valid;\r\n    }\r\n\r\n\r\n    // daily update submission function\r\n    const handleSubmit = () => {\r\n        if (!isValid()) {\r\n            return;\r\n        }\r\n        const formData = new FormData();\r\n        formData.append('task_id', data.id);\r\n        formData.append('user_id', window.Laravel?.user?.id)\r\n        formData.append('project_id', data.projectId);\r\n        formData.append('task_heading', data.task_title);\r\n        formData.append('client_id', data.clientId);\r\n        formData.append('client_name', data.client_name);\r\n        formData.append('hours_spent', data.total_time_spent);\r\n        formData.append('link_name', attachmentLink);\r\n        formData.append('section_name', completedSection);\r\n        formData.append('comment', taskDescription);\r\n        formData.append('mark_as_complete', checked);\r\n        formData.append('report_date', date);\r\n        const _token = document.querySelector(\"meta[name='csrf-token']\").getAttribute(\"content\");\r\n        formData.append(\"_token\", _token);\r\n        files.forEach((file) => formData.append('file[]', file))\r\n\r\n\r\n        submitDailySubmission(formData)\r\n            .unwrap()\r\n            .then(res => {\r\n                // console.log(res);\r\n                if (res.mark_as_complete===\"true\" || res.mark_as_complete===true) {\r\n                    navigate(`${location.pathname}?modal=complete-task`);\r\n                }\r\n                const Toast = Swal.mixin({\r\n                    toast: true,\r\n                    position: 'top-end',\r\n                    showConfirmButton: false,\r\n                    timer: 3000,\r\n                    timerProgressBar: true,\r\n                })\r\n\r\n                Toast.fire({\r\n                    icon: 'success',\r\n                    title: 'Submitted successfully'\r\n                })\r\n                setOpen(null);\r\n                refetch();\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <tr\r\n                className={`sp1_tlr_tr ${open === index && 'openRow_bg'}`}\r\n                // style={{\r\n                //     backgroundColor: `${data.daily_submission_status ? 'lightgreen' : 'white'}`\r\n                // }}\r\n            >\r\n\r\n                <td className={`sp1_tlr_td`} style={{ minWidth: '50px' }}>{loading ? <Placeholder /> : index + 1}</td>\r\n                <td className={`sp1_tlr_td`}>{loading ? <Placeholder /> : data?.task_title}</td>\r\n                <td className={`sp1_tlr_td`}>{loading ? <Placeholder /> : \r\n                    data?.page_url ?\r\n                        <a href={data.page_url} title={data.page_url} target=\"_blank\">View Link</a>\r\n                        :\r\n                        'No Link attached'\r\n                }</td>\r\n                <td className={`sp1_tlr_td`}>{loading ? <Placeholder /> : convertTime(data.total_time_spent)}</td>\r\n                <td className={`sp1_tlr_td`}>{loading ? <Placeholder /> : (data?.client_name ?? 'N/A')}</td>\r\n                <td className={`sp1_tlr_td`}>\r\n                    {\r\n                        loading ?\r\n                            <Placeholder />\r\n                            :\r\n                            <button\r\n                                onClick={() => {\r\n                                    if (data.daily_submission_status) {\r\n                                        return;\r\n                                    }\r\n                                    setOpen((prev) => {\r\n                                        if (prev === index) {\r\n                                            return null;\r\n                                        } else {\r\n                                            return index;\r\n                                        }\r\n                                    })\r\n                                }\r\n                                }\r\n                                className={`btn btn-sm ${data.daily_submission_status ? 'btn-success' : 'btn-outline-success'}`}\r\n                            >\r\n                                {\r\n                                    data.daily_submission_status ? 'Submitted' : 'Click To Submit'\r\n                                }\r\n                            </button>\r\n                    }\r\n                </td>\r\n            </tr>\r\n            {open === index && (\r\n                <tr className={``} style={{ border: \"solid gray 1px\", borderTop: \"none\" }}>\r\n                    <td colSpan={6}>\r\n                        <form className=\"from_body openRow_bg\">\r\n\r\n                            {/* completed section names */}\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"sectionName\">\r\n                                    Completed Section Name <sup>*</sup>\r\n                                    <span\r\n                                        className=\"ml-2\"\r\n                                        data-toggle=\"tooltip\"\r\n                                        data-placement=\"top\"\r\n                                        title=\"Sections Name\"\r\n                                        data-boundary=\"window\"\r\n                                        style={{ cursor: \"pointer\" }}\r\n                                    >\r\n                                        <i className=\"fa-regular fa-circle-question\" />\r\n                                    </span>\r\n                                </label>\r\n                                <input\r\n                                    value={completedSection}\r\n                                    type=\"text\"\r\n                                    id=\"sectionName\"\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        margin: '2px 0',\r\n                                        borderRadius: '3px',\r\n                                        border: 'none',\r\n                                        fontSize: '1.2rem',\r\n                                        padding: '10px',\r\n                                        color: 'gray'\r\n                                    }}\r\n                                    onChange={(e) => setCompletedSection(e.target.value)}\r\n                                />\r\n                                {completedSectionError && <small className=\"form-text text-danger\">{completedSectionError}</small>}\r\n                            </div>\r\n\r\n                            {/* attachment url link */}\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"sectionName\">\r\n                                    Screenshots/Screen records of the sections <sup>*</sup>\r\n                                    <span\r\n                                        className=\"ml-2\"\r\n                                        data-toggle=\"tooltip\"\r\n                                        data-placement=\"top\"\r\n                                        title=\"Sections Name\"\r\n                                        data-boundary=\"window\"\r\n                                        style={{ cursor: \"pointer\" }}\r\n                                    >\r\n                                        <i className=\"fa-regular fa-circle-question\" />\r\n                                    </span>\r\n                                </label>\r\n                                <input\r\n                                    value={attachmentLink}\r\n                                    type=\"text\"\r\n                                    id=\"sectionName\"\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        margin: '2px 0',\r\n                                        borderRadius: '3px',\r\n                                        border: 'none',\r\n                                        fontSize: '1.2rem',\r\n                                        padding: '10px',\r\n                                        color: 'gray'\r\n                                    }}\r\n                                    onChange={(e) => setAttachmentLink(e.target.value)}\r\n                                />\r\n                                {attachmentLinkError && <small className=\"form-text text-danger\">{attachmentLinkError}</small>}\r\n                            </div>\r\n\r\n                            {/* upload files */}\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"exampleFormControlInput1\">\r\n                                    Attachments\r\n                                    <span\r\n                                        className=\"ml-2\"\r\n                                        data-toggle=\"tooltip\"\r\n                                        data-placement=\"top\"\r\n                                        title=\"Attachment\"\r\n                                        data-boundary=\"window\"\r\n                                        style={{ cursor: \"pointer\" }}\r\n                                    >\r\n                                        <i className=\"fa-regular fa-circle-question\" />\r\n                                    </span>\r\n                                </label>\r\n                                <FileUploader files={files} setFiles={setFiles}>\r\n                                    <FileUploader.Input />\r\n                                    <FileUploader.SelectedFiles>\r\n                                        {({ previews, onDelete }) =>\r\n                                            Array.from(previews)?.map(\r\n                                                (p, i) => (\r\n                                                    <FileUploader.Preview\r\n                                                        key={i}\r\n                                                        id={i}\r\n                                                        fileName={p.name}\r\n                                                        previewUrl={p.preview}\r\n                                                        fileType={p.type}\r\n                                                        onRemove={onDelete}\r\n                                                    />\r\n                                                )\r\n                                            )\r\n                                        }\r\n                                    </FileUploader.SelectedFiles>\r\n                                </FileUploader>\r\n                            </div>\r\n                            {/* End Upload files */}\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"exampleFormControlInput2\" style={{ maxWidth: '95%' }}>\r\n                                    Describe which sections you have worked on today <sup className=\"text-danger\">*</sup>\r\n                                    <span\r\n                                        className=\"ml-2\"\r\n                                        data-toggle=\"tooltip\"\r\n                                        data-placement=\"top\"\r\n                                        title=\"Describe What You've Done\"\r\n                                        data-boundary=\"window\"\r\n                                        style={{ cursor: \"pointer\" }}\r\n                                    >\r\n                                        <i className=\"fa-regular fa-circle-question\" />\r\n                                    </span>\r\n                                </label>\r\n\r\n                                <div\r\n                                    className=\"sp1_st_write_comment_editor\"\r\n                                    style={{ minHeight: \"100px\" }}\r\n                                >\r\n                                    <CKEditorComponent\r\n                                        value={taskDescription}\r\n                                        onChange={(e, editor) => {\r\n                                            const data = editor.getData();\r\n                                            setTaskDescription(data);\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                {taskDescriptionError && <small className=\"form-text text-danger\">{taskDescriptionError}</small>}\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <Checkbox checked={checked} onChange={(e) => setChecked(e.target.checked)} label={'Mark as Complete'} className=\"user-select-none\" />\r\n                            </div>\r\n\r\n                            <div className=\"mt-3 d-flex align-items-center\" style={{ gap: '5px' }}>\r\n                                <SubmitButton onClick={handleSubmit} isLoading={isSubmitting} title=\"Submit\" />\r\n                                {/* <SubmitButton onClick={()=>{}} isLoading={false} title=\"Submit & Mark as Complete\"></SubmitButton> */}\r\n                            </div>\r\n                        </form>\r\n                    </td>\r\n                </tr>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TodaysUpdateModalTableRow;\r\n","import api from \"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[1]!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[2]!./DailySubmission.module.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import api from \"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[1]!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[2]!./DataTable.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { useState } from \"react\";\r\nimport TodaysUpdateModalTableRow from \"./TodaysUpdateModalTableRow\";\r\nimport style from \"./styles/DailySubmission.module.css\";\r\nimport \"./styles/DataTable.css\";\r\nimport { useGetDailySubmissionQuery } from \"../../../services/api/dailySubmissionApiSlice\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { User } from \"../../../utils/user-details\";\r\nimport dayjs from \"dayjs\";\r\n\r\nconst TodaysUpdateModalTable = () => {\r\n    const [open, setOpen] = useState(null);\r\n    const [searchParams] = useSearchParams();\r\n    const date_type = searchParams.get(\"data_type\");\r\n\r\n    const loggedUser = new User(window.Laravel?.user);\r\n\r\n    const today = dayjs().format('YYYY-MM-DD');\r\n\r\n    const { data, isLoading, refetch } = useGetDailySubmissionQuery(\r\n        `${loggedUser?.id}?date_type=${today}`\r\n    ); \r\n     \r\n\r\n    return (\r\n        <div className={`sp1_tlr_tbl_wrapper`} style={{ overflow: \"auto\" }}>\r\n            <table className={`sp1_tlr_table`} style={{ minWidth: \"0\" }}>\r\n                <thead>\r\n                    <tr className={``}>\r\n                        <th className={`sp1_tlr_th`}>SL No.</th>\r\n                        <th className={`sp1_tlr_th`}>Task Name</th>\r\n                        <th className={`sp1_tlr_th`}>Page Link</th>\r\n                        <th className={`sp1_tlr_th`}>\r\n                            Total Time Spend on This Task Today\r\n                        </th>\r\n                        <th className={`sp1_tlr_th`}>Client Name</th>\r\n                        <th className={`sp1_tlr_th`} style={{ width: \"10rem\" }}>\r\n                            Action\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody className={`sp1_tlr_tbody`}>\r\n                    {/* {\r\n                        (isLoading ? [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] : data?.data).filter((d) => !d.daily_submission_status).map((d, i) => <TodaysUpdateModalTableRow data={d} key={i} index={i} open={open} setOpen={setOpen} loading={isLoading} />)\r\n                    } */}\r\n                    {(isLoading\r\n                        ? [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\r\n                        : data?.data\r\n                    ).map((d, i) => (\r\n                        <TodaysUpdateModalTableRow\r\n                            data={d}\r\n                            date={data?.date}\r\n                            key={i}\r\n                            index={i}\r\n                            open={open}\r\n                            setOpen={setOpen}\r\n                            loading={isLoading}\r\n                            refetch={refetch}\r\n                        />\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodaysUpdateModalTable;\r\n","import { useState } from \"react\";\r\n// import { Button } from \"react-bootstrap\";\r\nimport CKEditorComponent from \"../../../ckeditor\";\r\nimport FileUploader from \"../../../file-upload/FileUploader\";\r\nimport Modal from \"../../components/Modal\";\r\nimport Button from \"../../components/Button\";\r\nimport SubmitButton from \"../../components/SubmitButton\";\r\nimport TodaysUpdateModalTable from \"../daily-submission/TodaysUpdateModalTable\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport Swal from \"sweetalert2\"; \r\nimport dayjs from \"dayjs\";\r\n\r\nconst DailySubmissionControl = () => {\r\n    const [todaysUpdateModalisOpen, setTodaysUpdateModalisOpen] =\r\n        useState(false);\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const url = new URLSearchParams(location.search);\r\n \r\n\r\n    const isOpen = url.get(\"modal\") === \"daily-submission\"; \r\n\r\n\r\n     \r\n\r\n    // console.log(location);\r\n\r\n    const close = () => {\r\n        if(url.get('trigger') === 'stop-button'){\r\n            Swal.fire({\r\n                icon: \"warning\",\r\n                title: \"If you don't submit the daily submission, you won't be able to start any task on next day.\",\r\n                showConfirmButton: true,\r\n            });\r\n        }\r\n\r\n        navigate(`${location.pathname}`);\r\n        setTodaysUpdateModalisOpen(false);\r\n    };\r\n    const open = () => navigate(`${location.pathname}?modal=daily-submission&data_type=today`);\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                variant=\"tertiary\"\r\n                // onClick={toggle}\r\n                onClick={open}\r\n                className=\"d-flex align-items-center btn-outline-dark text-dark\"\r\n            >\r\n                {/* {isFetching ? <Loader title=\"Processing...\" /> : <i className=\"fa-solid fa-check\" />} */}\r\n                <span className=\"d-inline ml-1\"> Submit Today's Update </span>\r\n            </Button>\r\n\r\n            <Modal isOpen={isOpen} className=\"sp1_mark-as--modal \">\r\n                <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n                    <div\r\n                        className=\"sp1_mark-as--modal-panel\"\r\n                        style={{ overflow: \"visible\", maxWidth: \"70rem\" }}\r\n                    >\r\n                        {/* heading bar */}\r\n                        <div className=\"sp1_mark-as--modal-heading\">\r\n                            <h6 className=\"mb-0\">Submit Today's Update</h6>\r\n\r\n                            <Button aria-label=\"closeModal\" onClick={close}>\r\n                                <i className=\"fa-solid fa-xmark\" />\r\n                            </Button>\r\n                        </div>\r\n\r\n                        {/* body */}\r\n                        <div\r\n                            className=\"sp1_mark-as--modal-body px-3\"\r\n                            style={{ overflow: \"visible\" }}\r\n                        >\r\n                            <div className=\"alert alert-warning text-center\">\r\n                                If you don't submit the daily submission, you\r\n                                won't be able to start any task on next day.\r\n                            </div>\r\n\r\n                            {isOpen && <TodaysUpdateModalTable />}\r\n                            <div className=\"mt-3 d-flex align-items-center\">\r\n                                <Button\r\n                                    variant=\"tertiary\"\r\n                                    className=\"ml-auto mr-2\"\r\n                                    onClick={close}\r\n                                >\r\n                                    Close\r\n                                </Button>\r\n                                {/* <SubmitButton onClick={handleSubmit} isLoading={isSubmitting} title=\"Submit\" /> */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DailySubmissionControl;\r\n","import _ from \"lodash\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport CKEditorComponent from \"../../../ckeditor/index\";\r\nimport FileUploader from \"../../../file-upload/FileUploader\";\r\nimport {\r\n    useLazyCheckSubTaskStateQuery,\r\n    useMarkAsCompleteMutation,\r\n} from \"../../../services/api/SingleTaskPageApi\";\r\nimport Button from \"../../components/Button\";\r\nimport Loader from \"../../components/Loader\";\r\nimport Modal from \"../../components/Modal\";\r\nimport SubmitButton from \"../../components/SubmitButton\";\r\n\r\nimport { checkIsURL } from \"../../../utils/check-is-url\";\r\nimport Swal from \"sweetalert2\";\r\n// import Swal from \"sweetalert2\";\r\n\r\nconst MarkAsComplete = ({ task, auth }) => {\r\n    // form data\r\n    const dispatch = useDispatch();\r\n    const [links, setLinks] = useState([\"\"]);\r\n    const [linkErr, setLinkErr] = useState(\"\");\r\n    const [isModalUrl, setIsModalUrl] = useState(false);\r\n    const [files, setFiles] = useState([]);\r\n    const [comment, setComment] = useState(\"\");\r\n    const [commentErr, setCommentErr] = useState(\"\");\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    const [markAsComplete, { isLoading: isSubmitting }] =\r\n        useMarkAsCompleteMutation();\r\n    const [checkSubTaskState, { isFetching }] = useLazyCheckSubTaskStateQuery();\r\n\r\n    const [markAsCompleteModaIsOpen, setMarkAsCompleteModalIsOpen] =\r\n        useState(false);\r\n\r\n    // open modal\r\n    const open = () => {\r\n        navigate(`${location.pathname}?modal=complete-task`);\r\n    };\r\n\r\n    // close modal\r\n    const close = () => {\r\n        navigate(`${location.pathname}`);\r\n    };\r\n\r\n    // const [err, setErr] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const url = new URLSearchParams(location.search);\r\n        if (url.get(\"modal\") === \"complete-task\") {\r\n            setIsModalUrl(true);\r\n        } else {\r\n            setIsModalUrl(false);\r\n        }\r\n    }, [location]);\r\n\r\n    useEffect(() => {\r\n        // const url = new URLSearchParams(location.search);\r\n\r\n        // if (url.get('modal')==='complete-task') {\r\n        if (isModalUrl) {\r\n            if (Number(auth.getRoleId()) === 6) {\r\n                checkSubTaskState(task?.id)\r\n                    .unwrap()\r\n                    .then((res) => {\r\n                        if (res.status === \"true\" || res.status === true) {\r\n                            // const htmlContent = (\r\n                            //     <div className=\"__tostar_modal\">\r\n                            //         <strong>\r\n                            //             You can't complete this task because you\r\n                            //             have some pending subtask?\r\n                            //         </strong>\r\n                            //         <ul className=\"py-1\">\r\n                            //             {res.subtasks.map((el, idx) => (\r\n                            //                 <li\r\n                            //                     key={el.id}\r\n                            //                     style={{\r\n                            //                         listStyle: \"unset\",\r\n                            //                         fontSize: \"13px\",\r\n                            //                     }}\r\n                            //                 >\r\n                            //                     <a\r\n                            //                         href={`/account/tasks/${el.id}`}\r\n                            //                     >\r\n                            //                         {idx + 1}. {el.heading}\r\n                            //                     </a>{\" \"}\r\n                            //                     (\r\n                            //                     <a\r\n                            //                         href={`/account/clients/${el.clientId}`}\r\n                            //                     >\r\n                            //                         {el.client_name}\r\n                            //                     </a>\r\n                            //                     )\r\n                            //                 </li>\r\n                            //             ))}\r\n                            //         </ul>\r\n                            //     </div>\r\n                            // );\r\n                            // toast.warn(htmlContent, {\r\n                            //     position: \"top-center\",\r\n                            //     icon: false,\r\n                            // });\r\n                            Swal.fire({\r\n                                icon:'warning',\r\n                                title:`You can't complete this task because you\r\n                                have some pending subtask?`\r\n                            })\r\n                            close();\r\n                        } else {\r\n                            setMarkAsCompleteModalIsOpen(true);\r\n                        }\r\n                    });\r\n            } else {\r\n                setMarkAsCompleteModalIsOpen(true);\r\n            }\r\n        } else {\r\n            setMarkAsCompleteModalIsOpen(false);\r\n        }\r\n        // }\r\n        // else{\r\n        //     setMarkAsCompleteModalIsOpen(false);\r\n        // }\r\n    }, [isModalUrl]);\r\n\r\n    // handle editor change\r\n    const handleEditorChange = (e, editor) => {\r\n        const data = editor.getData();\r\n        setComment(data);\r\n    };\r\n\r\n    // handle remove link\r\n    const handleRemoveLink = (e, index) => {\r\n        const _links = [...links];\r\n        _links.splice(index, 1);\r\n        setLinks(_links);\r\n    };\r\n\r\n    // handle link change\r\n    const handleOnLinkInputChange = (e, index) => {\r\n        const _links = [...links];\r\n        (_links[index] = e.target.value), setLinks(_links);\r\n    };\r\n\r\n    // check validation\r\n    const isValid = () => {\r\n        let valid = true;\r\n        if (!_.size(links) || links[0] === \"\") {\r\n            setLinkErr(\"You must provide at least one link to your work\");\r\n            toast.warn(\"You must provide at least one link to your work\");\r\n            valid = false;\r\n        }\r\n\r\n        if (_.size(links)) {\r\n            _.forEach(links, (link) => {\r\n                if (!checkIsURL(link)) {\r\n                    toast.warn(\"Please provide a valid url\");\r\n                    setLinkErr(\"Please provide a valid url\");\r\n                    valid = false;\r\n                }\r\n            });\r\n        }\r\n\r\n        if (comment === \"\") {\r\n            setCommentErr(\"Please describe what you've done !\");\r\n            toast.warn(\"Please describe what you've done!\");\r\n            valid = false;\r\n        }\r\n\r\n        return valid;\r\n    };\r\n\r\n    // handle submit\r\n    const handleSubmit = (e) => {\r\n        const formData = new FormData();\r\n        formData.append(\"text\", comment);\r\n        formData.append(\"user_id\", auth?.getId());\r\n        formData.append(\"task_id\", task?.id);\r\n        links.map((link) => formData.append(\"link[]\", link));\r\n        files?.map((file) => formData.append(\"file[]\", file));\r\n        formData.append(\r\n            \"_token\",\r\n            document\r\n                .querySelector(\"meta[name='csrf-token']\")\r\n                .getAttribute(\"content\")\r\n        );\r\n\r\n        if (isValid()) {\r\n            markAsComplete(formData)\r\n                .unwrap()\r\n                .then((res) => {\r\n                    // const Toast = Swal.mixin({\r\n                    //     toast: true,\r\n                    //     position: 'top-end',\r\n                    //     showConfirmButton: false,\r\n                    //     timer: 3000,\r\n                    //     timerProgressBar: true,\r\n                    // })\r\n\r\n                    // Toast.fire({\r\n                    //     icon: 'success',\r\n                    //     title: 'Task submitted successfully'\r\n                    // })\r\n                    const Toast = Swal.mixin({\r\n                        toast: true,\r\n                        position: \"top-end\",\r\n                        showConfirmButton: false,\r\n                        timer: 3000,\r\n                        timerProgressBar: true,\r\n                    });\r\n\r\n                    Toast.fire({\r\n                        icon: \"success\",\r\n                        title: \"Task submitted successfully\",\r\n                    });\r\n                    close();\r\n                })\r\n                .catch((err)=>{\r\n                    close();\r\n                    console.log(err);\r\n                })\r\n                .finally(()=>{\r\n                  close();\r\n                });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                variant=\"tertiary\"\r\n                onClick={open}\r\n                className=\"d-flex align-items-center btn-outline-dark text-dark\"\r\n            >\r\n                {isFetching ? (\r\n                    <Loader title=\"Processing...\" />\r\n                ) : (\r\n                    <i className=\"fa-solid fa-check\" />\r\n                )}\r\n                <span className=\"d-inline ml-1\">\r\n                    {\" \"}\r\n                    {isFetching ? \"\" : \"Mark As Complete\"}\r\n                </span>\r\n            </Button>\r\n\r\n            <Modal\r\n                isOpen={markAsCompleteModaIsOpen}\r\n                className=\"sp1_mark-as--modal\"\r\n            >\r\n                <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n                    <div className=\"sp1_mark-as--modal-panel\">\r\n                        {/* heading bar */}\r\n                        <div className=\"sp1_mark-as--modal-heading\">\r\n                            <h6 className=\"mb-0\">Submit Task</h6>\r\n\r\n                            <Button aria-label=\"closeModal\" onClick={close}>\r\n                                <i className=\"fa-solid fa-xmark\" />\r\n                            </Button>\r\n                        </div>\r\n\r\n                        {/* body */}\r\n                        <div\r\n                            className=\"sp1_mark-as--modal-body px-3\"\r\n                            style={{ overflow: \"unset\" }}\r\n                        >\r\n                            <form>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"exampleFormControlInput1\">\r\n                                        Submit Links What You've Done\r\n                                        <sup>*</sup>\r\n                                        <span\r\n                                            className=\"ml-2\"\r\n                                            data-toggle=\"tooltip\"\r\n                                            data-placement=\"top\"\r\n                                            title=\"Submit Links What You've Done\"\r\n                                            data-boundary=\"window\"\r\n                                            style={{ cursor: \"pointer\" }}\r\n                                        >\r\n                                            <i className=\"fa-regular fa-circle-question\" />\r\n                                        </span>\r\n                                    </label>\r\n                                    {links?.map((link, i) => (\r\n                                        <div\r\n                                            key={i}\r\n                                            className=\"mark-as-compeleted-link mb-2\"\r\n                                        >\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control py-2\"\r\n                                                id=\"exampleFormControlInput1\"\r\n                                                placeholder=\"--\"\r\n                                                value={link}\r\n                                                onChange={(e) =>\r\n                                                    handleOnLinkInputChange(\r\n                                                        e,\r\n                                                        i\r\n                                                    )\r\n                                                }\r\n                                            />\r\n\r\n                                            {links?.length > 1 && (\r\n                                                <button\r\n                                                    onClick={(e) =>\r\n                                                        handleRemoveLink(e, i)\r\n                                                    }\r\n                                                >\r\n                                                    <i className=\"fa-regular fa-trash-can\"></i>\r\n                                                </button>\r\n                                            )}\r\n                                        </div>\r\n                                    ))}\r\n\r\n                                    {linkErr && (\r\n                                        <small\r\n                                            id=\"emailHelp\"\r\n                                            class=\"form-text text-danger\"\r\n                                        >\r\n                                            {linkErr}\r\n                                        </small>\r\n                                    )}\r\n\r\n                                    <button\r\n                                        className=\"mt-2 d-flex align-items-center bg-transparent\"\r\n                                        style={{ gap: \"10px\" }}\r\n                                        onClick={(e) => {\r\n                                            e.preventDefault();\r\n                                            setLinks((prev) => [...prev, \"\"]);\r\n                                        }}\r\n                                    >\r\n                                        <i className=\"fa-solid fa-circle-plus\" />\r\n                                        Add Another Link\r\n                                    </button>\r\n                                </div>\r\n\r\n                                {/* upload files */}\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"exampleFormControlInput1\">\r\n                                        Attachments\r\n                                        <span\r\n                                            className=\"ml-2\"\r\n                                            data-toggle=\"tooltip\"\r\n                                            data-placement=\"top\"\r\n                                            title=\"Attachment\"\r\n                                            data-boundary=\"window\"\r\n                                            style={{ cursor: \"pointer\" }}\r\n                                        >\r\n                                            <i className=\"fa-regular fa-circle-question\" />\r\n                                        </span>\r\n                                    </label>\r\n                                    <FileUploader\r\n                                        files={files}\r\n                                        setFiles={setFiles}\r\n                                    >\r\n                                        <FileUploader.Input />\r\n                                        <FileUploader.SelectedFiles>\r\n                                            {({ previews, onDelete }) =>\r\n                                                Array.from(previews)?.map(\r\n                                                    (p, i) => (\r\n                                                        <FileUploader.Preview\r\n                                                            key={i}\r\n                                                            id={i}\r\n                                                            fileName={p.name}\r\n                                                            previewUrl={\r\n                                                                p.preview\r\n                                                            }\r\n                                                            fileType={p.type}\r\n                                                            onRemove={onDelete}\r\n                                                        />\r\n                                                    )\r\n                                                )\r\n                                            }\r\n                                        </FileUploader.SelectedFiles>\r\n                                    </FileUploader>\r\n                                </div>\r\n                                {/* End Upload files */}\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label\r\n                                        htmlFor=\"exampleFormControlInput1\"\r\n                                        style={{ maxWidth: \"95%\" }}\r\n                                    >\r\n                                        Mention clearly if anything asked in the\r\n                                        instruction couldn't be done or if there\r\n                                        is anything else your reporting boss\r\n                                        should know while approving or rejecting\r\n                                        this task<sup>*</sup>\r\n                                        <span\r\n                                            className=\"ml-2\"\r\n                                            data-toggle=\"tooltip\"\r\n                                            data-placement=\"top\"\r\n                                            title=\"Describe What You've Done\"\r\n                                            data-boundary=\"window\"\r\n                                            style={{ cursor: \"pointer\" }}\r\n                                        >\r\n                                            <i className=\"fa-regular fa-circle-question\" />\r\n                                        </span>\r\n                                    </label>\r\n\r\n                                    <div className=\"ck-editor-holder stop-timer-options\">\r\n                                        <CKEditorComponent\r\n                                            onChange={handleEditorChange}\r\n                                        />\r\n                                    </div>\r\n                                    {commentErr && (\r\n                                        <small\r\n                                            id=\"emailHelp\"\r\n                                            class=\"form-text text-danger\"\r\n                                        >\r\n                                            {commentErr}\r\n                                        </small>\r\n                                    )}\r\n                                </div>\r\n\r\n                                <div className=\"mt-3 d-flex align-items-center\">\r\n                                    <Button\r\n                                        variant=\"tertiary\"\r\n                                        className=\"ml-auto mr-2\"\r\n                                        onClick={close}\r\n                                    >\r\n                                        Close\r\n                                    </Button>\r\n                                    <SubmitButton\r\n                                        onClick={handleSubmit}\r\n                                        isLoading={isSubmitting}\r\n                                        title=\"Submit\"\r\n                                    />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MarkAsComplete;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport CKEditorComponent from \"../../../../ckeditor\";\r\nimport { useRevision } from \"../../../../hooks/useRevision\";\r\nimport { useCreateRevisionMutation } from \"../../../../services/api/SingleTaskPageApi\";\r\nimport Button from \"../../../components/Button\";\r\nimport SubmitButton from \"../../../components/SubmitButton\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst RevisionCreationModal = ({ close, task, auth }) => {\r\n    const [reason, setReason] = useState(null);\r\n    const [reasonError, setReasonError] = useState(\"\");\r\n    const [comment, setComment] = useState(\"\");\r\n    const [commentError, setCommentError] = useState(\"\");\r\n    const [isDeniable, setIsDeniable] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const {\r\n        getLeadDeveloperAcknowladgementOptions,\r\n        getProjectManagerAcknowladgementOptions,\r\n    } = useRevision();\r\n    const { pathname } = useLocation();\r\n    const navigate = useNavigate();\r\n    // console.log({pathname});\r\n\r\n    const role = auth.getRoleId();\r\n\r\n    const revisionOptions =\r\n        (role === 1 || role === 4 || role === 8)\r\n            ? getProjectManagerAcknowladgementOptions()\r\n            : getLeadDeveloperAcknowladgementOptions();\r\n\r\n    const [createRevision, { isLoading }] = useCreateRevisionMutation();\r\n\r\n    // radio button change\r\n    const handleChange = (value) => {\r\n        setReason(value);\r\n    };\r\n\r\n    // editor change text\r\n    const handleEditorTextChange = (e, editor) => {\r\n        const data = editor.getData();\r\n        setComment(data);\r\n    };\r\n\r\n    // validation\r\n    const validate = () => {\r\n        let errorCount = 0;\r\n\r\n        if (comment === \"\") {\r\n            errorCount++;\r\n            setCommentError(\r\n                \"You have to explain the revision in details, so that lead developer/developer can understand where they need to work.\"\r\n            );\r\n        }\r\n\r\n        if (!reason) {\r\n            errorCount++;\r\n            setReasonError(\"You have to select a reason from above options\");\r\n        }\r\n\r\n        return errorCount === 0;\r\n    };\r\n\r\n    // handle submission\r\n    const handleSubmission = (e) => {\r\n        e.preventDefault();\r\n\r\n        const data = {\r\n            task_id: task?.id,\r\n            user_id: auth?.id,\r\n            revision_acknowledgement: reason?.revision ?? \"\",\r\n            acknowledgement_id: reason?.id,\r\n            comment,\r\n            is_deniable: reason?.isDeniable ?? false,\r\n        };\r\n\r\n        if (validate()) {\r\n            createRevision(data)\r\n                .unwrap()\r\n                .then((res) => {\r\n                    const Toast = Swal.mixin({\r\n                        toast: true,\r\n                        position: \"top-end\",\r\n                        showConfirmButton: false,\r\n                        timer: 3000,\r\n                        timerProgressBar: true,\r\n                    });\r\n\r\n                    Toast.fire({\r\n                        icon: \"success\",\r\n                        title: \"Task submitted for Revision successfully\",\r\n                    });\r\n                    navigate(`${pathname}`);\r\n                    close();\r\n                })\r\n                .catch((err) => console.log(err));\r\n        } else {\r\n            const Toast = Swal.mixin({\r\n                toast: true,\r\n                position: \"top-end\",\r\n                showConfirmButton: false,\r\n                timer: 3000,\r\n                timerProgressBar: true,\r\n            });\r\n\r\n            Toast.fire({\r\n                icon: \"error\",\r\n                title: \"Your forgot to fill up some required fields\",\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div\r\n                className=\"sp1_single_task--modal-panel\"\r\n                style={{ maxWidth: \"550px\" }}\r\n            >\r\n                <div className=\"border-bottom pb-2 px-3 mb-3 d-flex align-items-center justify-content-between\">\r\n                    <div className=\"font-weight-bold f-14\">\r\n                        Revision - Task: {task?.id}#\r\n                        {task?.title || task?.heading}\r\n                    </div>\r\n                    <Button onClick={close} className=\"\">\r\n                        <i className=\"fa-solid fa-xmark\" />\r\n                    </Button>\r\n                </div>\r\n\r\n                <form className=\"px-3\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                            Select Reason for Revision\r\n                            <sup className=\"f-16\">*</sup> :\r\n                        </label>\r\n                        <div className=\"px-3\">\r\n                            {revisionOptions.map((option) => (\r\n                                <div\r\n                                    key={option.id}\r\n                                    className=\"form-check d-flex align-items-start mb-2\"\r\n                                >\r\n                                    <input\r\n                                        className=\"form-check-input mr-2\"\r\n                                        type=\"radio\"\r\n                                        name=\"exampleRadios\"\r\n                                        id={option.id}\r\n                                        required={true}\r\n                                        onChange={() => handleChange(option)}\r\n                                        value={option.revision}\r\n                                        style={{\r\n                                            width: \"16px\",\r\n                                            height: \"16px\",\r\n                                            marginTop: \"3px\",\r\n                                        }}\r\n                                    />\r\n                                    <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor={option.id}\r\n                                        style={{ marginBottom: \"3px\" }}\r\n                                    >\r\n                                        {option.revision}\r\n                                    </label>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        {reasonError && (\r\n                            <small\r\n                                id=\"emailHelp\"\r\n                                className=\"form-text text-danger\"\r\n                            >\r\n                                {reasonError}\r\n                            </small>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                            Explain or Comment<sup className=\"f-16\">*</sup> :\r\n                        </label>\r\n                        <div className=\"ck-editor-holder\">\r\n                            <CKEditorComponent\r\n                                onChange={handleEditorTextChange}\r\n                            />\r\n                        </div>\r\n                        {commentError && (\r\n                            <small\r\n                                id=\"emailHelp\"\r\n                                className=\"form-text text-danger\"\r\n                            >\r\n                                {commentError}\r\n                            </small>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div>\r\n                        <div className=\"mt-3 d-flex align-items-center\">\r\n                            <Button\r\n                                onClick={close}\r\n                                variant=\"tertiary\"\r\n                                className=\"ml-auto mr-2\"\r\n                            >\r\n                                Close\r\n                            </Button>\r\n                            <SubmitButton\r\n                                title=\"Submit\"\r\n                                onClick={handleSubmission}\r\n                                isLoading={isLoading}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default RevisionCreationModal;\r\n","import React, {useState, lazy, Suspense} from 'react'\r\nimport Button from '../../../components/Button' \r\nimport Modal from '../../../components/Modal';\r\nimport { SingleTask } from '../../../../utils/single-task';\r\nimport RevisionCreationModal from './RevisionCreationModal';\r\n\r\nconst RevisionControl = ({task, auth}) => {\r\n    const [revisionModal, setRevisionModal] = useState(false);\r\n    const singleTask = new SingleTask(task)\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <Button\r\n            variant='tertiary'\r\n            onClick={() => setRevisionModal(true)}\r\n            className='d-flex align-items-center sp1-st-revision-btn sp1-st-revision-btn'\r\n        >\r\n            <i className=\"fa-solid fa-plus-minus\" />\r\n            <span className=\"d-inline ml-1\">Need Revision</span>\r\n        </Button> \r\n\r\n        <Modal isOpen={revisionModal} className=\"sp1_single_task--modal\">\r\n            <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n                <RevisionCreationModal auth={auth} task={singleTask} close={() => setRevisionModal(false)} />\r\n            </div>\r\n        </Modal> \r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default RevisionControl\r\n","import React, { useState } from \"react\";\r\nimport Modal from \"../../../components/Modal\";\r\nimport Button from \"../../../components/Button\";\r\nimport CKEditorComponent from \"../../../../ckeditor\";\r\nimport SubmitButton from \"../../../components/SubmitButton\";\r\n\r\n// button\r\nexport const AcceptAndContinueButton = ({ isLoading, onClick }) => {\r\n    if (!isLoading) {\r\n        return <Button onClick={onClick}>Accept & Continue</Button>;\r\n    } else {\r\n        <React.Fragment>\r\n            <Button className=\"cursor-processing\">\r\n                <div\r\n                    className=\"spinner-border text-white\"\r\n                    role=\"status\"\r\n                    style={{\r\n                        width: \"18px\",\r\n                        height: \"18px\",\r\n                    }}\r\n                />{\" \"}\r\n                Processing...\r\n            </Button>\r\n        </React.Fragment>;\r\n    }\r\n};\r\n\r\n// component\r\nexport const RevisionAcceptAndContinue = ({\r\n    task,\r\n    revision,\r\n    onSubmit,\r\n    close,\r\n    onNext,\r\n    isSubmitting = false,\r\n}) => {\r\n    const [comment, setComment] = useState(\"\");\r\n    const [err, setErr] = useState(\"\");\r\n\r\n    const handleEditorDataChange = (e, editor) => {\r\n        const data = editor.getData();\r\n        setComment(data);\r\n    };\r\n\r\n    const handleOnSubmit = e => {\r\n        e.preventDefault();\r\n        if(comment !== ''){\r\n            onSubmit({comment});\r\n        }else{\r\n            setErr(\"You have to Explain Why & How Did This Happen!\")\r\n        }\r\n    }\r\n\r\n    const auth = window?.Laravel?.user;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <form action=\"\">\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                        Please Explain Why & How Did This Happen?{\" \"}\r\n                        <sup className=\"f-16 text-red\">*</sup>\r\n                    </label>\r\n                    <div className=\"ck-editor-holder\">\r\n                        <CKEditorComponent onChange={handleEditorDataChange} />\r\n                    </div>\r\n                    {err && <small id=\"emailHelp\" className=\"form-text text-danger\">\r\n                        {err}\r\n                    </small>}\r\n\r\n                    <div className=\"mt-3 d-flex align-items-center\">\r\n                        <Button\r\n                            onClick={close}\r\n                            variant=\"tertiary\"\r\n                            className=\"ml-auto mr-2\"\r\n                        >\r\n                            Back\r\n                        </Button>\r\n\r\n                        {!isSubmitting ? (\r\n                            <React.Fragment>\r\n                                {_.includes([4, 6], auth?.role_id) ? (\r\n                                    <Button onClick={handleOnSubmit}>Next</Button>\r\n                                ): \r\n                                    <SubmitButton\r\n                                        title=\"Submit\" \r\n                                        isLoading={isSubmitting}\r\n                                        onClick={handleOnSubmit}\r\n                                    />\r\n                                }\r\n                            </React.Fragment>\r\n                        ) : (\r\n                            <React.Fragment>\r\n                                <Button className=\"cursor-processing\">\r\n                                    <div\r\n                                        className=\"spinner-border text-white\"\r\n                                        role=\"status\"\r\n                                        style={{\r\n                                            width: \"18px\",\r\n                                            height: \"18px\",\r\n                                        }}\r\n                                    />{\" \"}\r\n                                    Processing...\r\n                                </Button>\r\n                            </React.Fragment>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </React.Fragment>\r\n    );\r\n};\r\n","import React from 'react'\r\nimport Button from '../../../components/Button'\r\nimport { AcceptAndContinueButton } from './RevisionAcceptAndContinue'\r\nimport { Placeholder } from '../../../../global/Placeholder'\r\nimport { User } from '../../../../utils/user-details'\r\nimport SubmitButton from '../../../components/SubmitButton'\r\n\r\nconst RevisionView = ({revision, isLoading, onAccept, onDeny, onContinue, isContinue}) => {\r\n    const auth = new User(window?.Laravel?.user);\r\n\r\n\r\n    const getComment = () => {\r\n        const roleId = auth?.getRoleId();\r\n        if(roleId === 6 || roleId === 9 || roleId === 10){\r\n            return revision?.pm_comment;\r\n        }else {\r\n            return revision?.lead_comment;\r\n        }\r\n    }\r\n    const comment = getComment();\r\n    if(isLoading){\r\n        return (\r\n            <React.Fragment>\r\n                <div>\r\n                    <div>\r\n                        <Placeholder width='450px' className='mb-2' />\r\n                        <Placeholder width='100px' className='mb-3' />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='st_revision_comment mb-4'>\r\n\r\n                    {isLoading &&\r\n                        <div>\r\n                            <Placeholder width='100%' className='mb-2' />\r\n                            <Placeholder width='100%' className='mb-2' />\r\n                            <Placeholder width='30%' className='mb-2' />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }else if(!comment && !isLoading){\r\n        return null;\r\n    }else{\r\n        return (\r\n            <React.Fragment>\r\n                {revision?.revision_acknowledgement &&\r\n                    <div>\r\n                        {!isLoading ? (\r\n                            <p>\r\n                                <span className='font-weight-bold text-danger f-16'>Reason: </span>\r\n                                { revision?.revision_acknowledgement ?? revision?.revision_reason }\r\n                            </p>\r\n                        ): <div>\r\n                            <Placeholder width='450px' className='mb-2' />\r\n                            <Placeholder width='100px' className='mb-3' />\r\n                        </div>}\r\n                    </div>\r\n                }\r\n\r\n                <div className='st_revision_comment'>\r\n                    {!isLoading && <div className='sp1_ck_content' dangerouslySetInnerHTML={{__html: comment}} />}\r\n\r\n                    {isLoading &&\r\n                        <div>\r\n                            <Placeholder width='100%' className='mb-2' />\r\n                            <Placeholder width='100%' className='mb-2' />\r\n                            <Placeholder width='30%' className='mb-2' />\r\n                        </div>\r\n                    }\r\n                </div>\r\n                <div className=\"mt-4 mb-2 d-flex align-items-center\">\r\n                   {!isLoading && (\r\n                        revision?.is_deniable ? (\r\n                            <React.Fragment>\r\n                                <Button onClick={onDeny} variant=\"tertiary\" className=\"ml-auto mr-2\">\r\n                                    Deny & Continue\r\n                                </Button>\r\n\r\n                                <AcceptAndContinueButton\r\n                                    onClick={onAccept}\r\n                                    isLoading={false}\r\n                                />\r\n                            </React.Fragment>\r\n                        ):\r\n                            <React.Fragment>\r\n                                <div className='ml-auto'>\r\n                                <SubmitButton\r\n                                    onClick={onContinue}\r\n                                    variant=\"primary\"\r\n                                    isLoading={isContinue}\r\n                                    title=\"Continue\"\r\n                                />\r\n                                </div>\r\n                            </React.Fragment>\r\n                    )\r\n                   }\r\n                </div>\r\n            </React.Fragment>\r\n          )\r\n    }\r\n\r\n}\r\n\r\nexport default RevisionView\r\n","import React, { useState } from \"react\";\r\nimport Button from \"../../../components/Button\";\r\nimport { Listbox } from \"@headlessui/react\";\r\nimport { HiOutlineSelector } from \"react-icons/hi\";\r\nimport CKEditorComponent from \"../../../../ckeditor\";\r\nimport SubmitButton from \"../../../components/SubmitButton\";\r\nimport _ from \"lodash\";\r\n\r\nconst options = [\r\n    {\r\n        id: \"LDRx10\",\r\n        revision: \"I overlooked a few things while checking\",\r\n        isDeniable: true,\r\n    },\r\n    {\r\n        id: \"LDRx11\",\r\n        revision: \"I couldn't understand a few things in the instruction\",\r\n        isDeniable: false,\r\n    },\r\n];\r\n\r\nconst AssigneeRevisionToDev = ({\r\n    task,\r\n    onBack,\r\n    onSubmit,\r\n    revision,\r\n    type = false,\r\n    isSubmitting = false,\r\n}) => {\r\n    const [reason, setReason] = useState(null);\r\n    const [reasonError, setReasonError] = useState(\"\");\r\n    const [comments, setComments] = useState([]);\r\n    const [commentError, setCommentError] = useState(false);\r\n    const [subtasks, setSubtasks] = useState([]);\r\n    const [subtaskError, setSubtaskError] = useState(\"\");\r\n    const [isDeniable, setIsDeniable] = useState(false);\r\n\r\n    // radio button change\r\n    const handleChange = (value) => {\r\n        setReason(value);\r\n    };\r\n\r\n    // editor change text\r\n    const hanldeEditorTextChange = (e, editor, id) => {\r\n        const data = editor.getData();\r\n        const _comments = [...comments];\r\n\r\n        const index = _comments?.findIndex((d) => d.subtask_id === id);\r\n        if (index === -1) {\r\n            _comments.push({\r\n                id: id,\r\n                subtask_id: id,\r\n                comment: data,\r\n                acknowledgement_id: reason?.id ?? \"\",\r\n            });\r\n        } else {\r\n            _comments[index] = {\r\n                id: id,\r\n                subtask_id: id,\r\n                comment: data,\r\n                acknowledgement_id: reason?.id ?? \"\",\r\n            };\r\n        }\r\n\r\n        setComments([..._comments]);\r\n    };\r\n\r\n    // validation\r\n    const validate = () => {\r\n        let errorCount = 0;\r\n        if (reason === null && revision?.is_deniable && type) {\r\n            errorCount++;\r\n            setReasonError(\"You have to select a reason from below options\");\r\n        }\r\n\r\n        if (_.size(task?.subtask) > 0) {\r\n            if (subtasks.length === 0) {\r\n                errorCount++;\r\n                setSubtaskError(\r\n                    \"You need to selecd at least one sub task to continue.\"\r\n                );\r\n            }\r\n\r\n            if (comments.length === 0 || comments.length !== subtasks.length) {\r\n                errorCount++;\r\n                setCommentError(true);\r\n            }\r\n\r\n            comments?.map((comment) => {\r\n                if (comment?.comment === \"\") {\r\n                    errorCount++;\r\n                    setCommentError(true);\r\n                }\r\n            });\r\n        }\r\n\r\n        return errorCount === 0 ? true : false;\r\n    };\r\n\r\n    // handle submiton\r\n    const handleSubmition = (e) => {\r\n        e.preventDefault();\r\n\r\n        const data = {\r\n            task_id: task?.id,\r\n            reason: reason?.revision,\r\n            comments,\r\n            is_deniable: reason?.isDeniable ?? false,\r\n        };\r\n        if (validate()) {\r\n            onSubmit(data);\r\n        }\r\n    };\r\n\r\n    const onBackButtonClick = (e) => {\r\n        e.preventDefault();\r\n        onBack();\r\n    };\r\n \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <form action=\"\">\r\n                {revision?.is_deniable !== 0 && type ? (\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                            Revision Acknowledgement\r\n                            <sup className=\"f-16\">*</sup> :\r\n                        </label>\r\n                        <div className=\"px-3\">\r\n                            {_.map(options, (revision) => (\r\n                                <div\r\n                                    key={revision.id}\r\n                                    className=\"form-check d-flex align-items-start mb-2\"\r\n                                >\r\n                                    <input\r\n                                        className=\"form-check-input mr-2\"\r\n                                        type=\"radio\"\r\n                                        name=\"exampleRadios\"\r\n                                        id={revision.id}\r\n                                        required={true}\r\n                                        onChange={() => handleChange(revision)}\r\n                                        value={revision.revision}\r\n                                        style={{\r\n                                            width: \"16px\",\r\n                                            height: \"16px\",\r\n                                            marginTop: \"3px\",\r\n                                        }}\r\n                                    />\r\n                                    <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor={revision.id}\r\n                                        style={{ marginBottom: \"3px\" }}\r\n                                    >\r\n                                        {revision.revision}\r\n                                    </label>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        {reasonError && (\r\n                            <small\r\n                                id=\"emailHelp\"\r\n                                className=\"form-text text-danger\"\r\n                            >\r\n                                {reasonError}\r\n                            </small>\r\n                        )}\r\n                    </div>\r\n                ) : null}\r\n\r\n                {task?.taskSubTask?.length > 0 && (\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                            Select SubTask\r\n                            <sup className=\"font-weight-bold f-16\">*</sup> :\r\n                        </label>\r\n                        <SubtaskSelectionMenu\r\n                            task={task}\r\n                            subTasks={subtasks}\r\n                            setSubtasks={setSubtasks}\r\n                        />\r\n                    </div>\r\n                )}\r\n\r\n                {subtasks?.length > 0 && (\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                            Comment:\r\n                        </label>\r\n                        {subtasks.map((s, i) => (\r\n                            <React.Fragment key={s.subtask_id}>\r\n                                <div className=\"form-group\">\r\n                                    <label\r\n                                        htmlFor=\"\"\r\n                                        className=\"font-weight-bold\"\r\n                                    >\r\n                                        {i + 1}. Task: {s?.title}\r\n                                    </label>{\" \"}\r\n                                    <br />\r\n                                    <label className=\"font-weight-bold\">\r\n                                        Write Your Revision\r\n                                        <sup className=\"font-weight-bold f-16\">\r\n                                            *\r\n                                        </sup>\r\n                                        :{\" \"}\r\n                                    </label>\r\n                                    <div className=\"ck-editor-holder\">\r\n                                        <CKEditorComponent\r\n                                            onChange={(e, editor) =>\r\n                                                hanldeEditorTextChange(\r\n                                                    e,\r\n                                                    editor,\r\n                                                    s?.subtask_id\r\n                                                )\r\n                                            }\r\n                                        />\r\n                                    </div>\r\n                                    {commentError && (\r\n                                        <small\r\n                                            id=\"emailHelp\"\r\n                                            className=\"form-text text-danger\"\r\n                                        >\r\n                                            You have to explain the revision in\r\n                                            details, so that Developer can\r\n                                            understand where they need to work.\r\n                                        </small>\r\n                                    )}\r\n                                </div>\r\n                            </React.Fragment>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n\r\n                <div className=\"mt-3 mb-3 d-flex align-items-center\">\r\n                    {/* <Button\r\n                        onClick={onBackButtonClick}\r\n                        variant=\"tertiary\"\r\n                        className=\"ml-auto mr-2\"\r\n                    >\r\n                        Back\r\n                    </Button>\r\n                     */}\r\n                    <NextAndContinueButton\r\n                        onClick={handleSubmition}\r\n                        isLoading={isSubmitting}\r\n                    />\r\n                </div>\r\n            </form>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AssigneeRevisionToDev;\r\n\r\nconst NextAndContinueButton = ({ onClick, isLoading }) => {\r\n    if (!isLoading) {\r\n        return (\r\n            <Button className=\"ml-auto\" onClick={onClick}>\r\n                {\" \"}\r\n                Continue\r\n            </Button>\r\n        );\r\n    } else {\r\n        return (\r\n            <Button className=\"cursor-processing ml-auto\">\r\n                <div\r\n                    className=\"spinner-border text-white mr-2\"\r\n                    role=\"status\"\r\n                    style={{\r\n                        width: \"18px\",\r\n                        height: \"18px\",\r\n                    }}\r\n                />\r\n                Processing...\r\n            </Button>\r\n        );\r\n    }\r\n};\r\n\r\n// sub task selection menu\r\nconst SubtaskSelectionMenu = ({ task, subTasks, setSubtasks }) => {\r\n    return (\r\n        <div className=\"position-relative\">\r\n            <Listbox value={subTasks} onChange={setSubtasks} multiple>\r\n                <Listbox.Button className=\"position-relative w-100 bg-white py-2 pl-2 pr-1 border d-flex align-items-center justify-content-between\">\r\n                    <span\r\n                        className=\"w-100 mr-auto text-left d-flex flex-wrap align-items-center\"\r\n                        style={{ gap: \"6px\" }}\r\n                    >\r\n                        {subTasks?.length > 0\r\n                            ? subTasks.map((s) => (\r\n                                  <span\r\n                                      key={s.subtask_id}\r\n                                      className=\"badge badge-light\"\r\n                                      style={{ fontSize: \"13px\" }}\r\n                                  >\r\n                                      {\" \"}\r\n                                      {s?.title}{\" \"}\r\n                                  </span>\r\n                              ))\r\n                            : \"Select Subtasks\"}\r\n                    </span>\r\n                    <HiOutlineSelector />\r\n                </Listbox.Button>\r\n                <Listbox.Options\r\n                    className=\"position-absolute bg-white p-2 shadow w-100\"\r\n                    style={{\r\n                        zIndex: 10,\r\n                        maxHeight: \"350px\",\r\n                        overflowY: \"auto\",\r\n                    }}\r\n                >\r\n                    {task?.taskSubTask?.length > 0 ? (\r\n                        task?.taskSubTask?.map((s) => (\r\n                            <Listbox.Option\r\n                                value={s}\r\n                                key={s.subtask_id}\r\n                                tabIndex={-1}\r\n                                className={({ active }) =>\r\n                                    active\r\n                                        ? \"task-selection-list-option active\"\r\n                                        : \"task-selection-list-option\"\r\n                                }\r\n                            >\r\n                                {({ selected }) => (\r\n                                    <React.Fragment>\r\n                                        <div>{s.title} <span className=\"badge badge-success\">{s.assigned_to_name}</span></div>\r\n                                        {selected && (\r\n                                            <div>\r\n                                                <i className=\"fa-solid fa-check\"></i>\r\n                                            </div>\r\n                                        )}\r\n                                    </React.Fragment>\r\n                                )}\r\n                            </Listbox.Option>\r\n                        ))\r\n                    ) : (\r\n                        <div>No Data Found</div>\r\n                    )}\r\n                </Listbox.Options>\r\n            </Listbox>\r\n        </div>\r\n    );\r\n};\r\n","import React, {useState} from 'react'\r\nimport Button from '../../../components/Button';\r\nimport CKEditorComponent from '../../../../ckeditor';\r\nimport SubmitButton from '../../../components/SubmitButton';\r\nimport { User } from '../../../../utils/user-details';\r\n\r\n\r\n\r\nconst denyOptions = (type) => {\r\n    switch(type){\r\n        case 'lead_dev': \r\n            return ([\r\n                {id: 'deny1', title: 'The project manager added new things in the instruction which was not part of the original instruction'},\r\n                {id: 'deny2', title: 'The way the project manager is interpreting his original instruction now was not possible to understand from what his writing'}\r\n            ])\r\n        case 'dev':\r\n            return([\r\n                {id: 'deny1', title: 'The lead developer added new things in the instruction which was not part of the original instruction'},\r\n                {id: 'deny2', title: 'The way the lead developer is interpreting his original instruction now was not possible to understand from what his writing'}\r\n            ])\r\n        default: []\r\n    }\r\n}\r\n\r\n\r\n\r\nconst DenyAndContinue = ({onSubmit, isSubmitting, onBack, task}) => {\r\n    const auth = new User(window?.Laravel?.user);\r\n    const [reason, setReason] = useState(\"\");\r\n    const [reasonError, setReasonError] = useState(\"\");\r\n    const [comment, setComment] = useState(\"\");\r\n    const [commentError, setCommentError] = useState(\"\");\r\n    const [err, setErr] = useState(null);\r\n\r\n    const handleEditorDataChange = (e, editor) => {\r\n        const data = editor.getData();\r\n        setComment(data);\r\n    };\r\n\r\n    // radio button change\r\n    const handleChange = (e) => {\r\n        setReason(e.target.value);\r\n    };\r\n\r\n     // validation\r\n     const validate = () => {\r\n        let errorCount = 0;\r\n        \r\n        if(comment === \"\"){\r\n             errorCount++;\r\n             setCommentError('You have to explain the revision in details, so that lead developer/developer can understand where they need to work.')     \r\n        }\r\n \r\n        if(reason === ''){\r\n             errorCount++;\r\n             setReasonError('You have to select a reason from above options')\r\n        }\r\n \r\n        return errorCount === 0; \r\n     }\r\n\r\n\r\n    const handleOnSubmit = e => {\r\n        e.preventDefault();\r\n        if(validate()){\r\n            onSubmit({\r\n                comment,\r\n                denyReason: reason\r\n            });\r\n        }else{\r\n            setErr(\"You have to Explain Why Did You Deny!\")\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    const options = auth?.getRoleId() === 6 ? denyOptions('lead_dev') : denyOptions('dev');\r\n    return (\r\n        <React.Fragment>  \r\n            <form action=\"\">\r\n                {/* reason for deny */}\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                        Select reason for deny<sup className=\"f-16\">*</sup> :\r\n                    </label>\r\n                    <div className=\"px-3\">\r\n                        {options.map(option => (\r\n                            <div key={option.id} className=\"form-check d-flex align-items-start mb-2\">\r\n                                <input\r\n                                    className=\"form-check-input mr-2\"\r\n                                    type=\"radio\"\r\n                                    name=\"exampleRadios\"\r\n                                    id={option.id}\r\n                                    required= {true}\r\n                                    onChange={handleChange}\r\n                                    value={option.title}\r\n                                    style={{\r\n                                        width: \"16px\",\r\n                                        height: \"16px\",\r\n                                        marginTop: \"3px\",\r\n                                    }}\r\n                                    \r\n                                />\r\n                                <label\r\n                                    className=\"form-check-label\"\r\n                                    htmlFor={option.id}\r\n                                    style={{ marginBottom: \"3px\" }}\r\n                                >\r\n                                    {option.title}\r\n                                </label>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    {reasonError && <small id=\"emailHelp\" className=\"form-text text-danger\">{reasonError}</small>}\r\n                </div>\r\n\r\n\r\n                {/* rich editor  */}\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                        Please Explain Why Did You Deny? <sup className=\"f-16 text-red\">*</sup>\r\n                    </label>\r\n                    <div className=\"ck-editor-holder\">\r\n                        <CKEditorComponent onChange={handleEditorDataChange} />\r\n                    </div>\r\n                    {commentError && <small id=\"emailHelp\" className=\"form-text text-danger\">\r\n                        {commentError}\r\n                    </small>} \r\n                </div>\r\n\r\n                <div className=\"mt-3 d-flex align-items-center\">\r\n                        <Button onClick={onBack} variant=\"tertiary\" className=\"ml-auto mr-2\">\r\n                            Back\r\n                        </Button>\r\n\r\n                        {!isSubmitting ? (\r\n                            <React.Fragment>\r\n                                <React.Fragment>\r\n                                {_.includes([4, 6], auth?.getRoleId()) ? (\r\n                                    <Button onClick={handleOnSubmit}>Next</Button>\r\n                                ): \r\n                                    <SubmitButton\r\n                                        title=\"Submit\" \r\n                                        isLoading={isSubmitting}\r\n                                        onClick={handleOnSubmit}\r\n                                    />\r\n                                }\r\n                            </React.Fragment>\r\n                            </React.Fragment>\r\n                        ) : (\r\n                            <React.Fragment>\r\n                                <Button className=\"cursor-processing\">\r\n                                    <div\r\n                                        className=\"spinner-border text-white\"\r\n                                        role=\"status\"\r\n                                        style={{\r\n                                            width: \"18px\",\r\n                                            height: \"18px\",\r\n                                        }}\r\n                                    />{\" \"}\r\n                                    Processing...\r\n                                </Button>\r\n                            </React.Fragment>\r\n                        )}\r\n                    </div>\r\n            </form>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default DenyAndContinue","import React, {useState} from 'react'\r\nimport Button from '../../../components/Button'\r\nimport RevisionView from './RevisionView'\r\nimport { RevisionAcceptAndContinue } from './RevisionAcceptAndContinue';\r\nimport AssigneeRevisionToDev from './AssigneeRevisionToDev';\r\nimport DenyAndContinue from './DenyAndContinue';\r\nimport { useGetRevisionDetailsQuery, useRevisionAcceptOrDenyMutation } from '../../../../services/api/SingleTaskPageApi';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setTaskStatus } from '../../../../services/features/subTaskSlice';\r\nimport { User } from '../../../../utils/user-details';\r\n\r\nconst DeveloperRevisionView = ({task, close}) => {\r\n  const [show, setShow] = useState(\"REVISION\");\r\n  const [accept, setAccept] = useState('');\r\n  const dispatch = useDispatch();\r\n  const { data: revision, isFetching: isFetchingRevision } = useGetRevisionDetailsQuery(task?.id);\r\n  const [revisionAcceptOrDeny, {isLoading: isLoadingRevisionReview}] = useRevisionAcceptOrDenyMutation();\r\n  const auth = new User(window?.Laravel?.user);\r\n\r\n  // handle Accept and continue submission\r\n  const handleAcceptAndContinueSubmission = (data, type) => {\r\n\r\n    const _data = {\r\n        comment: data?.comment ?? '',\r\n        deny_reason: data?.denyReason ?? '',\r\n        task_id: task?.id,\r\n        user_id: auth?.getId(),\r\n        revision_id: revision?.id,\r\n        mode: data?.continue ? 'continue' : accept\r\n    }\r\n\r\n\r\n    revisionAcceptOrDeny(_data)\r\n    .unwrap()\r\n    .then(res => {\r\n        if(_.includes([4, 6], auth?.getRoleId())){\r\n            setShow(type);\r\n        }else{\r\n            dispatch(setTaskStatus(res?.task_status));\r\n            close();\r\n        }\r\n    })\r\n    .catch(err => console.log(err))\r\n  }\r\n\r\n\r\n  // generate modal title by user role id\r\n\r\n  const generateModalTitle = () => {\r\n    if(auth.getRoleId() === 4){\r\n        return show === \"ASSIGNEE_TO_DEV\"  ? \"Revision For Lead Developer\":\"Revision By Project Manager/Top Management\";\r\n    }else if(auth.getRoleId() === 6){\r\n        return show === \"ASSIGNEE_TO_DEV\"  ? \"Revision For Developer\":\"Revision By Project Manager/Top Management\";\r\n    }else if(auth.getRoleId() === 9 || auth.getRoleId() === 10){\r\n        return \"Revision By Project Manager/Top Management\";\r\n    }else return \"Revision By Lead Developer\"\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <div\r\n            className=\"sp1_single_task--modal-panel\"\r\n            style={{ maxWidth: \"550px\" }}\r\n        >\r\n            <div className=\"border-bottom pb-2 px-3 mb-3 d-flex align-items-center justify-content-between\">\r\n                <div className=\"font-weight-bold f-16\">\r\n                    Task#{task?.id}: {\" \"} {generateModalTitle()}\r\n                </div>\r\n                <Button onClick={close} className=\"\">\r\n                    <i className=\"fa-solid fa-xmark\" />\r\n                </Button>\r\n            </div>\r\n\r\n            <div className=\"px-3\">\r\n               {show === 'REVISION' &&\r\n                    <RevisionView\r\n                        revision={revision}\r\n                        isLoading= {isFetchingRevision}\r\n                        isContinue={isLoadingRevisionReview}\r\n                        onAccept={() => {\r\n                            setAccept('accept');\r\n                            setShow('ACCEPT_AND_CONTINUE');\r\n                        }}\r\n                        onDeny={() => {\r\n                            setAccept(\"deny\");\r\n                            setShow('DENY_AND_CONTINUE')\r\n                        }}\r\n\r\n                        onContinue={() => {\r\n                            setAccept('continue')\r\n                            handleAcceptAndContinueSubmission({continue: true}, '')\r\n                        }}\r\n\r\n                    />\r\n                }\r\n\r\n                {\r\n                    show === 'ACCEPT_AND_CONTINUE' &&\r\n                    <RevisionAcceptAndContinue\r\n                        task={task}\r\n                        isSubmitting={isLoadingRevisionReview}\r\n                        onSubmit={data => handleAcceptAndContinueSubmission(data, \"ASSIGNEE_TO_DEV\")}\r\n                        close={() => setShow(\"REVISION\")}\r\n                    />\r\n                }\r\n\r\n                {show === \"DENY_AND_CONTINUE\" &&\r\n                    <DenyAndContinue\r\n                        task={task}\r\n                        onSubmit={data => handleAcceptAndContinueSubmission(data, \"DENY_ASSIGNEE_TO_DEV\")}\r\n                        isSubmitting = {isLoadingRevisionReview}\r\n                        onBack={() => setShow(\"REVISION\")}\r\n                    />\r\n                }\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\n\r\nexport default DeveloperRevisionView\r\n","import _ from 'lodash';\r\nimport React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { useGetRevisionDetailsQuery, useRevisionAcceptOrDenyByLeadDeveloperMutation } from '../../../../services/api/SingleTaskPageApi';\r\nimport { User } from '../../../../utils/user-details';\r\nimport Button from '../../../components/Button';\r\nimport AssigneeRevisionToDev from './AssigneeRevisionToDev';\r\nimport DenyAndContinue from './DenyAndContinue';\r\nimport { RevisionAcceptAndContinue } from './RevisionAcceptAndContinue';\r\nimport RevisionView from './RevisionView';\r\n\r\n\r\nconst RevisionViewModal = ({task, close}) => {\r\n  const [show, setShow] = useState(\"REVISION\");\r\n  const [accept, setAccept] = useState('');\r\n  const [comment, setComment] = useState('');\r\n  const [denyReason, setDenyReason] = useState('');\r\n  const dispatch = useDispatch();\r\n  const { data: revision, isFetching } = useGetRevisionDetailsQuery(task?.id);\r\n//   const [revisionAcceptOrDeny, {isLoading: isLoadingRevisionReview}] = useRevisionAcceptOrDenyMutation();\r\n  const auth = new User(window?.Laravel?.user);\r\n  const [\r\n    revisionAcceptOrDeny,\r\n    {isLoading: isLoadingRevisionReview}\r\n  ] = useRevisionAcceptOrDenyByLeadDeveloperMutation();\r\n\r\n  // handle Accept and continue submition\r\n  const hanldeAcceptAndContinueSubmition = (data, type) => {\r\n    setComment(data);\r\n    setShow(type);\r\n  }\r\n\r\n   // handle Accept and continue submition\r\n   const hanldeDenyAndContinueSubmition = (data, type) => {\r\n    setComment(data);\r\n    setDenyReason(data?.denyReason);\r\n    setShow(type);\r\n  }\r\n\r\n\r\n  const handleOnSubmit = async (data, type) =>{\r\n    let fdata ={\r\n        comment: comment?.comment ?? '',\r\n        task_id: data?.task_id,\r\n        project_id: task?.projectId,\r\n        user_id: auth?.getId(),\r\n        subTask: _.map(data?.comments, comment => ({...comment, is_deniable: data?.is_deniable})),\r\n        revision_acknowledgement: data?.reason ?? '',\r\n        revision_id: revision?.id,\r\n        mode: data?.continue ? 'continue' : accept,\r\n        deny_reason: denyReason ?? '',\r\n        is_deniable: data?.is_deniable ?? false,\r\n    }\r\n\r\n\r\n    const params = (!data?.continue && accept===\"deny\") ? 'deny-continue' :'accept-continue';\r\n\r\n    await revisionAcceptOrDeny({fdata, params})\r\n    .unwrap()\r\n    .then(res => {\r\n        toast.success('Your request has been successfully processed')\r\n        close();\r\n    })\r\n    .catch(err => console.log(err))\r\n  }\r\n\r\n  const handleContinueButton = () => {\r\n    setAccept('continue');\r\n    if(_.size(revision?.taskSubTask) === 0){\r\n        setShow('DENY_ASSIGNEE_TO_DEV');\r\n    }else{\r\n        handleOnSubmit({\r\n            continue: true,\r\n        }, '')\r\n    }\r\n  }\r\n\r\n\r\n  const generateModalTitle = () => {\r\n    if(auth.getRoleId() === 4){\r\n        return show === \"ASSIGNEE_TO_DEV\"  ? \"Revision For Lead Developer\":\"Revision By Project Manager\";\r\n    }else if(auth.getRoleId() === 6){\r\n        return show === \"ASSIGNEE_TO_DEV\"  ? \"Revision For Developer\":\"Revision By Project Manager\";\r\n    }else if(auth.getRoleId() === 9 || auth.getRoleId() === 10){\r\n        return \"Revision By Project Manager\";\r\n    }else return \"Revision By Lead Developer\"\r\n  }\r\n\r\n\r\n\r\n\r\n//   console.log({task})\r\n  return (\r\n    <React.Fragment>\r\n        <div\r\n            className=\"sp1_single_task--modal-panel\"\r\n            style={{ maxWidth: \"550px\" }}\r\n        >\r\n            <div className=\"border-bottom pb-2 px-3 mb-3 d-flex align-items-center justify-content-between\">\r\n                <div className=\"font-weight-bold f-16\">\r\n                    Task#{task?.id}:\r\n                    {generateModalTitle()}\r\n                </div>\r\n                <Button onClick={close} className=\"\">\r\n                    <i className=\"fa-solid fa-xmark\" />\r\n                </Button>\r\n            </div>\r\n\r\n            <div className=\"px-3\">\r\n               {show === 'REVISION' &&\r\n                    <RevisionView\r\n                        revision={revision}\r\n                        isLoading= {isFetching}\r\n                        isContinue={isLoadingRevisionReview}\r\n                        onAccept={() => {\r\n                            setAccept('accept');\r\n                            setShow('ACCEPT_AND_CONTINUE');\r\n                        }}\r\n                        onDeny={() => {\r\n                            setAccept('deny');\r\n                            setShow('DENY_AND_CONTINUE')\r\n                        }}\r\n                        onContinue={handleContinueButton}\r\n                    />\r\n                }\r\n\r\n                {\r\n                    show === 'ACCEPT_AND_CONTINUE' &&\r\n                    <RevisionAcceptAndContinue\r\n                        task={task}\r\n                        isSubmitting={isLoadingRevisionReview}\r\n                        onSubmit={data => hanldeAcceptAndContinueSubmition(data, \"ASSIGNEE_TO_DEV\")}\r\n                        close={() => setShow(\"REVISION\")}\r\n                    />\r\n                }\r\n\r\n                {show === \"ASSIGNEE_TO_DEV\" &&\r\n                    <AssigneeRevisionToDev\r\n                        task={task}\r\n                        revision={revision}\r\n                        type={true}\r\n                        onSubmit={(data) =>handleOnSubmit( data, 'ASSIGNEE_TO_DEV' )}\r\n                        isSubmitting = {isLoadingRevisionReview}\r\n                        onBack={() => setShow(\"ACCEPT_AND_CONTINUE\")}\r\n                    />\r\n                }\r\n\r\n                {show === \"DENY_AND_CONTINUE\" &&\r\n                    <DenyAndContinue\r\n                        task={task}\r\n                        onSubmit={data => hanldeDenyAndContinueSubmition(data, \"DENY_ASSIGNEE_TO_DEV\")}\r\n                        isSubmitting = {isLoadingRevisionReview}\r\n                        onBack={() => setShow(\"REVISION\")}\r\n                    />\r\n                }\r\n\r\n\r\n                {_.size(task?.taskSubTask) > 0 && show === \"DENY_ASSIGNEE_TO_DEV\" &&\r\n                    <AssigneeRevisionToDev\r\n                        task={task}\r\n                        revision={revision}\r\n                        type={false}\r\n                        onSubmit={(data) => handleOnSubmit(data, 'DENY_ASSIGNEE_TO_DEV')}\r\n                        isSubmitting = {isLoadingRevisionReview}\r\n                        onBack={() => setShow(\"DENY_AND_CONTINUE\")}\r\n                    />\r\n                }\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\n\r\nexport default RevisionViewModal\r\n","import React, { useState } from 'react';\r\nimport Button from '../../../components/Button';\r\nimport Modal from '../../../components/Modal';\r\nimport DeveloperRevisionView from './DeveloperRevisionView';\r\nimport RevisionViewModal from './RevisionViewModal';\r\n\r\nconst RevisionViewControl = ({task, auth, status}) => {\r\n    const [revisionModal, setRevisionModal] = useState(false);\r\n    const singleTask = task;\r\n\r\n    console.log({task})\r\n  return (\r\n    <React.Fragment>\r\n        <Button\r\n            variant='tertiary'\r\n            onClick={() => setRevisionModal(true)}\r\n            className='d-flex align-items-center sp1-st-revision-btn --view-revision'\r\n        >\r\n            <i className=\"fa-solid fa-plus-minus\" />\r\n            <span className=\"d-inline ml-1\">Revision</span>\r\n        </Button>\r\n\r\n        <Modal isOpen={revisionModal} className=\"sp1_single_task--modal\">\r\n            <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n                {\r\n                    // check is subtask\r\n                    task?.hasSubtask ?\r\n                    <RevisionViewModal\r\n                        task={singleTask}\r\n                        close={() => setRevisionModal(false)}\r\n                    />\r\n                    :\r\n                    <DeveloperRevisionView\r\n                        task={task}\r\n                        close={() => setRevisionModal(false)}\r\n                    />\r\n                }\r\n\r\n            </div>\r\n        </Modal>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default RevisionViewControl\r\n","import React from 'react'\r\n\r\nexport default function GuideLineText() {\r\n\r\n    const html = `<html><head><meta content=\"text/html; charset=UTF-8\" http-equiv=\"content-type\"><style type=\"text/css\">ol{margin:0;padding:0}table td,table th{padding:0}.c4{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:\"Arial\";font-style:normal}.c0{padding-top:0pt;padding-bottom:0pt;line-height:1.15;orphans:2;widows:2;text-align:left}.c5{background-color:#ffffff;max-width:468pt;padding:72pt 72pt 72pt 72pt}.c2{height:11pt}.c3{font-style:italic}.c1{font-weight:700}.title{padding-top:0pt;color:#000000;font-size:26pt;padding-bottom:3pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}.subtitle{padding-top:0pt;color:#666666;font-size:15pt;padding-bottom:16pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}li{color:#000000;font-size:11pt;font-family:\"Arial\"}p{margin:0;color:#000000;font-size:11pt;font-family:\"Arial\"}h1{padding-top:20pt;color:#000000;font-size:20pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h2{padding-top:18pt;color:#000000;font-size:16pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h3{padding-top:16pt;color:#434343;font-size:14pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h4{padding-top:14pt;color:#666666;font-size:12pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h5{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h6{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;font-style:italic;orphans:2;widows:2;text-align:left}</style></head><body class=\"c5 doc-content\"><p class=\"c0\"><span>Other than all the old fields, we have introduced the task type and page type fields in the new subtask creation form. Here is a guide for you so you know when to choose which one: <br><br></span><span class=\"c1\">1. New page design:</span><span>&nbsp;When you are going to need any new pages developed (except for cloning for example duplicating a service page to create 20 more service pages and cases like this), you should select this one. It has 2 subdivisions in the next field: <br><br></span><span class=\"c1\">A. Primary page development:</span><span class=\"c4\">&nbsp;All the pages on the website that are money pages (can generate money or revenue), require significant effort to be developed and clients usually remain very picky about them and don&rsquo;t want to compromise anything in those pages are what we are calling primary pages. Primary pages will have these elements mandatorily: <br> &nbsp; &nbsp; They have to be money pages like home, product, service, collection etc. </span></p><p class=\"c0\"><span class=\"c4\">&nbsp; &nbsp; &nbsp;*Most of the traffic will be on these pages <br> &nbsp; &nbsp; They have not less than 6 sections and every section has to be well designed<br> &nbsp; &nbsp; Homepage should be always counted as a primary page. <br> &nbsp; &nbsp; The developers will have to put significant effort to build them</span></p><p class=\"c0\"><span>&nbsp; &nbsp; &nbsp;*The clients will be serious/picky about these pages and won&#39;t accept unless they are perfect. <br><br></span><span class=\"c1\">Rough numbers of primary page on a website:</span><span>&nbsp;Not more than 3 (Except for very rare cases)<br><br></span><span class=\"c1\">Example:</span><span>&nbsp;Home, product page and collection pages for woocommerce/shopify; home, service category and service page for service websites; Home, property buy/sale listing pages for a real estate broker site and like this. <br><br><br>B. </span><span class=\"c1\">Secondary page development:</span><span class=\"c4\">&nbsp;All the relatively less important pages on the site should go to secondary pages. The characteristics include: <br> &nbsp;*They don&rsquo;t generate money necessarily, they are needed for customers&#39; trust, information and other things. For example, about us, shipping policy, FAQ, return policy etc. <br> &nbsp;*They have less than 6 sections, for example contact us. <br> &nbsp;*Require less efforts from the developers to develop them.<br> &nbsp;*In many cases, developers can directly use the template with minimum customization. For example, cart, checkout pages on ecommerce sites. </span></p><p class=\"c0\"><span>&nbsp; *The clients will be less serious about them as these pages are not super sensitive. <br><br><br>2. </span><span class=\"c1\">Cloning existing design: <br></span><span class=\"c4\">Any cloning/duplication job that needs to be done in bulk should go under this. Example include: <br><br>A. Creating 20 service pages from 1 service page just by changing the content and the picture. <br>B. Creating/uploading 300 products after the product page will be developed initially. </span></p><p class=\"c0\"><span class=\"c4\">C. Creating 70 location pages from 1 page template finalized initially. <br><br>These tasks can be assigned to junior most persons in the team as these are identical to data entry works. <br><br></span></p><p class=\"c0\"><span>3. </span><span class=\"c1\">Others: </span><span><br>Under others, there are some other work types which you can select depending on your needs. <br><br>Choosing any task as the primary task will require authorization from team lead/management and the task will be assigned to the developers after the authorization part will be done. Declare any page as a primary page carefully as we are going to set up a point system for the developers where developers will get more points for the primary pages when compared to the secondary pages. So declaring any page as a primary page when it will take almost no effort to create can give the respective developer an unfair edge over the rest of him team members. <br><br></span><span class=\"c1\">P.S. </span><span class=\"c1 c3\">Other than these, we have added a new field named page url in the subtask creation form. So from now, you have to define the urls where the developers will work when assigning a task. It&rsquo;s important that the developers don&#39;t choose urls/permalinks randomly and you declare them beforehand and they use them mandatorily. <br><br></span><span class=\"c1\">Naming Criteria<br></span><span class=\"c4\">Make sure the subtask names are self explanatory so you or anyone else from the management knows what the subtask was about from its name. <br><br>For example, if the task name is &ldquo;Homepage&rdquo;, and if you have to break it into parts for obvious reasons, the subtask names should be as below: <br>Homepage mockup design (XD)</span></p><p class=\"c0\"><span class=\"c4\">Creating a custom slider for the homepage</span></p><p class=\"c0\"><span class=\"c4\">Converting XD to wordpress for the homepage</span></p><p class=\"c0 c2\"><span class=\"c4\"></span></p><p class=\"c0 c2\"><span><br><br><br></span></p></body></html>`\r\n  return (\r\n    <div dangerouslySetInnerHTML={{__html: html}}/>\r\n  )\r\n}\r\n","import { useState } from \"react\";\r\nimport Modal from \"../../components/Modal\";\r\nimport Button from \"../../components/Button\";\r\nimport GuideLineText from \"./subtask_creation_guide/GuideLineText\";\r\n\r\n\r\nexport default function SubtaskCreationControl({ className }) {\r\n  const [subtaskCreationModalIsOpen, setSubtaskCreationModalIsOpen] = useState(false);\r\n\r\n\r\n    // console.log(location);\r\n\r\n    const close = () => setSubtaskCreationModalIsOpen(false);\r\n    const open = () => setSubtaskCreationModalIsOpen(true);\r\n\r\n    return (\r\n        <div className={` ${className}`} >\r\n            <Button\r\n                variant=\"tertiary\"\r\n                // onClick={toggle}\r\n                onClick={open}\r\n                className=\"d-flex align-items-center btn-outline-dark text-dark\"\r\n            >\r\n                {/* {isFetching ? <Loader title=\"Processing...\" /> : <i className=\"fa-solid fa-check\" />} */}\r\n                <span className=\"d-inline ml-1\"> Subtask creation guide </span>\r\n            </Button>\r\n\r\n            <Modal isOpen={subtaskCreationModalIsOpen} className=\"sp1_mark-as--modal \">\r\n                <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n                    <div\r\n                        className=\"sp1_mark-as--modal-panel\"\r\n                        style={{ overflow: \"visible\", maxWidth: \"70rem\" }}\r\n                    >\r\n                        {/* heading bar */}\r\n                        <div className=\"sp1_mark-as--modal-heading\">\r\n                            <h6 className=\"mb-0 ml-2\" style={{fontStyle:'normal',fontWeight:'bold'}}>Subtask creation guide</h6>\r\n\r\n                            <Button aria-label=\"closeModal\" onClick={close}>\r\n                                <i className=\"fa-solid fa-xmark\" />\r\n                            </Button>\r\n                        </div>\r\n\r\n                        {/* body */}\r\n                        <div\r\n                            className=\"sp1_mark-as--modal-body px-3\"\r\n                            style={{ overflow: \"visible\" }}\r\n                        >\r\n                            \r\n                            <div style={{maxHeight:'80vh',overflow:'auto',padding:'0 20px 0 0'}}>\r\n                                <GuideLineText />\r\n                            </div>\r\n\r\n                            <div className=\"mt-3 d-flex align-items-center\">\r\n                                <Button\r\n                                    variant=\"tertiary\"\r\n                                    className=\"ml-auto mr-2\"\r\n                                    onClick={close}\r\n                                >\r\n                                    Close\r\n                                </Button>\r\n                                {/* <SubmitButton onClick={handleSubmit} isLoading={isSubmitting} title=\"Submit\" /> */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport Modal from '../../components/Modal'\r\nimport Button from '../../components/Button'\r\n\r\nconst StartTimerConfirmationModal = ({isOpen, onConfirm}) => {\r\n  const [buttonVisible, setButtonVisible] = React.useState(false);\r\n  const [countDown, setCountDown] = React.useState(20);\r\n\r\n  React.useEffect(() => {\r\n    let count = countDown ?? 0;\r\n\r\n    let timeIntervelId = setInterval(() => {\r\n        setCountDown(count--);\r\n    }, 1000);\r\n\r\n\r\n    let timeOutId = setTimeout(() => {\r\n      setButtonVisible(true);\r\n      clearInterval(timeIntervelId)\r\n    }, 22000);\r\n\r\n    \r\n\r\n    return () => {\r\n      clearTimeout(timeOutId);\r\n      clearInterval(timeIntervelId);\r\n    };\r\n  }, []);\r\n\r\n  const text = `<html><head><meta content=\"text/html; charset=UTF-8\" http-equiv=\"content-type\"><style type=\"text/css\">ol{margin:0;padding:0}table td,table th{padding:0}.c0{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:\"Arial\";font-style:normal}.c1{padding-top:0pt;padding-bottom:0pt;line-height:1.15;orphans:2;widows:2;text-align:left}.c2{background-color:#ffffff;max-width:468pt;padding:72pt 72pt 72pt 72pt}.c3{height:11pt}.title{padding-top:0pt;color:#000000;font-size:26pt;padding-bottom:3pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}.subtitle{padding-top:0pt;color:#666666;font-size:15pt;padding-bottom:16pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}li{color:#000000;font-size:11pt;font-family:\"Arial\"}p{margin:0;color:#000000;font-size:11pt;font-family:\"Arial\"}h1{padding-top:20pt;color:#000000;font-size:20pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h2{padding-top:18pt;color:#000000;font-size:16pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h3{padding-top:16pt;color:#434343;font-size:14pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h4{padding-top:14pt;color:#666666;font-size:12pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h5{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h6{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;font-style:italic;orphans:2;widows:2;text-align:left}</style></head><body class=\"c2 doc-content\"><p class=\"c1\"><span class=\"c0\">Do You Understand The Following Things?</span></p><p class=\"c1\"><span class=\"c0\">A. Your job is not to decide what the look and feel of a website will be based on a few reference websites.</span></p><p class=\"c1\"><span class=\"c0\">B. Your job is not to research a theme based on an instruction shared by the PM.</span></p><p class=\"c1\"><span class=\"c0\">C. Your job is not to research a plugin based on a problem shared by PM.</span></p><p class=\"c1\"><span class=\"c0\">D. Your job is not to choose the color scheme of a website.</span></p><p class=\"c1\"><span class=\"c0\">E. Your job is not to talk to the support for example the Shopify support team, theme support, plugin support and any other support for any solution.</span></p><p class=\"c1\"><span class=\"c0\">F. Your job is not to create the training videos for the client after the completion of a project.</span></p><p class=\"c1\"><span class=\"c0\">G. You understand that all your hours have to be logged/tracked, and you will be questioned if you don&rsquo;t log at least 7 hours for any reason.</span></p><p class=\"c1 c3\"><span class=\"c0\"></span></p><p class=\"c1\"><span class=\"c0\">In general, anything that has to do with requirements define (of any sort) has to be done by the project manager. Your job is to execute the work based on the defined requirements.</span></p><p class=\"c1 c3\"><span class=\"c0\"></span></p><p class=\"c1\"><span class=\"c0\">If for any reason, project manager needs your help for any of those things, he will have to create a separate task for each of them and those tasks have to be authorized by the top management mandatorily. Report immediately if you are asked to do any of these and if it wasn&rsquo;t authorized by top management. You should see a text like &ldquo;Authorized by top management&rdquo; on the right side of the task title if it was authorized.</span></p><p class=\"c1 c3\"><span class=\"c0\"></span></p><p class=\"c1\"><span class=\"c0\">In case, you don&rsquo;t report, the extra time taken for these will be considered as your lacking (as they will remain unaccountable) and you will receive negative performance score.&quot;</span></p><p class=\"c1 c3\"><span class=\"c0\"></span></p><p class=\"c1\"><span class=\"c0\">&#2438;&#2474;&#2472;&#2495; &#2453;&#2495; &#2472;&#2495;&#2478;&#2509;&#2472;&#2482;&#2495;&#2454;&#2495;&#2468; &#2476;&#2495;&#2487;&#2479;&#2492;&#2455;&#2497;&#2482;&#2495; &#2476;&#2497;&#2461;&#2503;&#2472;?</span></p><p class=\"c1 c3\"><span class=\"c0\"></span></p><p class=\"c1\"><span class=\"c0\">&#2535;&#2404; &#2453;&#2527;&#2503;&#2453;&#2463;&#2495; &#2480;&#2503;&#2475;&#2494;&#2480;&#2503;&#2472;&#2509;&#2488; &#2451;&#2527;&#2503;&#2476;&#2488;&#2494;&#2439;&#2463;&#2503;&#2480; &#2451;&#2474;&#2480; &#2477;&#2495;&#2468;&#2509;&#2468;&#2495; &#2453;&#2480;&#2503; &#2453;&#2509;&#2482;&#2494;&#2527;&#2503;&#2472;&#2509;&#2463;&#2503;&#2480; &#2451;&#2527;&#2503;&#2476;&#2488;&#2494;&#2439;&#2463;&#2503;&#2480; Look &amp; Feel &#2453;&#2503;&#2478;&#2472; &#2489;&#2476;&#2503; &#2468;&#2494;&#2480; &#2476;&#2495;&#2487;&#2527;&#2503; &#2488;&#2495;&#2470;&#2509;&#2471;&#2494;&#2472;&#2509;&#2468; &#2472;&#2503;&#2527;&#2494; &#2438;&#2474;&#2472;&#2494;&#2480; &#2453;&#2494;&#2460; &#2472;&#2527;&#2404;</span></p><p class=\"c1\"><span class=\"c0\">&#2536;&#2404; &#2474;&#2509;&#2480;&#2507;&#2460;&#2503;&#2453;&#2509;&#2463; &#2478;&#2509;&#2479;&#2494;&#2472;&#2503;&#2460;&#2494;&#2480;&#2503;&#2480; &#2439;&#2472;&#2509;&#2488;&#2463;&#2509;&#2480;&#2494;&#2453;&#2486;&#2472; &#2437;&#2472;&#2497;&#2479;&#2494;&#2527;&#2496; &#2480;&#2495;&#2488;&#2494;&#2480;&#2509;&#2458; &#2453;&#2480;&#2503; &#2469;&#2495;&#2478; &#2454;&#2497;&#2433;&#2460;&#2503; &#2476;&#2503;&#2480; &#2453;&#2480;&#2494; &#2438;&#2474;&#2472;&#2494;&#2480; &#2453;&#2494;&#2460; &#2472;&#2527;&#2404;</span></p><p class=\"c1\"><span class=\"c0\">&#2537;&#2404; &#2474;&#2509;&#2480;&#2507;&#2460;&#2503;&#2453;&#2509;&#2463; &#2478;&#2509;&#2479;&#2494;&#2472;&#2503;&#2460;&#2494;&#2480;&#2503;&#2480; &#2439;&#2472;&#2509;&#2488;&#2463;&#2509;&#2480;&#2494;&#2453;&#2486;&#2472; &#2437;&#2472;&#2497;&#2479;&#2494;&#2527;&#2496; &#2480;&#2495;&#2488;&#2494;&#2480;&#2509;&#2458; &#2453;&#2480;&#2503; &#2474;&#2509;&#2482;&#2494;&#2455;&#2495;&#2472; &#2454;&#2497;&#2433;&#2460;&#2503; &#2476;&#2503;&#2480; &#2453;&#2480;&#2494; &#2438;&#2474;&#2472;&#2494;&#2480; &#2453;&#2494;&#2460; &#2472;&#2527;&#2404;</span></p><p class=\"c1\"><span class=\"c0\">&#2538;&#2404; &#2451;&#2527;&#2503;&#2476;&#2488;&#2494;&#2439;&#2463;&#2503;&#2480; &#2453;&#2494;&#2482;&#2494;&#2480; &#2488;&#2509;&#2453;&#2495;&#2478; &#2453;&#2495; &#2489;&#2476;&#2503; &#2488;&#2503;&#2463;&#2494; &#2474;&#2459;&#2472;&#2509;&#2470; &#2453;&#2480;&#2494; &#2476;&#2494; &#2453;&#2507;&#2472; &#2488;&#2495;&#2470;&#2509;&#2471;&#2494;&#2472;&#2509;&#2468; &#2472;&#2503;&#2527;&#2494; &#2438;&#2474;&#2472;&#2494;&#2480; &#2453;&#2494;&#2460; &#2472;&#2527;&#2404;</span></p><p class=\"c1\"><span class=\"c0\">&#2539;&#2404; &#2453;&#2507;&#2472; &#2471;&#2480;&#2472;&#2503;&#2480; &#2488;&#2478;&#2488;&#2509;&#2479;&#2494;&#2480; &#2488;&#2478;&#2494;&#2471;&#2494;&#2472;&#2503;&#2480; &#2460;&#2472;&#2509;&#2479;&#2503; &#2453;&#2507;&#2472; &#2474;&#2509;&#2480;&#2453;&#2494;&#2480; &#2488;&#2494;&#2474;&#2507;&#2480;&#2509;&#2463; &#2463;&#2495;&#2478;&#2503;&#2480; &#2488;&#2494;&#2469;&#2503; &#2479;&#2507;&#2455;&#2494;&#2479;&#2507;&#2455; &#2453;&#2480;&#2494; (&#2479;&#2503;&#2478;&#2472;, &#2486;&#2474;&#2495;&#2475;&#2494;&#2439; &#2488;&#2494;&#2474;&#2507;&#2480;&#2509;&#2463; &#2463;&#2495;&#2478;, &#2469;&#2495;&#2478; &#2488;&#2494;&#2474;&#2507;&#2480;&#2509;&#2463;, &#2474;&#2509;&#2482;&#2494;&#2455;&#2495;&#2472; &#2488;&#2494;&#2474;&#2507;&#2480;&#2509;&#2463;, &#2447;&#2476;&#2434; &#2437;&#2472;&#2509;&#2479; &#2453;&#2507;&#2472; &#2488;&#2494;&#2474;&#2507;&#2480;&#2509;&#2463; &#2463;&#2495;&#2478;) &#2438;&#2474;&#2472;&#2494;&#2480; &#2453;&#2494;&#2460; &#2472;&#2527;&#2404;</span></p><p class=\"c1\"><span class=\"c0\">&#2540;&#2404; &#2474;&#2509;&#2480;&#2507;&#2460;&#2503;&#2453;&#2509;&#2463; &#2486;&#2503;&#2487; &#2489;&#2476;&#2494;&#2480; &#2474;&#2480;&#2503; &#2453;&#2509;&#2482;&#2494;&#2527;&#2503;&#2472;&#2509;&#2463;&#2503;&#2480; &#2460;&#2472;&#2509;&#2479;&#2503; &#2453;&#2507;&#2472; &#2474;&#2509;&#2480;&#2453;&#2494;&#2480; &#2463;&#2509;&#2480;&#2503;&#2439;&#2472;&#2495;&#2434; &#2477;&#2495;&#2465;&#2495;&#2451; &#2476;&#2494;&#2472;&#2494;&#2472;&#2507; &#2438;&#2474;&#2472;&#2494;&#2480; &#2453;&#2494;&#2460; &#2472;&#2527;&#2404;</span></p><p class=\"c1\"><span class=\"c0\">&#2541;&#2404; &#2438;&#2474;&#2472;&#2495; &#2488;&#2509;&#2476;&#2496;&#2453;&#2494;&#2480; &#2453;&#2480;&#2459;&#2503;&#2472; &#2479;&#2503;, &#2438;&#2474;&#2472;&#2494;&#2453;&#2503; &#2438;&#2474;&#2472;&#2494;&#2480; &#2488;&#2453;&#2482; &#2453;&#2494;&#2460;&#2503;&#2480; &#2488;&#2478;&#2527; Seopage1 &#2447;&#2480; &#2439; &#2438;&#2480; &#2474;&#2495; &#2488;&#2495;&#2488;&#2509;&#2463;&#2503;&#2478;&#2503; &#2463;&#2509;&#2480;&#2509;&#2479;&#2494;&#2453; &#2453;&#2480;&#2468;&#2503; &#2489;&#2476;&#2503; &#2447;&#2476;&#2434; &#2479;&#2470;&#2495; &#2438;&#2474;&#2472;&#2495; &#2453;&#2507;&#2472; &#2453;&#2494;&#2480;&#2467;&#2503; &#2453;&#2478;&#2474;&#2453;&#2509;&#2487;&#2503; 7 &#2456;&#2467;&#2509;&#2463;&#2494; &#2463;&#2509;&#2480;&#2509;&#2479;&#2494;&#2453; &#2472;&#2494; &#2453;&#2480;&#2503;&#2472; &#2468;&#2494;&#2489;&#2482;&#2503; &#2438;&#2474;&#2472;&#2494;&#2453;&#2503; &#2474;&#2509;&#2480;&#2486;&#2509;&#2472; &#2453;&#2480;&#2494; &#2489;&#2476;&#2503;&#2404;</span></p><p class=\"c1 c3\"><span class=\"c0\"></span></p><p class=\"c1\"><span class=\"c0\">&#2488;&#2494;&#2471;&#2494;&#2480;&#2467;&#2477;&#2494;&#2476;&#2503;, &#2479;&#2503;&#2453;&#2507;&#2472;&#2507; &#2471;&#2480;&#2467;&#2503;&#2480; &#2474;&#2509;&#2480;&#2479;&#2492;&#2507;&#2460;&#2472;&#2496;&#2479;&#2492;&#2468;&#2494; &#2476;&#2494; Requirements &#2447;&#2480; &#2476;&#2495;&#2487;&#2527;&#2503; &#2488;&#2495;&#2470;&#2509;&#2471;&#2494;&#2472;&#2509;&#2468; &#2472;&#2503;&#2527;&#2494; (&#2479;&#2503; &#2453;&#2507;&#2472; &#2471;&#2480;&#2467;&#2503;&#2480;) &#2474;&#2509;&#2480;&#2507;&#2460;&#2503;&#2453;&#2509;&#2463; &#2478;&#2509;&#2479;&#2494;&#2472;&#2503;&#2460;&#2494;&#2480;&#2503;&#2480; &#2453;&#2494;&#2460;&#2404; &#2438;&#2474;&#2472;&#2494;&#2480; &#2453;&#2494;&#2460; &#2489;&#2458;&#2509;&#2459;&#2503;, &#2438;&#2474;&#2472;&#2494;&#2480; &#2441;&#2474;&#2480;&#2503; &#2447;&#2488;&#2494;&#2439;&#2472; &#2453;&#2480;&#2494; &#2453;&#2494;&#2460;&#2455;&#2497;&#2482;&#2507;&#2453;&#2503; &#2474;&#2509;&#2480;&#2507;&#2460;&#2503;&#2453;&#2509;&#2463; &#2478;&#2509;&#2479;&#2494;&#2472;&#2503;&#2460;&#2494;&#2480;&#2503;&#2480; &#2470;&#2503;&#2527;&#2494; &#2488;&#2495;&#2470;&#2509;&#2471;&#2494;&#2472;&#2509;&#2468; &#2437;&#2472;&#2509;&#2479;&#2479;&#2494;&#2527;&#2496; &#2476;&#2494;&#2488;&#2509;&#2468;&#2476;&#2494;&#2527;&#2472; &#2453;&#2480;&#2494;&#2404;</span></p><p class=\"c1 c3\"><span class=\"c0\"></span></p><p class=\"c1\"><span class=\"c0\">&#2479;&#2470;&#2495; &#2453;&#2507;&#2472; &#2453;&#2494;&#2480;&#2467;&#2503;, &#2474;&#2509;&#2480;&#2507;&#2460;&#2503;&#2453;&#2509;&#2463; &#2478;&#2509;&#2479;&#2494;&#2472;&#2503;&#2460;&#2494;&#2480; &#2447;&#2439; &#2453;&#2507;&#2472;&#2451; &#2453;&#2494;&#2460;&#2503; &#2438;&#2474;&#2472;&#2494;&#2480; &#2488;&#2494;&#2489;&#2494;&#2479;&#2509;&#2479;&#2503;&#2480; &#2474;&#2509;&#2480;&#2479;&#2492;&#2507;&#2460;&#2472; &#2478;&#2472;&#2503; &#2453;&#2480;&#2503;, &#2468;&#2494;&#2489;&#2482;&#2503; &#2468;&#2495;&#2472;&#2495; &#2488;&#2503;&#2455;&#2497;&#2482;&#2495;&#2480; &#2460;&#2472;&#2509;&#2479; &#2438;&#2482;&#2494;&#2470;&#2494; &#2438;&#2482;&#2494;&#2470;&#2494; &#2476;&#2495;&#2486;&#2503;&#2487; &#2471;&#2480;&#2467;&#2503;&#2480; &#2453;&#2494;&#2460; &#2468;&#2504;&#2480;&#2495; &#2453;&#2480;&#2468;&#2503; &#2489;&#2476;&#2503; &#2447;&#2476;&#2434; &#2448; &#2453;&#2494;&#2460;&#2455;&#2497;&#2482;&#2495; &#2437;&#2476;&#2486;&#2509;&#2479;&#2439; &#2463;&#2474; &#2478;&#2509;&#2479;&#2494;&#2472;&#2503;&#2460;&#2478;&#2503;&#2472;&#2509;&#2463; &#2453;&#2480;&#2509;&#2468;&#2499;&#2453; &#2437;&#2472;&#2497;&#2478;&#2507;&#2470;&#2495;&#2468; &#2489;&#2468;&#2503; &#2489;&#2476;&#2503;&#2404; &#2479;&#2470;&#2495; &#2438;&#2474;&#2472;&#2494;&#2453;&#2503; &#2447;&#2439; &#2471;&#2480;&#2467;&#2503;&#2480; &#2453;&#2507;&#2472;&#2451; &#2453;&#2494;&#2460; &#2453;&#2480;&#2468;&#2503; &#2476;&#2482;&#2494; &#2489;&#2479;&#2492; &#2447;&#2476;&#2434; &#2488;&#2503;&#2439; &#2453;&#2494;&#2460;&#2463;&#2495; &#2479;&#2470;&#2495; &#2463;&#2474; &#2478;&#2509;&#2479;&#2494;&#2472;&#2503;&#2460;&#2478;&#2503;&#2472;&#2509;&#2463; &#2453;&#2480;&#2509;&#2468;&#2499;&#2453; &#2437;&#2472;&#2497;&#2478;&#2507;&#2470;&#2495;&#2468; &#2472;&#2494; &#2489;&#2479;&#2492; &#2468;&#2476;&#2503; &#2468;&#2494; &#2437;&#2476;&#2495;&#2482;&#2478;&#2509;&#2476;&#2503; &#2463;&#2474; &#2478;&#2509;&#2479;&#2494;&#2472;&#2503;&#2460;&#2478;&#2503;&#2472;&#2509;&#2463;&#2503;&#2480; &#2453;&#2494;&#2459;&#2503; &#2480;&#2495;&#2474;&#2507;&#2480;&#2509;&#2463;&#2503;&#2480; &#2478;&#2494;&#2471;&#2509;&#2479;&#2478;&#2503; &#2460;&#2494;&#2472;&#2494;&#2468;&#2503; &#2489;&#2476;&#2503;&#2404; &nbsp;&#2488;&#2494;&#2471;&#2494;&#2480;&#2467;&#2468;, &#2447;&#2439; &#2471;&#2480;&#2467;&#2503;&#2480; &#2453;&#2494;&#2460;&#2503;&#2480; &#2453;&#2509;&#2487;&#2503;&#2468;&#2509;&#2480;&#2503;, &#2488;&#2434;&#2486;&#2509;&#2482;&#2495;&#2487;&#2509;&#2463; &#2474;&#2503;&#2460;&#2503;&#2480; &#2465;&#2494;&#2472; &#2474;&#2494;&#2486;&#2503; &ldquo;Authorized by top management&rdquo; &#2447;&#2439; &#2471;&#2480;&#2467;&#2503;&#2480; &#2447;&#2453;&#2463;&#2495; &#2482;&#2503;&#2454;&#2494; &#2470;&#2503;&#2454;&#2468;&#2503; &#2474;&#2494;&#2480;&#2476;&#2503;&#2472; &#2479;&#2470;&#2495; &#2488;&#2503;&#2463;&#2495; &#2463;&#2474; &#2478;&#2509;&#2479;&#2494;&#2472;&#2503;&#2460;&#2478;&#2503;&#2472;&#2509;&#2463; &#2453;&#2480;&#2509;&#2468;&#2499;&#2453; &#2437;&#2472;&#2497;&#2478;&#2507;&#2470;&#2495;&#2468; &#2489;&#2479;&#2492;&#2404;</span></p><p class=\"c1 c3\"><span class=\"c0\"></span></p><p class=\"c1\"><span class=\"c0\">&#2447;&#2439;&#2471;&#2480;&#2467;&#2503;&#2480; &#2437;&#2472;&#2472;&#2497;&#2478;&#2507;&#2470;&#2495;&#2468; &#2453;&#2494;&#2460;&#2503;&#2480; &#2453;&#2509;&#2487;&#2503;&#2468;&#2509;&#2480;&#2503; &#2438;&#2474;&#2472;&#2495; &#2479;&#2470;&#2495; &#2480;&#2495;&#2474;&#2507;&#2480;&#2509;&#2463; &#2472;&#2494; &#2453;&#2480;&#2503;&#2472;, &#2468;&#2494;&#2489;&#2482;&#2503; &#2488;&#2503;&#2439; &#2453;&#2494;&#2460;&#2503;&#2480; &#2460;&#2472;&#2509;&#2479;&#2503; &#2438;&#2474;&#2472;&#2495; &#2479;&#2503;&#2439; &#2488;&#2478;&#2527; &#2476;&#2509;&#2479;&#2527; &#2453;&#2480;&#2476;&#2503;&#2472; &#2468;&#2494; &#2455;&#2509;&#2480;&#2489;&#2472;&#2479;&#2507;&#2455;&#2509;&#2479; &#2476;&#2482;&#2503; &#2476;&#2495;&#2476;&#2503;&#2458;&#2495;&#2468; &#2489;&#2476;&#2503; &#2472;&#2494; &#2447;&#2476;&#2434; &#2447;&#2439; &#2471;&#2480;&#2467;&#2503;&#2480; &#2437;&#2472;&#2472;&#2497;&#2478;&#2507;&#2470;&#2495;&#2468; &#2453;&#2494;&#2460;&#2503; &#2460;&#2524;&#2495;&#2468; &#2469;&#2494;&#2453;&#2494;&#2480; &#2460;&#2472;&#2509;&#2479;&#2503; &#2438;&#2474;&#2472;&#2494;&#2480; &#2474;&#2494;&#2480;&#2475;&#2480;&#2509;&#2478;&#2503;&#2472;&#2509;&#2488; &#2488;&#2509;&#2453;&#2507;&#2480;&#2503; &#2472;&#2503;&#2455;&#2503;&#2463;&#2495;&#2477; &#2474;&#2527;&#2503;&#2472;&#2509;&#2463; &#2479;&#2507;&#2455; &#2489;&#2476;&#2503;&#2404;</span></p><p class=\"c1 c3\"><span class=\"c0\"></span></p></body></html>`\r\n\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} className=\"subtask-timer-confirmation--modal\">\r\n        <div className='subtask-timer-confirmation--panel'>\r\n           <div className=\"subtask-timer-confirmation--content\">\r\n            <div dangerouslySetInnerHTML={{__html: text}} />\r\n\r\n            \r\n                {/* <h4 className='mb-3'> Do You Understand The Following Things? </h4>\r\n                \r\n                <ol type='A'>\r\n                    <li> Your job is not to decide what the look and feel of a website will be based on a few reference websites. </li>\r\n                    <li>Your job is not to research a theme based on an instruction shared by the PM.</li>\r\n                    <li>Your job is not to research a plugin based on a problem shared by PM.</li>\r\n                    <li>Your job is not to choose the color scheme of a website.</li>\r\n                    <li>Your job is not to talk to the support for example the Shopify support team, theme support, plugin support and any other support for any solution.</li>\r\n                    <li>Your job is not to create the training videos for the client after the completion of a project.</li>\r\n                    <li>You understand that all your hours have to be logged/tracked, and you will be questioned if you don’t log at least 7 hours for any reason.</li>\r\n                </ol>\r\n\r\n\r\n                <p>In general, anything that has to do with requirements define (of any sort) has to be done by the project manager. Your job is to execute the work based on the defined requirements. </p> \r\n\r\n                <p>If for any reason, project manager needs your help for any of those things, he will have to create a separate task for each of them and those tasks have to be authorized by the top management mandatorily. Report immediately if you are asked to do any of these and if it wasn’t authorized by top management. You should see a text like “Authorized by top management” on the right side of the task title if it was authorized.</p>\r\n                \r\n                <p> In case, you don’t report, the extra time taken for these will be considered as your lacking (as they will remain unaccountable) and you will receive negative performance score.”</p>\r\n                */}\r\n                <div className='d-flex align-items-center'>\r\n                     <Button \r\n                        onClick={onConfirm} \r\n                        className='ml-auto'\r\n                        disabled={!buttonVisible}\r\n                      > \r\n                        Yes, I Fully Understand This {!buttonVisible && `(${countDown})`}\r\n                      </Button> \r\n                </div> \r\n           </div>\r\n        </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default StartTimerConfirmationModal","import * as React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setLessTrackModal } from \"../../../../services/features/subTaskSlice\";\r\nimport Modal from \"../../../components/Modal\";\r\nimport Loader from \"../../../components/Loader\";\r\n\r\nconst StopTimerConfrimationPopUp = React.lazy(() =>\r\n    import(\"./StopTimerConfrimationPopUp\")\r\n);\r\n\r\nconst LessTrackTimerModal = ({ stopTimer, startTimer }) => {\r\n    const { task, lessTrackModal, lessTrackModalFor } = useSelector(\r\n        (s) => s.subTask\r\n    );\r\n    const dispatch = useDispatch();\r\n\r\n    const close = () => {\r\n        dispatch(setLessTrackModal({ show: false, type: \"\" }));\r\n    };\r\n\r\n    // temporarily stop timer now\r\n    const stopTimerTemporarily = () => {\r\n        if (lessTrackModalFor === \"STOP_TIMER\") {\r\n            stopTimer();\r\n        }\r\n\r\n        if (lessTrackModalFor === \"START_TIMER\") {\r\n            startTimer();\r\n        }\r\n\r\n        close();\r\n    };\r\n    // lessTrackModal\r\n    return (\r\n        <Modal isOpen={lessTrackModal} className=\"sp1_single_task--modal\">\r\n            <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n                <React.Suspense\r\n                    fallback={\r\n                        <div className=\"sp1_single_task--modal-panel\">\r\n                            <Loader />\r\n                        </div>\r\n                    }\r\n                >\r\n                    <StopTimerConfrimationPopUp\r\n                        handleTemporarilyStopTimer={stopTimerTemporarily}\r\n                        close={close}\r\n                    />\r\n                </React.Suspense>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default LessTrackTimerModal;\r\n","import styled from 'styled-components';\r\n\r\n\r\nexport const StartTimerWorkingReport = () => {\r\n    return(\r\n       <div>\r\n            <Title>You haven't submitted the last day's working report.</Title>\r\n            <Text> Do you want to submit the working report?</Text>\r\n            <Note><strong>Note:</strong> If you didn't submit last day's working report, you won't be able to start the timer</Note>\r\n       </div>\r\n    )\r\n}\r\n\r\n\r\nconst Title = styled.h1`\r\n    font-weight: 600;\r\n    font-size: 1.5rem;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst Text = styled.p`\r\n    font-size: 1.1rem;\r\n    color: #ee3f07;\r\n`\r\n\r\nconst Note = styled.p`\r\n    font-size: 13px;\r\n    margin-top: 5px;\r\n    color: rgb(0 0 0 / 50%);\r\n    & > strong{\r\n        color:  #ee3f07;;\r\n    }\r\n`;\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport Button from \"../../components/Button\";\r\nimport StartTimerConfirmationModal from \"./StartTimerConfirmationModal\";\r\nimport {\r\n    useCheckWorkingReportMutation,\r\n    useLazyGetTaskDetailsQuery,\r\n    useLazyGetUserTrackTimeQuery,\r\n    useStartTimerApiMutation,\r\n    useStopTimerApiMutation\r\n} from \"../../../services/api/SingleTaskPageApi\";\r\nimport { CompareDate } from \"../../../utils/dateController\";\r\nimport _ from \"lodash\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setLessTrackModal, setTaskStatus } from \"../../../services/features/subTaskSlice\";\r\nimport LessTrackTimerModal from \"./stop-timer/LessTrackTimerModal\";\r\nimport { User } from \"../../../utils/user-details\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { workingReportError } from \"../helper/timer-start-working-report-error-toaster\";\r\n\r\n\r\n\r\n\r\n// component\r\nconst TimerControl = ({ task, timerStart, setTimerStart, auth }) => {\r\n    const [timerId, setTimerId] = useState(null);\r\n    const [seconds, setSeconds] = useState(0);\r\n    const [isOpenConfirmationModal, setIsOpenConfirmationModal] =\r\n        useState(false); \r\n\r\n    const dispatch = useDispatch(); \r\n    const dayjs = new CompareDate(); \r\n    const loggedUser = new User(window?.Laravel?.user);\r\n    const navigate = useNavigate();\r\n\r\n\r\n    const timerStatus = task?.ranningTimer?.status;\r\n    const taskRunning = useMemo(() => timerStatus, [timerStatus])\r\n\r\n\r\n\r\n    // check timer is already running\r\n    useEffect(() => {\r\n        if (taskRunning === \"running\") {\r\n            let serverTime = task?.ranningTimer?.time;\r\n            let localTime = dayjs.dayjs().unix();\r\n            let timer = localTime - serverTime;\r\n            setTimerStart(true);\r\n            setSeconds(timer);\r\n            setTimerId(task?.ranningTimer?.id);\r\n        }\r\n    }, [taskRunning]);\r\n\r\n    //   timer control\r\n    useEffect(() => {\r\n        let interval = null;\r\n        if (timerStart) {\r\n            //   interval for timer\r\n            interval = setInterval(() => {\r\n                setSeconds((s) => s + 1);\r\n            }, 1000);\r\n        } else clearInterval(interval); // clear interval\r\n        return () => clearInterval(interval); // clear interval\r\n    }, [timerStart]);\r\n\r\n    // time formating\r\n    const timer = () => {\r\n        const hours = Math.floor(seconds / 3600);\r\n        const minutes = Math.floor((seconds % 3600) / 60);\r\n        const s = Math.floor((seconds % 3600) % 60);\r\n\r\n        // format\r\n        let sec = s < 10 ? `0${s}` : s;\r\n        let min = minutes < 10 ? `0${minutes}` : minutes;\r\n        let hr = hours < 10 ? `0${hours}` : hours;\r\n        return `${hr}:${min}:${sec}`;\r\n    };\r\n\r\n    // tostar\r\n    const Toast = Swal.mixin({\r\n        toast: true,\r\n        position: \"top-end\",\r\n        showConfirmButton: false,\r\n        timer: 5000,\r\n        timerProgressBar: true,\r\n    });\r\n\r\n    /******** Start timer control *********/\r\n\r\n    // timer start first timer : checking api\r\n    const [\r\n        startTimerFirstCheck,\r\n        { isFetching: startTimerFirstCheckIsFetching },\r\n    ] = useLazyGetTaskDetailsQuery();\r\n\r\n    // start timer api slice\r\n    const [startTimerApi, { isLoading: timerStartStatusIsLoading }] =\r\n        useStartTimerApiMutation();\r\n\r\n    // stop timer api slice\r\n    const [stopTimerApi, { isLoading: timerStopStatusIsLoading }] =\r\n        useStopTimerApiMutation();\r\n    \r\n    const [checkWorkReport] = useCheckWorkingReportMutation();\r\n\r\n    // timer start control\r\n    const startTimerControl = async() => {\r\n        setIsOpenConfirmationModal(false);\r\n\r\n        // check is developer submit their daily working report on previous day\r\n\r\n        try {\r\n           // check \r\n           const workReport = await checkWorkReport().unwrap();\r\n\r\n           // if submit all required report start timer\r\n           if(\r\n                workReport&&\r\n                workReport.data &&\r\n                workReport.data.check_in_check_out.check_in_status &&\r\n                workReport.data.daily_task_report.daily_submission_status &&\r\n                workReport.data.hours_log_report.hours_log_report_status\r\n           ){\r\n                await startTimerApi({\r\n                    task_id: task?.id,\r\n                    project_id: task?.projectId,\r\n                    memo: task?.title,\r\n                    user_id: window?.Laravel?.user?.id,\r\n                })\r\n                .unwrap()\r\n                .then(res => {\r\n                    if (res?.status === \"success\" || res?.status === 200) {\r\n                        setTimerStart(true);\r\n                        setTimerId(res?.id);\r\n                        dispatch(setTaskStatus(res?.task_status));\r\n                        Toast.fire({\r\n                            icon: 'success',\r\n                            title: _.startCase(res?.message),\r\n                        });\r\n                    } else {\r\n                        Toast.fire({\r\n                            icon: 'warning',\r\n                            title: _.startCase(res?.message),\r\n                        });\r\n                    }\r\n                }) \r\n           }else{\r\n            workingReportError();\r\n           }\r\n\r\n        } catch (error) {\r\n          console.log(error);  \r\n        }\r\n\r\n        /*\r\n        startTimerApi({\r\n            task_id: task?.id,\r\n            project_id: task?.projectId,\r\n            memo: task?.title,\r\n            user_id: window?.Laravel?.user?.id,\r\n        })\r\n            .unwrap()\r\n            .then((res) => {\r\n                  if (res?.status === \"success\" || res?.status === 200) {\r\n                    setTimerStart(true);\r\n                    setTimerId(res?.id);\r\n                    dispatch(setTaskStatus(res?.task_status));\r\n                    Toast.fire({\r\n                        icon: 'success',\r\n                        title: _.startCase(res?.message),\r\n                    });\r\n                } else {\r\n                    Toast.fire({\r\n                        icon: 'warning',\r\n                        title: _.startCase(res?.message),\r\n                    });\r\n                }\r\n            })\r\n            .catch((err) => { \r\n                if(err.status === 400){\r\n                    if(err.data.acknowledgement_submitted === false){\r\n                        Swal.fire({\r\n                            title:  \"You have not meet last day's minimum hour count. Please share the reasons!\",\r\n                            showDenyButton: true,\r\n                            confirmButtonText: 'Yes',\r\n                            denyButtonText: `Close`,\r\n                            icon: 'warning'\r\n                          }).then((result) => {\r\n                            // Read more about isConfirmed, isDenied below\r\n                            if (result.isConfirmed) {\r\n                                dispatch(setLessTrackModal({\r\n                                    show: true, \r\n                                    type: 'START_TIMER', \r\n                                    date: dayjs.dayjs(err?.data?.date).format(\"MMM DD, YYYY\"),\r\n                                }))\r\n                            } \r\n                          })\r\n                     }\r\n                     \r\n                     else if(err.data.daily_submission_submitted === false){\r\n                        Swal.fire({\r\n                            title:  \"You didn't submit last day daily submission\",\r\n                            showDenyButton: true,\r\n                            confirmButtonText: 'Yes',\r\n                            denyButtonText: `Close`,\r\n                            icon: 'warning'\r\n                          }).then((result) => {\r\n                            // Read more about isConfirmed, isDenied below \r\n                            if (result.isConfirmed) {\r\n                                navigate(`?modal=daily-submission&date_type=last-date`)\r\n                            } \r\n                          })\r\n                     }\r\n    \r\n                } \r\n            });\r\n        */\r\n    };\r\n\r\n    // start timer function\r\n    const startTimer = (e) => {\r\n        e.preventDefault();\r\n        \r\n        startTimerFirstCheck(\r\n            `/${task?.id}/json?mode=developer_first_task_check&project_id=${task?.projectId}`\r\n        )\r\n            .unwrap()\r\n            .then((res) => {\r\n                if (res.is_first_task) {\r\n                    setIsOpenConfirmationModal(true);\r\n                } else startTimerControl();\r\n            })\r\n    };\r\n\r\n    \r\n\r\n    /*********** End of Start Timer control ***************/\r\n\r\n    // stop timer\r\n    const stopTimer = () => { \r\n        //navigate(`/account/tasks/${task?.id}?modal=daily-submission&trigger=stop-button`); \r\n        stopTimerApi({ timeId: timerId })\r\n            .unwrap()\r\n            .then((res) => {\r\n                if (res?.status === \"success\" || res?.status === 200) {\r\n                    Toast.fire({\r\n                        icon: \"success\",\r\n                        title: _.startCase(res?.message),\r\n                    });\r\n                    setTimerStart(false);\r\n                    setSeconds(0);\r\n                    timerId(null);\r\n                } else {\r\n                    Toast.fire({\r\n                        icon: 'warning',\r\n                        title: _.startCase(res?.message),\r\n                    });\r\n                }\r\n            });\r\n    }; \r\n    const [getUserTrackTime, {\r\n        isFetching: trackTimerFetcing\r\n    }] = useLazyGetUserTrackTimeQuery();\r\n\r\n    // handle stop timer \r\n    const handleStopTimer = () => {\r\n        // fetch data\r\n        getUserTrackTime(loggedUser?.getId())\r\n        .unwrap()\r\n        .then(res => { \r\n            if(res){\r\n                let currentTime = dayjs.dayjs(res.current_time);\r\n                let target = currentTime.set('hour', 16).set('minute', 45).set('second', 0);\r\n                const isSaturday = currentTime.day() === 6;\r\n\r\n                if(isSaturday){\r\n                    target = currentTime.set('hour', 13).set('minute', 0).set('second', 0);\r\n                }\r\n\r\n                let check = dayjs.dayjs(currentTime).isBefore(target);\r\n                let isDev = _.includes([5, 9 , 10], Number(auth?.getRoleId()));\r\n                if(!check && isDev){\r\n                    res.tracked_times < res.target_time ?  dispatch(setLessTrackModal({show: true, type: 'STOP_TIMER', date: 'Today'})) : stopTimer()\r\n                }else{\r\n                    stopTimer();\r\n                }\r\n            }\r\n            \r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    // control loading states...\r\n    useEffect(() => {\r\n        if (startTimerFirstCheckIsFetching || timerStartStatusIsLoading) {\r\n            document.getElementsByTagName(\"body\")[0].style.cursor = \"progress\";\r\n        } else {\r\n            document.getElementsByTagName(\"body\")[0].style.cursor = \"default\";\r\n        }\r\n    }, [startTimerFirstCheckIsFetching, timerStartStatusIsLoading]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {!timerStart ? (\r\n                <React.Fragment>\r\n                    {!timerStartStatusIsLoading &&\r\n                    !startTimerFirstCheckIsFetching ? (\r\n                        <Button\r\n                            variant=\"tertiary\"\r\n                            onClick={startTimer}\r\n                            className=\"d-flex align-items-center btn-outline-dark text-dark\"\r\n                        >\r\n                            <i className=\"fa-solid fa-circle-play\" />\r\n                            <span>Start Timer</span> \r\n                        </Button>\r\n                    ) : (\r\n                        <Button className=\"cursor-processing mr-2\">\r\n                            <div\r\n                                className=\"spinner-border text-white\"\r\n                                role=\"status\"\r\n                                style={{ width: \"18px\", height: \"18px\" }}\r\n                            ></div>\r\n                            Starting...\r\n                        </Button>\r\n                    )}\r\n                    <StartTimerConfirmationModal\r\n                        isOpen={isOpenConfirmationModal}\r\n                        onConfirm={startTimerControl}\r\n                    />\r\n                </React.Fragment>\r\n            ) : (\r\n                <React.Fragment>\r\n                    <Button\r\n                        variant=\"tertiary\"\r\n                        className=\"d-flex align-items-center btn-outline-dark text-dark\"\r\n                    >\r\n                        <i className=\"fa-solid fa-stopwatch\" />\r\n                        <span className=\"d-inline ml-1\">{timer()}</span>\r\n                    </Button>\r\n\r\n                    {/* <StopTimerControl\r\n                        stopTimer={stopTimer}\r\n                        timerStopStatusIsLoading={timerStopStatusIsLoading}\r\n                    /> */}\r\n\r\n                    {\r\n                        trackTimerFetcing ? \r\n                        (\r\n                            <Button className=\"cursor-processing\">\r\n                                <div\r\n                                    className=\"spinner-border text-white\"\r\n                                    role=\"status\"\r\n                                    style={{ width: \"18px\", height: \"18px\" }}\r\n                                />\r\n                                Processing...\r\n                            </Button>\r\n                        ):\r\n\r\n                        !timerStopStatusIsLoading ? (\r\n                            <Button\r\n                                variant=\"tertiary\"\r\n                                onClick={handleStopTimer}\r\n                                className=\"d-flex align-items-center btn-outline-dark text-dark\"\r\n                            >\r\n                                <i className=\"fa-solid fa-pause\" />\r\n                                <span className=\"d-inline ml-1\">Stop Timer</span>\r\n                            </Button>\r\n                        ) : (\r\n                            <Button className=\"cursor-processing\">\r\n                                <div\r\n                                    className=\"spinner-border text-white\"\r\n                                    role=\"status\"\r\n                                    style={{ width: \"18px\", height: \"18px\" }}\r\n                                />\r\n                                Stopping...\r\n                            </Button>\r\n                        )\r\n                    } \r\n                </React.Fragment>\r\n            )}\r\n\r\n\r\n            {/* LessTrackTimerModal */}\r\n            <LessTrackTimerModal stopTimer={stopTimer} startTimer={startTimerControl} />\r\n\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default TimerControl\r\n","import Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nimport { StartTimerWorkingReport } from '../../components/StartTimerWorkingReportPopup'\r\n\r\n\r\nexport const workingReportError = () => {\r\n    withReactContent(Swal).fire({\r\n        icon: 'error',\r\n        html: <StartTimerWorkingReport />,\r\n        showCancelButton: true,\r\n        confirmButtonText: 'Yes',\r\n        cancelButtonText: 'No',\r\n        customClass: {\r\n            confirmButton: 'btn btn-primary py-2 px-4',\r\n            cancelButton: 'btn py-2 px-4 text-white'\r\n        },\r\n    }).then(result => {\r\n        if(result.isConfirmed){\r\n            window.location.reload();\r\n        }\r\n    })\r\n}\r\n","import React, {useState, useRef} from 'react'\r\nimport Button from '../../../components/Button'\r\nimport Modal from '../../../components/Modal';\r\nimport { useClickAway } from 'react-use';\r\nimport { useSubmitForClientApprovalMutation } from '../../../../services/api/SingleTaskPageApi';\r\nimport Loader from '../../../components/Loader';\r\n\r\nexport const SubmitForClientApproval = ({task, auth}) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const closeModal = () => setIsOpen(false)\r\n  const openModal = () => setIsOpen(true)\r\n  const ref = useRef();\r\n  useClickAway(ref, closeModal);\r\n\r\n\r\n  const [submitForClientApproval, {isLoading}] = useSubmitForClientApprovalMutation();\r\n\r\n\r\n  const handleOnSubmit = ()=>{\r\n    submitForClientApproval({task_id: task?.id, user_id: auth?.getId()})\r\n    .unwrap()\r\n    .then(res => {\r\n      Swal.fire({\r\n          position: \"center\",\r\n          icon: \"success\",\r\n          title: 'Submitted Task For Client Approval Successfully',\r\n          showConfirmButton: false,\r\n          timer: 2500,\r\n      });\r\n    })\r\n    .catch(err => console.log(err))\r\n    .finally(() => closeModal())\r\n  }\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <React.Fragment>\r\n          {\r\n            isLoading ? \r\n            <React.Fragment>\r\n              <div className=\"cursor-processing cnx__btn cnx__btn_sm cnx__btn_primary\">\r\n                    <div\r\n                        className=\"spinner-border text-white\"\r\n                        role=\"status\"\r\n                        style={{\r\n                            width: \"18px\",\r\n                            height: \"18px\",\r\n                        }}\r\n                    ></div>\r\n                    Processing...\r\n                </div>\r\n            </React.Fragment>\r\n            :\r\n              <Button \r\n                  variant='success'\r\n                  onClick={openModal}\r\n                  className='d-flex align-items-center border-success'\r\n              >\r\n                  <i className=\"fa-solid fa-handshake-angle\"></i>\r\n                  <span className=\"d-inline ml-1\">Submit For Client Approval</span>\r\n              </Button> \r\n          }\r\n        </React.Fragment>\r\n        <Modal isOpen={isOpen} className=\"sp1_single_task--modal\">\r\n            <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n              <div \r\n                ref={ref}\r\n                className=\"sp1_single_task--modal-panel position-absolute p-2 mb-3\"\r\n                style={{top:'50%', left:'50%',transform:'translate(-50%, -50%)', width: '250px'}}\r\n              >\r\n                {!isLoading &&\r\n                  <div className='d-flex align-items-center border-bottom pb-1'>\r\n                    <Button variant='tertiary' onClick={closeModal} className='ml-auto border-0'>\r\n                      <i className='fa-solid fa-xmark' />\r\n                    </Button>\r\n                </div>\r\n                }\r\n                <div className='d-flex flex-column align-items-center p-2' style={{gap:'10px'}}>\r\n                  {isLoading && \r\n                    <React.Fragment>\r\n                      <Loader title='Submitting...' />\r\n                    </React.Fragment>\r\n                  }\r\n                  \r\n                  {!isLoading &&\r\n                    <React.Fragment>\r\n                      <img src='/img/warning.gif' alt='' style={{width: '50px', height: '50px'}}/>\r\n                      <div className='d-flex flex-column aling-items-center'>\r\n                        <h5 className='d-block mb-3'>Are You Sure?</h5>\r\n                        <div className='d-flex align-items-center justify-content-center'>\r\n                          <Button onClick={handleOnSubmit} className='mr-2 py-0'>Yes</Button>\r\n                          <Button variant='tertiary' onClick={closeModal} className='py-0'>No</Button>\r\n                        </div>\r\n                      </div>\r\n                   </React.Fragment>\r\n                  }\r\n                </div>\r\n              </div>\r\n            </div>\r\n        </Modal> \r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Button from '../../../components/Button'\r\nimport { useConfirmClientApprovalMutation } from '../../../../services/api/SingleTaskPageApi'\r\nimport SubmitButton from '../../../components/SubmitButton';\r\n\r\nconst ClientAcceptedTask = ({task}) => { \r\n\r\n  const [confirmClientApproval, {isLoading}] = useConfirmClientApprovalMutation();\r\n\r\n  const handleClick=(e)=>{\r\n    e.preventDefault();\r\n    confirmClientApproval({\r\n        task_id: task?.id\r\n    }).unwrap()\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <SubmitButton \r\n            onClick={handleClick}\r\n            variant='success'\r\n            isLoading={isLoading}\r\n            className='d-flex align-items-center border-success'\r\n        >\r\n            <i className=\"fa-solid fa-check\"></i>\r\n            <span className=\"d-inline ml-1\">Client Has Accepted This Task</span>\r\n        </SubmitButton>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ClientAcceptedTask","import React, { useState, useRef } from \"react\";\r\nimport CKEditorComponent from \"../../../../ckeditor\";\r\nimport Button from \"../../../components/Button\";\r\nimport { useCreateRevisionMutation } from \"../../../../services/api/SingleTaskPageApi\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setTaskStatus } from \"../../../../services/features/subTaskSlice\";\r\nimport SubmitButton from \"../../../components/SubmitButton\";\r\n\r\n\r\n\r\n\r\nconst projectManagerAcknowladgement = [\r\n    {\r\n        id: \"CPRx01\",\r\n        title: 'Client added some additional requirements which was not part of the actual job scope',\r\n        isDeniable: false,\r\n    },\r\n    {\r\n        id: 'PLRx12',\r\n        title: 'I submitted the work without proper checking and overlooked the issues',\r\n        isDeniable: true,\r\n    },\r\n    {\r\n        id: 'PLRx03',\r\n        title: 'I couldnt understand clients expectation properly earlier',\r\n        isDeniable: false\r\n    },\r\n    {\r\n        id: 'PLRx04',\r\n        title: 'I didnt understand the job properly as it’s very technical in nature and relied fully on technical team for success',\r\n        isDeniable: false,\r\n    },\r\n    {\r\n        id: 'CPRx05',\r\n        title: \"The client didnt change his instruction but his interpretation of the original instruction now is weird and nobody could have interpreted it this way from his instruction\",\r\n        isDeniable: false,\r\n        createDispute: true,\r\n    },\r\n    {\r\n        id: 'CPRx06',\r\n        title: \"The client is asking for some minor changes which he couldn’t specify until he saw the completed work and we can’t charge him for these\",\r\n        isDeniable: false,\r\n    },\r\n    {\r\n        id: 'SPRx01',\r\n        title: \"Sales person discussed something in a verbal meeting with the client and then forgot to document it when assigning\",\r\n        isDeniable: false,\r\n        createDispute: false,\r\n    },\r\n    {\r\n        id: 'SPRx02',\r\n        title: \"Sales person couldn't define requirement properly and I also failed to define it after I took over\",\r\n        isDeniable: false,\r\n        createDispute: false,\r\n    },\r\n    {\r\n        id: 'SPRx03',\r\n        title: \"Sales overpromised: This task is not doable to this extent or in this way and I informed management about it on day 1\",\r\n        isDeniable: false,\r\n        createDispute: false,\r\n    }\r\n]\r\n\r\n\r\nconst AssigneeToLeadFromClientRevision = ({ close, onBack, onSubmit, task, auth, isSubmitting }) => {\r\n    const [reason, setReason] = useState(null);\r\n    const [reasonError, setReasonError] = useState(\"\");\r\n    const [comment, setComment] = useState(\"\");\r\n    const [commentError, setCommentError] = useState(\"\");\r\n    const [additionalPaid, setAdditionalPaid] = useState('');\r\n    const [additionalInfo, setAdditionalInfo] = useState(null);\r\n    const [additionalAmount, setAdditionalAmount] = useState(0);\r\n    const [additionalError, setAdditionalError] = useState('');\r\n\r\n    // radio button change\r\n    const handleChange = (e, reason) => {\r\n        setReason(reason);\r\n        setAdditionalAmount(0);\r\n        setAdditionalPaid('');\r\n        setAdditionalInfo(null);\r\n    };\r\n\r\n\r\n    // on blur\r\n    const handleBlurEvent = () => {\r\n        Swal.fire({\r\n            title: 'Do you want to create a milestone?',\r\n            // showDenyButton: true,\r\n            confirmButtonText: 'Yes',\r\n            // denyButtonText: `No`,\r\n            }).then(res => {\r\n            if(res.isConfirmed){\r\n                window.open(`/account/projects/${task?.projectId}?tab=milestones`, '_blank');\r\n            }\r\n        })\r\n    }\r\n\r\n    // additional payment\r\n    const hasAdditionalPayment = (isPay) =>{\r\n        setAdditionalPaid(() => isPay ? 'yes': 'no');\r\n    }\r\n\r\n    // editor change text\r\n    const handleEditorTextChange= (e, editor) => {\r\n        const data = editor.getData();\r\n        setComment(data);\r\n    }\r\n\r\n    // validation\r\n    const validate = () => {\r\n       let errorCount = 0;\r\n\r\n       if(comment === \"\"){\r\n            errorCount++;\r\n            setCommentError('You have to explain the revision in details, so that lead developer can understand where they need to work.')\r\n       }\r\n\r\n       if(!reason){\r\n            errorCount++;\r\n            setReasonError('You have to select a reason from above options')\r\n       }\r\n\r\n\r\n       if(reason && reason?.id === 'CPRx01'){\r\n            if(additionalPaid === 'yes' && additionalAmount === 0){\r\n                errorCount++;\r\n                setAdditionalError('You have to provide amount')\r\n            }\r\n\r\n            if(additionalPaid === 'no' && !additionalInfo){\r\n                errorCount++;\r\n                setAdditionalError('You have to select an option')\r\n            }\r\n       }\r\n\r\n       return errorCount === 0;\r\n    }\r\n\r\n\r\n    // handle submission\r\n    const handleSubmission=(e)=>{\r\n        e.preventDefault();\r\n\r\n\r\n\r\n        const data = {\r\n            acknowledgement_id: reason?.id ,\r\n            task_id: task?.id,\r\n            user_id: auth?.id,\r\n            is_deniable: reason?.isDeniable,\r\n            revision_acknowledgement: reason?.title,\r\n            comment: comment,\r\n            additional_amount: Number(additionalAmount),\r\n            additional_status: additionalPaid,\r\n            additional_comment: additionalInfo?.info ?? '',\r\n            dispute_create: reason?.createDispute || additionalInfo?.disputeCreate || false\r\n        }\r\n\r\n        if(validate()){\r\n            onSubmit(data);\r\n        }else{\r\n            console.log('Your forgot to fillup some required fields')\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n                <form className=\"px-3\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                            Select Reason for Revision<sup className=\"f-16\">*</sup> :\r\n                        </label>\r\n                        <div className=\"px-3\">\r\n                            {\r\n                                _.map(projectManagerAcknowladgement, option => (\r\n                                    <div key={option.id} className=\"form-check d-flex align-items-start mb-2\">\r\n                                        <input\r\n                                            className=\"form-check-input mr-2\"\r\n                                            type=\"radio\"\r\n                                            name=\"exampleRadios\"\r\n                                            id={option.id}\r\n                                            required= {true}\r\n                                            onChange={e => handleChange(e, option)}\r\n                                            value={option.title}\r\n                                            style={{\r\n                                                width: \"16px\",\r\n                                                height: \"16px\",\r\n                                                marginTop: \"3px\",\r\n                                            }}\r\n\r\n                                        />\r\n                                        <label\r\n                                            className=\"form-check-label\"\r\n                                            htmlFor={option.id}\r\n                                            style={{ marginBottom: \"3px\" }}\r\n                                        >\r\n                                           {option.title}\r\n                                        </label>\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                        {reasonError && <small id=\"emailHelp\" className=\"form-text text-danger\">{reasonError}</small>}\r\n                    </div>\r\n\r\n                    {reason?.id === 'CPRx01' &&\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"\" className=\"d-block font-weight-bold\">Is the client paying additionally for these changes? <sup>*</sup></label>\r\n                            <div className=\"d-block\">\r\n                                    <div className=\"form-check form-check-inline\">\r\n                                        <input\r\n                                            className=\"form-check-input\"\r\n                                            name=\"milestone\"\r\n                                            type=\"radio\"\r\n                                            id=\"createMilestoneYes\"\r\n                                            value=\"1\"\r\n                                            onChange={(e)=>hasAdditionalPayment(true)}\r\n                                            style={{\r\n                                                width: \"16px\",\r\n                                                height: \"16px\",\r\n                                                marginTop: \"3px\",\r\n                                            }}\r\n                                        />\r\n                                        <label htmlFor=\"createMilestoneYes\" className=\"form-check-label\">Yes</label>\r\n                                    </div>\r\n                                    <div className=\"form-check form-check-inline\">\r\n                                        <input\r\n                                            className=\"form-check-input\"\r\n                                            name=\"milestone\"\r\n                                            type=\"radio\"\r\n                                            id=\"createMilestoneNo\"\r\n                                            value=\"0\"\r\n                                            onChange={(e) => hasAdditionalPayment(false)}\r\n                                            style={{\r\n                                                width: \"16px\",\r\n                                                height: \"16px\",\r\n                                                marginTop: \"3px\",\r\n                                            }}\r\n                                        />\r\n                                        <label htmlFor=\"createMilestoneNo\" className=\"form-check-label\">No</label>\r\n                                    </div>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n\r\n                    {additionalPaid === 'yes' &&\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"\" className=\"d-block font-weight-bold\">Amount? <sup>*</sup></label>\r\n                            <div className=\"input-group\">\r\n                                <div className=\"input-group-prepend\">\r\n                                    <div className=\"input-group-text\">$</div>\r\n                                </div>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    onChange={e => setAdditionalAmount(e.target.value)}\r\n                                    className=\"form-control\"\r\n                                    id=\"inlineFormInputGroup\"\r\n                                    placeholder=\"300\"\r\n                                    onBlur={handleBlurEvent}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    }\r\n\r\n                    {\r\n                        additionalPaid === 'no' &&\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"\" className=\"d-block font-weight-bold\">Is the client paying additionally for these changes? <sup>*</sup></label>\r\n                            <div className=\"d-block\">\r\n                                    <div className=\"form-check mb-3\">\r\n                                        <input\r\n                                            name=\"additionalInformation\"\r\n                                            className=\"form-check-input\"\r\n                                            type=\"radio\"\r\n                                            id=\"additionalInformation1\"\r\n                                            onChange={e => setAdditionalInfo({\r\n                                                info: e.target.value,\r\n                                                disputeCreate: false,\r\n                                            })}\r\n                                            value=\"Client changed his/her mind and he/she don't want to pay additional payment. We have to continue the task for client satisfaction\"\r\n                                            style={{\r\n                                                width: \"16px\",\r\n                                                height: \"16px\",\r\n                                                marginTop: \"3px\",\r\n                                            }}\r\n                                        />\r\n                                        <label htmlFor=\"additionalInformation1\" className=\"form-check-label\">\r\n                                            Client changed his/her mind and he/she don't want to pay additional payment. We have to continue the task for client satisfaction\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"form-check\">\r\n                                        <input\r\n                                            className=\"form-check-input\"\r\n                                            name=\"additionalInformation\"\r\n                                            type=\"radio\"\r\n                                            id=\"additionalInformation2\"\r\n                                            value=\"The client is interpreting his original instruction in a very unusual way!\"\r\n                                            onChange={(e) => setAdditionalInfo({\r\n                                                info: e.target.value,\r\n                                                disputeCreate: true,\r\n                                            })}\r\n                                            style={{\r\n                                                width: \"16px\",\r\n                                                height: \"16px\",\r\n                                                marginTop: \"3px\",\r\n                                            }}\r\n                                        />\r\n                                        <label htmlFor=\"additionalInformation2\" className=\"form-check-label\">\r\n                                        The client is interpreting his original instruction in a very unusual way!\r\n                                        </label>\r\n                                    </div>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n\r\n                    { additionalError && <div className=\"mb-3\">\r\n                        <small id=\"emailHelp\" className=\"form-text text-danger\">\r\n                            {additionalError}\r\n                        </small>\r\n                    </div>}\r\n\r\n                    {/* Editor  */}\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                            Explain or Comment<sup className=\"f-16\">*</sup> :\r\n                        </label>\r\n                        <div className=\"ck-editor-holder\">\r\n                            <CKEditorComponent onChange={handleEditorTextChange}/>\r\n                        </div>\r\n                        {commentError && <small id=\"emailHelp\" className=\"form-text text-danger\">{commentError}</small>}\r\n                    </div>\r\n\r\n\r\n                    <div>\r\n                        <div className=\"mt-3 d-flex align-items-center\">\r\n                            <Button onClick={onBack} variant=\"tertiary\" className=\"ml-auto mr-2\">\r\n                                Back\r\n                            </Button>\r\n                            <SubmitButton title=\"Submit\" onClick={handleSubmission} isLoading={isSubmitting} />\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AssigneeToLeadFromClientRevision;\r\n","import React, {useState, lazy, Suspense} from 'react'\r\nimport Button from '../../../components/Button' \r\nimport Modal from '../../../components/Modal';\r\nimport { SingleTask } from '../../../../utils/single-task';\r\nimport ClientRevisionForm from './ClientRevisionForm';\r\nimport AssigneeToLeadFromClientRevision from './AssigneeToLeadFromClientRevision';\r\nimport { useStoreClientRevisionTaskMutation } from '../../../../services/api/SingleTaskPageApi';\r\n\r\nconst ClientRevision = ({task, auth}) => {\r\n    const [revisionModal, setRevisionModal] = useState(false);\r\n    const [show,setShow] = useState('ASSINEE_TO_DEV');\r\n    \r\n    const singleTask = task;\r\n\r\n    // client revision data\r\n    const [clientComment, setClientComment] = useState('');\r\n    const [clientAcknowledgement, setClientAcknowladgement] = useState('');\r\n\r\n\r\n    const [storeClientRevisionTask, {isLoading}] = useStoreClientRevisionTaskMutation();\r\n\r\n    const handleSubmit = (data) => {\r\n       setClientAcknowladgement(data?.reason);\r\n       setClientComment(data?.comment); \r\n       setShow('ASSINEE_TO_DEV'); \r\n    }\r\n\r\n    const close = () => {\r\n        setRevisionModal(false)\r\n    }\r\n\r\n    const handleSubmitToStore = (data) =>{\r\n        const fData = {\r\n            ...data,\r\n            project_id: task?.projectId\r\n        }\r\n  \r\n        // show toster notification\r\n        const showToster= () =>{\r\n            const Toast = Swal.mixin({\r\n                toast: true,\r\n                    position: 'top-end',\r\n                    showConfirmButton: false,\r\n                    timer: 3000,\r\n                    timerProgressBar: true,\r\n            }) \r\n            Toast.fire({\r\n                icon: 'success',\r\n                title: 'Task submitted for Revision successfully'\r\n            })\r\n        }\r\n    \r\n        storeClientRevisionTask(fData)\r\n        .unwrap()\r\n        .then(res => showToster())\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    \r\n  return (\r\n    <React.Fragment>\r\n        <Button\r\n            variant='tertiary'\r\n            onClick={() => setRevisionModal(true)}\r\n            className='d-flex align-items-center sp1-st-revision-btn sp1-st-revision-btn'\r\n        >\r\n            <i className=\"fa-solid fa-plus-minus\" />\r\n            <span className=\"d-inline ml-1\">Client Has Revision</span>\r\n        </Button> \r\n\r\n        <Modal isOpen={revisionModal} className=\"sp1_single_task--modal\">\r\n            <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n                <div\r\n                    className=\"sp1_single_task--modal-panel w-100 pb-3\"\r\n                    style={{ maxWidth: \"550px\" }}\r\n                >\r\n                    <div className=\"border-bottom pb-2 px-3 mb-3 d-flex align-items-center justify-content-between\">\r\n                        <div className=\"font-weight-bold f-14\">\r\n                            Task#{task?.id} - Client Revision\r\n                        </div>\r\n                        <Button onClick={close} className=\"\">\r\n                            <i className=\"fa-solid fa-xmark\" />\r\n                        </Button>\r\n                    </div>\r\n\r\n                    {/* {show === 'CLIENT_REVISION' && \r\n                        <ClientRevisionForm \r\n                            task={singleTask}\r\n                            close={() => setRevisionModal(false)} \r\n                            onSubmitForm={(data) => handleSubmit(data)}\r\n                        />\r\n                    }  */}\r\n                    {/* {show === \"ASSINEE_TO_DEV\" && */}\r\n                        <AssigneeToLeadFromClientRevision \r\n                            task={task}\r\n                            auth={auth}\r\n                            isSubmitting = {isLoading}\r\n                            onSubmit={handleSubmitToStore}\r\n                            close={() => setRevisionModal(false)}\r\n                            onBack={() => setShow('CLIENT_REVISION')}\r\n                        />\r\n                    {/* }  */}\r\n                </div>\r\n            </div>\r\n        </Modal> \r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ClientRevision \r\n\r\n","import React from 'react'\r\nimport { SubmitForClientApproval } from './SubmitForClientApproval'\r\nimport ClientAcceptedTask from './ClientAcceptedTask'\r\nimport { SingleTask } from '../../../../utils/single-task'\r\nimport ClientRevision from '../Revision/ClientRevision'\r\nimport { submitForClientApproval, clientApproveConfirmationButtonPermission } from '../../../permissions'\r\n\r\nconst ClientApproval = ({task, status, auth}) => {\r\n  return (\r\n    <React.Fragment>\r\n        { submitForClientApproval({task, status, auth}) && <SubmitForClientApproval task={task} auth={auth} /> }\r\n        { clientApproveConfirmationButtonPermission({task, status, auth}) && \r\n          <React.Fragment>\r\n            <ClientAcceptedTask task={task} auth={auth} />\r\n            <ClientRevision task={task} auth={auth} />\r\n          </React.Fragment>\r\n        }\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ClientApproval","import React, { useState, lazy, Suspense } from \"react\";\r\nimport Button from \"../../../components/Button\";\r\nimport Modal from \"../../../components/Modal\";\r\nimport { SingleTask } from \"../../../../utils/single-task\";\r\nimport Loader from \"../../../components/Loader\";\r\nconst ReportForm = lazy(() => import(\"./ReportForm\"));\r\n\r\nconst ReportControl = ({ task }) => {\r\n    const [reportModalOpen, setReportModalOpen] = useState(false); \r\n\r\n    const close = () => setReportModalOpen(false);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Button\r\n                variant=\"tertiary\"\r\n                onClick={() => setReportModalOpen(true)}\r\n                className=\"ml-auto d-flex align-items-center sp1-st-revision-btn --view-revision sp1_report_btn\"\r\n            >\r\n                <i className=\"fa-solid fa-flag\"></i>\r\n                <span className=\"d-inline ml-1\">Report</span>\r\n            </Button>\r\n\r\n            <Modal isOpen={reportModalOpen} className=\"sp1_single_task--modal\">\r\n                <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n                    <div\r\n                        className=\"sp1_single_task--modal-panel task-report-form--modal-panel\"\r\n                    >\r\n                        <div className=\"border-bottom pb-2 px-3 mb-3 d-flex align-items-center justify-content-between\">\r\n                            <div className=\"font-weight-bold f-14\">\r\n                                Task#{task?.id} : Report\r\n                            </div>\r\n                            <Button onClick={close} className=\"\">\r\n                                <i className=\"fa-solid fa-xmark\" />\r\n                            </Button>\r\n                        </div>\r\n                        <Suspense fallback={<div className=\"py-3 d-flex align-items-center justify-content-center\"><Loader /></div>}>\r\n                            <ReportForm task={task} close={close} />\r\n                        </Suspense>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ReportControl;\r\n","import _ from \"lodash\";\r\nimport React from \"react\";\r\nimport { useDeveloperCanCompleteTaskQuery, useLazyCheckSubTaskTimerQuery } from \"../../../services/api/SingleTaskPageApi\";\r\nimport { useDailySubmission } from \"../../../single-task/hooks/useDailySubmission\";\r\nimport { User } from \"../../../utils/user-details\";\r\nimport {\r\n    approveButtonPermission,\r\n    markAsCompletedButtonPermission,\r\n    needRevisionPermision,\r\n    revisionButtonPermission,\r\n    timeControlPermision\r\n} from \"../../permissions\";\r\nimport DailySubmissionControl from './DailySubmissionControl';\r\nimport MarkAsComplete from \"./MarkAsComplete\";\r\nimport RevisionControl from \"./Revision/RevisionControl\";\r\nimport RevisionViewControl from \"./Revision/RevisionViewControl\";\r\nimport SubtaskCreationControl from \"./SubtaskCreationControl\";\r\nimport TimerControl from \"./TimerControl\";\r\nimport ApproveTask from \"./approve-task/ApproveTask\";\r\nimport ClientApproval from \"./client-approval/ClientApproval\";\r\nimport ReportControl from \"./report/Report\";\r\n\r\nconst TaskAction = ({ task, status }) => {\r\n    const loggedUser = new User(window?.Laravel?.user);\r\n    const [timerStart, setTimerStart] = React.useState(false);\r\n    const { isEnable } = useDailySubmission();\r\n\r\n\r\n    const [checkSubTaskTimer, { isFetching }] = useLazyCheckSubTaskTimerQuery();\r\n\r\n    const {  data: checkMarkAsCompleteEnableStatus, isLoading: isLoadingCompleteCheck } = useDeveloperCanCompleteTaskQuery(task?.id, {skip: !task.id});\r\n    const ENABLE_MARKASCOMPLETE_BUTTON = task && (task?.isSubtask ? checkMarkAsCompleteEnableStatus?.message === \"Developer can complete this task\" : true);\r\n\r\n    // console.log({task});\r\n\r\n\r\n    const onModalEditButtonClick = (e) => {\r\n        e.preventDefault();\r\n        checkSubTaskTimer(task?.id)\r\n            .unwrap()\r\n            .then((res) => {\r\n                if (res?.status === 200) {\r\n                    window.location = `/account/tasks/${task?.id}/edit`;\r\n                } else {\r\n                    Swal.fire({\r\n                        icon: \"error\",\r\n                        title: \"Oops...\",\r\n                        text: \"You cannot edit the task because timer is already running\",\r\n                    });\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    let time = task.isSubtask ? task?.parentTaskTimeLog : task?.totalTimeLog;\r\n\r\n    return (\r\n        <div\r\n            className=\"d-flex flex-wrap border-bottom pb-3 sp1_task_btn_group\"\r\n            style={{ gap: \"10px\" }}\r\n        >\r\n            {/* with permission */}\r\n            {timeControlPermision({ task, status, loggedUser }) ? (\r\n                <TimerControl\r\n                    task={task}\r\n                    timerStart={timerStart}\r\n                    setTimerStart={setTimerStart}\r\n                    auth={loggedUser}\r\n                />\r\n            ) : null}\r\n            {!timerStart && !isLoadingCompleteCheck &&\r\n            ENABLE_MARKASCOMPLETE_BUTTON && markAsCompletedButtonPermission({ task, status, loggedUser }) ? (\r\n                <MarkAsComplete task={task} auth={loggedUser} />\r\n            ) : null}\r\n\r\n\r\n            {/* develop */}\r\n            {approveButtonPermission({ task, status, loggedUser }) ? (\r\n                <ApproveTask task={task} status={status} auth={loggedUser} />\r\n            ) : null}\r\n\r\n            {needRevisionPermision({ task, status, loggedUser }) ? (\r\n                <RevisionControl task={task} auth={loggedUser} />\r\n            ) : null}\r\n\r\n            {/*  */}\r\n            {revisionButtonPermission({ task, status, loggedUser }) && (\r\n                <RevisionViewControl\r\n                    task={task}\r\n                    status={status}\r\n                    auth={loggedUser}\r\n                />\r\n            )}\r\n            {/* <TimeExtension task={task} /> */}\r\n            <ClientApproval task={task} status={status} auth={loggedUser} />\r\n\r\n             {/* daily submission control */}\r\n             {_.includes([5, 9, 10], loggedUser?.getRoleId()) && isEnable && (\r\n                <DailySubmissionControl />\r\n             )}\r\n\r\n\r\n\r\n            {/* right side button container */}\r\n            <div style={{display:'inline-flex',marginLeft:'auto',gap:'0 10px'}}>\r\n\r\n                {/* Subtask creation guideline */}\r\n                {_.includes([6, 4, 1], loggedUser?.getRoleId()) && !task?.isSubtask &&  <SubtaskCreationControl />}\r\n\r\n\r\n                {/*********** Report Control ***********/}\r\n                {_.includes([6, 5, 9, 10], loggedUser?.getRoleId()) && (\r\n                    <ReportControl task={task} />\r\n                )}\r\n\r\n\r\n                {/* {taskEditPermision({ task, status, auth: loggedUser }) && (\r\n                    <Link\r\n                        to={`?modal=edit&task=${task?.id}`}\r\n                        onClick={onModalEditButtonClick}\r\n                        className=\"cnx__btn cnx__btn_sm cnx__btn_primary sp1_task-edit-button\"\r\n                        style={{\r\n                            marginLeft: 'none'\r\n                        }}\r\n                    >\r\n                        {isFetching ? (\r\n                            <div\r\n                                className=\"spinner-border text-dark ml-2\"\r\n                                role=\"status\"\r\n                                style={{\r\n                                    width: \"16px\",\r\n                                    height: \"16px\",\r\n                                    border: \"0.14em solid rgb(255, 255, 255)\",\r\n                                    borderRightColor: \"transparent\",\r\n                                }}\r\n                            />\r\n                        ) : (\r\n                            <i className=\"fa-regular fa-pen-to-square\"></i>\r\n                        )}\r\n                        <span className=\"ml-1 mr-2\">Edit</span>\r\n                    </Link>\r\n                )} */}\r\n\r\n                {/* {task &&  task.boardColumn.id === 2 && !(_.includes([5, 6], loggedUser?.getRoleId()))  &&\r\n                    <Link\r\n                        to={`?modal=edit&task=${task?.id}`}\r\n                        className=\"cnx__btn cnx__btn_sm cnx__btn_primary sp1_task-edit-button\"\r\n                        style={{\r\n                            marginLeft: 'none'\r\n                        }}\r\n                    >\r\n                        <i className=\"fa-regular fa-pen-to-square\" />\r\n                        Edit\r\n                    </Link>\r\n                } */}\r\n            </div>\r\n\r\n            {/* {{-- 3 dot --}} */}\r\n            {/* <button type=\"button\" className=\"d-flex align-items-center btn btn-sm btn-outline-dark mr-2 border-0 ml-auto\">\r\n                <i className=\"bi bi-three-dots\" ></i>\r\n            </button> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TaskAction;\r\n","import { User } from \"../../../utils/user-details\";\r\nimport dayjs from 'dayjs';\r\n\r\nconst TableRow = ({log}) => {\r\n    const user = log?.user ? new User(log.user) : null;\r\n    return(\r\n        <tr className='__tbody_tr'>\r\n            <td className='__tbody_td _tbody_td_employee'>\r\n                <img src={user?.getAvatar()} alt={user?.getName()} />\r\n                <span className='px-2'>{user?.getName()}</span>\r\n            </td>\r\n\r\n            <td className='__tbody_td _tbody_td_start_time'>\r\n                {dayjs(log?.start_time).format('MMM DD, YYYY')} <br/>\r\n                {dayjs(log?.start_time).format('hh:mm a')}\r\n            </td>\r\n\r\n            <td className='__tbody_td _tbody_td_start_time _tbody_td_start_end'>\r\n                {log?.end_time ? <>\r\n                    {dayjs(log?.end_time).format('MMM DD, YYYY')} <br/>\r\n                    {dayjs(log?.end_time).format('hh:mm a')}\r\n                </> : <span className='text-success font-weight-bold'>Active</span>}\r\n            </td>\r\n\r\n            <td className='__tbody_td _tbody_td_memo'>\r\n                {log?.memo}\r\n            </td>\r\n\r\n            <td className='__tbody_td _tbody_td_hour_logged'>\r\n                {log?.hours_logged}\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default TableRow\r\n","import React from \"react\";\r\nimport CustomModal from \"../../components/CustomModal\";\r\nimport Modal from '../../components/Modal';\r\n\r\nimport { useClickAway, useWindowSize } from \"react-use\";\r\nimport TableRow from \"./InnerTableRow\";\r\nimport _ from \"lodash\";\r\nimport Avatar from \"../../../global/Avatar\";\r\nimport { User } from \"../../../utils/user-details\";\r\nimport dayjs from \"dayjs\";\r\nimport Button from \"../../components/Button\";\r\n\r\n\r\n\r\n\r\nconst Table = ({data}) => {\r\n    return(\r\n        <table className=\"sp1_subtask_log-tbl\">\r\n            <thead className=\"__thead\">\r\n                <tr>\r\n                    <th>Employee</th>\r\n                    <th>Start Time</th>\r\n                    <th>End Time</th>\r\n                    <th>Memo</th>\r\n                    <th>Hours Logged</th>\r\n                </tr>\r\n            </thead>\r\n\r\n            <tbody className=\"__tbody\">\r\n                {data\r\n                    ? data.map((log) => (\r\n                        <TableRow key={log.id} log={log} />\r\n                    ))\r\n                    : null}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\n\r\nconst Card = ({log, className}) => {\r\n    const user = new User(log.user);\r\n    return(\r\n        <div className={`border-bottom ${className}`}>\r\n            <div className=\"d-flex align-items-center\" style={{gap:'10px'}}>\r\n                <Avatar \r\n                    src={user?.getAvatar()} \r\n                    name={user?.getName()} \r\n                    alt={user?.getName()} \r\n                    type=\"circle\"\r\n                /> \r\n                <h6>{user?.getName()}</h6>\r\n            </div>\r\n            <div className=\"d-flex flex-column flex-wrap ml-5\" style={{gap: '4px'}}>\r\n                <span><span className=\"font-weight-bold\">Memo:</span> {log?.memo}</span>\r\n                <span><span className=\"font-weight-bold\">Hours Logged:</span> {log?.hours_logged}</span>\r\n                <span><span className=\"font-weight-bold\">Start Time:</span> {dayjs(log?.start_time).format('MMM DD, YYYY hh:mm a')} </span>\r\n                <span><span className=\"font-weight-bold\">End Time:</span> {dayjs(log?.end_time).format('MMM DD, YYYY hh:mm a')} </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst CardView = ({data}) => {\r\n    return(\r\n        <div className=\"d-flex flex-column\" style={{gap: '10px'}}>\r\n            {_.map(data, (log) =>(\r\n                    <Card log={log} key={log.id} className=\"w-100 py-2\" />\r\n                ))}\r\n        </div>\r\n    )\r\n}\r\n\r\n \r\nconst TimeLogTable = ({ isOpen, close, toggle, data = [] }) => {\r\n    const ref = React.useRef(null);\r\n    const {width: deviceWidth} = useWindowSize();\r\n    useClickAway(ref, close);\r\n\r\n\r\n\r\n    const content = () => {\r\n        return (\r\n            <div ref={ref} className=\"sp1-subtask-form --modal-panel\"> \r\n                <div className='sp1-subtask-form --modal-panel-header'> \r\n                    <h6>Session Logs</h6> \r\n                    <Button\r\n                        aria-label=\"close-modal\"\r\n                        className='_close-modal'\r\n                        onClick={close}\r\n                    >\r\n                        <i className=\"fa-solid fa-xmark\" />\r\n                    </Button> \r\n                </div>\r\n\r\n                <div className=\"sp1-subtask-form --modal-panel-body\">\r\n                    <div className=\"mt-3\">\r\n                        {deviceWidth > 800 ? <Table data={data} />: <CardView data={data} />}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    if(deviceWidth > 1200){\r\n        return (\r\n            <CustomModal isOpen={isOpen} toggleRef={toggle}>\r\n                <React.Fragment>{content()}</React.Fragment>       \r\n            </CustomModal>\r\n        );\r\n    }else{\r\n        return (\r\n            <Modal isOpen={isOpen}>\r\n                <React.Fragment>{content()}</React.Fragment>       \r\n            </Modal>\r\n        );\r\n    }\r\n\r\n};\r\nexport default TimeLogTable;\r\n","import React from 'react'\r\nimport { Placeholder } from '../../../global/Placeholder'\r\n\r\nconst TimeLogItemLoader = ({}) => {\r\n\r\n  return (\r\n    <div className=\"d-flex align-items-center justify-content-between sp1_tark_right_item py-2\" style={{gap: '10px', height: '30px'}}>\r\n        <div className='d-flex align-items-center'>\r\n            <Placeholder width=\"24px\" height=\"24px\" type='circle' className='mr-2' />\r\n            <span className='sp1_time_log_emplyee_name'>\r\n                <Placeholder width='100px' />\r\n            </span>\r\n        </div> \r\n\r\n        <div>\r\n            <Placeholder height=\"10px\" width='50px' />\r\n        </div> \r\n        <div>\r\n            <Placeholder height=\"10px\" width='50px' />\r\n        </div>\r\n        <div>\r\n            <Placeholder height=\"10px\" width='50px' />\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TimeLogItemLoader","import React, {lazy, Suspense} from 'react'\r\nconst TimeLogItem = lazy(() => import('./TimeLogItem'));\r\nimport TimeLogTable from './TimeLogTable';\r\nimport { useDispatch, useSelector } from 'react-redux'; \r\nimport { useLazyGetTaskDetailsQuery } from '../../../services/api/SingleTaskPageApi';\r\nimport { storeTimeLogs } from '../../../services/features/subTaskSlice';\r\nimport { Placeholder } from '../../../global/Placeholder';\r\nimport TimeLogItemLoader from './TimeLogItemLoader';\r\nimport _ from 'lodash';\r\n\r\n\r\nconst fetcher = (url) => axios.get(url).then(res => res.data); \r\n\r\n\r\nconst TimeLogSection = () => {\r\n  const {task, timeLogs} = useSelector(s => s.subTask);\r\n  const [modalRefButton, setModalRefButton] = React.useState(null); \r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  \r\n  // get data\r\n    // fetch all task \r\n    const [getTaskDetails, {isFetching}] = useLazyGetTaskDetailsQuery('', {\r\n      skip: timeLogs?.length\r\n    }) \r\n  \r\n    // if task notes fetch completed store data into redux store\r\n    React.useEffect(()=> {\r\n      if(task && task.id){\r\n        getTaskDetails(`/${task?.id}/json?mode=task_time_log`)\r\n        .unwrap()\r\n        .then(res => {\r\n          if(res){\r\n            dispatch(storeTimeLogs(res));\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n      } \r\n    }, [task]); \r\n    \r\n\r\n    // control modal\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  const close = () => setIsOpen(false);\r\n\r\n  return (\r\n    <div className='sp1_task_right_card mb-3'  \r\n    ref={setModalRefButton} style={{zIndex: isOpen ? '99' : ''}}>\r\n        <div className='d-flex border-bottom pb-2 align-items-center justify-content-between mb-2 font-weight-bold'>\r\n        <span className=\"f-16\">Session Logs</span> \r\n        {isFetching && \r\n                <div \r\n                    className=\"spinner-border text-dark ml-2 mr-auto\" \r\n                    role=\"status\"\r\n                    style={{\r\n                        width: '16px',\r\n                        height: '16px',\r\n                        border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                        borderRightColor: 'transparent' \r\n                    }}\r\n                />\r\n          }\r\n        </div>\r\n\r\n\r\n        {/* side drop toggle button */}\r\n        {_.size(timeLogs) > 0 &&\r\n          <button \r\n              aria-label='openCommentModalButton'\r\n              className='sp1_task_right_dl_toggle'\r\n              onClick={toggle}\r\n              style={{zIndex: isOpen ? 110 : ''}}\r\n            >\r\n              <i \r\n                className={`fa-solid fa-circle-chevron-${ isOpen ? 'right' : 'left'}`} \r\n                style={{color: \"#276fec\"}} \r\n              />\r\n          </button>}\r\n        {/* side drop toggle button end */}\r\n\r\n\r\n          <TimeLogTable\r\n            isOpen={isOpen}\r\n            close={close}\r\n            toggle={modalRefButton}\r\n            data={timeLogs}\r\n          />\r\n\r\n\r\n        <div className=\"sp1_task_right_card--body\">\r\n          { _.size(timeLogs) > 0 ?\r\n            _.map(timeLogs, log => (\r\n              <React.Fragment key={log.id}>\r\n                <Suspense fallback={<TimeLogItemLoader />}>\r\n                  <TimeLogItem log={log}/>\r\n                </Suspense>\r\n              </React.Fragment>\r\n            )):\r\n            <div\r\n                className=\"d-flex align-items-center justify-content-center\"\r\n                style={{\r\n                    color: \"#B4BCC4\",\r\n                    fontSize: \"15px\",\r\n                    textAlign: \"center\",\r\n                    height: \"100%\",\r\n                    width: \"100%\",\r\n                }}\r\n            >\r\n                No Logged Session is Available\r\n            </div>\r\n          } \r\n        </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TimeLogSection","import dayjs from \"dayjs\";\r\nimport _ from \"lodash\";\r\nimport * as React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useErrorHandler } from \"../context/ErrorHandleServiceContextProvider\";\r\nimport FileUploader from \"../file-upload/FileUploader\";\r\nimport Toaster from \"../global/Toaster\";\r\nimport {\r\n    useGetTaskStatusQuery,\r\n    useLazyGetTaskDetailsQuery,\r\n    useLazyGetWorkingEnvironmentQuery\r\n} from \"../services/api/SingleTaskPageApi\";\r\nimport { storeTask } from \"../services/features/subTaskSlice\";\r\nimport { BoardColumn, SingleTask } from \"../utils/single-task\";\r\nimport { User } from \"../utils/user-details\";\r\nimport Accordion from \"./components/Accordion\";\r\nimport Guideline from \"./components/Guideline\";\r\nimport Loading from \"./components/Loading\";\r\nimport RevisionText from \"./components/RevisionText\";\r\nimport GenarelLoader from \"./components/loader/GenarelLoader\";\r\nimport { singleTaskPagePermission } from \"./permissions\";\r\nimport CommentSection from \"./section/comments/CommentsSection\";\r\nimport DailySubmissionSection from \"./section/daily-submission/DailySubmissionSection\";\r\nimport HistorySection from \"./section/history/HistorySection\";\r\nimport NoteSection from \"./section/notes/NoteSection\";\r\nimport RevisionSection from \"./section/revisions/RevisionSection\";\r\nimport SubTaskEditModal from \"./section/sub-task/SubTaskEditModal\";\r\nimport SubTaskSection from \"./section/sub-task/SubTaskSection\";\r\nimport TaskEditForm from \"./section/sub-task/TaskEditForm\";\r\nimport SubmittedWork from \"./section/submitted-work/SubmittedWork\";\r\nimport TaskAction from \"./section/task-actions/TaskAction\";\r\nimport TimeLogSection from \"./section/time-logs/TimeLogSection\";\r\n\r\nconst RefetchTaskProvider = React.createContext({});\r\nexport const useRefetchTaskDetails = () => {\r\n    const { setRefetchTask } = React.useContext(RefetchTaskProvider);\r\n    return () => {\r\n        setRefetchTask((prev) => !prev);\r\n    };\r\n};\r\n\r\nconst SingleIndependentTask = () => {\r\n    const { task: Task } = useSelector((s) => s.subTask);\r\n    const [refetchTask, setRefetchTask] = React.useState(false);\r\n    const { throwError } = useErrorHandler();\r\n    const dispatch = useDispatch();\r\n    const params = useParams();\r\n\r\n    // lazily get task details\r\n    const [\r\n        getTaskDetails,\r\n        { isFetching: isTaskFetching, isLoading: isTaskLoading },\r\n    ] = useLazyGetTaskDetailsQuery();\r\n\r\n    // get task status query\r\n    const { data: taskStatus } = useGetTaskStatusQuery(params?.taskId);\r\n\r\n    // lazily get task working environment\r\n    const [\r\n        getWorkingEnv,\r\n        { isFetching: isWorkingEnvFetching, isLoading: isWorkingEnvLoading },\r\n    ] = useLazyGetWorkingEnvironmentQuery();\r\n\r\n    const task = new SingleTask(Task); // task instance\r\n    const loggedUser = new User(window?.Laravel?.user); // logged users data\r\n\r\n    // console.log(task);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const CurrentTask = {};\r\n\r\n            await getTaskDetails(`/${params?.taskId}/json?mode=basic`)\r\n                .unwrap()\r\n                .then(\r\n                    ({\r\n                        task,\r\n                        parent_task_heading,\r\n                        parent_task_action,\r\n                        subtasks,\r\n                        task_guideline,\r\n                        revisions,\r\n                        Sub_Tasks,\r\n                        ppTaskFiles,\r\n                    }) => {\r\n                        for (const key in task) {\r\n                            CurrentTask[key] = task[key];\r\n                        }\r\n                        CurrentTask.parent_task_title =\r\n                            parent_task_heading?.heading || null;\r\n                        CurrentTask.parent_task_action = parent_task_action;\r\n                        CurrentTask.subtask = subtasks;\r\n                        CurrentTask.pm_task_guideline = task_guideline;\r\n                        CurrentTask.task_revisions = revisions;\r\n                        CurrentTask.taskSubTask = Sub_Tasks;\r\n                        CurrentTask.taskFiles = [...ppTaskFiles];\r\n                    }\r\n                );\r\n\r\n            // console.log(CurrentTask.subtask_id);\r\n\r\n            await getWorkingEnv(\r\n                CurrentTask.subtask_id\r\n                    ? CurrentTask.parent_task_id\r\n                    : CurrentTask.id\r\n            )\r\n                .unwrap()\r\n                .then(({ task_working_environment }) => {\r\n                    CurrentTask.working_environment_data =\r\n                        task_working_environment;\r\n                });\r\n\r\n            // console.log({ CurrentTask });\r\n\r\n            const _task = new SingleTask(CurrentTask);\r\n\r\n            // console.log({ _task });\r\n\r\n            let hasPermission = singleTaskPagePermission(_task, loggedUser);\r\n\r\n            if (!hasPermission) {\r\n                return throwError({\r\n                    title: \"Access Denied\",\r\n                    message:\r\n                        \"Access to this resource is forbidden. Please contact the administrator for assistance.\",\r\n                    code: 403,\r\n                });\r\n            } else {\r\n                // const task = _task;\r\n                dispatch(storeTask(CurrentTask));\r\n            }\r\n        })();\r\n    }, [refetchTask]);\r\n\r\n    const loadingClass =\r\n        isTaskFetching || isTaskLoading ? \"skeleton-loading\" : \"\";\r\n\r\n    if (\r\n        isTaskFetching ||\r\n        isTaskLoading ||\r\n        isWorkingEnvFetching ||\r\n        isWorkingEnvLoading\r\n    ) {\r\n        return <Loading isLoading={true} />;\r\n    }\r\n\r\n    const _taskStatus = new BoardColumn(taskStatus);\r\n\r\n    if (!task) return null;\r\n\r\n    // console.log(\"task revision\", task?.revisions);\r\n\r\n    return (\r\n        <RefetchTaskProvider.Provider value={{ setRefetchTask }}>\r\n            <div className=\"position-relative content-wrapper\">\r\n                <div className=\"mb-3\">\r\n                    <div className={`f-18 ${loadingClass}`}>\r\n                        <span>\r\n                            {\" \"}\r\n                            <strong>Task: </strong>{\" \"}\r\n                        </span>\r\n                        <a href={`/account/tasks/${task?.id}`}>\r\n                            {task?.getSubtaskTitle()}\r\n                        </a>\r\n                        {_.includes(\r\n                            [1, 4, 6, 7, 8],\r\n                            loggedUser?.getRoleId()\r\n                        ) && (\r\n                            <span className=\"ml-2\">\r\n                                (\r\n                                <a\r\n                                    href={`/account/projects/${task.projectId}?tab=tasks`}\r\n                                    className=\"f-14\"\r\n                                >\r\n                                    See All Tasks\r\n                                </a>\r\n                                )\r\n                            </span>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    {isTaskFetching || isTaskLoading ? (\r\n                        <GenarelLoader />\r\n                    ) : (\r\n                        <React.Fragment>\r\n                            <div className=\"col-12 col-md-7 col-lg-8 mb-3\">\r\n                                <div className=\"bg-white rounded-lg p-3\">\r\n                                    <TaskAction\r\n                                        task={task}\r\n                                        status={taskStatus}\r\n                                    />\r\n\r\n                                    {/* task information */}\r\n                                    <div>\r\n                                        <div\r\n                                            className=\"d-flex flex-column py-3\"\r\n                                            style={{ gap: \"10px\" }}\r\n                                        >\r\n                                            {task?.isSubtask && (\r\n                                                <div className=\"sp1_st-list-item\">\r\n                                                    <div className=\"sp1_st-list-item-head\">\r\n                                                        {\" \"}\r\n                                                        Parent Task:{\" \"}\r\n                                                    </div>\r\n                                                    <div className=\"sp1_st-list-item-value\">\r\n                                                        <a\r\n                                                            href={`/account/tasks/${task?.parentTaskId}`}\r\n                                                            className=\"text-hover-underline\"\r\n                                                        >\r\n                                                            {\r\n                                                                task?.parentTaskTitle\r\n                                                            }\r\n                                                        </a>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )}\r\n\r\n                                            {/* project name */}\r\n                                            {/* <div className=\"sp1_st-list-item\">\r\n                                        <div className=\"sp1_st-list-item-head\">Project : </div>\r\n                                        <div className=\"sp1_st-list-item-value\">\r\n                                            <span className=\"dot-color bg-danger mr-2\" />\r\n                                            <a href={`/account/projects/${task?.projectId}`} className=\"text-hover-underline\">\r\n                                                {task?.projectName}\r\n                                            </a>\r\n                                        </div>\r\n                                    </div> */}\r\n\r\n                                            {/* client name */}\r\n                                            <div className=\"sp1_st-list-item\">\r\n                                                <div className=\"sp1_st-list-item-head\">\r\n                                                    Client :{\" \"}\r\n                                                </div>\r\n                                                <div className=\"sp1_st-list-item-value\">\r\n                                                    <span className=\"dot-color bg-info mr-2\" />\r\n                                                    <span>\r\n                                                        {Task?.ind_clientId\r\n                                                            ? Task?.ind_client_name\r\n                                                            : Task?.independent_client_name}\r\n                                                    </span>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {/* project manager */}\r\n                                            {/* <div className=\"sp1_st-list-item\">\r\n                                        <div className=\"sp1_st-list-item-head\">Project Manager: </div>\r\n\r\n                                        <div className=\"sp1_st-list-item-value\">\r\n                                            <div style={{ width: \"32px\", height: \"32px\" }}>\r\n                                                <img\r\n                                                    src={`/user-uploads/avatar/${task?.projectManagerAvatar}`}\r\n                                                    alt={task?.projectManagerName}\r\n                                                    width=\"32px\"\r\n                                                    height=\"32px\"\r\n                                                    className=\"rounded-circle\"\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"ml-2\">\r\n                                                <span\r\n                                                    className={`d-block f-14 font-weight-bold`}\r\n                                                >\r\n                                                    <a\r\n                                                        href={`/account/employees/${task?.projectManagerId}`}\r\n                                                        className=\"hover-underline\"\r\n                                                    >\r\n                                                        {task?.projectManagerName}</a>\r\n                                                    {Number(task?.projectManagerId) ===\r\n                                                        Number(loggedUser?.getId()) && (\r\n                                                        <sup\r\n                                                            className=\"rounded-pill bg-dark text-white px-1 ml-1\"\r\n                                                            style={{ fontSize: \"10px\", whiteSpace: 'nowrap' }}\r\n                                                        >\r\n                                                            It's You\r\n                                                        </sup>\r\n                                                    )}\r\n                                                </span>\r\n\r\n                                                <span style={{ fontSize: \"12px\" }}>\r\n                                                   {task?.projectManagerDesignation}\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div> */}\r\n\r\n                                            {/* milestone */}\r\n                                            {/* <div className=\"sp1_st-list-item\">\r\n                                        <div className=\"sp1_st-list-item-head\">\r\n                                            Milestone :{\" \"}\r\n                                        </div>\r\n                                        <div className=\"sp1_st-list-item-value\">\r\n                                            <span className=\"dot-color bg-primary mr-2\" />\r\n                                            {task?.milestoneTitle}\r\n                                        </div>\r\n                                    </div> */}\r\n\r\n                                            {/* assignee to */}\r\n                                            <div className=\"sp1_st-list-item\">\r\n                                                <div className=\"sp1_st-list-item-head\">\r\n                                                    Assigned To :{\" \"}\r\n                                                </div>\r\n                                                <div className=\"sp1_st-list-item-value\">\r\n                                                    <div\r\n                                                        style={{\r\n                                                            width: \"32px\",\r\n                                                            height: \"32px\",\r\n                                                        }}\r\n                                                    >\r\n                                                        <img\r\n                                                            src={task?.assigneeTo?.getAvatar()}\r\n                                                            alt={task?.assigneeTo?.getName()}\r\n                                                            width=\"32px\"\r\n                                                            height=\"32px\"\r\n                                                            className=\"rounded-circle\"\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"ml-2\">\r\n                                                        <span\r\n                                                            className={`d-block f-14 font-weight-bold`}\r\n                                                        >\r\n                                                            <a\r\n                                                                href={task?.assigneeTo?.getUserLink()}\r\n                                                                className=\"hover-underline\"\r\n                                                            >\r\n                                                                {task?.assigneeTo?.getName()}\r\n                                                            </a>\r\n                                                            {Number(\r\n                                                                task?.assigneeTo?.getId()\r\n                                                            ) ===\r\n                                                                Number(\r\n                                                                    loggedUser?.getId()\r\n                                                                ) && (\r\n                                                                <sup\r\n                                                                    className=\"rounded-pill bg-dark text-white px-1 ml-1\"\r\n                                                                    style={{\r\n                                                                        fontSize:\r\n                                                                            \"10px\",\r\n                                                                        whiteSpace:\r\n                                                                            \"nowrap\",\r\n                                                                    }}\r\n                                                                >\r\n                                                                    It's You\r\n                                                                </sup>\r\n                                                            )}\r\n                                                        </span>\r\n\r\n                                                        <span\r\n                                                            style={{\r\n                                                                fontSize:\r\n                                                                    \"12px\",\r\n                                                            }}\r\n                                                        >\r\n                                                            {task?.assigneeTo?.getDesignationName()}\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {/* assignee by */}\r\n                                            <div className=\"sp1_st-list-item\">\r\n                                                <div className=\"sp1_st-list-item-head\">\r\n                                                    Assigned by:{\" \"}\r\n                                                </div>\r\n                                                <div className=\"sp1_st-list-item-value\">\r\n                                                    <div\r\n                                                        style={{\r\n                                                            width: \"32px\",\r\n                                                            height: \"32px\",\r\n                                                        }}\r\n                                                    >\r\n                                                        <img\r\n                                                            src={task?.assigneeBy?.getAvatar()}\r\n                                                            alt={task?.assigneeBy?.getName()}\r\n                                                            width=\"32px\"\r\n                                                            height=\"32px\"\r\n                                                            className=\"rounded-circle\"\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"ml-2\">\r\n                                                        <span\r\n                                                            className={`d-block f-14 font-weight-bold`}\r\n                                                        >\r\n                                                            <a\r\n                                                                href={task?.assigneeBy?.getUserLink()}\r\n                                                                className=\"hover-underline\"\r\n                                                            >\r\n                                                                {task?.assigneeBy?.getName()}\r\n                                                            </a>\r\n                                                            {Number(\r\n                                                                task?.assigneeBy?.getId()\r\n                                                            ) ===\r\n                                                                Number(\r\n                                                                    loggedUser?.getId()\r\n                                                                ) && (\r\n                                                                <sup\r\n                                                                    className=\"rounded-pill bg-dark text-white px-1\"\r\n                                                                    style={{\r\n                                                                        fontSize:\r\n                                                                            \"10px\",\r\n                                                                    }}\r\n                                                                >\r\n                                                                    It's You\r\n                                                                </sup>\r\n                                                            )}\r\n                                                        </span>\r\n\r\n                                                        <span\r\n                                                            style={{\r\n                                                                fontSize:\r\n                                                                    \"12px\",\r\n                                                            }}\r\n                                                        >\r\n                                                            {task?.assigneeBy?.getDesignationName()}\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {/* TASK CATEGORY */}\r\n                                            {!task.subtaskId ? (\r\n                                                <div className=\"sp1_st-list-item\">\r\n                                                    <div className=\"sp1_st-list-item-head\">\r\n                                                        Task Category :{\" \"}\r\n                                                    </div>\r\n                                                    <div className=\"sp1_st-list-item-value\">\r\n                                                        {/* <span\r\n                                                        className=\"dot-color mr-2\"\r\n                                                        style={{\r\n                                                            background:\r\n                                                                \"rgba(252, 189, 1, 1)\",\r\n                                                        }}\r\n                                                    /> */}\r\n                                                        {task.category.name}\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) : (\r\n                                                <></>\r\n                                            )}\r\n\r\n                                            {/* PRIORITY */}\r\n                                            <div className=\"sp1_st-list-item\">\r\n                                                <div className=\"sp1_st-list-item-head\">\r\n                                                    Priority :{\" \"}\r\n                                                </div>\r\n                                                <div className=\"sp1_st-list-item-value\">\r\n                                                    <span\r\n                                                        className=\"dot-color mr-2\"\r\n                                                        style={{\r\n                                                            background:\r\n                                                                \"rgba(252, 189, 1, 1)\",\r\n                                                        }}\r\n                                                    />\r\n                                                    {task?.priority}\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {/* login url */}\r\n                                            {!task.subtaskId ? (\r\n                                                <div className=\"sp1_st-list-item\">\r\n                                                    <div className=\"sp1_st-list-item-head\">\r\n                                                        Login URL :{\" \"}\r\n                                                    </div>\r\n                                                    <div className=\"sp1_st-list-item-value\">\r\n                                                        {/* <span\r\n                                                        className=\"dot-color mr-2\"\r\n                                                        style={{\r\n                                                            background:\r\n                                                                \"rgba(252, 189, 1, 1)\",\r\n                                                        }}\r\n                                                    /> */}\r\n\r\n                                                        <a\r\n                                                            target=\"__blank\"\r\n                                                            href={\r\n                                                                task\r\n                                                                    ?.additionalInfo\r\n                                                                    ?.loginURL\r\n                                                            }\r\n                                                        >\r\n                                                            {\r\n                                                                task\r\n                                                                    ?.additionalInfo\r\n                                                                    ?.loginURL\r\n                                                            }\r\n                                                        </a>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) : (\r\n                                                <></>\r\n                                            )}\r\n\r\n                                            {/* username */}\r\n                                            {!task.subtaskId ? (\r\n                                                <div className=\"sp1_st-list-item\">\r\n                                                    <div className=\"sp1_st-list-item-head\">\r\n                                                        Username :{\" \"}\r\n                                                    </div>\r\n                                                    <div className=\"sp1_st-list-item-value\">\r\n                                                        {/* <span\r\n                                                        className=\"dot-color mr-2\"\r\n                                                        style={{\r\n                                                            background:\r\n                                                                \"rgba(252, 189, 1, 1)\",\r\n                                                        }}\r\n                                                    /> */}\r\n                                                        {\r\n                                                            task.additionalInfo\r\n                                                                .username\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) : (\r\n                                                <></>\r\n                                            )}\r\n\r\n                                            {/* password */}\r\n                                            {!task.subtaskId ? (\r\n                                                <div className=\"sp1_st-list-item\">\r\n                                                    <div className=\"sp1_st-list-item-head\">\r\n                                                        Password :{\" \"}\r\n                                                    </div>\r\n                                                    <div className=\"sp1_st-list-item-value\">\r\n                                                        {/* <span\r\n                                                        className=\"dot-color mr-2\"\r\n                                                        style={{\r\n                                                            background:\r\n                                                                \"rgba(252, 189, 1, 1)\",\r\n                                                        }}\r\n                                                    /> */}\r\n                                                        {\r\n                                                            task.additionalInfo\r\n                                                                .password\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) : (\r\n                                                <></>\r\n                                            )}\r\n\r\n                                            {/* ref site */}\r\n                                            {!task.subtaskId ? (\r\n                                                <div className=\"sp1_st-list-item\">\r\n                                                    <div className=\"sp1_st-list-item-head\">\r\n                                                        Reference page :{\" \"}\r\n                                                    </div>\r\n                                                    <div className=\"sp1_st-list-item-value\">\r\n                                                        {/* <span\r\n                                                        className=\"dot-color mr-2\"\r\n                                                        style={{\r\n                                                            background:\r\n                                                                \"rgba(252, 189, 1, 1)\",\r\n                                                        }}\r\n                                                    /> */}\r\n                                                        <a\r\n                                                            target=\"__blank\"\r\n                                                            href={\r\n                                                                task\r\n                                                                    ?.additionalInfo\r\n                                                                    ?.refSite\r\n                                                            }\r\n                                                        >\r\n                                                            {\r\n                                                                task\r\n                                                                    ?.additionalInfo\r\n                                                                    ?.refSite\r\n                                                            }\r\n                                                        </a>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) : (\r\n                                                <></>\r\n                                            )}\r\n\r\n                                            {/* category */}\r\n                                            {task?.isSubtask && (\r\n                                                <>\r\n                                                    <div className=\"sp1_st-list-item\">\r\n                                                        <div className=\"sp1_st-list-item-head\">\r\n                                                            Task Category :{\" \"}\r\n                                                        </div>\r\n                                                        <div className=\"sp1_st-list-item-value\">\r\n                                                            {task?.category\r\n                                                                ?.name ?? \"--\"}\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    {/* task type */}\r\n                                                    <div className=\"sp1_st-list-item\">\r\n                                                        <div className=\"sp1_st-list-item-head\">\r\n                                                            Task Type:{\" \"}\r\n                                                        </div>\r\n                                                        <div className=\"sp1_st-list-item-value\">\r\n                                                            {task?.taskType ??\r\n                                                                \"--\"}\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"sp1_st-list-item\">\r\n                                                        <div className=\"sp1_st-list-item-head\">\r\n                                                            Page Type:{\" \"}\r\n                                                        </div>\r\n                                                        <div className=\"sp1_st-list-item-value\">\r\n                                                            {task?.pageType ??\r\n                                                                \"--\"}\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"sp1_st-list-item\">\r\n                                                        <div className=\"sp1_st-list-item-head\">\r\n                                                            Page Name:{\" \"}\r\n                                                        </div>\r\n                                                        <div className=\"sp1_st-list-item-value\">\r\n                                                            {task?.pageName ??\r\n                                                                \"--\"}\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"sp1_st-list-item\">\r\n                                                        <div className=\"sp1_st-list-item-head\">\r\n                                                            Page Url:{\" \"}\r\n                                                        </div>\r\n                                                        <div className=\"sp1_st-list-item-value\">\r\n                                                            {task?.pageUrl ? (\r\n                                                                <a\r\n                                                                    href={\r\n                                                                        task?.pageUrl\r\n                                                                    }\r\n                                                                >\r\n                                                                    ( view )\r\n                                                                </a>\r\n                                                            ) : (\r\n                                                                <span>--</span>\r\n                                                            )}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </>\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"mt-3\">\r\n                                        {/* project manager guideline */}\r\n                                        {(!_.isEmpty(task?.workEnvData) ||\r\n                                            !_.isEmpty(task?.guidelines)) && (\r\n                                            <Accordion\r\n                                                expendable={false}\r\n                                                title=\"General Guidelines\"\r\n                                            >\r\n                                                {/* {task?.hasProjectManagerGuideline && <PMGuideline guideline={task?.PMTaskGuideline} /> } */}\r\n\r\n                                                {!_.isEmpty(\r\n                                                    task?.workEnvData\r\n                                                ) && (\r\n                                                    <div className=\"sp1_task_card--sub-card\">\r\n                                                        <div\r\n                                                            className=\"px-4 py-3\"\r\n                                                            style={{\r\n                                                                background:\r\n                                                                    \"#F3F5F9\",\r\n                                                            }}\r\n                                                        >\r\n                                                            <h6 className=\"mb-2\">\r\n                                                                Working\r\n                                                                Environment\r\n                                                            </h6>\r\n                                                            <hr />\r\n                                                            <div className=\"row\">\r\n                                                                {/* working/staging site's url */}\r\n                                                                <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                                                    <span>\r\n                                                                        <strong>\r\n                                                                            Working/Staging\r\n                                                                            Site's\r\n                                                                            URL\r\n                                                                        </strong>\r\n                                                                        : <br />{\" \"}\r\n                                                                        <a\r\n                                                                            target=\"__blank\"\r\n                                                                            href={\r\n                                                                                task\r\n                                                                                    ?.workEnvData\r\n                                                                                    ?.site_url\r\n                                                                            }\r\n                                                                        >\r\n                                                                            View\r\n                                                                            on\r\n                                                                            new\r\n                                                                            tab\r\n                                                                        </a>\r\n                                                                    </span>\r\n                                                                </div>\r\n\r\n                                                                {/* frontend password */}\r\n                                                                <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                                                    <span>\r\n                                                                        <strong>\r\n                                                                            Frontend\r\n                                                                            Password\r\n                                                                        </strong>\r\n                                                                        : <br />{\" \"}\r\n                                                                        {\r\n                                                                            task\r\n                                                                                ?.workEnvData\r\n                                                                                ?.frontend_password\r\n                                                                        }\r\n                                                                    </span>\r\n                                                                </div>\r\n\r\n                                                                {/* working/staging site's login url */}\r\n                                                                <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                                                    <span>\r\n                                                                        <strong>\r\n                                                                            Working/Staging\r\n                                                                            Site's\r\n                                                                            Login\r\n                                                                            URL\r\n                                                                        </strong>\r\n                                                                        : <br />{\" \"}\r\n                                                                        <a\r\n                                                                            target=\"__blank\"\r\n                                                                            href={\r\n                                                                                task\r\n                                                                                    ?.workEnvData\r\n                                                                                    ?.login_url\r\n                                                                            }\r\n                                                                        >\r\n                                                                            View\r\n                                                                            on\r\n                                                                            new\r\n                                                                            tab\r\n                                                                        </a>{\" \"}\r\n                                                                    </span>\r\n                                                                </div>\r\n\r\n                                                                {/* working/staging site's username/email */}\r\n                                                                <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                                                    <span>\r\n                                                                        <strong>\r\n                                                                            Working/Staging\r\n                                                                            Site's\r\n                                                                            Username/Email\r\n                                                                        </strong>\r\n                                                                        : <br />{\" \"}\r\n                                                                        {task\r\n                                                                            ?.workEnvData\r\n                                                                            ?.email ||\r\n                                                                            task\r\n                                                                                ?.workEnvData\r\n                                                                                ?.user_name}\r\n                                                                    </span>\r\n                                                                </div>\r\n\r\n                                                                {/* password */}\r\n                                                                <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                                                    <span>\r\n                                                                        <strong>\r\n                                                                            Password\r\n                                                                        </strong>\r\n                                                                        : <br />{\" \"}\r\n                                                                        {\r\n                                                                            task\r\n                                                                                ?.workEnvData\r\n                                                                                ?.password\r\n                                                                        }\r\n                                                                    </span>\r\n                                                                </div>\r\n\r\n                                                                {/* Reference Page */}\r\n                                                                {/* <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                                                    <span>\r\n                                                                        <strong>\r\n                                                                            Reference\r\n                                                                            Page\r\n                                                                        </strong>\r\n                                                                        : <br />{\" \"}\r\n                                                                        <a\r\n                                                                            target=\"__blank\"\r\n                                                                            href={\r\n                                                                                task\r\n                                                                                    ?.workEnvData\r\n                                                                                    ?.reference_site\r\n                                                                            }\r\n                                                                        >\r\n                                                                            View\r\n                                                                            on\r\n                                                                            new\r\n                                                                            tab\r\n                                                                        </a>\r\n                                                                    </span>\r\n                                                                </div> */}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )}\r\n\r\n                                                <Guideline\r\n                                                    text={task?.guidelines}\r\n                                                    workEnv={task?.workEnvData}\r\n                                                />\r\n                                            </Accordion>\r\n                                        )}\r\n\r\n                                        {/* task revision */}\r\n                                        {_.size(task?.revisions) > 0 && (\r\n                                            <Accordion\r\n                                                title={\r\n                                                    _.last(task?.revisions)\r\n                                                        ?.revisionStatus\r\n                                                }\r\n                                                headingClass=\"d-flex align-items-center justify-content-between\"\r\n                                                headingStyle={{\r\n                                                    background:\r\n                                                        \"rgba(227,62,79,1)\",\r\n                                                    color: \"#fff\",\r\n                                                }}\r\n                                            >\r\n                                                {_.map(\r\n                                                    task?.revisions,\r\n                                                    (revision, index) => (\r\n                                                        <RevisionText\r\n                                                            key={revision?.id}\r\n                                                            index={index + 1}\r\n                                                            date={dayjs(\r\n                                                                revision.createdAt\r\n                                                            ).format(\r\n                                                                \"MMM DD, YYYY\"\r\n                                                            )}\r\n                                                            time={dayjs(\r\n                                                                revision.createdAt\r\n                                                            ).format(\"hh:mm a\")}\r\n                                                            text={\r\n                                                                revision?.comment ||\r\n                                                                revision?.devComment ||\r\n                                                                revision?.pmComment\r\n                                                            }\r\n                                                            revision={revision}\r\n                                                        />\r\n                                                    )\r\n                                                )}\r\n                                            </Accordion>\r\n                                        )}\r\n\r\n                                        {/* task description */}\r\n                                        <Accordion\r\n                                            expendable={false}\r\n                                            title=\"Task Descriptions\"\r\n                                        >\r\n                                            <Guideline\r\n                                                text={task?.description}\r\n                                            />\r\n\r\n                                            {_.size(task?.attachments) > 0 ? (\r\n                                                <div className=\"mt-3\">\r\n                                                    <h4 className=\"mb-2\">\r\n                                                        Task Attachments:{\" \"}\r\n                                                    </h4>\r\n                                                    <FileUploader>\r\n                                                        {_.map(\r\n                                                            task?.attachments,\r\n                                                            (attachment) =>\r\n                                                                attachment?.pp_task_file_name ? (\r\n                                                                    <FileUploader.Preview\r\n                                                                        key={\r\n                                                                            attachment?.pp_task_file_id\r\n                                                                        }\r\n                                                                        fileName={\r\n                                                                            attachment?.pp_task_file_name\r\n                                                                        }\r\n                                                                        downloadAble={\r\n                                                                            true\r\n                                                                        }\r\n                                                                        deleteAble={\r\n                                                                            false\r\n                                                                        }\r\n                                                                        downloadUrl={\r\n                                                                            attachment?.pp_task_file_url\r\n                                                                        }\r\n                                                                        previewUrl={\r\n                                                                            attachment?.pp_task_file_url\r\n                                                                        }\r\n                                                                        fileType={\r\n                                                                            _.includes(\r\n                                                                                [\r\n                                                                                    \"png\",\r\n                                                                                    \"jpeg\",\r\n                                                                                    \"jpg\",\r\n                                                                                    \"svg\",\r\n                                                                                    \"webp\",\r\n                                                                                    \"gif\",\r\n                                                                                ],\r\n                                                                                attachment?.pp_task_file_icon\r\n                                                                            )\r\n                                                                                ? \"images\"\r\n                                                                                : \"others\"\r\n                                                                        }\r\n                                                                        classname=\"comment_file\"\r\n                                                                        ext={\r\n                                                                            attachment?.pp_task_file_icon\r\n                                                                        }\r\n                                                                    />\r\n                                                                ) : null\r\n                                                        )}\r\n                                                    </FileUploader>\r\n                                                </div>\r\n                                            ) : null}\r\n                                        </Accordion>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </React.Fragment>\r\n                    )}\r\n\r\n                    <div className=\"col-12 col-md-5 col-lg-4\">\r\n                        <div className=\"d-flex flex-column\">\r\n                            {/* period */}\r\n                            <div\r\n                                className=\"sp1_task_right_card mb-3\"\r\n                                style={{ maxHeight: \"450px\" }}\r\n                            >\r\n                                <div className=\"d-flex align-items-center font-weight-bold border-bottom pl-2 pb-2 mb-2\">\r\n                                    <span\r\n                                        style={{\r\n                                            display: \"block\",\r\n                                            width: \"10px\",\r\n                                            height: \"10px\",\r\n                                            borderRadius: \"100%\",\r\n                                            background: taskStatus?.label_color,\r\n                                            marginRight: \"6px\",\r\n                                            boxShadow:\r\n                                                \"0 0 10px rgba(0,0,0,.1)\",\r\n                                        }}\r\n                                    />\r\n\r\n                                    {_taskStatus.getTaskStatusName(\r\n                                        loggedUser?.getRoleId(),\r\n                                        task.isSubtask\r\n                                    )}\r\n                                </div>\r\n\r\n                                <div className=\"d-flex align-items-center mb-2\">\r\n                                    <div className=\"\">Start Date: </div>\r\n                                    <div\r\n                                        className={`d-flex align-items-center font-weight-bold pl-2 ${loadingClass}`}\r\n                                    >\r\n                                        {task?.getStartDate(\"MMM DD, YYYY\")}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Due Date */}\r\n                                <div className=\"d-flex align-items-center mb-2\">\r\n                                    <div className=\"\">Due Date: </div>\r\n                                    <div\r\n                                        className={`d-flex align-items-center font-weight-bold pl-2 ${loadingClass}`}\r\n                                    >\r\n                                        {task?.getDueDate(\"MMM DD, YYYY\")}\r\n                                    </div>\r\n                                </div>\r\n                                {/* End Due Date */}\r\n\r\n                                {/* Time Estimate */}\r\n                                {/* <div className=\"d-flex align-items-center mb-2\">\r\n                                <div className=\"\">Time Estimate: </div>\r\n                                <div\r\n                                    className={`d-flex align-items-center font-weight-bold pl-2 ${loadingClass}`}\r\n                                >\r\n                                    {task?.getEstimateTime()}\r\n                                </div>\r\n                            </div> */}\r\n                                {/* End Time Estimate */}\r\n\r\n                                {/* <div className=\"d-flex align-items-center mb-2\">\r\n                                <div className=\"\">\r\n                                    Parent Task Hours Logged:\r\n                                </div>\r\n                                <div\r\n                                    className={`d-flex align-items-center font-weight-bold pl-2 ${loadingClass}`}\r\n                                >\r\n                                    {task?.parentTaskTimeLog || \"--\"}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"d-flex align-items-center mb-2\">\r\n                                <div className=\"\">Subtask Hours Logged: </div>\r\n                                <div\r\n                                    className={`d-flex align-items-center font-weight-bold ml-2 pl-2 ${loadingClass}`}\r\n                                >\r\n                                    {task?.subTaskTimeLog || \"--\"}\r\n                                </div>\r\n                            </div> */}\r\n\r\n                                <div className=\"d-flex align-items-center mb-2\">\r\n                                    <div className=\"\">Total Hours Logged: </div>\r\n                                    <div className=\"d-flex align-items-center font-weight-bold pl-2\">\r\n                                        {(task.isSubtask\r\n                                            ? task?.parentTaskTimeLog\r\n                                            : task?.totalTimeLog) || \"--\"}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* comments */}\r\n                            {task && task?.id && <SubmittedWork task={task} />}\r\n                            {!task.isSubtask && (\r\n                                <SubTaskSection status={taskStatus} />\r\n                            )}\r\n                            {task && task?.id && (\r\n                                <DailySubmissionSection task={task} />\r\n                            )}\r\n                            {task && task?.id && (\r\n                                <CommentSection\r\n                                    task={task}\r\n                                    isLoading={isTaskFetching || isTaskLoading}\r\n                                />\r\n                            )}\r\n                            <NoteSection />\r\n                            <TimeLogSection />\r\n                            {task && task?.id && <HistorySection />}\r\n                            {task && task?.id && (\r\n                                <RevisionSection task={task} />\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Toaster />\r\n                <ShowEditModals task={task} auth={loggedUser} />\r\n            </div>\r\n        </RefetchTaskProvider.Provider>\r\n    );\r\n};\r\n\r\nexport default SingleIndependentTask;\r\n\r\nconst ShowEditModals = ({ auth, task }) => {\r\n    let hasAccess = false;\r\n\r\n    let time = task.isSubtask ? task?.parentTaskTimeLog : task?.totalTimeLog;\r\n\r\n    if (auth.getRoleId() === 1) {\r\n        hasAccess = true;\r\n    } else if (\r\n        auth.getId() === task.assigneeBy.id &&\r\n        task.boardColumn.id === 2\r\n    ) {\r\n        hasAccess = true;\r\n    } else hasAccess = false;\r\n\r\n    if (hasAccess) {\r\n        if (task.isSubtask) {\r\n            return <SubTaskEditModal task={task} />;\r\n        } else {\r\n            return <TaskEditForm task={task} />;\r\n        }\r\n    }\r\n\r\n    return null;\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Button = ({\r\n    children, \r\n    type=\"button\",\r\n    disabled=false, \r\n    className = '', \r\n    variant='primary',\r\n    size=\"sm\",\r\n    onClick,\r\n    ...props\r\n}) => {\r\n    const classes = `cnx__btn cnx__btn_${variant} ${disabled ? 'cnx__btn_disabled': ''} cnx__btn_${size} ${className}`\r\n\r\n    const handleOnClick = (e) => {\r\n        onClick && onClick(e)\r\n    }\r\n\r\n\r\n    return (\r\n        <button \r\n            type='button' \r\n            className={classes} \r\n            disabled={disabled} \r\n            onClick={handleOnClick} \r\n            {...props}\r\n        >\r\n            {children}\r\n        </button>\r\n    )\r\n}\r\n\r\nButton.propTypes = {\r\n    children: PropTypes.node.isRequired || PropTypes.string.isRequired || PropTypes.array.isRequired,\r\n    disabled: PropTypes.bool,\r\n    className: PropTypes.string,\r\n    variant: PropTypes.oneOf(['primary', 'secondary', 'tertiary', 'success', 'danger']),\r\n    size: PropTypes.oneOf(['sm', 'md', 'lg']),\r\n    onClick: PropTypes.func,\r\n    href: PropTypes.string\r\n}\r\n\r\nexport default Button;","import * as React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {usePopper} from 'react-popper';\r\nimport {motion, AnimatePresence } from 'framer-motion';\r\n\r\nconst DropdownContext = React.createContext();\r\n\r\n\r\nconst DropdownProvider = ({children}) => {\r\n    const [isOpen, setIsOpen] = React.useState(false);\r\n    const [element, setElement] = React.useState(null);\r\n    const [reference, setReference] = React.useState(null);\r\n\r\n    return (\r\n        <DropdownContext.Provider value={{\r\n            element,\r\n            setElement,\r\n            reference,\r\n            setReference,\r\n            isOpen,\r\n            setIsOpen\r\n        }}>\r\n            {children}\r\n        </DropdownContext.Provider>\r\n    )\r\n}\r\n\r\n// dropdown hooks\r\nconst useDropdown = () => {\r\n    const context = React.useContext(DropdownContext);\r\n    if(!context) {\r\n        throw new Error('useDropdown must be used within a DropdownProvider');\r\n    }\r\n    return context;\r\n}\r\n\r\n\r\n// dropdown item\r\nconst DropdownItem = ({children, className, onClick, disabled=false, ...props}) => {\r\n    const {setIsOpen} = useDropdown();\r\n    return(\r\n        <div \r\n            onMouseUp={() => disabled ? null : setIsOpen(false)}\r\n            onClick={(e) => disabled ? null : onClick ? onClick(e): null}\r\n            className={`cnx_dropdown__item ${disabled ? 'cnx_dropdown__item_disabled}': ''} ${className}`}\r\n            {...props}\r\n        >\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst DropdownToggle = ({children, icon=true, className}) => {\r\n    const {setIsOpen, isOpen, setReference} = useDropdown();\r\n    const toggle = () => setIsOpen(!isOpen);\r\n    return(\r\n        <div\r\n            ref={setReference}\r\n            className={`cnx_dropdown__toggle ${className}`}\r\n            onClick={toggle}\r\n        >\r\n\r\n            {children}\r\n            {icon && <i className={`fas fa-caret-${isOpen ? 'up' : 'down'} cnx_dropdown__toggle_icon`}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\n// dropdown menu\r\nconst DropdownMenu = ({children, className, placement=\"bottom-start\", offset=[0, 3], ...props}) => {\r\n    const { reference, setIsOpen, isOpen} = useDropdown();\r\n    const [popperElement , setPopperElement] = React.useState(null);\r\n    const [width, setWidth] = React.useState(100);\r\n    \r\n    // generate random id for dropdown menu\r\n    const id = React.useMemo(() => Math.random().toString(36).substr(2, 9), []);\r\n\r\n\r\n    let DOM = document.getElementById(id);\r\n    const {styles, attributes} = usePopper(reference, popperElement, {\r\n        placement,\r\n        modifiers: [\r\n            {\r\n                name: 'offset',\r\n                options: {\r\n                    offset,\r\n                },\r\n            },\r\n            {\r\n                name: 'flip',\r\n                options: {\r\n                    fallbackPlacements: ['bottom', 'left', 'right', 'top' ],\r\n                },\r\n            }\r\n        ],\r\n    });\r\n\r\n\r\n    // min width\r\n    React.useEffect(() => {\r\n        if(reference){\r\n            setWidth(reference.offsetWidth);\r\n        }\r\n    }, [reference])\r\n\r\n\r\n    // outside click\r\n\r\n    React.useEffect(() => {\r\n        let timeout;\r\n        const handleClickOutside = (event) => {\r\n            if (popperElement && !popperElement.contains(event.target)) {\r\n                setIsOpen(false);\r\n                clearTimeout(timeout);\r\n                window.removeEventListener('click', handleClickOutside);\r\n            }\r\n        };\r\n\r\n\r\n        if(isOpen) {\r\n            timeout = setTimeout(() => {\r\n                window.addEventListener('click', handleClickOutside);\r\n            }, 100);\r\n        } else {\r\n            window.removeEventListener('click', handleClickOutside);\r\n        }\r\n        return () => {\r\n            window.removeEventListener('click', handleClickOutside);\r\n            clearTimeout(timeout);\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [isOpen, popperElement])\r\n\r\n    // create element in html body\r\n    React.useEffect(() => {\r\n        const el = document.createElement('div');\r\n        el.id = id;\r\n        document.body.appendChild(el);\r\n        \r\n        setPopperElement(el);\r\n        return () => {\r\n            document.body.removeChild(el);\r\n        }\r\n    }, [])\r\n\r\n    \r\n    if(!DOM) {\r\n        return null\r\n    }\r\n\r\n    return(\r\n       ReactDOM.createPortal(\r\n            <AnimatePresence>\r\n                {isOpen && (\r\n                    <motion.div \r\n                        initial={{opacity: 0}}\r\n                        animate={{opacity: 1 }}\r\n                        exit={{opacity: 0}}\r\n                        className={`cnx_dropdown__menu ${isOpen ? 'cnx_dropdown__menu_open' : ''} ${className}`}\r\n                        ref={setPopperElement}\r\n                        style={{...styles.popper, minWidth: width}}\r\n                        {...attributes.popper}\r\n                        {...props}\r\n                    >\r\n                        {children}\r\n                    </motion.div>\r\n                )}\r\n            </AnimatePresence>, \r\n            DOM\r\n       )\r\n    )\r\n} \r\n\r\n\r\n\r\nconst Dropdown = ({children, className=''}) => {\r\n    return(\r\n        <div className={`cnx_dropdown ${className}`}>\r\n            <DropdownProvider>\r\n                {children}\r\n            </DropdownProvider>\r\n        </div>\r\n    )\r\n}\r\n\r\nDropdown.Item = DropdownItem;\r\nDropdown.Toggle = DropdownToggle;\r\nDropdown.Menu = DropdownMenu;\r\n\r\nexport default Dropdown;\r\n\r\n\r\n// type\r\n\r\nDropdownProvider.propTypes = {\r\n    children: PropTypes.node.isRequired\r\n}\r\n\r\nDropdownItem.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    onClick: PropTypes.func,\r\n    disabled: PropTypes.bool,\r\n    className: PropTypes.string,\r\n}\r\n\r\nDropdownToggle.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    icon: PropTypes.bool,\r\n    className: PropTypes.string,\r\n}\r\n\r\n\r\nDropdownMenu.propTypes = {\r\n    children: PropTypes.node.isRequired || PropTypes.arrayOf(PropTypes.node).isRequired,\r\n    className: PropTypes.string,\r\n    placement: PropTypes.string,\r\n    offset: PropTypes.arrayOf(PropTypes.number),\r\n}\r\n\r\nDropdown.propTypes = {\r\n    className: PropTypes.string,\r\n    children: PropTypes.node.isRequired || PropTypes.arrayOf(PropTypes.node).isRequired,\r\n}","import * as React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Modal = ({ children, isOpen, className }) => {\r\n    const [isBrowser, setIsBrowser] = React.useState(false);\r\n    // generate random id for dropdown menu\r\n    const id = React.useMemo(() => Math.random().toString(36).substr(2, 9), []);\r\n    let DOM = document.getElementById(id);\r\n \r\n  \r\n    React.useEffect(() => {\r\n        setIsBrowser(true);\r\n        const el = document.createElement('div');\r\n        el.id = id;\r\n        document.body.appendChild(el);\r\n        return () => {\r\n            document.body.removeChild(el);\r\n        }\r\n    }, []);\r\n\r\n\r\n    // React.useEffect(() => {\r\n    //     if(isOpen){\r\n    //         document.body.classList.add('cnx_body-overflow-hidden')\r\n    //     }else{\r\n    //         document.body.classList.remove('cnx_body-overflow-hidden')\r\n    //     }\r\n    // }, [isOpen]) \r\n\r\n    if(!DOM) return;\r\n \r\n\r\n    const modalContent = isOpen ? (\r\n        <div className={`cnx_modal ${className}`}>\r\n            {children}\r\n        </div>\r\n    ) : null;\r\n\r\n    if (isBrowser) {\r\n        return ReactDOM.createPortal(\r\n            modalContent,\r\n            DOM\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n    \r\n\r\n}\r\n\r\n\r\nModal.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    isOpen: PropTypes.bool.isRequired,\r\n    className: PropTypes.string,\r\n}\r\n\r\n\r\nexport default Modal;","import React from \"react\";\r\nimport Button from \"./Button\";\r\n\r\nconst SubmitButton = ({onClick, isLoading, className, variant=\"primary\", children, title}) => {\r\n    let body = document.querySelector('#body');\r\n\r\n    const handleOnClick = (e) => {\r\n        e.stopPropagation();\r\n        onClick(e)\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if(isLoading){\r\n            body.style.cursor = 'progress';\r\n        }else{\r\n            body.style.cursor = 'default';\r\n        }\r\n    }, [isLoading])\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            {!isLoading ? (\r\n                <Button variant={variant} onClick={handleOnClick} className={className}>\r\n                    {children || title}\r\n                </Button>\r\n            ) : (\r\n                <div className=\"cursor-processing cnx__btn cnx__btn_sm cnx__btn_primary\">\r\n                    <div\r\n                        className=\"spinner-border text-white\"\r\n                        role=\"status\"\r\n                        style={{\r\n                            width: \"18px\",\r\n                            height: \"18px\",\r\n                        }}\r\n                    ></div>\r\n                    Processing...\r\n                </div>\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default SubmitButton;\r\n","import _ from \"lodash\";\r\nimport React from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport styled from 'styled-components';\r\nimport UploadFilesInLine from \"../../../file-upload/UploadFilesInLine\";\r\nimport Button from \"../../../global/Button\";\r\nimport Switch from \"../../../global/Switch\";\r\nimport { useReplyTaskCommentMutation } from \"../../../services/api/TaskCommentApiSlice\";\r\n\r\nconst AttachmentUpload = ({ comment, onReply, close }) => {\r\n    const [files, setFiles] = React.useState([]);\r\n    const [error, setError] = React.useState(null);\r\n    const [replyTaskComment, { isLoading }] = useReplyTaskCommentMutation();\r\n\r\n    const visibleToScreenRef = React.useRef(null);\r\n    // update on layout change\r\n    React.useLayoutEffect(() => {\r\n        if (visibleToScreenRef && visibleToScreenRef.current) {\r\n            visibleToScreenRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n        }\r\n    }, []);\r\n\r\n    // handle update\r\n    const onUpdate = async (e) => {\r\n\r\n        // if not select any file show error message\r\n        if(_.size(files) === 0){\r\n           setError(p => ({...p, fileError: \"Please select at least one file.\"}));\r\n           return;\r\n        }\r\n\r\n        // create form data\r\n        const formData = new FormData();\r\n        formData.append(\"reply_text\", \"\");\r\n        formData.append(\"task_id\", comment.task_id);\r\n        formData.append(\"parent_comment_id\", comment.id);\r\n        formData.append(\r\n            \"_token\",\r\n            document\r\n                .querySelector(\"meta[name='csrf-token']\")\r\n                .getAttribute(\"content\")\r\n        );\r\n\r\n        Array.from(files).forEach((file) => {\r\n            formData.append(\"file[]\", file);\r\n        });\r\n\r\n        // submit form\r\n        try {\r\n            const response = await replyTaskComment({ formData, commentId: comment.id });\r\n            if(response){\r\n                toast.success(\"Your files has been successfully uploaded.\");\r\n                onReply();\r\n                close();\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <div className=\"mt-3 pl-3 w-100\">\r\n            <div className=\"w-100\">\r\n                <React.Fragment>\r\n                    <div className=\"mt-3\">\r\n                        <h6>Attach Files:</h6>\r\n                        <UploadFilesInLine\r\n                            files={files}\r\n                            setFiles={setFiles}\r\n                            uploadInputClass=\"comment-file-upload\"\r\n                            fileWrapperClass=\"comment-uploaded-file\"\r\n                        />\r\n\r\n                        {error && error.fileError ? <ErrorText> {error.fileError} </ErrorText> :''}\r\n                    </div>\r\n                </React.Fragment>\r\n\r\n                <Switch>\r\n                    <Switch.Case condition={isLoading}>\r\n                        <div className=\"mt-3 d-flex align-items-center\">\r\n                            <Button\r\n                                className=\"mr-2\"\r\n                                isLoading={isLoading}\r\n                                loaderTitle=\"Processing..\"\r\n                            >\r\n                                Processing...\r\n                            </Button>\r\n                        </div>\r\n                    </Switch.Case>\r\n\r\n                    <Switch.Case condition={!isLoading}>\r\n                        <div className=\"mt-3 d-flex align-items-center\">\r\n                            <Button className=\"mr-2\" onClick={onUpdate}>\r\n                                Reply\r\n                            </Button>\r\n                            <Button variant=\"secondary\" onClick={close}>\r\n                                Close\r\n                            </Button>\r\n                        </div>\r\n                    </Switch.Case>\r\n                </Switch>\r\n            </div>\r\n\r\n            <div ref={visibleToScreenRef} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AttachmentUpload;\r\n\r\n\r\nconst ErrorText = styled.div`\r\n    color: red;\r\n`;\r\n","import { Menu } from \"@headlessui/react\";\r\nimport * as React from \"react\";\r\nimport FileUploader from \"../../../file-upload/FileUploader\";\r\nimport { useAuth } from \"../../../hooks/useAuth\";\r\nimport { timeCalculate } from \"../../../utils/timeCalculate\";\r\nimport { User } from \"../../../utils/user-details\";\r\n\r\nconst Comment = ({ comment, onDelete }) => {\r\n    const auth = useAuth();\r\n    const user = comment?.user ? new User(comment.user) : null;\r\n    const [showDeletedComment, setShowDeletedComment] = React.useState(false);\r\n\r\n    if (comment.is_deleted && !showDeletedComment) {\r\n        return (\r\n            <div className=\"sp1_comment_deleted_status w-100\">\r\n                This Comment has been deleted\r\n                {auth.getRoleId() === 1 ? (\r\n                    <button onClick={() => setShowDeletedComment(!showDeletedComment)}>\r\n                        <i className=\"fa-solid fa-eye-slash\" />\r\n                    </button>\r\n                ) : null}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const deletedClass = comment.is_deleted ? \"sp1_comment_deleted_status\" : \"\";\r\n    return (\r\n        <React.Fragment>\r\n            <div className={`w-100 d-flex align-items-center  ${deletedClass}`}>\r\n                <div className=\"mr-2\">\r\n                    <div className=\"rounded-circle\">\r\n                        <img\r\n                            src={user?.getAvatar()}\r\n                            alt={user?.getName()}\r\n                            width=\"32px\"\r\n                            height=\"32px\"\r\n                            className=\"rounded-circle\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"w-100 d-flex align-items-center justify-between\">\r\n                    <div className=\"sp1_comment\">\r\n                        <span className=\"sp1_comment_user--name\">\r\n                            {user?.getName()} ({user?.getDesignationName()})\r\n                        </span>\r\n                        <span\r\n                            className=\"sp1_comment_time\"\r\n                            style={{ color: \"#888\" }}\r\n                        >\r\n                            {timeCalculate(comment.last_updated_date)}\r\n                        </span>\r\n                    </div>\r\n\r\n                    {comment.is_deleted && auth.getRoleId() === 1 ? (\r\n                        <button className=\"ml-auto\" onClick={() => setShowDeletedComment(!showDeletedComment)}>\r\n                            <i className=\"fa-solid fa-eye\" />\r\n                        </button>\r\n                    ) : null}\r\n                </div>\r\n\r\n\r\n\r\n                {/* <Dropdown className=\"sp1_comment_extend_menu_dd\">\r\n                    <Dropdown.Toggle icon={false}>\r\n                        <i className=\"fa-solid fa-ellipsis\"></i>\r\n                    </Dropdown.Toggle>\r\n                    <Dropdown.Menu placement=\"bottom-end\" className=\"sp1_comment_extend_menu\">\r\n                        <Dropdown.Item>Edit</Dropdown.Item>\r\n                        <Dropdown.Item>Delete</Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                </Dropdown> */}\r\n                {comment.is_deleted || user.getId() !== auth.getId() ? null : (\r\n                    <Menu as=\"div\" className=\"sp1_comment_extend_menu\">\r\n                        <Menu.Button\r\n                            as=\"button\"\r\n                            className=\"sp1_comment_extend_menu-btn\"\r\n                        >\r\n                            <i className=\"fa-solid fa-ellipsis\"></i>\r\n                        </Menu.Button>\r\n                        <Menu.Items\r\n                            as=\"div\"\r\n                            placement=\"bottom-end\"\r\n                            className=\"sp1_comment_extend_menu__items\"\r\n                        >\r\n                            <Menu.Item\r\n                                as=\"div\"\r\n                                className=\"sp1_comment_extend_menu__item --disabled\"\r\n                            >\r\n                                Edit\r\n                            </Menu.Item>\r\n                            <Menu.Item\r\n                                as=\"div\"\r\n                                className=\"sp1_comment_extend_menu__item --delete\"\r\n                                onClick={(e) => onDelete(e, comment.id)}\r\n                            >\r\n                                Delete\r\n                            </Menu.Item>\r\n                        </Menu.Items>\r\n                    </Menu>\r\n                )}\r\n            </div>\r\n            {comment?.comment ? (\r\n                <div className=\"__box __reply_text w-100 my-1 text-dark border-rounded\">\r\n                    <div\r\n                        className=\"sp1_ck_content sp1_message--body\"\r\n                        style={{ overflow: \"hidden\" }}\r\n                        dangerouslySetInnerHTML={{ __html: comment?.comment }}\r\n                    />\r\n                </div>\r\n            ) : null}\r\n\r\n            <div className=\"comment_files mt-2\">\r\n                <FileUploader>\r\n                    {comment?.files_data?.map((file) => (\r\n                        <FileUploader.Preview\r\n                            key={file?.name}\r\n                            fileName={file?.name}\r\n                            downloadAble={true}\r\n                            deleteAble={false}\r\n                            downloadUrl={file?.url}\r\n                            previewUrl={file?.url}\r\n                            fileType={file?.icon}\r\n                            classname=\"comment_file\"\r\n                            ext=\"\"\r\n                        />\r\n                    ))}\r\n                </FileUploader>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\nexport default Comment;\r\n","import _ from \"lodash\";\r\nimport React from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport CKEditorComponent from \"../../../ckeditor\";\r\nimport FileUploader from \"../../../file-upload/FileUploader\";\r\nimport Button from \"../../../global/Button\";\r\nimport Switch from \"../../../global/Switch\";\r\nimport { useRemoveCommentPreviousUploadedFileMutation, useUpdateCommentMutation } from \"../../../services/api/TaskCommentApiSlice\";\r\n\r\nconst EditComment = ({ comment, updateComments, close }) => {\r\n    const [text, setText] = React.useState(comment.comment);\r\n    const [files, setFiles] = React.useState([]);\r\n    const [previousFiles, setPreviousFiles] = React.useState([\r\n        ..._.map(comment.files_data, (file) => ({ id: file.name, ...file })),\r\n    ]);\r\n\r\n    const [updateComment, { isLoading }] = useUpdateCommentMutation();\r\n    const [removeCommentPreviousUploadedFile, {isLoading: uploadingFileDeleting}] = useRemoveCommentPreviousUploadedFileMutation();\r\n\r\n    // const isLoading = false;\r\n\r\n    const handleEditor = (e, editor) => {\r\n        const data = editor.getData();\r\n        setText(data);\r\n    };\r\n\r\n    // handle previous uploaded file delete\r\n    const handlePreviousFileDeleted = (e, file) => {\r\n        console.log(\"deleted: \", file);\r\n        const data = {\r\n            task_id: comment.task_id,\r\n            comment_id: comment.id,\r\n            file_details: file\r\n        }\r\n        removeCommentPreviousUploadedFile(data)\r\n        .unwrap()\r\n        .then(res => {\r\n            console.log(res)\r\n        })\r\n        .catch(err => {console.log(err)})\r\n    };\r\n\r\n    // handle update\r\n    const onUpdate = (e) => {\r\n        const formData = new FormData();\r\n        formData.append(\"comment\", text);\r\n        formData.append(\"task_id\", comment.task_id);\r\n        formData.append(\"comment_id\", comment.id);\r\n        formData.append(\r\n            \"_token\",\r\n            document\r\n                .querySelector(\"meta[name='csrf-token']\")\r\n                .getAttribute(\"content\")\r\n        );\r\n        Array.from(files).forEach((file) => {\r\n            formData.append(\"file[]\", file);\r\n        });\r\n\r\n\r\n        updateComment({ data: formData, commentId: comment.id })\r\n            .unwrap()\r\n            .then((res) => {\r\n                toast.success(\"Successfully Updated!\");\r\n                updateComments(res.data);\r\n\r\n                close();\r\n            })\r\n            .catch((err) => console.log(err));\r\n    };\r\n\r\n    return (\r\n        <div className=\"mt-3 pl-3 w-100\">\r\n            <div className=\"w-100\">\r\n                <React.Fragment>\r\n                    <div className=\"ck-editor-holder\">\r\n                        <CKEditorComponent\r\n                            data={text}\r\n                            onChange={handleEditor}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"mt-3\">\r\n                        <h6>Attach Files:</h6>\r\n                        {/* <UploadFilesInLine\r\n                            onPreviousFileDelete={handlePreviousFileDeleted}\r\n                            previous={previousFiles}\r\n                            files={files}\r\n                            setFiles={setFiles}\r\n                            uploadInputClass=\"comment-file-upload\"\r\n                            fileWrapperClass=\"comment-uploaded-file\"\r\n                        /> */}\r\n\r\n                        <FileUploader files={files} setFiles={setFiles}>\r\n                            <FileUploader.Input />\r\n                            {comment?.files_data?.map((file) => (\r\n                                <FileUploader.Preview\r\n                                    id={file}\r\n                                    key={file?.name}\r\n                                    fileName={file?.name}\r\n                                    downloadAble={true}\r\n                                    deleteAble={true}\r\n                                    onRemove={handlePreviousFileDeleted}\r\n                                    downloadUrl={file?.url}\r\n                                    previewUrl={file?.url}\r\n                                    fileType={file?.icon}\r\n                                    ext=\"\"\r\n                                />\r\n                            ))}\r\n\r\n                            <FileUploader.SelectedFiles>\r\n                                {({previews, onDelete}) => (\r\n                                   _.map(previews, (preview, index) => (\r\n                                        <FileUploader.Preview\r\n                                            id={index}\r\n                                            key={index}\r\n                                            fileName={preview?.name}\r\n                                            downloadAble={true}\r\n                                            deleteAble={true}\r\n                                            onRemove={onDelete}\r\n                                            previewUrl={preview.preview}\r\n                                            fileType={preview.type}\r\n                                            ext={preview.ext}\r\n                                        />\r\n                                   ))\r\n                                )}\r\n                            </FileUploader.SelectedFiles>\r\n                        </FileUploader>\r\n                    </div>\r\n                </React.Fragment>\r\n\r\n                <Switch>\r\n                    <Switch.Case condition={isLoading}>\r\n                        <div className=\"mt-3 d-flex align-items-center\">\r\n                            <Button\r\n                                className=\"mr-2\"\r\n                                isLoading={isLoading}\r\n                                loaderTitle=\"Updating..\"\r\n                            >\r\n                                Processing...\r\n                            </Button>\r\n                        </div>\r\n                    </Switch.Case>\r\n\r\n                    <Switch.Case condition={!isLoading}>\r\n                        <div className=\"mt-3 d-flex align-items-center\">\r\n                            <Button className=\"mr-2\" onClick={onUpdate}>\r\n                                Update\r\n                            </Button>\r\n                            <Button variant=\"secondary\">Close</Button>\r\n                        </div>\r\n                    </Switch.Case>\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditComment;\r\n","import * as React from \"react\";\r\nimport EmojiPicker from \"emoji-picker-react\";\r\nimport Dropdown from \"../../components/Dropdown\";\r\nimport { User } from \"../../../utils/user-details\";\r\nimport Switch from \"../../../global/Switch\";\r\nimport EditComment from \"./EditComment\";\r\nimport ReplyComment from \"./ReplyComment\";\r\nimport AttachmentUpload from \"./AttachmentUpload\";\r\nimport { useAuth } from \"../../../hooks/useAuth\";\r\nimport _, { compact } from \"lodash\";\r\nimport AvatarGroup from \"../../../global/AvatarGroup\";\r\nimport {\r\n    useDeleteCommentMutation,\r\n    useGetTaskCommentRepliesQuery,\r\n} from \"../../../services/api/TaskCommentApiSlice\";\r\nimport Loader from \"../../../global/Loader\";\r\nimport { BsFillPlusCircleFill } from \"react-icons/bs\";\r\nimport Comment from \"./Comment\";\r\nimport ReplyCommentPreview from \"./ReplyCommentPreview\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst InnerComment = ({ comment, updateComments }) => {\r\n    const [showReplies, setShowReplies] = React.useState(false);\r\n    const [replyMode, setReplyMode] = React.useState(false);\r\n    const [activeEditMode, setActiveEditModal] = React.useState(false);\r\n    const [uploadAttachment, setUploadAttachment] = React.useState(false);\r\n    const [selectedEmoji, setSelectedEmoji] = React.useState(\"\");\r\n    const user = comment?.user ? new User(comment.user) : null;\r\n    const auth = useAuth();\r\n\r\n    const [isRepliesLoading, setIsRepliesLoading] = React.useState(false);\r\n\r\n    // api hook\r\n    // handle delete\r\n    const [deleteComment, { isLoading: isDeleting }] =\r\n        useDeleteCommentMutation();\r\n\r\n    const handleReplyButtonClick = (e) => {\r\n        e.preventDefault();\r\n        setReplyMode(true);\r\n        setActiveEditModal(false);\r\n        setUploadAttachment(false);\r\n    };\r\n\r\n    // handle edit\r\n    const handleEditButton = (e) => {\r\n        e.preventDefault();\r\n        setReplyMode(false);\r\n        setUploadAttachment(false);\r\n        setActiveEditModal(true);\r\n    };\r\n\r\n    const handleUploadAttachment = (e) => {\r\n        e.preventDefault();\r\n        setReplyMode(false);\r\n        setActiveEditModal(false);\r\n        setUploadAttachment(true);\r\n    };\r\n\r\n    // handle comment delete\r\n    // delete comment\r\n    const handleDeleteComment = (e, commentId) => {\r\n        e.preventDefault();\r\n\r\n        Swal.fire({\r\n            icon: \"warning\",\r\n            title: `Are you sure you want to delete this comment?`,\r\n            html: \"This action cannot be undone. Deleting this comment will permanently remove it from the discussion.\",\r\n            showDenyButton: true,\r\n            denyButtonText: \"Cancel\",\r\n            // denyButtonColor: '#ffffff',\r\n\r\n            showConfirmButton: true,\r\n            confirmButtonText: \"Yes, Delete It!\",\r\n            confirmButtonColor: \"#E73819\",\r\n            customClass: {\r\n                confirmButton: \"delete-confirm-button\",\r\n                denyButton: \"delete-deny-button\",\r\n            },\r\n            buttonsStyling: false,\r\n        }).then((res) => {\r\n            if (res.isConfirmed) {\r\n                deleteCommentData();\r\n            }\r\n        });\r\n\r\n        // delete\r\n        const deleteCommentData = async () => {\r\n            const response = await deleteComment(commentId).unwrap();\r\n            if (response) {\r\n                toast.success(\"Comment Deleted Successfully\");\r\n            }\r\n        };\r\n    };\r\n\r\n    // emoji selection control\r\n    const handleEmojiSelect = (emojiData, event) => {\r\n        setSelectedEmoji(emojiData.unified);\r\n    };\r\n\r\n    // permission\r\n    const CAN_EDIT_COMMENT = auth.getId() === user.getId();\r\n\r\n    // console.log({ comment });\r\n\r\n    return (\r\n        <div className=\"sp1_task_comment_send_box sp1_task_comment_replied pl-2 pr-3 pb-2\">\r\n            <div\r\n                className=\"__send-box flex-column align-items-start\"\r\n                style={{ maxWidth: \"100%\" }}\r\n            >\r\n                {/* show comment details */}\r\n                <Comment comment={comment} onDelete={handleDeleteComment} />\r\n\r\n                <Switch>\r\n                    <Switch.Case\r\n                        condition={\r\n                            !comment.is_deleted || auth.getRoleId() === 1\r\n                        }\r\n                    >\r\n                        <div className=\"sp1_task_comment_actions\">\r\n                            {/* <Dropdown>\r\n                                <Dropdown.Toggle icon={false}>\r\n                                    <i className=\"fa-regular fa-face-smile\"></i>\r\n                                </Dropdown.Toggle>\r\n                                <Dropdown.Menu>\r\n                                    <EmojiPicker lazyLoadEmojis={true} />\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n\r\n                            <span>•</span> */}\r\n                            <Switch.Case condition={!comment.is_deleted}>\r\n                                <a href=\"#\" onClick={handleReplyButtonClick}>\r\n                                    Reply\r\n                                </a>\r\n                                <span>•</span>\r\n                                <a href=\"#\" onClick={handleUploadAttachment}>\r\n                                    <i className=\"fa-solid fa-paperclip\"></i>\r\n                                </a>\r\n                            </Switch.Case>\r\n\r\n                            {/* <Switch>\r\n                                <Switch.Case condition={CAN_EDIT_COMMENT}>\r\n                                    <a href=\"#\" onClick={handleEditButton}>\r\n                                        Edit\r\n                                    </a>\r\n                                    <span>•</span>\r\n                                </Switch.Case>\r\n                            </Switch>\r\n                            */}\r\n\r\n                            {/* <a href=\"#\">Delete</a>\r\n                <span>•</span> */}\r\n\r\n                            <Switch>\r\n                                <Switch.Case\r\n                                    condition={comment?.total_replies > 0}\r\n                                >\r\n                                    <div\r\n                                        className=\"replies_count\"\r\n                                        onClick={() =>\r\n                                            setShowReplies(!showReplies)\r\n                                        }\r\n                                    >\r\n                                        <AvatarGroup\r\n                                            users={_.map(\r\n                                                comment?.replies_users,\r\n                                                (user) => ({\r\n                                                    ...user,\r\n                                                    src: user.image_url,\r\n                                                })\r\n                                            )}\r\n                                        />\r\n                                        <div className=\"ml-1 mr-2\">\r\n                                            {comment.total_replies} replies\r\n                                        </div>\r\n                                        {isRepliesLoading ? (\r\n                                            <Loader title=\"\" />\r\n                                        ) : null}\r\n                                    </div>\r\n                                    {/* </div> */}\r\n                                </Switch.Case>\r\n                            </Switch>\r\n                        </div>\r\n                    </Switch.Case>\r\n                </Switch>\r\n\r\n                {/* reply box */}\r\n\r\n                {showReplies ? (\r\n                    <>\r\n                        <ReplyCommentPreview\r\n                            comment={comment}\r\n                            onReply={handleReplyButtonClick}\r\n                            showReplyButton={!replyMode}\r\n                            onDelete={handleDeleteComment}\r\n                            cb={(loading) => setIsRepliesLoading(loading)}\r\n                        />\r\n                    </>\r\n                ) : null}\r\n\r\n                <Switch>\r\n                    <Switch.Case condition={activeEditMode}>\r\n                        <EditComment\r\n                            comment={comment}\r\n                            updateComments={updateComments}\r\n                            close={() => setActiveEditModal(false)}\r\n                        />\r\n                    </Switch.Case>\r\n\r\n                    <Switch.Case condition={replyMode}>\r\n                        <ReplyComment\r\n                            comment={comment}\r\n                            onReply={() => {\r\n                                setShowReplies(true);\r\n                            }}\r\n                            close={() => setReplyMode(false)}\r\n                        />\r\n                    </Switch.Case>\r\n\r\n                    <Switch.Case condition={uploadAttachment}>\r\n                        <AttachmentUpload\r\n                            comment={comment}\r\n                            onReply={() => setShowReplies(true)}\r\n                            close={() => setUploadAttachment(false)}\r\n                        />\r\n                    </Switch.Case>\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InnerComment;\r\n","import React from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport styled from 'styled-components';\r\nimport CKEditorComponent from \"../../../ckeditor\";\r\nimport UploadFilesInLine from \"../../../file-upload/UploadFilesInLine\";\r\nimport Button from \"../../../global/Button\";\r\nimport Switch from \"../../../global/Switch\";\r\nimport { useReplyTaskCommentMutation } from \"../../../services/api/TaskCommentApiSlice\";\r\n\r\nconst ReplyComment = ({ comment, close, onReply }) => {\r\n    const [text, setText] = React.useState(\"\");\r\n    const [files, setFiles] = React.useState([]);\r\n    const [error, setError] = React.useState(null);\r\n\r\n    // comment reply api hook from redux toolkit\r\n    const [replyTaskComment, { isLoading }] = useReplyTaskCommentMutation();\r\n\r\n    const visibleToScreenRef = React.useRef(null); // reference element\r\n    // update on layout change\r\n    React.useLayoutEffect(() => {\r\n        if (visibleToScreenRef && visibleToScreenRef.current) {\r\n            // scroll into view on visible\r\n            visibleToScreenRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n        }\r\n    }, []);\r\n\r\n    // handle ck editor text change\r\n    const handleEditor = (e, editor) => {\r\n        const data = editor.getData(); // get editor text\r\n        setText(data);\r\n    };\r\n\r\n    // handle update\r\n    const onReplied = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // if text not provide show error message\r\n        if(!text){\r\n            setError(s => ({...s, comment: \"Please provide a comment before submitting.\"}));\r\n            return;\r\n        }\r\n\r\n        // make form\r\n        const formData = new FormData();\r\n        formData.append(\"reply_text\", text);\r\n        formData.append(\"task_id\", comment.task_id);\r\n        formData.append(\"parent_comment_id\", comment.id);\r\n        formData.append(\r\n            \"_token\",\r\n            document\r\n                .querySelector(\"meta[name='csrf-token']\")\r\n                .getAttribute(\"content\")\r\n        );\r\n        Array.from(files).forEach((file) => {\r\n            formData.append(\"file[]\", file);\r\n        });\r\n\r\n        // show formData\r\n        // for(const [key, value] of formData.entries()){\r\n        //     console.log(key, ': ', value)\r\n        // }\r\n\r\n\r\n        // submit form\r\n        await replyTaskComment({ formData, commentId: comment.id }).then(\r\n            (res) => {\r\n                toast.success(\"Your reply has been successfully submitted.\");\r\n                onReply();\r\n                close();\r\n            }\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"mt-3 pl-3 w-100\">\r\n            <div className=\"w-100\">\r\n                <React.Fragment>\r\n                    <h6>Reply: <sup >(<span className=\"text-danger\"> Require </span>)</sup></h6>\r\n                    <div className=\"ck-editor-holder\">\r\n                        <CKEditorComponent\r\n                            data={text}\r\n                            onChange={handleEditor}\r\n                        />\r\n                    </div>\r\n                    {error?.comment ? <ErrorText>{error?.comment}</ErrorText> : null }\r\n\r\n                    <div className=\"mt-3\">\r\n                        <h6>Attach Files:</h6>\r\n                        <UploadFilesInLine\r\n                            files={files}\r\n                            setFiles={setFiles}\r\n                            uploadInputClass=\"comment-file-upload\"\r\n                            fileWrapperClass=\"comment-uploaded-file\"\r\n                        />\r\n                    </div>\r\n                </React.Fragment>\r\n\r\n                <Switch>\r\n                    <Switch.Case condition={isLoading}>\r\n                        <div className=\"mt-3 d-flex align-items-center\">\r\n                            <Button\r\n                                className=\"mr-2\"\r\n                                isLoading={isLoading}\r\n                                loaderTitle=\"Processing..\"\r\n                            >\r\n                                Processing...\r\n                            </Button>\r\n                        </div>\r\n                    </Switch.Case>\r\n\r\n                    <Switch.Case condition={!isLoading}>\r\n                        <div className=\"mt-3 d-flex align-items-center\">\r\n                            <Button className=\"mr-2\" onClick={onReplied}>\r\n                                Reply\r\n                            </Button>\r\n                            <Button onClick={close} variant=\"secondary\">\r\n                                Close\r\n                            </Button>\r\n                        </div>\r\n                    </Switch.Case>\r\n                </Switch>\r\n            </div>\r\n\r\n            <div ref={visibleToScreenRef} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ReplyComment;\r\n\r\n\r\nconst ErrorText = styled.div`\r\n    color: red;\r\n    padding: 10px 0;\r\n`;\r\n","import * as React from \"react\";\r\nimport _ from \"lodash\";\r\nimport { useGetTaskCommentRepliesQuery } from \"../../../services/api/TaskCommentApiSlice\";\r\nimport { BsFillPlusCircleFill } from \"react-icons/bs\";\r\nimport Comment from \"./Comment\";\r\n\r\nconst ReplyCommentPreview = ({\r\n    comment,\r\n    cb,\r\n    onReply,\r\n    showReplyButton,\r\n    onDelete,\r\n}) => {\r\n    const { data, isLoading } = useGetTaskCommentRepliesQuery(comment.id, {\r\n        refetchOnMountOrArgChange: true,\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        cb(isLoading);\r\n    }, [isLoading]);\r\n\r\n    return (\r\n        <div className=\"sp1_task_replies_comment_list ml-3 w-100\">\r\n            {_.map(data, (r, i) => (\r\n                <div\r\n                    key={i}\r\n                    className=\"pl-3 pr-4 border-left border__left py-3 w-100\"\r\n                >\r\n                    <Comment comment={r} onDelete={onDelete} />\r\n                </div>\r\n            ))}\r\n\r\n            {!comment.is_deleted && !isLoading && showReplyButton ? (\r\n                <div className=\"border-left border__left reply_button pl-3\">\r\n                    <button onClick={onReply}>\r\n                        {/* <BsFillPlusCircleFill className=\"fs-16 icon\" /> */}\r\n                        <span>+ Reply</span>\r\n                    </button>\r\n                </div>\r\n            ) : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ReplyCommentPreview;\r\n","import axios from 'axios';\r\nimport * as React from 'react';\r\nimport { CompareDate } from '../../utils/dateController';\r\n\r\nconst d = new CompareDate();\r\nexport const useDailySubmission = () => {\r\n    const [isEnable, setIsEnable] = React.useState(false);\r\n\r\n    React.useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                // Fetch server time\r\n                let response = await axios.get('/server-time-status');\r\n                const date = response.data.data;\r\n\r\n                // Get the current day abbreviation (e.g., 'Sat', 'Sun', 'Mon', etc.)\r\n                const dayAbbreviation = d.dayjs(date).format('ddd');\r\n\r\n                // Define the cutoff times\r\n                const saturdayCutoffTime = d.dayjs(date).set('hour', 12).set('minute', 45);\r\n                const otherDaysCutoffTime = d.dayjs(date).set('hour', 16).set('minute', 45);\r\n\r\n                // Get the current time\r\n                const currentTime = d.dayjs(date);\r\n\r\n                // Check if it's Saturday or not\r\n                if (dayAbbreviation === 'Sat') {\r\n                    // Check if the current time is greater than 12:30 PM on Saturday\r\n                    if (currentTime.isSameOrAfter(saturdayCutoffTime)) {\r\n                       setIsEnable(true);\r\n                    }else{\r\n                        setIsEnable(false);\r\n                    }\r\n                } else {\r\n                    // Check if the current time is greater than 4:30 PM on other days\r\n                    if (currentTime.isSameOrAfter(otherDaysCutoffTime)) {\r\n                        setIsEnable(true);\r\n                    }else setIsEnable(false);\r\n                }\r\n\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })()\r\n    }, [])\r\n\r\n    return {isEnable}\r\n}\r\n","import dayjs from \"dayjs\";\r\n\r\nexport const timeCalculate = (date) => {\r\n    const providedDate = dayjs(date);\r\n    const currentDate = dayjs();\r\n    const diff = currentDate.diff(providedDate, 'minute');\r\n    if (diff < 1) {\r\n        return 'Just now';\r\n    } else if (diff < 60) {\r\n        return `${diff} minute${diff > 1 ? 's' : ''} ago`;\r\n    } else if (diff < 1440) { // Less than 24 hours\r\n        const hours = Math.floor(diff / 60);\r\n        return `${hours} hour${hours > 1 ? 's' : ''} ago`;\r\n    } else if (diff < 10080) { // Less than 7 days\r\n        const days = Math.floor(diff / 1440);\r\n        return `${days} day${days > 1 ? 's' : ''} ago`\r\n    } else {\r\n        return providedDate.format('MMM DD, YYYY [at] h:mm A');\r\n    }\r\n}\r\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".sp1_checkbox--label.disable{color:#aaa}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/react/UI/form/checkbox.css\"],\"names\":[],\"mappings\":\"AAAA,6BACI,UACJ\",\"sourcesContent\":[\".sp1_checkbox--label.disable {\\r\\n    color: #aaa;\\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".fpsqco3G\\\\+Hf7gF1vYUOU9Q\\\\=\\\\={flex-direction:row-reverse;margin:auto;width:-moz-fit-content;width:fit-content}.rpJ2L0Uklhu0QGtrM7rb3Q\\\\=\\\\=,.fpsqco3G\\\\+Hf7gF1vYUOU9Q\\\\=\\\\={display:flex;padding:0}.rpJ2L0Uklhu0QGtrM7rb3Q\\\\=\\\\={align-items:center;background-color:#ededed;border:2px solid #f4f4f4;border-radius:100%;box-shadow:0 0 2px rgba(0,0,0,.1);height:24px;justify-content:center;margin-left:-10px;width:24px}.N71c75OLkFHuPvS5HeIkpQ\\\\=\\\\={border-radius:100%;height:100%;object-fit:fill;-o-object-fit:fill;width:100%}.\\\\+F5c8j7QS2thczRvvUXBlw\\\\=\\\\={background-color:#276fec;color:#fff;text-decoration:none!important}.\\\\+F5c8j7QS2thczRvvUXBlw\\\\=\\\\= span{font-size:12px;text-decoration:none!important}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/react/global/AvatarGroup.module.css\"],\"names\":[],\"mappings\":\"AAAA,6BAKI,0BAA2B,CAF3B,WAAY,CAFZ,sBAAkB,CAAlB,iBAKJ,CAEA,yDANI,YAAa,CAEb,SAgBJ,CAZA,4BAQI,kBAAmB,CAFnB,wBAAyB,CAFzB,wBAAqC,CADrC,kBAAmB,CAQnB,iCAAoC,CATpC,WAAY,CAOZ,sBAAuB,CACvB,iBAAkB,CATlB,UAWJ,CAGA,4BAGI,kBAAmB,CADnB,WAAY,CAEZ,eAAgB,CAChB,kBAAmB,CAJnB,UAKJ,CAGA,6BACI,wBAAmC,CACnC,UAAW,CACX,8BACJ,CAEA,kCACI,cAAe,CACf,8BACJ\",\"sourcesContent\":[\".avatar_group{\\r\\n    width: fit-content;\\r\\n    display: flex;\\r\\n    margin: auto;\\r\\n    padding: 0;\\r\\n    flex-direction: row-reverse;\\r\\n}\\r\\n\\r\\n.avatar{\\r\\n    width: 24px;\\r\\n    height: 24px;\\r\\n    border-radius: 100%;\\r\\n    border: 2px solid rgb(244, 244, 244) ;\\r\\n    padding: 0;\\r\\n    background-color: #ededed;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    margin-left: -10px;\\r\\n    box-shadow: 0 0 2px rgb(0 0 0 / 10%);\\r\\n}\\r\\n\\r\\n\\r\\n.avatar_image{\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    border-radius: 100%;\\r\\n    object-fit: fill;\\r\\n    -o-object-fit: fill;\\r\\n}\\r\\n\\r\\n\\r\\n.empty_avatar{\\r\\n    background-color: rgb(39, 111, 236);\\r\\n    color: #fff;\\r\\n    text-decoration:none !important;\\r\\n}\\r\\n\\r\\n.empty_avatar span{\\r\\n    font-size: 12px;\\r\\n    text-decoration:none !important;\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"avatar_group\": \"fpsqco3G+Hf7gF1vYUOU9Q==\",\n\t\"avatar\": \"rpJ2L0Uklhu0QGtrM7rb3Q==\",\n\t\"avatar_image\": \"N71c75OLkFHuPvS5HeIkpQ==\",\n\t\"empty_avatar\": \"+F5c8j7QS2thczRvvUXBlw==\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"._8xXZnlhj3eHMkUUObnMmZw\\\\=\\\\={margin:2rem auto;max-width:90%;min-height:10rem;padding:1rem}._7n-CpR1Fy19zjUlU6WsThQ\\\\=\\\\={margin:0 auto}.SxO-JfljZkxUGDLmlQviZg\\\\=\\\\= th{background-color:#222;color:#fff;font-weight:700;padding:15px 25px;text-align:center}.YQAkXuuhsOlsr6ZIt378wQ\\\\=\\\\= td{padding:15px;text-align:center}.A5JA7hH72pS6vSurU7mqwQ\\\\=\\\\={padding:2rem 15px 15px}.A5JA7hH72pS6vSurU7mqwQ\\\\=\\\\=,.sHn0ikpJ-siiyePWSQMFFA\\\\=\\\\={background-color:#fff}.sHn0ikpJ-siiyePWSQMFFA\\\\=\\\\={border-radius:5px;margin-bottom:16px}.YRqnDsOCvlyUNmnxtR\\\\+\\\\+ug\\\\=\\\\=,.sHn0ikpJ-siiyePWSQMFFA\\\\=\\\\={position:relative}.YRqnDsOCvlyUNmnxtR\\\\+\\\\+ug\\\\=\\\\={background-color:transparent;border:1px solid rgba(0,0,0,.37);border-radius:4px;color:rgba(0,0,0,.85);display:block;font-size:16px;height:40px;margin:0 auto;outline:none!important;padding:6px 4px 4px 14px;transition:all .2s ease-in-out;width:100%}.P-INSzqztmJ-mpd7zZK14w\\\\=\\\\={background:#fff;color:rgba(0,0,0,.519);cursor:text;display:inline-block;font-size:14px;font-weight:700;height:14px;left:12px;line-height:14px;margin:0 auto;padding:0 4px;position:absolute;text-align:left;top:30%;transition:all .15s ease-in-out}.YRqnDsOCvlyUNmnxtR\\\\+\\\\+ug\\\\=\\\\=:focus,.YRqnDsOCvlyUNmnxtR\\\\+\\\\+ug\\\\=\\\\=:hover{border:1px solid #000}.YRqnDsOCvlyUNmnxtR\\\\+\\\\+ug\\\\=\\\\=:focus+.P-INSzqztmJ-mpd7zZK14w\\\\=\\\\=,.YRqnDsOCvlyUNmnxtR\\\\+\\\\+ug\\\\=\\\\=:valid+.P-INSzqztmJ-mpd7zZK14w\\\\=\\\\={color:#000;font-weight:700;top:-6px}.sU7OfO8z\\\\+2G5bBnOIGPJmA\\\\=\\\\={background-color:inherit;color:#e32b2b;padding:0 0 0 3px}.sU7OfO8z\\\\+2G5bBnOIGPJmA\\\\=\\\\=:after{content:\\\"*\\\"}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/react/single-independent-task/section/daily-submission/styles/DailySubmission.module.css\"],\"names\":[],\"mappings\":\"AAIA,6BAGE,gBAAiB,CADjB,aAAc,CAEd,gBAAiB,CAHjB,YAIF,CAEA,6BACE,aACF,CAEA,+BACE,qBAAiC,CAGjC,UAAY,CACZ,eAAiB,CAHjB,iBAAkB,CAClB,iBAGF,CAMA,+BAEE,YAAa,CADb,iBAEF,CAGA,4BAGE,sBAEF,CAGA,wDAJE,qBASF,CALA,4BAIE,iBAAkB,CAHlB,kBAIF,CACA,0DAJE,iBAkBF,CAdA,8BAME,4BAA6B,CAF7B,gCAAiC,CACjC,iBAAkB,CAOlB,qBAAuB,CAVvB,aAAc,CASd,cAAe,CAFf,WAAY,CAFZ,aAAgB,CAGhB,sBAAwB,CAFxB,wBAAyB,CAKzB,8BAA+B,CAV/B,UAWF,CAEA,4BAWE,eAAiB,CACjB,sBAA2B,CAE3B,WAAY,CATZ,oBAAqB,CAIrB,cAAe,CACf,eAAiB,CAHjB,WAAY,CAJZ,SAAU,CAKV,gBAAiB,CAKjB,aAAgB,CAPhB,aAAc,CALd,iBAAkB,CAGlB,eAAgB,CAFhB,OAAQ,CAaR,+BACF,CACA,wEAA6B,qBAAwB,CAErD,gIAEE,UAAW,CACX,eAAiB,CAFjB,QAGF,CACA,6BACI,wBAAyB,CACzB,aAAc,CAEd,iBACJ,CACA,mCACI,WACJ\",\"sourcesContent\":[\".bdr{\\r\\n  /* border: solid; */\\r\\n}\\r\\n\\r\\n.container{\\r\\n  padding: 1rem;\\r\\n  max-width: 90%;\\r\\n  margin: 2rem auto;\\r\\n  min-height: 10rem;\\r\\n}\\r\\n\\r\\n.myTable{\\r\\n  margin: 0 auto;\\r\\n}\\r\\n\\r\\n.headerRow th{\\r\\n  background-color: rgb(34, 34, 34);\\r\\n  padding: 15px 25px;\\r\\n  text-align: center;\\r\\n  color: white;\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\n.bodyRow tr{\\r\\n  /* border-radius: 5px; */\\r\\n}\\r\\n\\r\\n.bodyRow td{\\r\\n  text-align: center;\\r\\n  padding: 15px;\\r\\n}\\r\\n\\r\\n\\r\\n.form{\\r\\n  /* border: solid; */\\r\\n  padding: 15px;\\r\\n  padding-top: 2rem;\\r\\n  background-color: white;\\r\\n}\\r\\n\\r\\n/* floating .label input field */\\r\\n.wrapper {\\r\\n  margin-bottom: 16px;\\r\\n  position: relative;\\r\\n  background-color: white;\\r\\n  border-radius: 5px;\\r\\n}\\r\\n.input {\\r\\n  position: relative;\\r\\n  display: block;\\r\\n  width: 100%;\\r\\n  border: 1px solid rgba(0,0,0,.37);\\r\\n  border-radius: 4px;\\r\\n  background-color: transparent;\\r\\n  margin: 0px auto;\\r\\n  padding: 6px 4px 4px 14px;\\r\\n  height: 40px;\\r\\n  outline: none !important;\\r\\n  font-size: 16px;\\r\\n  color: rgba(0,0,0,0.85);\\r\\n  transition: all .2s ease-in-out;\\r\\n}\\r\\n\\r\\n.label {\\r\\n  position: absolute;\\r\\n  top: 30%; \\r\\n  left: 12px;\\r\\n  text-align: left;\\r\\n  display: inline-block;\\r\\n  padding: 0 4px;\\r\\n  height: 14px;\\r\\n  line-height: 14px;\\r\\n  font-size: 14px;\\r\\n  font-weight: bold;\\r\\n  background: white;\\r\\n  color: rgba(0, 0, 0, 0.519);\\r\\n  margin: 0px auto;\\r\\n  cursor: text;\\r\\n  transition: all .15s ease-in-out;\\r\\n}\\r\\n.input:hover, .input:focus { border: 1px solid #000; }\\r\\n\\r\\n.input:valid + .label, .input:focus + .label { \\r\\n  top: -6px;\\r\\n  color: #000;\\r\\n  font-weight: bold;\\r\\n}\\r\\n.formAsterisk {\\r\\n    background-color: inherit;\\r\\n    color: #e32b2b;\\r\\n    padding: 0;\\r\\n    padding-left: 3px;\\r\\n}\\r\\n.formAsterisk:after {\\r\\n    content: \\\"*\\\";\\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"container\": \"_8xXZnlhj3eHMkUUObnMmZw==\",\n\t\"myTable\": \"_7n-CpR1Fy19zjUlU6WsThQ==\",\n\t\"headerRow\": \"SxO-JfljZkxUGDLmlQviZg==\",\n\t\"bodyRow\": \"YQAkXuuhsOlsr6ZIt378wQ==\",\n\t\"form\": \"A5JA7hH72pS6vSurU7mqwQ==\",\n\t\"wrapper\": \"sHn0ikpJ-siiyePWSQMFFA==\",\n\t\"input\": \"YRqnDsOCvlyUNmnxtR++ug==\",\n\t\"label\": \"P-INSzqztmJ-mpd7zZK14w==\",\n\t\"formAsterisk\": \"sU7OfO8z+2G5bBnOIGPJmA==\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".sp1_tlr_tbl_wrapper{overflow-y:auto}.sp1_tlr_table{width:100%}.sp1_tlr_th{border-bottom:2px solid #dbe4ff;color:#373737;height:36px;padding:3px 10px;position:sticky;text-align:center;top:0;z-index:10}.sp1_tlr_td{border-bottom:1px solid #dbe4ff;max-width:350px;min-width:150px;padding:10px;text-align:center}.sp1_tlr_tbody>.sp1_tlr_tr:hover .sp1_tlr_td{background-color:rgba(233,235,240,.349)}.sp1_tlr_tr .sp1_tlr_td_marged{background-color:rgba(243,244,248,.349);border-inline:1px solid #dbe4ff}.sp1_tlr_tr .sp1_tlr_td_marged:first-child,.sp1_tlr_tr .sp1_tlr_td_marged:nth-child(2){border-left-color:transparent}.sp1_tlr_td_border{border-bottom:2px solid #dbe4ff}.sp1_drag_th.__dragging{background-color:hsla(222,6%,69%,.222)}.sp1_drag_th.__drop-area{background-color:rgba(34,45,71,.349)}.from_body{padding:2rem 1rem 3rem}.openRow_bg{background-color:hsla(218,7%,78%,.32)!important;border:none!important;overflow:visible}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/react/single-independent-task/section/daily-submission/styles/DataTable.css\"],\"names\":[],\"mappings\":\"AAAA,qBACI,eACJ,CAEA,eACI,UACJ,CAEA,YAII,+BAA2C,CAK3C,aAAsB,CARtB,WAAY,CACZ,gBAAiB,CAGjB,eAAgB,CAGhB,iBAAkB,CADlB,KAAM,CADN,UAIJ,CAEA,YAII,+BAA2C,CAF3C,eAAgB,CAChB,eAAgB,CAFhB,YAAa,CAIb,iBACJ,CAEA,6CACI,uCACJ,CAEA,+BACI,uCAA2C,CAC3C,+BACJ,CAEA,uFAEI,6BACJ,CAEA,mBACI,+BACJ,CAQA,wBACI,sCACJ,CAEA,yBACI,oCACJ,CAEA,WACI,sBACJ,CAGA,YACI,+CAAqD,CACrD,qBAAuB,CACvB,gBACJ\",\"sourcesContent\":[\".sp1_tlr_tbl_wrapper{\\r\\n    overflow-y: auto;\\r\\n}\\r\\n\\r\\n.sp1_tlr_table{\\r\\n    width: 100%; \\r\\n}\\r\\n\\r\\n.sp1_tlr_th {\\r\\n    height: 36px;\\r\\n    padding: 3px 10px;\\r\\n    /* background-color: rgb(55, 55, 55); */\\r\\n    border-bottom: 2px solid rgb(219, 228, 255);\\r\\n    position: sticky;\\r\\n    z-index: 10;\\r\\n    top: 0;\\r\\n    text-align: center;\\r\\n    color: rgb(55, 55, 55);\\r\\n}\\r\\n\\r\\n.sp1_tlr_td{\\r\\n    padding: 10px;\\r\\n    max-width: 350px;\\r\\n    min-width: 150px;\\r\\n    border-bottom: 1px solid rgb(219, 228, 255);\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.sp1_tlr_tbody > .sp1_tlr_tr:hover .sp1_tlr_td{\\r\\n    background-color:rgba(233, 235, 240, 0.349);\\r\\n}\\r\\n\\r\\n.sp1_tlr_tr .sp1_tlr_td_marged{\\r\\n    background-color:rgba(243, 244, 248, 0.349);\\r\\n    border-inline: 1px solid rgb(219, 228, 255);\\r\\n}\\r\\n\\r\\n.sp1_tlr_tr .sp1_tlr_td_marged:first-child,\\r\\n.sp1_tlr_tr .sp1_tlr_td_marged:nth-child(2){\\r\\n    border-left-color: transparent;\\r\\n}\\r\\n\\r\\n.sp1_tlr_td_border{\\r\\n    border-bottom: 2px solid rgb(219, 228, 255);\\r\\n}\\r\\n\\r\\n/* .sp1_tlr_tbody > .sp1_tlr_tr:hover .sp1_tlr_td_hover-disable{\\r\\n   background-color: #fff !important; \\r\\n} */\\r\\n\\r\\n\\r\\n\\r\\n.sp1_drag_th.__dragging {\\r\\n    background-color: rgba(170, 173, 180, 0.222);\\r\\n}\\r\\n\\r\\n.sp1_drag_th.__drop-area {\\r\\n    background-color: rgba(34, 45, 71, 0.349);\\r\\n}\\r\\n\\r\\n.from_body{\\r\\n    padding: 2rem 1rem 3rem;\\r\\n}\\r\\n\\r\\n\\r\\n.openRow_bg{\\r\\n    background-color:rgba(194, 197, 202, 0.32) !important;\\r\\n    border: none !important;\\r\\n    overflow: visible;\\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".QWT8SKIOKp3nCIlWnmqvlA\\\\=\\\\={box-shadow:0 10px 16px rgba(0,0,0,.2);font-family:Inter;font-weight:400;left:50%;max-width:800px;position:absolute;top:50%;transform:translate(-50%,-50%);width:100%}._7q1rGYYnwZMgY33fyvn5Rw\\\\=\\\\={background-color:#f3f3f3}._7q1rGYYnwZMgY33fyvn5Rw\\\\=\\\\= h6{font-weight:600;margin:0}.xFa21Dq-VWzqARlTwQw6ug\\\\=\\\\=:not(:last-child){border-bottom:1px dashed rgba(0,0,0,.1)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/react/single-independent-task/section/sub-task/task-edit-form.module.css\"],\"names\":[],\"mappings\":\"AAAA,4BASI,qCAAwC,CAFxC,iBAAkB,CAClB,eAAgB,CAHhB,QAAS,CAJT,eAAgB,CAEhB,iBAAkB,CAClB,OAAQ,CAER,8BAAgC,CAJhC,UAQJ,CAGA,6BACI,wBACJ,CAEA,gCAEI,eAAgB,CADhB,QAEJ,CAEA,6CACI,uCACJ\",\"sourcesContent\":[\".form_card{\\r\\n    max-width: 800px;\\r\\n    width: 100%;\\r\\n    position: absolute;\\r\\n    top: 50%;\\r\\n    left: 50%;\\r\\n    transform: translate(-50%, -50%);\\r\\n    font-family: Inter;\\r\\n    font-weight: 400;\\r\\n    box-shadow: 0 10px 16px rgb(0 0 0 / 20%);\\r\\n}\\r\\n\\r\\n\\r\\n.form_card_head{\\r\\n    background-color: rgb(243, 243, 243);\\r\\n}\\r\\n\\r\\n.form_card_head h6{\\r\\n    margin: 0;\\r\\n    font-weight: 600;\\r\\n}\\r\\n\\r\\n.list_border:not(:last-child){\\r\\n    border-bottom: 1px dashed rgb(0 0 0 / 10%);\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"form_card\": \"QWT8SKIOKp3nCIlWnmqvlA==\",\n\t\"form_card_head\": \"_7q1rGYYnwZMgY33fyvn5Rw==\",\n\t\"list_border\": \"xFa21Dq-VWzqARlTwQw6ug==\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["_ref","fullScreenView","width","toggleRef","isOpen","children","_jsx","Modal","className","style","padding","height","maxHeight","paddingTop","margin","handleContainer","_ref$toggleRef","close","_ref$comments","task","comments","taskId","onCommentPost","singleCommentId","_ref$showCommentEdito","showCommentEditor","_ref$showSearchBtn","showSearchBtn","_ref$showFullScreenBt","showFullScreenBtn","_ref$height","param","useParams","useWindowSize","_useState2","_slicedToArray","useState","setFullScreenView","_useGetCommentsQuery","useGetCommentsQuery","data","isFetching","isLoading","refetch","CommentContainerDecider","CommentsBody","filter","comment","id","loading","fetching","options","locals","value","onChange","label","checked","_ref$className","_ref$labelClassName","labelClassName","_ref$disabled","disabled","_objectWithoutProperties","_excluded","_jsxs","concat","type","_ref$users","users","_ref$show","show","len","_","avatars","splice","styles","avatar_group","avatar","empty_avatar","user","i","src","alt","avatar_image","rating","iconClassName","_Fragment","_toConsumableArray","Array","map","r","idx","parseInt","color","useRevision","getLeadDeveloperAcknowladgementOptions","revision","isDeniable","getProjectManagerAcknowladgementOptions","_regeneratorRuntime","e","t","Object","prototype","n","hasOwnProperty","o","defineProperty","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","ownKeys","getOwnPropertySymbols","getOwnPropertyDescriptor","apply","_objectSpread","arguments","_defineProperty","getOwnPropertyDescriptors","defineProperties","obj","key","input","hint","prim","toPrimitive","undefined","res","String","Number","_toPrimitive","_toPropertyKey","asyncGeneratorStep","gen","reject","_next","_throw","info","error","_asyncToGenerator","fn","self","args","err","arr","isArray","_arrayWithHoles","_iterableToArrayLimit","minLen","_arrayLikeToArray","toString","from","test","_unsupportedIterableToArray","_nonIterableRest","arr2","useSingleTask","User","_window","window","Laravel","_useLazyGetTaskDetail2","useLazyGetTaskDetailsQuery","getTaskDetails","taskDetailsIsFetching","getTaskById","_callee","_res$parent_task_head","_context","unwrap","taskFiles","parent_task_action","parent_task_title","parent_task_heading","heading","working_environment","working_environment_data","pm_task_guideline","task_guideline","task_revisions","revisions","taskSubTask","Sub_Tasks","t0","console","log","_x","_useLazyGetSubmittedT2","useLazyGetSubmittedTaskQuery","getSubmittedTask","submittionInfoIsFetching","getSubmittionInfo","_ref2","_callee2","_context2","_x2","_useApproveSubmittedT2","useApproveSubmittedTaskMutation","approveSubmittedTask","approveTaskLoadingStatus","approveTask","_ref3","_callee3","callback","_context3","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","fire","icon","title","_x3","_x4","taskCommentApiSlice","apiSlice","injectEndpoints","endpoints","build","getTaskComments","query","providesTags","getTaskCommentReplies","commentId","getTaskCommentWidgetData","getPreviewCommentData","updateComment","mutation","url","body","formData","invalidatesTags","removeCommentPreviousUploadedFile","task_id","comment_id","_token","document","querySelector","getAttribute","replyTaskComment","result","deleteComment","useGetTaskCommentsQuery","useGetTaskCommentRepliesQuery","useUpdateCommentMutation","useGetTaskCommentWidgetDataQuery","useLazyGetTaskCommentWidgetDataQuery","useGetPreviewCommentDataQuery","useRemoveCommentPreviousUploadedFileMutation","useReplyTaskCommentMutation","useDeleteCommentMutation","_ref$expendable","expendable","headingClass","headingStyle","_React$useState2","React","expend","setExpend","init","onClick","cursor","AnimatePresence","motion","div","initial","animate","exit","text","editorContainerClass","workEnv","useSelector","subTask","isLong","showText","ref","useRef","useClickAway","dangerouslySetInnerHTML","__html","href","preventDefault","background","target","site_url","frontend_password","login_url","email","password","index","date","time","minHeight","revisionAcknowledgement","isDeny","isAccept","textIndent","gap","Placeholder","singleTaskPagePermission","auth","getRoleId","projectManagerId","getId","timeControlPermision","status","loggedUser","statusPermission","assigneePermission","statusId","assignedUser","assigneeTo","_loggedUser","includes","subtask","markAsCompletedButtonPermission","approveButtonPermission","assigneeBy","needRevisionPermision","_ref4","revisionButtonPermission","_ref5","submitForClientApproval","_ref6","clientApproveConfirmationButtonPermission","_ref7","subTaskCreationPermision","_ref9","assignedBy","styled","_templateObject","modalRef","setModalRef","_usePopper","usePopper","placement","modifiers","offset","attributes","popper","pointerEvents","zIndex","opacity","Shadow","ReactDOM","top","left","maxWidth","Button","minWidth","CKEditorComponent","WidgetItem","setIsOpen","overflow","is_deleted","mention","timeCalculate","deleted_at","created_date","CommentsContainer","skip","sortedComments","sort","b","a_day","dayjs","diff","handleOrdering","modalIsOpen","setModalIsOpen","_React$useState4","openAddCommentModal","setOpenAddCommentModal","_React$useState6","modalToggleRef","setModalToggleRef","toggleModalButton","_useGetTaskCommentsQu","unshift","role","border","borderRightColor","variant","fontSize","CommentWritingModal","Widget","item","setModalData","modalData","verticalAlign","textAlign","developer_name","submission_creation_date","format","AiFillEyeInvisible","AiFillEye","toggle","content","singleData","DailySubmissionItem","CustomModal","timeFormatter","_time$split$0$split2","split","year","month","month_name","columnSchema","header","draggable","accessorKey","cell","getValue","convertTime","DataTable","tableData","tableColumns","tableName","_data$daily_submissio","_useState4","modalTableIsOpen","setModalTableIsOpen","_useState6","modalRefButton","setModalRefButton","_useState8","singleUserSubmissionTableDrawerRef","setSingleUserSubmissionTableDrawerRef","_useState10","_useGetDailyTasksSubm","useGetDailyTasksSubmissionQuery","modalTableClose","useEffect","DailysubmissionDrawerTable","daily_submissions","SingleUserSubmissionTableDrawer","InnerHistoryItem","lazy","_ref$data","fallback","InnerHistoryItemLoader","history","HistoryItem","fetcher","axios","get","_useSelector","histories","dispatch","useDispatch","_useSWR","useSWR","refreshInterval","storeHistories","Histories","marginRight","Suspense","note","Link","to","_ref$readOnly","readOnly","_ref$placeholder","placeholder","_ref$inputClass","inputClass","_ref$labelClass","labelClass","_ref$type","defaultValue","rest","htmlFor","required","onWheel","currentTarget","blur","notes","files","setFiles","setTitle","errTitle","setErrTitle","_React$useState8","setNote","deviceWidth","_useCrateNoteMutation2","useCrateNoteMutation","crateNote","handleSubmit","fd","FormData","append","file","_notes","storeNotes","handleEditorChange","editor","getData","Input","setState","handleChange","UploadFilesInLine","_React$useState10","attachedFiles","setAttachedFiles","searchParams","useSearchParams","noteId","_useUpdateNoteMutatio2","useUpdateNoteMutation","updateNote","_useGetTaskDetailsQue","useGetTaskDetailsQuery","refetchOnMountOrArgChange","clearField","handleClose","_notes2","_res$note","message","getElementsByTagName","deleteNoteUploadedFile","useDeleteNoteUploadedFileMutation","handleFileDelete","previousFile","indexOf","previous","onPreviousFileDelete","getAvatar","getName","getDesignationName","mode","setMode","navigate","useNavigate","paramType","CreateNote","EditNote","NoteView","Note","setToggleRef","cmt","commentLength","Rating","deadline_meet","submission_quality","req_fullfillment","overall_tasks","ViewComment","setDate","selected","minDate","maxDate","placeholderText","DatePicker","dateFormat","SearchBox","_ref$autoFocus","autoFocus","props","current","focus","xmlns","viewBox","propTypes","PropTypes","isRequired","_ref$title","onSelect","setQuery","params","categories","filteredData","cat","category_name","toLowerCase","Combobox","displayValue","Options","Loader","catIdx","Option","active","employees","employee","_useDeveloperInProgre","useDeveloperInProgressTaskQuery","isOverloaded","image_url","objectFit","developer_status","priority","setSelected","Listbox","CompareDate","isVisible","location","useLocation","pathname","replace","_useEditSubtaskMutati2","useEditSubtaskMutation","editSubtask","_useEditSubtaskMutati3","Card","form_card","Head","onClose","form_card_head","Body","form_card_body","SubTaskEditModal","onSubmit","success","warn","_required_error$title","_required_error$start","_required_error$start2","_required_error$due_d","_required_error$due_d2","editDataIsFetching","milestoneID","milestone_title","milestoneTitle","milestone","parentTaskTitle","Date","startDate","setStateDate","dueDate","setDueDate","_useState12","projectName","_useState14","category","taskCategory","setTaskCategory","_useState16","assignedTo","setAssignedTo","_useState18","description","setDescription","_useState20","setPriority","_useState22","estimateHours","estimateTimeHour","_useState24","estimateMinutes","estimateTimeMin","_useState26","_useState28","setError","required_error","_useGetMilestoneDetai","useGetMilestoneDetailsQuery","projectId","deleteUplaodedFile","useDeleteUplaodedFileMutation","start_date","toDate","due_date","TaskCategorySelectionBox","AssignedToSelection","PrioritySelection","_milestone$deliverabl","count","errorMessages","showError","_startDate","_dueDate","parentTaskId","boardColumn","deliverable_type","subtaskId","requiredField","overloadedUser","gender","field","genderPronoun","_task$assigneeTo","_task$assigneeTo2","_task$assigneeTo3","_task$assigneeTo4","_task$assigneeTo5","_task$assigneeTo6","_task$assigneeBy","_task$assigneeBy2","_task$assigneeBy3","_task$assigneeBy4","_task$assigneeBy5","_task$assigneeBy6","_task$category","_task$boardColumn","_$last","GenarelLoader","getSubtaskTitle","isSubtask","getUserLink","labelColor","columnName","getStartDate","getDueDate","parentTaskTimeLog","size","Accordion","last","revisionStatus","RevisionText","createdAt","Guideline","SubmittedWorkItem","submittedWork","timeLog","TableRow","colSpan","TimeLog","getStartTime","endTime","getEndTime","memo","hoursLogged","review","ContentLoader","speed","backgroundColor","foregroundColor","x","rx","ry","HistoryLoader","parentTask","setTask","taskID","setSubmittedWork","setTimeLog","setReview","setHistories","_React$useState12","_React$useState14","isCommentShow","setIsCommentShow","_useSingleTask","detailFetchingStateLoading","subTaskComments","commentsFetching","commentsLoading","commentsRefetch","SingleTask","fetchData","cb","fetchSubmittedWork","fetchTimeLogData","fetchHistories","fetchReviewData","Genarel","SubmittedWork","showCloseBtn","History","TaskReview","_arrayWithoutHoles","iter","_iterableToArray","_nonIterableSpread","showApproveForm","setShowApproveForm","completedWithInDeadline","setCompletedWithInDeadline","submittedStar","setSubmittedStar","fullfilledStar","setFullfilledStar","setComment","oldSubmittion","setOldSubmittion","latestSubmittion","setLatestSubmittion","_useGetSubmittedTaskQ","useGetSubmittedTaskQuery","setErr","sortBy","latest","old","handleOnSubmit","rating2","rating3","user_id","HiOutlineSelector","SubmittedWorkCard","submission_no","action","radius","SubmitButton","_data$text","_ref3$latest","_ref3$className","_ref3$isLoading","links","compact","attaches","submission_date","listStyle","link","FileUploader","Preview","fileName","downloadAble","deleteAble","downloadUrl","previewUrl","fileType","ext","toggleEditForm","_useLazyCheckSubTaskT2","useLazyCheckSubTaskTimerQuery","checkSubTaskTimer","useCheckEditableSubTaskQuery","isEditable","stopPropagation","hasEditPermission","added_by","PreviewSubtask","onConfirm","buttonVisible","setButtonVisible","countDown","setCountDown","timeIntervelId","setInterval","timeOutId","setTimeout","clearInterval","clearTimeout","marginLeft","siteUrl","setSiteUrl","frontendPassword","setFrontendPassword","loginUrl","setLoginUrl","siteLoginCredentialUserNameOrEmail","setSiteLoginCredentialUserNameOrEmail","setPassword","_useWorkingEnvironmen2","useWorkingEnvironmentMutation","workingEnvironment","project_id","checkIsURL","username","isConfirmed","_required_error$pageT","_required_error$pageT2","_ref12","_required_error$page_","_required_error$page_2","_required_error$descr","_required_error$descr2","_ref$isFirstSubtask","isFirstSubtask","refetchTask","useRefetchTaskDetails","taskDetails","isWorkingEnvironmentSubmit","setParentTask","pageType","setPageType","pageTypeOthers","setPageTypeOthers","pageName","setPageName","pageURL","setPageURL","numberOfPage","setNumberOfPage","existingDesignLink","setExistingDesignLink","_React$useState16","pageTypePriority","setPageTypePriority","_React$useState18","pageTypeName","setPageTypeName","_useCreateSubtaskMuta2","useCreateSubtaskMutation","createSubtask","_useCreateSubtaskMuta3","_useLazyGetTaskDetail3","_React$useState20","showForm","setShowForm","_React$useState22","isValid","pageUrl","taskType","_res$sub_task","_res$sub_task2","_subtask","sub_task","storeSubTasks","setWorkingEnvironmentStatus","WorkingEnvironmentForm","LeadConfirmationModal","AssginedToSelection","_ref8","_ref10","_ref11","_ref13","_ref14","page_type","page_url","editId","setMilestone","project","setProject","setEstimateTimeHour","setEstimateTimeMin","_useState30","editSubTask","find","estimation","formatedDate","_res$users","project_name","task_category","estimate_hours","estimate_minutes","_err$estimate_hours","_err$estimate_minutes","errText","hoursErr","minErr","hours_left","minutes_left","milestone_id","board_column_id","subtask_id","_subtask2","edit","setEdit","formMode","setFormMode","isTaskModalOpen","setIsTaskModalOpen","subtaskModalToggleRef","setSubtaskModalToggleRef","_useLazyGetInProgress2","useLazyGetInProgressTaskStatusQuery","inProgressTaskStatus","toggleAddButton","closeAddModal","Task","SubTaskForm","workEnvData","SubtTaskEditForm","sub","SubTask","_useUpdateTaskMutatio2","useUpdateTaskMutation","updateTask","_useUpdateTaskMutatio3","TaskEditForm","_milestone$milestone_","_$find","projects","isFetchingMilestone","milestones","list_border","_data$name","image","previewId","SubmitionView","styte","InnerWorkItem","preview","modal","state","SubmittedModalView","WorkItem","_data$client_name","open","setOpen","attachmentLink","setAttachmentLink","setChecked","taskDescription","setTaskDescription","completedSection","setCompletedSection","_useSubmitDailySubmis2","useSubmitDailySubmissionMutation","submitDailySubmission","isSubmitting","attachmentLinkError","setAttachmentLinkError","taskDescriptionError","setTaskDescriptionError","completedSectionError","setCompletedSectionError","task_title","total_time_spent","client_name","daily_submission_status","borderTop","borderRadius","SelectedFiles","_Array$from","previews","onDelete","onRemove","Checkbox","_window$Laravel","valid","clientId","mark_as_complete","today","_useGetDailySubmissio","useGetDailySubmissionQuery","TodaysUpdateModalTableRow","setTodaysUpdateModalisOpen","URLSearchParams","search","TodaysUpdateModalTable","setLinks","linkErr","setLinkErr","isModalUrl","setIsModalUrl","commentErr","setCommentErr","_useMarkAsCompleteMut2","useMarkAsCompleteMutation","markAsComplete","_useLazyCheckSubTaskS2","useLazyCheckSubTaskStateQuery","checkSubTaskState","markAsCompleteModaIsOpen","setMarkAsCompleteModalIsOpen","_links","handleOnLinkInputChange","class","reason","setReason","reasonError","setReasonError","commentError","setCommentError","_useRevision","revisionOptions","_useCreateRevisionMut2","useCreateRevisionMutation","createRevision","option","marginTop","marginBottom","_reason$revision","_reason$isDeniable","errorCount","revision_acknowledgement","acknowledgement_id","is_deniable","revisionModal","setRevisionModal","singleTask","RevisionCreationModal","AcceptAndContinueButton","RevisionAcceptAndContinue","_ref2$isSubmitting","onNext","role_id","roleId","_revision$revision_ac","onAccept","onDeny","onContinue","isContinue","pm_comment","lead_comment","revision_reason","_task$taskSubTask","onBack","_ref$isSubmitting","setComments","subtasks","setSubtasks","setSubtaskError","SubtaskSelectionMenu","subTasks","_reason$id","_reason$id2","_comments","findIndex","hanldeEditorTextChange","NextAndContinueButton","_task$taskSubTask2","_task$taskSubTask3","multiple","overflowY","tabIndex","assigned_to_name","denyOptions","denyReason","setShow","accept","setAccept","_useGetRevisionDetail","useGetRevisionDetailsQuery","isFetchingRevision","_useRevisionAcceptOrD2","useRevisionAcceptOrDenyMutation","revisionAcceptOrDeny","isLoadingRevisionReview","handleAcceptAndContinueSubmission","_data$comment","_data$denyReason","_data","deny_reason","revision_id","setTaskStatus","task_status","RevisionView","continue","DenyAndContinue","setDenyReason","useRevisionAcceptOrDenyByLeadDeveloperMutation","_comment$comment","_data$reason","_data$is_deniable","fdata","hanldeAcceptAndContinueSubmition","AssigneeRevisionToDev","hanldeDenyAndContinueSubmition","hasSubtask","RevisionViewModal","DeveloperRevisionView","GuideLineText","SubtaskCreationControl","subtaskCreationModalIsOpen","setSubtaskCreationModalIsOpen","fontStyle","fontWeight","StopTimerConfrimationPopUp","stopTimer","startTimer","lessTrackModal","lessTrackModalFor","setLessTrackModal","handleTemporarilyStopTimer","StartTimerWorkingReport","Title","Text","h1","_taggedTemplateLiteral","_templateObject2","_templateObject3","_task$ranningTimer","timerStart","setTimerStart","timerId","setTimerId","seconds","setSeconds","isOpenConfirmationModal","setIsOpenConfirmationModal","timerStatus","ranningTimer","taskRunning","useMemo","_task$ranningTimer2","_task$ranningTimer3","serverTime","unix","interval","hours","minutes","sec","min","hr","Toast","startTimerFirstCheck","startTimerFirstCheckIsFetching","_useStartTimerApiMuta2","useStartTimerApiMutation","startTimerApi","timerStartStatusIsLoading","_useStopTimerApiMutat2","useStopTimerApiMutation","stopTimerApi","timerStopStatusIsLoading","checkWorkReport","useCheckWorkingReportMutation","startTimerControl","workReport","_window2","check_in_check_out","check_in_status","daily_task_report","hours_log_report","hours_log_report_status","withReactContent","html","showCancelButton","confirmButtonText","cancelButtonText","customClass","confirmButton","cancelButton","reload","timeId","_useLazyGetUserTrackT2","useLazyGetUserTrackTimeQuery","getUserTrackTime","trackTimerFetcing","Math","floor","currentTime","current_time","set","day","check","isBefore","isDev","tracked_times","target_time","is_first_task","StartTimerConfirmationModal","LessTrackTimerModal","SubmitForClientApproval","closeModal","_useSubmitForClientAp2","useSubmitForClientApprovalMutation","transform","_useConfirmClientAppr2","useConfirmClientApprovalMutation","confirmClientApproval","projectManagerAcknowladgement","createDispute","additionalPaid","setAdditionalPaid","additionalInfo","setAdditionalInfo","additionalAmount","setAdditionalAmount","additionalError","setAdditionalError","hasAdditionalPayment","isPay","onBlur","disputeCreate","_additionalInfo$info","additional_amount","additional_status","additional_comment","dispute_create","_useStoreClientRevisi2","useStoreClientRevisionTaskMutation","storeClientRevisionTask","AssigneeToLeadFromClientRevision","fData","ClientAcceptedTask","ClientRevision","ReportForm","reportModalOpen","setReportModalOpen","isEnable","useDailySubmission","_useDeveloperCanCompl","useDeveloperCanCompleteTaskQuery","checkMarkAsCompleteEnableStatus","isLoadingCompleteCheck","ENABLE_MARKASCOMPLETE_BUTTON","totalTimeLog","TimerControl","MarkAsComplete","ApproveTask","RevisionControl","RevisionViewControl","ClientApproval","DailySubmissionControl","display","ReportControl","start_time","end_time","hours_logged","Table","Avatar","CardView","_ref4$data","_objectDestructuringEmpty","TimeLogItem","timeLogs","storeTimeLogs","TimeLogTable","TimeLogItemLoader","RefetchTaskProvider","setRefetchTask","_task$additionalInfo","_task$additionalInfo2","_task$additionalInfo3","_task$additionalInfo4","_task$category$name","_task$taskType","_task$pageType","_task$pageName","_task$workEnvData","_task$workEnvData2","_task$workEnvData3","_task$workEnvData4","_task$workEnvData5","_task$workEnvData6","throwError","useErrorHandler","isTaskFetching","isTaskLoading","taskStatus","useGetTaskStatusQuery","_useLazyGetWorkingEnv2","useLazyGetWorkingEnvironmentQuery","getWorkingEnv","_useLazyGetWorkingEnv3","isWorkingEnvFetching","isWorkingEnvLoading","CurrentTask","ppTaskFiles","parent_task_id","task_working_environment","code","storeTask","loadingClass","Loading","_taskStatus","BoardColumn","Provider","TaskAction","ind_clientId","ind_client_name","independent_client_name","whiteSpace","loginURL","refSite","guidelines","user_name","devComment","pmComment","attachments","attachment","pp_task_file_name","pp_task_file_url","pp_task_file_icon","classname","pp_task_file_id","label_color","boxShadow","getTaskStatusName","SubTaskSection","DailySubmissionSection","CommentSection","NoteSection","TimeLogSection","HistorySection","RevisionSection","Toaster","ShowEditModals","_ref$variant","_ref$size","classes","DropdownContext","DropdownProvider","element","setElement","reference","setReference","useDropdown","context","DropdownItem","_ref2$disabled","onMouseUp","DropdownToggle","_ref3$icon","_useDropdown2","DropdownMenu","_ref4$placement","_ref4$offset","_excluded2","_useDropdown3","popperElement","setPopperElement","setWidth","random","substr","DOM","getElementById","fallbackPlacements","offsetWidth","timeout","handleClickOutside","event","contains","removeEventListener","addEventListener","el","createElement","appendChild","removeChild","Dropdown","_ref5$className","Item","Toggle","Menu","isBrowser","setIsBrowser","modalContent","onReply","_useReplyTaskCommentM2","visibleToScreenRef","scrollIntoView","behavior","onUpdate","fileError","uploadInputClass","fileWrapperClass","ErrorText","Switch","Case","condition","loaderTitle","_comment$files_data","useAuth","showDeletedComment","setShowDeletedComment","deletedClass","last_updated_date","as","Items","files_data","updateComments","setText","_React$useState5","_useUpdateCommentMuta2","_useRemoveCommentPrev2","handlePreviousFileDeleted","file_details","showReplies","setShowReplies","replyMode","setReplyMode","activeEditMode","setActiveEditModal","uploadAttachment","setUploadAttachment","isRepliesLoading","setIsRepliesLoading","_useDeleteCommentMuta2","handleReplyButtonClick","handleDeleteComment","showDenyButton","denyButtonText","confirmButtonColor","denyButton","buttonsStyling","deleteCommentData","Comment","total_replies","AvatarGroup","replies_users","ReplyCommentPreview","showReplyButton","EditComment","ReplyComment","AttachmentUpload","onReplied","_useGetTaskCommentRep","setIsEnable","response","dayAbbreviation","saturdayCutoffTime","otherDaysCutoffTime","isSameOrAfter","providedDate","days","___CSS_LOADER_EXPORT___","module"],"sourceRoot":""}