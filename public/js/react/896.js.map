{"version":3,"file":"js/react/896.js","mappings":"0pCAiEA,QA1D0B,SAAHA,GAA8B,IAAxBC,EAAMD,EAANC,OAAQC,EAASF,EAATE,UACjCC,GAAmCC,EAAAA,EAAAA,KAA3BC,EAAKF,EAALE,MAAOC,EAAeH,EAAfG,gBACyBC,EAAAC,GAAZC,EAAAA,EAAAA,UAAS,IAAG,GAAjCC,EAAMH,EAAA,GAAEI,EAASJ,EAAA,GAEpBK,EACW,KAAXF,EACML,EACAA,aAAK,EAALA,EAAOQ,QAAO,SAACC,GAAI,OACfC,IAAAA,UAAYD,EAAKE,MAAMC,SAASF,IAAAA,UAAYL,GAAQ,IAGlE,OACIQ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,+BAA8BC,UACzCC,EAAAA,EAAAA,MAACC,EAAAA,EAAQ,CAACC,MAAOtB,EAAQuB,SAAUtB,EAAUkB,SAAA,EACzCC,EAAAA,EAAAA,MAACC,EAAAA,EAAAA,OAAe,CAACH,UAAU,0BAAyBC,SAAA,EAChDF,EAAAA,EAAAA,KAACI,EAAAA,EAAAA,MAAc,CACXH,UAAU,yFACVM,aAAc,SAACxB,GAAM,OAAKA,aAAM,EAANA,EAAQe,IAAI,EACtCQ,SAAU,SAACE,GAAC,OAAKf,EAAUe,EAAEC,OAAOJ,MAAM,EAC1CK,YAAY,QAIhBV,EAAAA,EAAAA,KAAA,QACIW,MAAO,CACHC,SAAU,WACVC,IAAK,MACLC,MAAO,MACPC,UAAW,oBACbb,UAEFF,EAAAA,EAAAA,KAACgB,EAAAA,IAAiB,UAI1BhB,EAAAA,EAAAA,KAACI,EAAAA,EAAAA,QAAgB,CACbH,UAAU,8CACVU,MAAO,CACHM,OAAQ,IACRC,UAAW,QACXC,UAAW,QACbjB,SAEDR,GAAiBA,EAAc0B,OAC5B1B,EAAc2B,KAAI,SAACzB,GAAI,OACnBI,EAAAA,EAAAA,KAACsB,EAAQ,CAAe1B,KAAMA,GAAfA,EAAK2B,GAAkB,KAG1CvB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6BAA4BC,SACtCd,EAAkB,aAAe,yBAO9D,EAIA,IAAMkC,EAAW,SAACE,GACd,IAAM5B,EAAO,IAAI6B,EAAAA,EAAKD,EAAM5B,MAE5B,OAAKA,SAAAA,EAAM8B,aAEP1B,EAAAA,EAAAA,KAACI,EAAAA,EAAAA,OAAe,CACZC,MAAOT,EACPK,UAAW,SAAA0B,GAAA,IAAGC,EAAQD,EAARC,SAAUC,EAAMF,EAANE,OAAM,OAC1BD,EACM,sCACAC,EACA,oCACA,4BAA4B,EACrC3B,UAEDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,4BAA4BU,MAAO,CAAEmB,IAAK,QAAS5B,SAAA,EAC9DF,EAAAA,EAAAA,KAAA,OACI+B,IAAKnC,aAAI,EAAJA,EAAMoC,YACXC,IAAKrC,aAAI,EAAJA,EAAME,KACXoC,MAAO,GACPC,OAAQ,GACRlC,UAAU,oBAEdD,EAAAA,EAAAA,KAAA,QAAAE,SAAON,aAAI,EAAJA,EAAME,YApBM,IAwBnC,C","sources":["webpack:///./resources/js/components/single-task/section/task-actions/stop-timer/options/UserSelectionList.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useUsers } from \"../../../../../hooks/useUsers\";\r\nimport { User } from \"../../../../../utils/user-details\";\r\nimport { Combobox } from \"@headlessui/react\";\r\nimport _ from \"lodash\";\r\nimport { HiOutlineSelector } from \"react-icons/hi\";\r\n\r\nconst UserSelectionList = ({ person, setPerson }) => {\r\n    const { users, usersIsFetching } = useUsers();\r\n    const [search, setSearch] = useState(\"\");\r\n\r\n    let filteredUsers =\r\n        search === \"\"\r\n            ? users\r\n            : users?.filter((user) =>\r\n                  _.lowerCase(user.name).includes(_.lowerCase(search))\r\n              );\r\n\r\n    return (\r\n        <div className=\"position-relative w-100 mb-3\">\r\n            <Combobox value={person} onChange={setPerson}>\r\n                <Combobox.Button className=\"position-relative w-100\">\r\n                    <Combobox.Input\r\n                        className=\"w-100 bg-white py-2 pl-2 pr-1 border d-flex align-items-center justify-content-between\"\r\n                        displayValue={(person) => person?.name}\r\n                        onChange={(e) => setSearch(e.target.value)}\r\n                        placeholder=\"--\"\r\n                    />\r\n\r\n                    {/* Selection box icon */}\r\n                    <span\r\n                        style={{\r\n                            position: \"absolute\",\r\n                            top: \"50%\",\r\n                            right: \"5px\",\r\n                            transform: \"translateY(-50%)\",\r\n                        }}\r\n                    >\r\n                        <HiOutlineSelector />\r\n                    </span>\r\n                </Combobox.Button>\r\n\r\n                <Combobox.Options\r\n                    className=\"position-absolute bg-white p-2 shadow w-100\"\r\n                    style={{\r\n                        zIndex: \"1\",\r\n                        maxHeight: \"350px\",\r\n                        overflowY: \"auto\",\r\n                    }}\r\n                >\r\n                    {filteredUsers && filteredUsers.length ? (\r\n                        filteredUsers.map((user) => (\r\n                            <UserList key={user.id} user={user} />\r\n                        ))\r\n                    ) : (\r\n                        <div className=\"task-selection-list-option\">\r\n                            {usersIsFetching ? \"Loading...\" : \"Nothing found.\"}\r\n                        </div>\r\n                    )}\r\n                </Combobox.Options>\r\n            </Combobox>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserSelectionList;\r\n\r\nconst UserList = (props) => {\r\n    const user = new User(props.user);\r\n\r\n    if (!user?.getRoleId()) return null;\r\n    return (\r\n        <Combobox.Option\r\n            value={user}\r\n            className={({ selected, active }) =>\r\n                selected\r\n                    ? \"task-selection-list-option selected\"\r\n                    : active\r\n                    ? \"task-selection-list-option active\"\r\n                    : \"task-selection-list-option\"\r\n            }\r\n        >\r\n            <div className=\"d-flex align-items-center\" style={{ gap: \"10px\" }}>\r\n                <img\r\n                    src={user?.getAvatar()}\r\n                    alt={user?.name}\r\n                    width={32}\r\n                    height={32}\r\n                    className=\"rounded-circle\"\r\n                />\r\n                <span>{user?.name}</span>\r\n            </div>\r\n        </Combobox.Option>\r\n    );\r\n};\r\n"],"names":["_ref","person","setPerson","_useUsers","useUsers","users","usersIsFetching","_useState2","_slicedToArray","useState","search","setSearch","filteredUsers","filter","user","_","name","includes","_jsx","className","children","_jsxs","Combobox","value","onChange","displayValue","e","target","placeholder","style","position","top","right","transform","HiOutlineSelector","zIndex","maxHeight","overflowY","length","map","UserList","id","props","User","getRoleId","_ref2","selected","active","gap","src","getAvatar","alt","width","height"],"sourceRoot":""}