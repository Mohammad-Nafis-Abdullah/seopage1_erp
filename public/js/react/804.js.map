{"version":3,"file":"js/react/804.js","mappings":"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","sources":["webpack:///./resources/js/react/UI/form/checkbox.css?a080","webpack:///./resources/js/react/UI/form/Cheeckbox.jsx","webpack:///./resources/js/react/global/Rating.jsx","webpack:///./resources/js/react/hooks/useRevision.jsx","webpack:///./resources/js/react/hooks/useSingleTask.jsx","webpack:///./resources/js/react/single-independent-task/components/Accordion.jsx","webpack:///./resources/js/react/single-independent-task/components/Guideline.jsx","webpack:///./resources/js/react/single-independent-task/components/RevisionText.jsx","webpack:///./resources/js/react/single-independent-task/components/loader/GenarelLoader.jsx","webpack:///./resources/js/react/single-independent-task/section/comments/CommentPreview.jsx","webpack:///./resources/js/react/single-independent-task/section/comments/Comment.jsx","webpack:///./resources/js/react/single-independent-task/section/comments/CommentSendBox.jsx","webpack:///./resources/js/react/single-independent-task/components/CustomModal.jsx","webpack:///./resources/js/react/single-independent-task/components/loader/CommentLoader.jsx","webpack:///./resources/js/react/single-independent-task/section/comments/CommentModal.jsx","webpack:///./resources/js/react/single-independent-task/section/comments/CommentWritingModal.jsx","webpack:///./resources/js/react/single-independent-task/section/comments/CommentsSection.jsx","webpack:///./resources/js/react/single-independent-task/section/daily-submission/DailySubmissionItem.jsx","webpack:///./resources/js/react/single-independent-task/section/daily-submission/DailysubmissionDrawerTable.jsx","webpack:///./resources/js/react/single-independent-task/section/daily-submission/drawer-table-support/Single_user_submission_table_column.jsx","webpack:///./resources/js/react/single-independent-task/section/daily-submission/SingleUserSubmissionTableDrawer.jsx","webpack:///./resources/js/react/single-independent-task/section/daily-submission/DailySubmissionSection.jsx","webpack:///./resources/js/react/single-independent-task/section/history/InnerHistoryItemLoader.jsx","webpack:///./resources/js/react/single-independent-task/section/history/Histories.jsx","webpack:///./resources/js/react/single-independent-task/section/history/HistorySection.jsx","webpack:///./resources/js/react/single-independent-task/section/notes/Note.jsx","webpack:///./resources/js/react/single-independent-task/components/form/Input.jsx","webpack:///./resources/js/react/single-independent-task/section/notes/CreateNote.jsx","webpack:///./resources/js/react/single-independent-task/section/notes/EditNote.jsx","webpack:///./resources/js/react/single-independent-task/section/notes/NoteView.jsx","webpack:///./resources/js/react/single-independent-task/section/notes/NoteSection.jsx","webpack:///./resources/js/react/single-independent-task/section/revisions/ViewComment.jsx","webpack:///./resources/js/react/single-independent-task/section/revisions/RevisionSection.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/preview/Genarel.jsx","webpack:///./resources/js/react/single-independent-task/components/Loader.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/preview/SubmittedWork.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/preview/TimeLog.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/preview/TaskReview.jsx","webpack:///./resources/js/react/single-independent-task/components/HistoryLoader.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/preview/History.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/preview/Comments.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/PreviewSubtask.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/approve-task/ApproveTask.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/SubTask.jsx","webpack:///./resources/js/react/single-independent-task/section/comments/DatePicker.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/AssignedToSelection.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/PrioritySelection.jsx","webpack:///./resources/js/react/single-independent-task/components/form/Searchbox.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/TaskCategorySelectionBox.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/LeadConfirmationModal.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/WorkingEnvironmentForm.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/SubTaskForm.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/SubTaskEditForm.jsx","webpack:///./resources/js/react/single-independent-task/permissions.js","webpack:///./resources/js/react/single-independent-task/section/sub-task/SubTaskSection.jsx","webpack:///./resources/js/react/single-independent-task/section/submitted-work/SubmitionView.jsx","webpack:///./resources/js/react/single-independent-task/section/submitted-work/WorkItem.jsx","webpack:///./resources/js/react/single-independent-task/section/submitted-work/InnerWorkItem.jsx","webpack:///./resources/js/react/single-independent-task/section/submitted-work/SubmittedModalView.jsx","webpack:///./resources/js/react/single-independent-task/section/submitted-work/SubmittedWork.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/StartTimerConfirmationModal.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/stop-timer/LessTrackTimerModal.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/TimerControl.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/MarkAsComplete.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/RevisionCreationModal.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/RevisionControl.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/RevisionAcceptAndContinue.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/RevisionView.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/AssigneeRevisionToDev.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/DenyAndContinue.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/RevisionViewModal.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/DeveloperRevisionView.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/RevisionViewControl.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/client-approval/SubmitForClientApproval.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/client-approval/ClientAcceptedTask.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/AssigneeToLeadFromClientRevision.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/Revision/ClientRevision.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/client-approval/ClientApproval.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/report/Report.jsx","webpack:///./resources/js/react/single-independent-task/section/daily-submission/TodaysUpdateModalTableRow.jsx","webpack:///./resources/js/react/single-independent-task/section/daily-submission/styles/DailySubmission.module.css?c214","webpack:///./resources/js/react/single-independent-task/section/daily-submission/styles/DataTable.css?09ae","webpack:///./resources/js/react/single-independent-task/section/daily-submission/TodaysUpdateModalTable.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/DailySubmissionControl.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/subtask_creation_guide/GuideLineText.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/SubtaskCreationControl.jsx","webpack:///./resources/js/react/single-independent-task/section/task-actions/TaskAction.jsx","webpack:///./resources/js/react/single-independent-task/section/time-logs/InnerTableRow.jsx","webpack:///./resources/js/react/single-independent-task/section/time-logs/TimeLogTable.jsx","webpack:///./resources/js/react/single-independent-task/section/time-logs/TimeLogItemLoader.jsx","webpack:///./resources/js/react/single-independent-task/section/time-logs/TimeLogSection.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/task-edit-form.module.css?78f7","webpack:///./resources/js/react/single-independent-task/section/sub-task/TaskEditForm.jsx","webpack:///./resources/js/react/single-independent-task/section/sub-task/SubTaskEditModal.jsx","webpack:///./resources/js/react/single-independent-task/SingleIndependentTask.jsx","webpack:///./resources/js/react/single-independent-task/components/Button.jsx","webpack:///./resources/js/react/single-independent-task/components/Modal.jsx","webpack:///./resources/js/react/single-independent-task/components/SubmitButton.jsx","webpack:///./resources/js/react/single-independent-task/components/Dropdown.jsx","webpack:///./resources/js/react/single-independent-task/section/comments/InnerComment.jsx","webpack:///./resources/js/react/UI/form/checkbox.css","webpack:///./resources/js/react/single-independent-task/section/daily-submission/styles/DailySubmission.module.css","webpack:///./resources/js/react/single-independent-task/section/daily-submission/styles/DataTable.css","webpack:///./resources/js/react/single-independent-task/section/sub-task/task-edit-form.module.css"],"sourcesContent":["import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[2]!./checkbox.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import \"./checkbox.css\";\r\n\r\nconst Checkbox = ({\r\n    value,\r\n    onChange,\r\n    label,\r\n    checked,\r\n    className = \"\",\r\n    labelClassName = \"\",\r\n    disabled = false,\r\n    ...props\r\n}) => {\r\n    return (\r\n        <label\r\n            className={`d-flex align-items-center sp1_checkbox--label ${labelClassName}${\r\n                disabled ? \" disable\" : \"\"\r\n            }`}\r\n        >\r\n            <input\r\n                type=\"checkbox\"\r\n                value={value}\r\n                checked={checked}\r\n                disabled={disabled}\r\n                onChange={onChange}\r\n                className={`sp1_checkbox mr-2 ${className}`}\r\n            />\r\n            {label}\r\n        </label>\r\n    );\r\n};\r\n\r\nexport default Checkbox;\r\n","const Rating = ({\r\n    rating,\r\n    className = '',\r\n    iconClassName = '',\r\n}) => {\r\n    return (\r\n        <>\r\n            {[...Array(5)].map((r, idx) =>\r\n                idx <= parseInt(rating) - 1 ? (\r\n                    <i key={idx} className=\"fa-solid fa-star\" style={{color:'#FFA500'}} />\r\n                ) : rating - parseInt(rating) > 0 &&\r\n                  idx === parseInt(rating) ? (\r\n                    <i key={idx} className=\"fa-solid fa-star-half-stroke\" style={{color:'#FFA500'}} />\r\n                ) : (\r\n                    <i key={idx} className=\"fa-regular fa-star\" style={{color: '#b9b9b9'}} />\r\n                ),\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Rating;","\r\n\r\n\r\nexport const useRevision = () => {\r\n\r\n\r\n    // project menager acknowladgement options\r\n    const getProjectManagerAcknowladgementOptions = () =>{\r\n\r\n        const isAlreadyAccepted = false;\r\n\r\n        if(isAlreadyAccepted){\r\n            return []\r\n        }\r\n\r\n        return [\r\n            {\r\n                id: 'PLRx01',\r\n                revision: \"My instruction was incomplete/incorrect and I have to make some changes in the instruction now to make it right\",\r\n                isDeniable: false,\r\n            },\r\n            {\r\n                id: 'PLRx02',\r\n                revision: \"The work done is aligned with my instruction, but after seeing it, I want to give some minor changes\",\r\n                isDeniable: false,\r\n            },\r\n            {\r\n                id: 'PLRx3',\r\n                revision: \"The Lead Developer/project coordinator’s delivered work doesn’t match my shared requirement\",\r\n                isDeniable: true,\r\n            },\r\n            {\r\n                id: 'PLRx04',\r\n                revision: \"The instruction was followed, but the lead developer missed out some default/basic things or best practices which are not essential to write in instruction\",\r\n                isDeniable: true\r\n            },\r\n        ]\r\n    }\r\n\r\n    // lead developer acknowladgement Options\r\n    const getLeadDeveloperAcknowladgementOptions = () => {\r\n        const isAlreadyAccepted = false;\r\n        // if already accepted\r\n        if(isAlreadyAccepted){\r\n            return []\r\n        }else{\r\n            return [\r\n                {\r\n                    id: 'LDRx1',\r\n                    revision: \"The concerned developer’s delivered work doesn’t match my shared requirement\",\r\n                    isDeniable: true,\r\n                },\r\n                {\r\n                    id: 'LDRx2',\r\n                    revision: \"My instruction was incomplete/incorrect and I have to make some changes in the instruction now to make it right.\",\r\n                    isDeniable: false,\r\n                },\r\n                {\r\n                    id: 'LDRx3',\r\n                    revision: \"The work done is aligned with my instruction but after seeing it, I want to give some minor changes.\",\r\n                    isDeniable: false\r\n                },\r\n\r\n                {\r\n                    id: 'LDRx4',\r\n                    revision: \"The instruction was followed but the developer missed out on some default/basic things or best practices which are not essential to mention in instruction.\",\r\n                    isDeniable: false,\r\n                },\r\n            ]\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return{\r\n        getLeadDeveloperAcknowladgementOptions,\r\n        getProjectManagerAcknowladgementOptions\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport {\r\n    useApproveSubmittedTaskMutation,\r\n    useLazyGetSubmittedTaskQuery,\r\n    useLazyGetTaskDetailsQuery\r\n} from '../services/api/SingleTaskPageApi';\r\nimport { User } from '../utils/user-details';\r\n\r\nexport const useSingleTask = () => {\r\n    const auth = new User(window?.Laravel?.user);\r\n\r\n\r\n    /* ********************************** */\r\n    /* ********* Get Task by task ID ********* */\r\n    const [\r\n        getTaskDetails,\r\n        {isFetching: taskDetailsIsFetching}\r\n    ] = useLazyGetTaskDetailsQuery();\r\n\r\n    const getTaskById = async (taskId) => {\r\n        try{\r\n            const res = await getTaskDetails(`/${taskId}/json?mode=basic`).unwrap();\r\n            if(res){\r\n                const task = {\r\n                    ...res.task,\r\n                    taskFiles: res?.taskFiles,\r\n                    parent_task_action: res.parent_task_action,\r\n                    parent_task_title: res.parent_task_heading?.heading || null,\r\n                    working_environment: res.working_environment,\r\n                    working_environment_data: res.working_environment_data,\r\n                    pm_task_guideline: res.task_guideline,\r\n                    task_revisions: res.revisions,\r\n                    taskSubTask: res.Sub_Tasks,\r\n                }\r\n                return task;\r\n            }\r\n        }catch(err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n\r\n     /* *************************************************** */\r\n    /* ********* Get Task submittion Information ********* */\r\n\r\n    const [getSubmittedTask, {isFetching: submittionInfoIsFetching} ] = useLazyGetSubmittedTaskQuery();\r\n\r\n    // method\r\n    const getSubmittionInfo = async (taskId) => {\r\n        try{\r\n            const res = await getSubmittedTask(taskId).unwrap();\r\n            if(res){\r\n                let data = _.orderBy(res, ['task_id', 'submission_no'], ['desc', 'desc']);\r\n                return data;\r\n            }\r\n        }catch(err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n\r\n    /* ********************************** */\r\n    /* ********* Approved Task ********* */\r\n    const [\r\n        approveSubmittedTask,\r\n        {isLoading: approveTaskLoadingStatus}\r\n    ] = useApproveSubmittedTaskMutation();\r\n\r\n    // method\r\n    const approveTask = async (data, callback) => {\r\n        if(!data || _.isEmpty(data)) return;\r\n        try{\r\n            const res = await approveSubmittedTask(data).unwrap();\r\n\r\n            if(res){\r\n                callback &&callback();\r\n                const Toast = Swal.mixin({\r\n                    toast: true,\r\n                    position: 'top-end',\r\n                    showConfirmButton: false,\r\n                    timer: 3000,\r\n                    timerProgressBar: true,\r\n                })\r\n\r\n                Toast.fire({\r\n                    icon: 'success',\r\n                    title: 'Task Approved Successfully'\r\n                })\r\n            }\r\n        }catch(err){ console.log(err) }\r\n    }\r\n\r\n\r\n    return {\r\n        getTaskById,\r\n        approveTask,\r\n        getSubmittionInfo,\r\n        taskDetailsIsFetching,\r\n        approveTaskLoadingStatus,\r\n        submittionInfoIsFetching\r\n    }\r\n}\r\n","import * as React from 'react'\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\n\r\n\r\nconst Accordion = ({expendable=true, children, title, headingClass, headingStyle}) => {\r\n    const [expend,setExpend] = React.useState(false);\r\n\r\n    const toggle = () => {\r\n        setExpend(!expend);\r\n    }\r\n\r\n    const init = expendable ? 0 : 300;\r\n\r\n  return (\r\n    <div className='sp1_task_card mb-4'>\r\n        <div \r\n            className={`sp1_task_card--head ${headingClass}` }\r\n            onClick={ () => expendable ? toggle() : null}\r\n            style={{...headingStyle, cursor: expendable ? 'pointer': 'default'}}\r\n        > {title} \r\n\r\n            {expendable ? expend ? \r\n                <span className=\"__icon\">\r\n                    <i className=\"fa-solid fa-chevron-up\"></i>\r\n                </span>\r\n            : <span className=\"__icon\">\r\n                    <i className=\"fa-solid fa-chevron-down\"></i>\r\n                </span>: null\r\n            }\r\n        </div>\r\n\r\n\r\n        <AnimatePresence>\r\n            {expendable ? expend && (\r\n                <motion.div\r\n                    initial={{ height: init }}\r\n                    animate={{height: 800}}\r\n                    exit={{height: 0}}\r\n                    className='sp1_task_card--body'\r\n                >\r\n                    {children}\r\n                </motion.div> \r\n            ): <div className='sp1_task_card--body'>\r\n               {children}  \r\n            </div>\r\n        }\r\n        </AnimatePresence>\r\n\r\n\r\n       \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Accordion","import React from \"react\";\r\nimport { useState, useRef } from \"react\";\r\nimport Modal from \"./Modal\";\r\nimport { useClickAway } from \"react-use\";\r\nimport _ from \"lodash\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Guideline = ({ text, editorContainerClass, workEnv }) => {\r\n    const { task } = useSelector((s) => s.subTask);\r\n    const [expend, setExpend] = useState(false);\r\n    let isLong = text?.length > 400;\r\n    const showText = isLong ? text.slice(0, 400) + \"...\" : text;\r\n    const ref = useRef();\r\n\r\n    const handleExpend = (e) => {\r\n        e.preventDefault();\r\n        setExpend(!expend);\r\n    };\r\n\r\n    useClickAway(ref, () => {\r\n        setExpend(false);\r\n    });\r\n\r\n    return (\r\n        <div className=\"sp1_task_card--sub-card\">\r\n            <div\r\n                className={`sp1_ck_content sp1_guideline_text ${editorContainerClass}`}\r\n                dangerouslySetInnerHTML={{ __html: showText }}\r\n            ></div>\r\n            {isLong ? (\r\n                <a href=\"#\" onClick={handleExpend} className=\"\">\r\n                    {\" \"}\r\n                    Read full description{\" \"}\r\n                </a>\r\n            ) : (\r\n                \"\"\r\n            )}\r\n\r\n            <Modal className=\"sp1_task_card--sub-card-modal\" isOpen={expend}>\r\n                <div\r\n                    ref={ref}\r\n                    className=\"sp1_task_card--sub-card-modal-content\"\r\n                >\r\n                    <div className=\"d-flex align-items-center justify-content-between __header\">\r\n                        <button onClick={() => setExpend(false)}>\r\n                            <i className=\"fa-solid fa-xmark\"></i>\r\n                        </button>\r\n                    </div>\r\n\r\n                    {!_.isEmpty(workEnv) ? (\r\n                        <div className=\"sp1_task_card--sub-card m-4\">\r\n                            <div\r\n                                className=\"px-4 py-3\"\r\n                                style={{ background: \"#F3F5F9\" }}\r\n                            >\r\n                                <h6 className=\"mb-2\">Working Environment</h6>\r\n                                <hr />\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                        <span>\r\n                                            <strong>\r\n                                                Working/Staging Site's URL\r\n                                            </strong>\r\n                                            : <br />{\" \"}\r\n                                            <a\r\n                                                target=\"__blank\"\r\n                                                href={workEnv?.site_url}\r\n                                            >\r\n                                                View on new tab\r\n                                            </a>\r\n                                        </span>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                        <span>\r\n                                            <strong>Frontend Password</strong>:{\" \"}\r\n                                            <br /> {workEnv?.frontend_password}\r\n                                        </span>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                        <span>\r\n                                            <strong>\r\n                                                Working/Staging Site's Login URL\r\n                                            </strong>\r\n                                            : <br />{\" \"}\r\n                                            <a\r\n                                                target=\"__blank\"\r\n                                                href={workEnv?.login_url}\r\n                                            >\r\n                                                View on new tab\r\n                                            </a>{\" \"}\r\n                                        </span>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                        <span>\r\n                                            <strong>\r\n                                                Working/Staging Site's\r\n                                                Username/Email\r\n                                            </strong>\r\n                                            : <br /> {workEnv?.email}\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                        <span>\r\n                                            <strong>Password</strong>: <br />{\" \"}\r\n                                            {workEnv?.password}\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ) : null}\r\n\r\n                    <div className=\"__content\">\r\n                        <div\r\n                            className={`sp1_ck_content word-break ${editorContainerClass}`}\r\n                            dangerouslySetInnerHTML={{ __html: text }}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\" __footer\">\r\n                        <button\r\n                            className=\"btn btn-sm py-1 btn-primary ml-auto\"\r\n                            onClick={() => setExpend(false)}\r\n                        >\r\n                            Close\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Guideline;\r\n","import * as React from 'react'\r\nimport Modal from '../../Insights/ui/Modal';\r\nimport { useClickAway } from 'react-use';\r\nimport Button from './Button';\r\n\r\nconst RevisionText = ({text, index, date, time, revision}) => {\r\n    const [expend, setExpend] = React.useState(false);\r\n    const ref = React.useRef();\r\n\r\n    let isLong = text?.length > 800;\r\n    const showText = isLong ? text?.slice(0, 800) + '...' : text;\r\n\r\n\r\n    const toggleModal = (e) => {\r\n        e.preventDefault();\r\n        setExpend(!expend)\r\n    }\r\n \r\n\r\n    useClickAway(ref, () => {\r\n        setExpend(false)\r\n    })\r\n   \r\n  return (\r\n    <div className=\"sp1_task_card--sub-card\" style={{minHeight: '110px'}}>\r\n        <div className=\"sp1_tc_sc-inx\">\r\n            <h2>{index}</h2>\r\n            <span className=\"d-block\"><strong>Date</strong> {date} </span>\r\n            <span className=\"d-block\"><strong>Time</strong>: {time}</span>\r\n        </div>\r\n        <div className=\"\"> \r\n            {revision?.revisionAcknowledgement ? \r\n                <span className='d-block mb-2'> \r\n                    <span className='font-weight-bold text-danger'> <strong>Reason: </strong>  </span> \r\n                    {revision?.revisionAcknowledgement} {\" \"}\r\n                    {revision?.isDeny ? <span className='badge badge-danger'>Rejected By Developer</span> : null} \r\n                    {revision?.isAccept ? <span className='badge badge-success'>Accepted By Developer</span> : null}\r\n                </span> \r\n            : null}\r\n            <div>\r\n                <span className='font-weight-bold text-success'>Statement:</span>\r\n                <div className='sp1_ck_content' style={{textIndent: '2rem'}} dangerouslySetInnerHTML={{__html: showText}} />\r\n            </div> \r\n\r\n            {isLong ? <a href=\"#\" className='ml-2' onClick={toggleModal}>Read full guideline</a> : ''}\r\n\r\n            <Modal className=\"sp1_task_card--sub-card-modal\" isOpen={expend}>\r\n                <div ref={ref} className='sp1_task_card--sub-card-modal-content'>\r\n                    <div className='d-flex align-items-center justify-content-between __header'>\r\n                        <button onClick={() => setExpend(false)}>\r\n                        <i className=\"fa-solid fa-xmark\"></i>\r\n                        </button>\r\n                    </div>\r\n                    <div className='__content'>\r\n                        <div className=\"sp1_tc_sc-inx\">\r\n                            <h2>{index}</h2>\r\n                            <span className=\"d-block\"><strong>Date</strong> {date} </span>\r\n                            <span className=\"d-block\"><strong>Time</strong>: {time}</span>\r\n                        </div>\r\n                        <div>\r\n                        <span className='d-block mb-2'> <span className='font-weight-bold text-danger'><strong>Reason: </strong></span> {revision?.revisionAcknowledgement}</span>\r\n                            <span className='font-weight-bold text-success'>Commitment:</span>\r\n                            <div className='sp1_ck_content' style={{textIndent: '2rem'}} dangerouslySetInnerHTML={{__html: text}} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=' __footer'>\r\n                        <button className='btn btn-sm py-1 btn-primary ml-auto' onClick={() => setExpend(false)}>\r\n                            Close\r\n                        </button>\r\n                    </div> \r\n                </div>\r\n            </Modal>\r\n        </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RevisionText","import React from \"react\"; \r\nimport {Placeholder} from '../../../global/Placeholder';\r\n\r\nconst GenarelLoader = () => { \r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-12 col-xl-6 pb-3 pb-xl-0\">\r\n                <div className=\"d-flex flex-column\" style={{ gap: \"10px\" }}>\r\n                    <h6 className=\"\">\r\n                       <Placeholder width=\"220px\" />\r\n                    </h6> \r\n                    <div className=\"sp1_st-list-item\">\r\n                        <div className=\"sp1_st-list-item-head\">\r\n                            <Placeholder width=\"80px\" />\r\n                        </div>\r\n                        <div className=\"sp1_st-list-item-value\">\r\n                            <Placeholder width=\"220px\" /> \r\n                        </div>\r\n                    </div> \r\n\r\n                    {/* <div className=\"sp1_st-list-item\">\r\n                        <div className=\"sp1_st-list-item-head\">\r\n                            <Placeholder width=\"80px\" />\r\n                        </div>\r\n                        <div className=\"sp1_st-list-item-value\">\r\n                            <Placeholder width=\"220px\" />\r\n                        </div>\r\n                    </div> */}\r\n\r\n                    {/* <div className=\"sp1_st-list-item\">\r\n                        <div className=\"sp1_st-list-item-head\">\r\n                            <Placeholder width=\"80px\" />\r\n                        </div>\r\n                        <div className=\"sp1_st-list-item-value\">\r\n                            <Placeholder width=\"220px\" />\r\n                        </div>\r\n                    </div> */}\r\n\r\n                    {/* asignee to */}\r\n                    <div className=\"sp1_st-list-item\">\r\n                        <div className=\"sp1_st-list-item-head\">\r\n                            <Placeholder width=\"80px\" />\r\n                        </div>\r\n                        <div className=\"sp1_st-list-item-value\">\r\n                            <div style={{ width: \"32px\", height: \"32px\" }}>\r\n                                <Placeholder\r\n                                    width=\"32px\"\r\n                                    height=\"32px\"\r\n                                    type=\"circle\"\r\n                                    className=\"rounded-circle\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"ml-2\">\r\n                                <Placeholder width=\"130px\" /> \r\n                                <Placeholder width=\"70px\" height=\"10px\" className=\"mt-2\" /> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* assignee by */}\r\n                    <div className=\"sp1_st-list-item\">\r\n                        <div className=\"sp1_st-list-item-head\">\r\n                            <Placeholder width=\"80px\" />\r\n                        </div>\r\n                        <div className=\"sp1_st-list-item-value\">\r\n                            <div style={{ width: \"32px\", height: \"32px\" }}>\r\n                                <Placeholder\r\n                                    width=\"32px\"\r\n                                    height=\"32px\"\r\n                                    type=\"circle\"\r\n                                    className=\"rounded-circle\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"ml-2\">\r\n                                <Placeholder width=\"130px\" /> \r\n                                <Placeholder width=\"70px\" height=\"10px\" className=\"mt-2\" /> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* PRIORITY */}\r\n\r\n                    <div className=\"sp1_st-list-item\">\r\n                        <div className=\"sp1_st-list-item-head\">\r\n                            <Placeholder width=\"80px\" />\r\n                        </div>\r\n                        <div className=\"sp1_st-list-item-value\">\r\n                            <Placeholder width=\"80px\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* category */}\r\n                    <div className=\"sp1_st-list-item\">\r\n                        <div className=\"sp1_st-list-item-head\">\r\n                            <Placeholder width=\"80px\" />\r\n                        </div>\r\n                        <div className=\"sp1_st-list-item-value\">\r\n                            <Placeholder width=\"100px\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GenarelLoader;\r\n","\r\nimport React from 'react'\r\nimport Button from '../../components/Button'\r\nimport InnerComment from './InnerComment'\r\n\r\nconst CommentPreview = ({isOpen, close, comment}) => {\r\n  return (\r\n    <div className='sp1_st_comment_preview'>\r\n        <div className='sp1_st_comment_panel'> \r\n            <div className='border-bottom pb-2 d-flex align-items-center'>\r\n                <Button\r\n                    aria-label=\"close-modal\"\r\n                    className='_close-modal'\r\n                    onClick={close}\r\n                >\r\n                    <i className=\"fa-solid fa-xmark\" />\r\n                </Button>\r\n            </div> \r\n\r\n\r\n            {/* comment */}\r\n            <div className='_comment_list mt-3'>\r\n                <InnerComment comment={comment} />\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CommentPreview","import * as React from 'react'\r\nimport Modal from '../../components/Modal';\r\nimport CommentPreview from './CommentPreview';\r\nimport { User } from '../../../utils/user-details';\r\nimport dayjs from 'dayjs';\r\n\r\nconst Comment = ({comment}) => {\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const user =  comment?.user ? new User(comment.user) : null;\r\n\r\n  // handle comment preview\r\n  const previewComment = (e) =>{\r\n    e.preventDefault();\r\n    setIsOpen(!isOpen);\r\n  }\r\n\r\n  return (\r\n    <>\r\n        <div className=\"d-flex justify-content-between sp1_tark_right_item align-items-start pt-1 pb-2\">\r\n         <div className='w-100 sp1_st_comment-view' style={{overflow: 'hidden'}}>\r\n            <p className='mb-0 pb-0'>\r\n              <a href={user?.getUserLink()} className='hover-underline text-primary'>\r\n                {user?.getName()}\r\n              </a> add a comment\r\n            </p>\r\n            <p\r\n              className='text-ellipsis d-flex align-items-center mb-0 pb-0'\r\n              style={{color: '#AEAFB9'}}>\r\n                {\r\n                  comment?.last_updated_at &&\r\n                  <>\r\n                    {dayjs.unix(comment?.last_updated_at).format('MMM DD, YYYY ')} at &nbsp;\r\n                    {dayjs.unix(comment?.last_updated_at).format('hh:mm a')}\r\n                  </>\r\n                }\r\n            </p>\r\n         </div>\r\n\r\n          <div className=\"d-flex align-items-center\">\r\n              <a href=\"#\" className={`mr-2 py-2 sp1_task_righ_action_btn ${isOpen ? 'text-primary' : ''}`} onClick={previewComment}><i className=\"fa-regular fa-eye\"></i></a>\r\n              {/* <a href=\"#\" className=\"mr-2 py-2 sp1_task_righ_action_btn\"><i className=\"fa-regular fa-pen-to-square\"></i></a> */}\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <Modal Modal className='sp1_st_cnt_modal' isOpen={isOpen}>\r\n          <CommentPreview isOpen={isOpen} close={() => setIsOpen(false)} comment={comment} />\r\n        </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Comment\r\n","import * as React from 'react' \r\nimport CKEditorComponent from '../../../ckeditor';\r\nimport Button from '../../components/Button';  \r\nimport UploadFilesInLine from '../../../file-upload/UploadFilesInLine';\r\nimport { useSelector } from 'react-redux';\r\nimport { useStoreCommentMutation } from '../../../services/api/SingleTaskPageApi';\r\nimport { User } from '../../../utils/user-details';\r\nimport dayjs from 'dayjs';\r\n\r\nconst CommentSendBox = ({onCommentPost, task}) => {\r\n  const [editMode, setEditMode] = React.useState(false);\r\n  const [comment, setComment] = React.useState('');\r\n  const [files, setFiles] = React.useState([]);\r\n\r\n  const auth = new User(window?.Laravel?.user);\r\n\r\n  const [storeComment, {isLoading}] = useStoreCommentMutation();\r\n \r\n  const handleEditorChange = (e, editor) => {\r\n    const data = editor.getData();\r\n    setComment(data);\r\n  } \r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const fd = new FormData();\r\n    fd.append('comment', comment);\r\n    fd.append('task_id', task?.id);\r\n    fd.append('_token', document.querySelector(\"meta[name='csrf-token']\").getAttribute(\"content\"));\r\n    Array.from(files).forEach((file) => {\r\n        fd.append('file[]', file);\r\n    });\r\n\r\n    storeComment({data: fd, task_id: task?.id}).unwrap().then(res=>{\r\n      setEditMode(false);\r\n      setComment(\"\");\r\n      setFiles('');\r\n      let comment = {...res}\r\n      comment.last_updated_at = dayjs(res?.last_updated_at).unix();\r\n      onCommentPost(comment);\r\n    }).catch(err => console.log(err))\r\n\r\n  }\r\n\r\n  const commentMode = () => {\r\n    if(editMode){\r\n      return (\r\n        <div className='w-100'>\r\n          <div className='ck-editor-holder'>\r\n              <CKEditorComponent data={comment} onChange={handleEditorChange} />\r\n            </div> \r\n\r\n            <div className='mt-2'>\r\n              <h6>Attach Files</h6>\r\n              <UploadFilesInLine \r\n                files={files} \r\n                setFiles={setFiles} \r\n                uploadInputClass='comment-file-upload'\r\n                fileWrapperClass='comment-uploaded-file'\r\n              />\r\n            </div>\r\n          <div className='mt-3 d-flex align-items-center'>\r\n            {isLoading ? \r\n                  <Button className='cursor-processing mr-2'>\r\n                      <div \r\n                          className=\"spinner-border text-white\" \r\n                          role=\"status\"\r\n                          style={{width: '18px', height: '18px' }}\r\n                      >\r\n                      </div>\r\n                      Processing...\r\n                  </Button> : \r\n                <Button className='mr-2' onClick={handleSubmit}>Send</Button>}\r\n            \r\n            <Button \r\n              variant='secondary' \r\n              onClick={() => setEditMode(false)}\r\n            >Close</Button>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return <div \r\n      onClick={() => setEditMode(true)} \r\n      className='__box'\r\n    ><span>Write a comment ...</span></div> \r\n  }\r\n\r\n  return (\r\n    <div className='sp1_task_comment_send_box'>\r\n        <>\r\n            <div className='__avatar rounded-circle mr-2' style={{width: '36px', height: '36px'}}>\r\n                <img \r\n                  src={auth?.getAvatar()}\r\n                  alt='sender_name'\r\n                  width=\"36px\"\r\n                  height=\"36px\"\r\n                  className='rounded-circle'\r\n                />\r\n            </div> \r\n        </>\r\n          <div className='__send-box'>\r\n            {commentMode()}  \r\n          </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CommentSendBox","import * as React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { usePopper } from 'react-popper';\r\nimport { motion, AnimatePresence } from 'framer-motion'; \r\n  \r\n\r\nconst CustomModal = ({toggleRef = null,  isOpen, close, children}) => {\r\n    const [modalRef, setModalRef] = React.useState(null); \r\n    const { styles, attributes } = usePopper(toggleRef, modalRef,{\r\n        placement: 'left-start',\r\n        modifiers: [ \r\n            {name: 'offset', options: {offset: [0, 0]}},\r\n        ]\r\n    })\r\n\r\n  return ( \r\n        <div \r\n            ref={setModalRef}\r\n            style={{\r\n                ...styles.popper,\r\n                pointerEvents: isOpen ? 'all' : 'none', \r\n                zIndex: 99,\r\n            }} \r\n            {...attributes.popper}\r\n        >   \r\n\r\n            <AnimatePresence>\r\n                {isOpen && (\r\n                    <motion.div \r\n                        initial={{opacity: 0}}\r\n                        animate={{opacity: 1}}\r\n                        exit={{opacity: 0}}\r\n                        className=''\r\n                    >\r\n                        {children} \r\n\r\n                        <Shadow/>\r\n                    </motion.div>\r\n                )}\r\n            </AnimatePresence>\r\n        </div> \r\n  )\r\n}\r\n\r\nexport default CustomModal \r\n\r\nconst Shadow = () => {\r\n    return ReactDOM.createPortal(\r\n        <div\r\n            style={{\r\n                width: '100vw',\r\n                height: '100vh',\r\n                position: 'fixed',\r\n                top: 0,\r\n                left: 0,\r\n                zIndex: 90,\r\n                background: 'rgba(0,0,0,.1)'\r\n            }} \r\n        />,\r\n        document.querySelector('#sp1SingleTaskPageModal')\r\n    )\r\n}","import {Placeholder} from '../../../global/Placeholder';\r\n\r\nconst InnerCommentLoader = () => {\r\n  return (\r\n    <div className='sp1_task_comment_send_box sp1_task_comment_replied pl-2 pb-2' > \r\n        <div className='__send-box flex-column align-items-start' style={{maxWidth: '100%'}}>\r\n            <div className='d-flex align-items-center'>\r\n                <div className='mr-2'>\r\n                    <div className='rounded-circle'>\r\n                        <Placeholder\r\n                            width=\"32px\"\r\n                            height=\"32px\"\r\n                            type='circle'\r\n                            className='rounded-circle'\r\n                        />\r\n                    </div> \r\n                </div> \r\n                <div>\r\n                    <Placeholder width='140px' />\r\n                    <Placeholder width='80px' height=\"10px\" className='mt-2' />\r\n                </div>\r\n            </div>\r\n\r\n            <div className='__box __reply_text w-100 my-1 text-dark'>\r\n                <Placeholder width=\"100%\" className=\"mb-2\" />\r\n                <Placeholder width=\"100%\" className=\"mb-2\" />\r\n                <Placeholder width=\"50%\" className=\"mb-2\" /> \r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InnerCommentLoader;","import * as React from 'react' \r\nimport CommentSendBox from './CommentSendBox';  \r\n// import InnerComment from './InnerComment';\r\nimport CustomModal from '../../components/CustomModal'; \r\nimport Modal from '../../components/Modal';\r\nimport { useWindowSize } from 'react-use';\r\nimport InnerCommentLoader from '../../components/loader/CommentLoader';\r\nimport Button from '../../components/Button';\r\nconst InnerComment = React.lazy(() => import('./InnerComment'));\r\n\r\nconst CommentModal = ({toggleRef = null, isOpen, close, task, comments=[], onCommentPost}) => {\r\n    const { width } = useWindowSize();\r\n    \r\n  return (\r\n   <React.Fragment>\r\n        {width > 1200 ?\r\n        <CustomModal toggleRef={toggleRef} isOpen={isOpen}> \r\n            <div className='sp1_task_comment_modal'>\r\n                <div className='border-bottom pb-2 d-flex align-items-center'>\r\n                    <Button\r\n                        aria-label=\"close-modal\"\r\n                        className='_close-modal ml-auto'\r\n                        onClick={close}\r\n                    >\r\n                        <i className=\"fa-solid fa-xmark\" />\r\n                    </Button>\r\n                </div> \r\n                <div className='d-flex flex-column pt-3'>\r\n                    <CommentSendBox  onCommentPost ={onCommentPost} task={task}/>  \r\n                    <div className='sp1_task_comment_list mt-4'>\r\n                        <div className='font-weight-bold pb-3'>Comments: </div>\r\n                        <div className='sp1_task_comment_list_items'>\r\n                            {comments?.length > 0 && comments?.map(comment => (\r\n                                <React.Fragment key={comment.id} >\r\n                                    <React.Suspense fallback={<InnerCommentLoader />}>\r\n                                        <InnerComment comment={comment} />\r\n                                    </React.Suspense> \r\n                                </React.Fragment>\r\n                            )) }\r\n                        </div>\r\n                    </div>\r\n                </div> \r\n            </div>  \r\n        </CustomModal>:\r\n         <React.Fragment>\r\n            <Modal isOpen={isOpen}>\r\n                <div className='position-relative'>\r\n                    <div className='sp1_task_comment_modal --small-device'>\r\n                    <div className='border-bottom pb-2 d-flex align-items-center'>\r\n                        <Button\r\n                            aria-label=\"close-modal\"\r\n                            className='_close-modal ml-auto'\r\n                            onClick={close}\r\n                        >\r\n                            <i className=\"fa-solid fa-xmark\" />\r\n                        </Button>\r\n                    </div> \r\n                    <div className='d-flex flex-column pt-3'>\r\n                        <CommentSendBox  onCommentPost ={onCommentPost} task={task}/>  \r\n                        <div className='sp1_task_comment_list mt-4'>\r\n                            <div className='font-weight-bold pb-3'>Comments: </div>\r\n                            <div className='sp1_task_comment_list_items'>\r\n                                {comments?.length > 0 && comments?.map(comment => (\r\n                                    <React.Fragment key={comment.id} >\r\n                                        <React.Suspense fallback={<InnerCommentLoader />}>\r\n                                            <InnerComment comment={comment} />\r\n                                        </React.Suspense> \r\n                                    </React.Fragment>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </div> \r\n                    </div>\r\n                </div>  \r\n            </Modal>\r\n         </React.Fragment>\r\n        }\r\n   </React.Fragment> \r\n  )\r\n}\r\n\r\nexport default CommentModal","import React from 'react'\r\nimport Modal from '../../components/Modal'\r\nimport Button from '../../components/Button'\r\nimport CKEditorComponent from '../../../ckeditor'\r\n\r\nconst CommentWritingModal = ({isOpen, close}) => {\r\n  return (\r\n    <Modal isOpen={isOpen} className=\"sp1_st_cnt_modal\">\r\n        <div className='sp1_st_comment_preview'>\r\n            <div className='sp1_st_comment_panel' style={{maxWidth: '60vw', minHeight: '50vh'}}> \r\n                <div className='border-bottom pb-2 d-flex'>\r\n                    <Button\r\n                        aria-label=\"close-modal\"\r\n                        className='_close-modal'\r\n                        onClick={close}\r\n                    >\r\n                        <i className=\"fa-solid fa-xmark\" />\r\n                    </Button>\r\n                </div> \r\n\r\n\r\n                {/* comment */}\r\n                <div className='mt-3 w-100'>\r\n                   <div className=\"sp1_st_write_comment-sendbox\">\r\n                       <div style={{minWidth: '48px'}}>\r\n                            <img \r\n                                src=\"/user-uploads/avatar/40164f31bc7d575c7dbe99b24b408d75.png\" \r\n                                alt=\"\"\r\n                                width={48}\r\n                                height={48}\r\n                                className='rounded-circle'\r\n                            />\r\n                       </div> \r\n                         \r\n                        <div> \r\n                            <div className='sp1_st_write_comment_editor'>\r\n                                <CKEditorComponent/>\r\n                            </div> \r\n                            <div className='py-3'>\r\n                                <div>Attach Files here (if need) <i className='fa-solid fa-paperclip ml-1 text-primary' /></div>\r\n                                <div className='sp1_st_write_comment_editor_attach'>\r\n                                    <i className=\"fa-solid fa-cloud-arrow-up\"></i>\r\n                                    <span>Attach Files</span>\r\n                                </div> \r\n                            </div>\r\n                        </div> \r\n                   </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default CommentWritingModal","import * as React from 'react'\r\nimport Comment from './Comment'\r\nimport CommentModal from './CommentModal';\r\nimport Button from '../../components/Button';\r\nimport CommentWritingModal from './CommentWritingModal';\r\nimport { useLazyGetTaskDetailsQuery } from '../../../services/api/SingleTaskPageApi';\r\nimport _ from 'lodash';\r\n \r\n  \r\nconst CommentSection = ({task, isLoading}) => {\r\n  const [comments, setComments] = React.useState([]);\r\n  const [modalIsOpen, setModalIsOpen] = React.useState(false);\r\n  const [openAddCommentModal, setOpenAddCommentModal] = React.useState(false);\r\n  const [modalToggleRef, setModalToggleRef] = React.useState(null);\r\n  \r\n  const toggleModalButton = () => setModalIsOpen(!modalIsOpen);\r\n  const toggleAddCommentModal = () => setOpenAddCommentModal(!openAddCommentModal);\r\n  const closeAddCommentModal = () => setOpenAddCommentModal(false);\r\n\r\n  const [getTaskDetails, {isFetching}] = useLazyGetTaskDetailsQuery()\r\n\r\n  // if task notes fetch completed store data into redux store\r\n  React.useEffect(()=> {\r\n    if(task && task.id){\r\n      getTaskDetails(`/${task?.id}/json?mode=task_comment`)\r\n      .unwrap()\r\n      .then(res => {\r\n          let r = _.orderBy([...res], \"id\", \"desc\")\r\n          setComments(r);\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n    } \r\n  }, []);\r\n\r\n \r\n\r\n  // on comment post\r\n  const onCommentPost = (comment) => { \r\n    const _comments = [...comments];\r\n    _comments.unshift(comment);\r\n    setComments(_comments)\r\n  }\r\n  \r\n  return (\r\n    <>\r\n        <div \r\n            className='sp1_task_right_card mb-3'\r\n            ref={setModalToggleRef} \r\n            style={{zIndex:modalIsOpen ? '99': '' }}\r\n        >\r\n            <CommentModal \r\n              isOpen={modalIsOpen}\r\n              toggleRef={modalToggleRef} \r\n              comments={comments}\r\n              task={task}\r\n              close={() => setModalIsOpen(false)}\r\n              onCommentPost={onCommentPost}\r\n            />\r\n\r\n            <button \r\n              aria-label='openCommentModalButton' \r\n              className='sp1_task_right_dl_toggle'\r\n              onClick={toggleModalButton} \r\n              style={{zIndex:modalIsOpen ? '110': '' }}\r\n            >\r\n                <i className={`fa-solid fa-circle-chevron-${modalIsOpen ? 'right' : 'left'}`} style={{color: \"#276fec\"}} />\r\n            </button>\r\n\r\n\r\n            <div className='d-flex border-bottom pb-2 align-items-center justify-content-between mb-2 font-weight-bold'>\r\n                <h6 className=\"f-16 mb-0\">Comment</h6>\r\n                {(isLoading || isFetching) && \r\n                      <div \r\n                          className=\"spinner-border text-dark ml-2 mr-auto\" \r\n                          role=\"status\"\r\n                          style={{\r\n                              width: '16px',\r\n                              height: '16px',\r\n                              border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                              borderRightColor: 'transparent' \r\n                          }}\r\n                      />\r\n                }\r\n                <Button\r\n                    variant='tertiary'\r\n                    className=\"sp1_tark_add_item\" \r\n                    aria-label=\"addButton\"\r\n                    onClick={toggleModalButton}\r\n                > \r\n                    <i \r\n                        className=\"fa-solid fa-plus\" \r\n                        style= {{fontSize: '12px'}} \r\n                    />  \r\n                    Comment \r\n                </Button>\r\n\r\n                <CommentWritingModal \r\n                  isOpen={openAddCommentModal} \r\n                  close={closeAddCommentModal}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"sp1_task_right_card--body\">\r\n                \r\n\r\n                { (!isFetching && !isLoading) ? comments?.length > 0 ? comments?.map(comment => ( \r\n                  <Comment key={comment.id} comment={comment} />\r\n                )): <div\r\n                  className='d-flex align-items-center justify-content-center'\r\n                  style={{\r\n                    color: '#B4BCC4',\r\n                    fontSize: '15px',\r\n                    textAlign: 'center',\r\n                    height: '100%',\r\n                    width: '100%',\r\n                  }}\r\n                >\r\n                    No Comment is Avaliable\r\n                  </div> : \r\n                  <div className='d-flex align-items-center justify-content-center'\r\n                    style={{\r\n                      color: '#5A6169',\r\n                      fontSize: '15px',\r\n                      textAlign: 'center',\r\n                      height: '100%',\r\n                      width: '100%',\r\n                    }}\r\n                  > \r\n                    <div \r\n                          className=\"spinner-border text-dark ml-2\" \r\n                          role=\"status\"\r\n                          style={{\r\n                              width: '16px',\r\n                              height: '16px',\r\n                              border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                              borderRightColor: 'transparent',\r\n                              marginRight: '10px'\r\n                          }}\r\n                      />\r\n                    Loading...\r\n                  </div> }\r\n              </div> \r\n\r\n\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CommentSection ","import dayjs from \"dayjs\";\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { AiFillEyeInvisible, AiFillEye } from \"react-icons/ai\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst DailySubmissionItem = ({ item, setModalData, modalData }) => {\r\n    // const [show,setShow] = useState(false);\r\n    const { task } = useSelector((s) => s.subTask);\r\n\r\n    if (!item) return null;\r\n\r\n    return (\r\n        <tr\r\n            onClick={() => {\r\n                setModalData((prev) => {\r\n                    if (prev?.id === item.id) {\r\n                        return null;\r\n                    } else {\r\n                        return item;\r\n                    }\r\n                });\r\n            }}\r\n            className=\"sp1_tlr_tr\"\r\n            style={{\r\n                verticalAlign: \"middle\",\r\n                margin: \"0 auto\",\r\n                cursor: \"pointer\",\r\n            }}\r\n        >\r\n            <td\r\n                className=\"sp1_tlr_td\"\r\n                style={{ minWidth: \"100px\", textAlign: \"left\" }}\r\n            >\r\n                <span className=\"singleline-ellipsis\">\r\n                    <span className=\"text-primary\">Task#{task.id}</span>\r\n                    {\" submitted by \"}\r\n                    <span className=\"text-primary\">{item.developer_name}</span>\r\n                </span>\r\n            </td>\r\n            <td className=\"sp1_tlr_td\" style={{ minWidth: \"100px\" }}>\r\n                {dayjs(item.submission_creation_date).format(\"MMM DD, YYYY\")}\r\n            </td>\r\n            <td className=\"sp1_tlr_td\" style={{ minWidth: \"50px\" }}>\r\n                {modalData?.id === item.id ? (\r\n                    <AiFillEyeInvisible\r\n                        style={{\r\n                            height: \"20px\",\r\n                            width: \"20px\",\r\n                            cursor: \"pointer\",\r\n                        }}\r\n                    />\r\n                ) : (\r\n                    <AiFillEye\r\n                        style={{\r\n                            height: \"20px\",\r\n                            width: \"20px\",\r\n                            cursor: \"pointer\",\r\n                        }}\r\n                    />\r\n                )}\r\n            </td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default DailySubmissionItem;\r\n","import { useRef } from \"react\";\r\nimport { useClickAway, useWindowSize } from \"react-use\";\r\nimport Button from \"../../components/Button\";\r\nimport CustomModal from \"../../components/CustomModal\";\r\nimport Modal from \"../../components/Modal\";\r\nimport { get_data_dailySubmission } from \"./fake-data/data_dailySubmission\";\r\nimport DailySubmissionItem from \"./DailySubmissionItem\";\r\n\r\nconst DailysubmissionDrawerTable = ({ isOpen, close, toggle, data, modalData, setModalData }) => {\r\n    const ref = useRef(null);\r\n    const { width: deviceWidth } = useWindowSize();\r\n    // useClickAway(ref, close);\r\n\r\n    // console.log(get_data_dailySubmission());\r\n\r\n    const content = () => {\r\n        return (\r\n            <div ref={ref} className=\"sp1-subtask-form --modal-panel\">\r\n                <div className='sp1-subtask-form --modal-panel-header'>\r\n                    <h6>Daily Submission</h6>\r\n                    <Button\r\n                        aria-label=\"close-modal\"\r\n                        className='_close-modal'\r\n                        onClick={close}\r\n                    >\r\n                        <i className=\"fa-solid fa-xmark\" />\r\n                    </Button>\r\n                </div>\r\n\r\n                <div className=\"sp1-subtask-form --modal-panel-body\">\r\n                    <table className=\"mt-3 sp1_tlr_table sp1_tlr_tbody\">\r\n                        {/* {deviceWidth > 800 ? <Table data={data} />: <CardView data={data} />} */}\r\n                        {\r\n                            data?.map((singleData) => (\r\n                                <DailySubmissionItem key={singleData.id} item={singleData} setModalData={setModalData} modalData={modalData} />\r\n                            ))\r\n                        }\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    if (deviceWidth > 1200) {\r\n        return (\r\n            <CustomModal isOpen={isOpen} toggleRef={toggle}>\r\n                {content()}\r\n            </CustomModal>\r\n        );\r\n    } else {\r\n        return (\r\n            <Modal isOpen={isOpen}>\r\n                {content()}\r\n            </Modal>\r\n        );\r\n    }\r\n};\r\n\r\nexport default DailysubmissionDrawerTable;","import { convertTime } from \"../../../../utils/converTime\";\r\n\r\nconst timeFormatter = (time = '') => {\r\n    // console.log(time);\r\n    const [year, month, date] = time.split(\" \")[0].split(\"-\");\r\n    let month_name = '';\r\n    switch (month) {\r\n        case '01':\r\n            month_name = \"Jan\";\r\n            break;\r\n\r\n        case '02':\r\n            month_name = \"Feb\";\r\n            break;\r\n\r\n        case '03':\r\n            month_name = \"Mar\";\r\n            break;\r\n\r\n        case '04':\r\n            month_name = \"Apr\";\r\n            break;\r\n\r\n        case '05':\r\n            month_name = \"May\";\r\n            break;\r\n\r\n        case '06':\r\n            month_name = \"Jun\";\r\n            break;\r\n\r\n        case '07':\r\n            month_name = \"Jul\";\r\n            break;\r\n\r\n        case '08':\r\n            month_name = \"Aug\";\r\n            break;\r\n\r\n        case '09':\r\n            month_name = \"Sep\";\r\n            break;\r\n\r\n        case '10':\r\n            month_name = \"Oct\";\r\n            break;\r\n\r\n        case '11':\r\n            month_name = \"Nov\";\r\n            break;\r\n\r\n        case '12':\r\n            month_name = \"Dec\";\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n    return `${month_name} ${date}, ${year}`\r\n}\r\n\r\n\r\nexport const columnSchema = [\r\n    {\r\n        id: 'report_date',\r\n        header: 'Report Date',\r\n        draggable: true,\r\n        // accessor: 'report_date',\r\n        accessorKey: 'submission_creation_date',\r\n        cell: (cell) => (\r\n            <div style={{ padding: '0 0.5rem' }}>\r\n                {timeFormatter(cell.getValue())}\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 'page_link',\r\n        header: 'Page Link',\r\n        draggable: true,\r\n        // accessor: 'page_link',\r\n        accessorKey: 'link_name',\r\n        cell: (cell) => (\r\n            <div style={{ padding: '0 0.5rem' }}>\r\n                <a href={cell.getValue()} target=\"_blank\">\r\n                View Link\r\n                </a>\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 'sections',\r\n        header: 'Sections',\r\n        draggable: true,\r\n        // accessor: 'sections',\r\n        accessorKey: 'section_name',\r\n        cell: (cell) => (\r\n            <div style={{ padding: '0 0.5rem' }}>\r\n                {cell.getValue()}\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 'comment',\r\n        header: 'Comment',\r\n        draggable: true,\r\n        // accessor: 'comment',\r\n        accessorKey: 'comment',\r\n        cell: (cell) => (\r\n            <div style={{ minWidth: '20rem', maxWidth: '20rem', width: '100%' }} dangerouslySetInnerHTML={{__html:cell.getValue()}}/>\r\n        )\r\n    },\r\n    {\r\n        id: 'total_time_spent',\r\n        header: 'Total Time Spent',\r\n        draggable: true,\r\n        // accessor: 'total_time_spent',\r\n        accessorKey: 'hours_spent',\r\n        cell: (cell) => (\r\n            <div style={{ padding: '0 0.5rem' }}>\r\n                {convertTime(cell.getValue())}\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 'attachment_url',\r\n        header: 'Screenshots/Screen records of the sections',\r\n        draggable: true,\r\n        // accessor: 'attachment_url',\r\n        accessorKey: 'attachments',\r\n        cell: (cell) => (\r\n            <div style={{ padding: '0 0.5rem' }}>\r\n                <a href={cell.getValue()} target=\"_blank\"></a>\r\n                View Link\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 'site_url',\r\n        header: `Working/Staging Site's URL`,\r\n        draggable: true,\r\n        // accessor: 'site_url',\r\n        accessorKey: 'site_url',\r\n        cell: (cell) => (\r\n            <div style={{ padding: '0 0.5rem' }}>\r\n                <a href={cell.getValue()} target=\"_blank\">\r\n                    View Link\r\n                </a>\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 'frontend_password',\r\n        header: 'Frontend Password',\r\n        draggable: true,\r\n        // accessor: 'frontend_password',\r\n        accessorKey: 'frontend_password',\r\n        cell: (cell) => (\r\n            <div style={{ padding: '0 0.5rem' }}>\r\n                {cell.getValue()?cell.getValue():'No Password'}\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 'submission_date',\r\n        header: 'Report Submission Date',\r\n        draggable: true,\r\n        // accessor: 'submission_date',\r\n        accessorKey: 'submission_creation_date',\r\n        cell: (cell) => (\r\n            <div style={{ padding: '0 0.5rem' }}>\r\n                {timeFormatter(cell.getValue())}\r\n            </div>\r\n        )\r\n    }\r\n]","import { useRef } from \"react\";\r\nimport { useClickAway, useWindowSize } from \"react-use\";\r\nimport Button from \"../../components/Button\";\r\nimport CustomModal from \"../../components/CustomModal\";\r\nimport Modal from \"../../components/Modal\";\r\nimport { get_data_dailySubmission } from \"./fake-data/data_dailySubmission\";\r\nimport DailySubmissionItem from \"./DailySubmissionItem\";\r\nimport DataTable from \"../../../global/table/DataTable\";\r\nimport { columnSchema } from \"./drawer-table-support/Single_user_submission_table_column\";\r\n\r\nconst SingleUserSubmissionTableDrawer = ({ isOpen, close, toggle, data, setModalData }) => {\r\n    const ref = useRef(null);\r\n    const { width: deviceWidth } = useWindowSize();\r\n    // useClickAway(ref, close);\r\n\r\n    const content = () => {\r\n        return (\r\n            <div ref={ref} className=\"sp1-subtask-form --modal-panel\">\r\n                <div className='sp1-subtask-form --modal-panel-header'>\r\n                    <h6>Daily Submission</h6>\r\n                    <Button\r\n                        aria-label=\"close-modal\"\r\n                        className='_close-modal'\r\n                        onClick={() => {\r\n                            setModalData(null);\r\n                        }}\r\n                    >\r\n                        <i className=\"fa-solid fa-xmark\" />\r\n                    </Button>\r\n                </div>\r\n\r\n                <div className=\"sp1-subtask-form --modal-panel-body\">\r\n                    <DataTable\r\n                        tableData={data?[data]:[]}\r\n                        tableColumns={columnSchema}\r\n                        tableName=\"single-user-submission-table\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    if (deviceWidth > 1200) {\r\n        return (\r\n            <CustomModal isOpen={isOpen} toggleRef={toggle}>\r\n                {content()}\r\n            </CustomModal>\r\n        );\r\n    } else {\r\n        return (\r\n            <Modal isOpen={isOpen}>\r\n                {content()}\r\n            </Modal>\r\n        );\r\n    }\r\n};\r\n\r\nexport default SingleUserSubmissionTableDrawer;","import { useEffect, useState } from \"react\";\r\nimport DailysubmissionDrawerTable from \"./DailysubmissionDrawerTable\";\r\nimport DailySubmissionItem from \"./DailySubmissionItem\";\r\nimport SingleUserSubmissionTableDrawer from \"./SingleUserSubmissionTableDrawer\";\r\nimport { useGetDailyTasksSubmissionQuery } from \"../../../services/api/dailySubmissionApiSlice\";\r\n\r\n\r\nconst DailySubmissionSection = ({ task }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [modalTableIsOpen, setModalTableIsOpen] = useState(false);\r\n  const [modalRefButton, setModalRefButton] = useState(null);\r\n  const [singleUserSubmissionTableDrawerRef, setSingleUserSubmissionTableDrawerRef] = useState(null);\r\n  const [modalData, setModalData] = useState(null);\r\n\r\n\r\n  const { data, isLoading } = useGetDailyTasksSubmissionQuery(task?.id);\r\n    // control modal\r\n  const toggle = () => setIsOpen(prev => !prev);\r\n  const close = () => setIsOpen(false);\r\n\r\n  // const modalTableToggle = () => setModalTableIsOpen(prev=> !prev);\r\n  const modalTableOpen = () => setModalTableIsOpen(true);\r\n  const modalTableClose = () => setModalTableIsOpen(false);\r\n\r\n  useEffect(() => {\r\n    if (modalData) {\r\n      modalTableOpen();\r\n    } else {\r\n      modalTableClose();\r\n    }\r\n  }, [modalData])\r\n\r\n  const handleModalRef = (ref) => {\r\n    setModalRefButton(ref);\r\n    setSingleUserSubmissionTableDrawerRef(ref);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className='sp1_task_right_card mb-3'\r\n      ref={handleModalRef}\r\n      style={{ zIndex: isOpen ? '99' : '' }}>\r\n\r\n      <div className='d-flex border-bottom pb-2 align-items-center justify-content-between mb-2 font-weight-bold'>\r\n        <span className=\"f-16\">Daily Submission</span>\r\n        {isLoading &&\r\n          <div\r\n            className=\"spinner-border text-dark ml-2 mr-auto\"\r\n            role=\"status\"\r\n            style={{\r\n              width: '16px',\r\n              height: '16px',\r\n              border: '0.14em solid rgba(0, 0, 0, .25)',\r\n              borderRightColor: 'transparent'\r\n            }}\r\n          />\r\n        }\r\n      </div>\r\n\r\n\r\n      {/* side drop toggle button */}\r\n      {/* {_.size(timeLogs) > 0 && } */}\r\n      <button\r\n        aria-label='openCommentModalButton'\r\n        className='sp1_task_right_dl_toggle'\r\n        onClick={toggle}\r\n        style={{ zIndex: isOpen ? 110 : '' }}\r\n      >\r\n        <i\r\n          className={`fa-solid fa-circle-chevron-${isOpen ? 'right' : 'left'}`}\r\n          style={{ color: \"#276fec\" }}\r\n        />\r\n      </button>\r\n      {/* side drop toggle button end */}\r\n\r\n\r\n      <DailysubmissionDrawerTable\r\n        isOpen={isOpen}\r\n        close={close}\r\n        toggle={modalRefButton}\r\n        data={data?.daily_submissions}\r\n        modalData={modalData}\r\n        setModalData={setModalData} />\r\n\r\n      <SingleUserSubmissionTableDrawer\r\n        isOpen={modalTableIsOpen}\r\n        close={modalTableClose}\r\n        toggle={singleUserSubmissionTableDrawerRef}\r\n        data={modalData}\r\n        setModalData={setModalData} />\r\n\r\n\r\n      <div className=\"sp1_task_right_card--body\">\r\n        {data?.daily_submissions.length > 0 ?\r\n          <table className=\"sp1_tlr_table\">\r\n            <tbody className=\"sp1_tlr_tbody\">\r\n              {!isLoading &&\r\n                data?.daily_submissions?.map((singleData) => (\r\n                  <DailySubmissionItem key={singleData.id} item={singleData} setModalData={setModalData} modalData={modalData} />\r\n                ))\r\n              }\r\n            </tbody>\r\n          </table>\r\n          :\r\n          <div\r\n            className=\"d-flex align-items-center justify-content-center\"\r\n            style={{\r\n              color: \"#B4BCC4\",\r\n              fontSize: \"15px\",\r\n              textAlign: \"center\",\r\n              height: \"100%\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            No Submission is Available\r\n          </div>\r\n        }\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DailySubmissionSection;","import React from 'react'\r\nimport { Placeholder } from '../../../global/Placeholder'\r\n\r\nconst InnerHistoryItemLoader = () => {\r\n  return (\r\n    <div className=\"d-flex align-items-center sp1_tark_right_item py-2\">\r\n        <div className=''>\r\n            <Placeholder\r\n              width={48}\r\n              height={48}\r\n            />\r\n        </div>\r\n        <div className='px-3 w-100'>\r\n            <Placeholder className='mb-2'/>  \r\n            <Placeholder/>\r\n        </div>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default InnerHistoryItemLoader ","import React, {lazy} from 'react'\r\nimport CustomModal from '../../components/CustomModal'\r\nimport Button from '../../components/Button';\r\nconst InnerHistoryItem = lazy(() => import('./InnerHistoryItem'));\r\nimport InnerHistoryItemLoader from './InnerHistoryItemLoader';\r\nimport Modal from '../../components/Modal';\r\nimport { useWindowSize } from \"react-use\";\r\n\r\n\r\nconst Histories = ({isOpen, close, toggle, data = []}) => {\r\n  const {width: deviceWidth} = useWindowSize();\r\n  \r\n  const content = () => {\r\n    return (\r\n        <div className='sp1-subtask-form --modal-panel'>\r\n            <div className='sp1-subtask-form --modal-panel-header'> \r\n                 <h6> History </h6> \r\n                <Button\r\n                    aria-label=\"close-modal\"\r\n                    className='_close-modal'\r\n                    onClick={close}\r\n                >\r\n                    <i className=\"fa-solid fa-xmark\" />\r\n                </Button> \r\n            </div>\r\n\r\n            <div className=\"sp1-subtask-form --modal-panel-body\">\r\n                <div className='mt-3'>\r\n                    {data ? data.map(d => (\r\n                        <React.Fragment key={d.id}>\r\n                            <React.Suspense fallback={<InnerHistoryItemLoader />}>\r\n                                <InnerHistoryItem history={d} />\r\n                            </React.Suspense>\r\n                        </React.Fragment>\r\n                    )):null}\r\n                </div>      \r\n            </div>\r\n        </div>\r\n    )\r\n  }\r\n \r\n\r\n  if(deviceWidth > 1200){\r\n    return (\r\n        <CustomModal isOpen={isOpen} toggleRef={toggle}>\r\n            <React.Fragment>{content()}</React.Fragment>       \r\n        </CustomModal>\r\n    );\r\n    }else{\r\n        return (\r\n            <Modal isOpen={isOpen}>\r\n                <React.Fragment>{content()}</React.Fragment>       \r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Histories\r\n","import React, {lazy, Suspense} from 'react'\r\nconst HistoryItem = lazy(() => import('./HistoryItem'));\r\nimport { Placeholder } from '../../../global/Placeholder';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { storeHistories } from '../../../services/features/subTaskSlice';\r\nimport { useLazyGetTaskDetailsQuery } from '../../../services/api/SingleTaskPageApi';\r\nimport Histories from './Histories';\r\nimport useSWR from 'swr';\r\n\r\nconst fetcher = (url) => axios.get(url).then(res => res.data); \r\n\r\nconst HistorySection = () => {\r\n  const {task, histories} = useSelector(s => s.subTask);\r\n  const [modalRefButton, setModalRefButton] = React.useState(null); \r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const { data, error, isLoading:isFetching } = useSWR(`/account/task/${task.id}/json?mode=task_history`, fetcher, {\r\n    refreshInterval: 5000\r\n  });\r\n\r\n  //fetch all task \r\n  // const [getTaskDetails, {isFetching}] = useLazyGetTaskDetailsQuery('', {\r\n  //   skip: histories?.length\r\n  // })\r\n\r\n   //if task notes fetch completed store data into redux store\r\n  //  React.useEffect(()=> {\r\n  //   if(task && task.id){\r\n  //     getTaskDetails(`/${task?.id}/json?mode=task_history`)\r\n  //     .unwrap()\r\n  //     .then(res => {\r\n  //       if(res){\r\n  //         dispatch(storeHistories(res));\r\n  //       }\r\n  //     })\r\n  //     .catch(err => {\r\n  //       console.log(err)\r\n  //     })\r\n  //   } \r\n  // }, [task]); \r\n\r\n  React.useEffect(()=> {\r\n    if(!isFetching && data){\r\n      dispatch(storeHistories(data));\r\n    }  \r\n  }, [data, isFetching]); \r\n  \r\n\r\n  // control modal\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  const close = () => setIsOpen(false);\r\n\r\n\r\n  return (\r\n    <div className='sp1_task_right_card mb-3' ref={setModalRefButton} style={{zIndex: isOpen ? 99 : ''}}>\r\n        <div className='d-flex border-bottom pb-2 align-items-center justify-content-between mb-2 font-weight-bold'>\r\n        <span className=\"f-16\">History</span> \r\n        {isFetching && \r\n                <div \r\n                    className=\"spinner-border text-dark ml-2 mr-auto\" \r\n                    role=\"status\"\r\n                    style={{\r\n                        width: '16px',\r\n                        height: '16px',\r\n                        border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                        borderRightColor: 'transparent' \r\n                    }}\r\n                />\r\n          }\r\n        </div>\r\n\r\n\r\n        {/* side drop toggle button */}\r\n          <button \r\n            aria-label='openCommentModalButton'  \r\n            className='sp1_task_right_dl_toggle'\r\n            onClick={toggle}\r\n            style={{zIndex: isOpen ? '110' : ''}}\r\n          >\r\n            <i \r\n              className={`fa-solid fa-circle-chevron-${ isOpen ? 'right' : 'left'}`} \r\n              style={{color: \"#276fec\"}} \r\n            />\r\n        </button>\r\n        {/* side drop toggle button end */}\r\n \r\n          {/* histories details */}\r\n          <Histories\r\n            isOpen={isOpen}\r\n            close={close}\r\n            data={histories} \r\n            toggle={modalRefButton}\r\n          />\r\n\r\n        <div className=\"sp1_task_right_card--body\">\r\n          {!isFetching ? histories ? histories.map( history => (\r\n            <React.Fragment key={history.id}>\r\n              <Suspense fallback={<div className='sp1_tark_right_item py-2 '> <Placeholder /> </div>}>\r\n                <HistoryItem history={history} />\r\n              </Suspense>\r\n            </React.Fragment>\r\n          )):<div\r\n            className='d-flex align-items-center justify-content-center'\r\n            style={{\r\n              color: '#B4BCC4',\r\n              fontSize: '15px',\r\n              textAlign: 'center',\r\n              height: '100%',\r\n              width: '100%',\r\n            }}\r\n          >\r\n              Empty History\r\n          </div> : \r\n          <div className='d-flex align-items-center justify-content-center'\r\n            style={{\r\n              color: '#5A6169',\r\n              fontSize: '15px',\r\n              textAlign: 'center',\r\n              height: '100%',\r\n              width: '100%',\r\n            }}\r\n          > \r\n              <div \r\n                    className=\"spinner-border text-dark ml-2\" \r\n                    role=\"status\"\r\n                    style={{\r\n                        width: '16px',\r\n                        height: '16px',\r\n                        border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                        borderRightColor: 'transparent',\r\n                        marginRight: '10px'\r\n                    }}\r\n                />\r\n              Loading...\r\n          </div> }\r\n        </div>\r\n\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default HistorySection","import { Link } from \"react-router-dom\"\r\n\r\nconst Note = ({note}) => {\r\n  return (\r\n    <div className=\"d-flex align-items-center justify-content-between sp1_tark_right_item\">\r\n        <div className='w-100 text-ellipsis'>\r\n          {note?.title || 'Untitled'} \r\n        </div>\r\n\r\n        <div className=\"d-flex align-items-center\">\r\n            <Link to={`?note=${note.id}&type=view`} className=\"mr-2 py-2 sp1_task_righ_action_btn\">\r\n              <i className=\"fa-regular fa-eye\"></i>\r\n            </Link>\r\n            <Link to={`?note=${note.id}&type=edit`} className=\"mr-2 py-2 sp1_task_righ_action_btn\">\r\n              <i className=\"fa-regular fa-pen-to-square\"></i>\r\n            </Link>\r\n        </div>\r\n    </div> \r\n  )\r\n}\r\n\r\nexport default Note","import React from 'react'\r\n\r\nconst Input = ({\r\n    label,\r\n    id,\r\n    readOnly=false,\r\n    placeholder='',\r\n    inputClass='',\r\n    labelClass='',\r\n    type='text',\r\n    className='',\r\n    value,\r\n    defaultValue,\r\n    onChange,\r\n    error,\r\n    ...rest\r\n}) => {\r\n  return (\r\n    <div className={`form-group my-3 w-100 ${className}`}>\r\n        <label\r\n            htmlFor={id}\r\n            className={`f-14 text-dark-gray mb-1 ${labelClass}`}\r\n            data-label=\"true\"\r\n        >\r\n            {label}\r\n            {rest.required && <sup className='f-14 mr-1'>*</sup> }\r\n        </label>\r\n        <input\r\n            type={type}\r\n            className={`form-control singleline-ellipsis height-35 w-100 f-14 ${inputClass}`}\r\n            placeholder={placeholder}\r\n            id={id}\r\n            value={value}\r\n            defaultValue={defaultValue}\r\n            onChange={onChange}\r\n            readOnly={readOnly}\r\n            onWheel={e => e.currentTarget.blur()}\r\n            {...rest}\r\n        />\r\n\r\n        {error? <div className='' style={{color: 'red'}}> {error} </div> : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Input\r\n","import * as React from 'react' \r\nimport Button from '../../components/Button' \r\nimport _ from 'lodash'\r\nimport CKEditorComponent from '../../../ckeditor'\r\nimport UploadFilesInLine from '../../../file-upload/UploadFilesInLine'\r\nimport { useCrateNoteMutation } from '../../../services/api/SingleTaskPageApi'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { storeNotes } from '../../../services/features/subTaskSlice'\r\nimport Input from '../../components/form/Input'\r\nimport CustomModal from '../../components/CustomModal'\r\nimport { useWindowSize } from 'react-use'\r\nimport Modal from '../../components/Modal'\r\n\r\n\r\n\r\n\r\n\r\nconst CreateNote = ({isOpen, close,toggleRef}) => {\r\n  const {task, notes} = useSelector(s => s.subTask); \r\n  const [files, setFiles] = React.useState([]);\r\n  const [title, setTitle] = React.useState('');\r\n  const [errTitle, setErrTitle] = React.useState(null);\r\n  const [note,setNote] = React.useState('');\r\n  const dispatch = useDispatch();  \r\n  const { width: deviceWidth} = useWindowSize();\r\n\r\n\r\n const [crateNote, {isLoading}] = useCrateNoteMutation();\r\n\r\n  // handle onchange\r\nconst handleChange = (e, setState) =>{\r\n    e.preventDefault();\r\n    let value = e.target.value;\r\n    setState(value);\r\n}\r\n\r\n  const handleSubmit = e => { \r\n    e.preventDefault();\r\n    if(!title){\r\n        setErrTitle('Title name required');\r\n        return null;\r\n    }\r\n    const fd = new FormData(); \r\n    fd.append('title', title);\r\n    fd.append('note', note);\r\n    fd.append('taskId', task?.id);\r\n    fd.append('_token', document.querySelector(\"meta[name='csrf-token']\").getAttribute(\"content\"));\r\n    Array.from(files).forEach((file) => {\r\n        fd.append('file[]', file);\r\n    });\r\n\r\n    \r\n    crateNote(fd).unwrap().then(res => {\r\n            if(res?.status === 'success'){\r\n                let _notes = [...notes];\r\n                _notes.push(res?.note);\r\n                dispatch(storeNotes(_notes));\r\n\r\n                Swal.fire({\r\n                    position: 'center',\r\n                    icon: 'success',\r\n                    title: \"Data has been stored Successfully\",\r\n                    showConfirmButton: false,\r\n                    timer: 2500\r\n                }) \r\n\r\n                close();\r\n            }\r\n    }).catch((err) => {\r\n        console.log(err)\r\n    })\r\n\r\n  }\r\n\r\n\r\n  const handleEditorChange = (e, editor) => {\r\n    const data = editor.getData();\r\n    setNote(data);\r\n  }  \r\n\r\n  const content = () => {\r\n    return (  \r\n        <div className='sp1-subtask-form --modal-panel'>\r\n            <div className='sp1-subtask-form --modal-panel-header'> \r\n                 <h6>Write Notes</h6> \r\n                <Button\r\n                    aria-label=\"close-modal\"\r\n                    className='_close-modal'\r\n                    onClick={close}\r\n                >\r\n                    <i className=\"fa-solid fa-xmark\" />\r\n                </Button> \r\n            </div>\r\n\r\n                <div className=\"sp1-subtask-form --modal-panel-body\">\r\n                    <div className='py-3'>\r\n                        <Input \r\n                            id='title'\r\n                            label=\"Title\"\r\n                            type=\"text\" \r\n                            placeholder='Enter a task title'\r\n                            name='title'\r\n                            required={true}\r\n                            value={title}\r\n                            error= {errTitle}\r\n                            onChange={e => handleChange(e, setTitle)}\r\n                        />\r\n\r\n                        <div className='sp1_st_write_comment_editor' style={{minHeight: '100px'}}>\r\n                            <h6 className='mb-3 f-14' style={{color:'#777'}}>Write Note</h6>\r\n                            <CKEditorComponent onChange={handleEditorChange}/>\r\n                        </div>\r\n\r\n                        <div className='mt-3'>\r\n                            <h6 className='mb-3 f-14' style={{color:'#777'}}>Upload Files</h6>\r\n                            <UploadFilesInLine  \r\n                                files={files} \r\n                                setFiles={setFiles} \r\n                            />\r\n                        </div>\r\n\r\n\r\n                        <div className=\"mt-5\"> \r\n                                <div className=\"d-flex align-items-center\">\r\n                                    <Button\r\n                                        variant='secondary'\r\n                                        className='mr-2'\r\n                                        onClick={close}\r\n                                    > \r\n                                        Cancel\r\n                                    </Button> \r\n        \r\n                                    {!isLoading ? (\r\n                                        <Button onClick={handleSubmit}>\r\n                                            <i className=\"fa-regular fa-paper-plane\"></i>\r\n                                            Keep as Notes\r\n                                        </Button>\r\n                                    ) : (\r\n                                    <Button className='cursor-processing'>\r\n                                        <div \r\n                                            className=\"spinner-border text-white\" \r\n                                            role=\"status\"\r\n                                            style={{\r\n                                                width: '18px',\r\n                                                height: '18px', \r\n                                            }}\r\n                                        >\r\n                                        </div>\r\n                                        Processing...\r\n                                    </Button>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            </div> \r\n    )\r\n  }\r\n\r\n  if(deviceWidth > 1200){\r\n    return (\r\n        <CustomModal \r\n            isOpen={isOpen} \r\n            toggleRef={toggleRef}\r\n        > \r\n           <React.Fragment>\r\n            {content()}\r\n           </React.Fragment>\r\n        </CustomModal>\r\n      )\r\n }else{\r\n    return (\r\n        <Modal isOpen={isOpen}> \r\n            <React.Fragment>\r\n                {content()}\r\n            </React.Fragment>\r\n        </Modal>\r\n      )\r\n }\r\n\r\n}\r\n\r\nexport default CreateNote ","import * as React from 'react' \r\nimport Button from '../../components/Button' \r\nimport _ from 'lodash'\r\nimport CKEditorComponent from '../../../ckeditor'\r\nimport UploadFilesInLine from '../../../file-upload/UploadFilesInLine'\r\nimport { useCrateNoteMutation, useDeleteNoteUploadedFileMutation, useGetTaskDetailsQuery, useUpdateNoteMutation } from '../../../services/api/SingleTaskPageApi'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { storeNotes } from '../../../services/features/subTaskSlice'\r\nimport Input from '../../components/form/Input'\r\nimport { useEffect } from 'react'\r\nimport { useSearchParams } from 'react-router-dom'\r\nimport CustomModal from '../../components/CustomModal'\r\nimport { useWindowSize } from 'react-use' \r\nimport Modal from '../../components/Modal'\r\n\r\nconst EditNote = ({isOpen, close, toggleRef}) => {\r\n  const {task, notes} = useSelector(s => s.subTask); \r\n  const [files, setFiles] = React.useState([]);\r\n  const [title, setTitle] = React.useState('');\r\n  const [errTitle, setErrTitle] = React.useState(null);\r\n  const [note,setNote] = React.useState('');\r\n  const [attachedFiles, setAttachedFiles] = React.useState([]);\r\n  const dispatch = useDispatch();\r\n  const { width: deviceWidth} = useWindowSize();\r\n  const [searchParams] = useSearchParams();\r\n  const noteId = searchParams.get('note');\r\n  const type = searchParams.get('type');\r\n\r\n\r\n\r\n   const [updateNote, {isLoading}] = useUpdateNoteMutation();\r\n\r\n  // fetch all task \r\n  const {data, isFetching} = useGetTaskDetailsQuery(`/${noteId}/json?mode=task_note_edit`, {\r\n    skip: type ? (type !== 'edit' || !noteId) : true,\r\n    refetchOnMountOrArgChange: true\r\n  }) \r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    clearField();\r\n    if(!isFetching && data){ \r\n        setTitle(data?.title);\r\n        setNote(data?.note);\r\n        setAttachedFiles(data?.files || []);\r\n    }\r\n  }, [data, noteId, isFetching]);\r\n\r\n  const clearField = () => {\r\n    setTitle('');\r\n    setNote('');\r\n    setAttachedFiles([]);\r\n  }\r\n\r\n  const handleClose = () => {\r\n    clearField();\r\n    close();\r\n  }\r\n\r\n\r\n // handle onchange\r\nconst handleChange = (e, setState) =>{\r\n    e.preventDefault();\r\n    let value = e.target.value;\r\n    setState(value);\r\n}\r\n\r\n\r\n// handle submittion\r\n  const handleSubmit = e => { \r\n    e.preventDefault();\r\n    if(!title){\r\n        setErrTitle('Title name required');\r\n        return null;\r\n    }\r\n    const fd = new FormData(); \r\n    fd.append('title', title);\r\n    fd.append('note', note);\r\n    fd.append('taskId', task?.id);\r\n    fd.append('_token', document.querySelector(\"meta[name='csrf-token']\").getAttribute(\"content\"));\r\n    fd.append('_method', 'PUT');\r\n    Array.from(files).forEach((file) => {\r\n        fd.append('file[]', file);\r\n    });\r\n\r\n    \r\n    updateNote({data: fd, id: noteId}).unwrap().then(res => { \r\n            if(res?.status === 'success'){  \r\n                let _notes = [...notes];\r\n                _notes = _notes?.map(note => {\r\n                    if(Number(note?.id) === Number(res?.note?.id)){\r\n                        return res?.note;\r\n                    }else return note\r\n                })\r\n  \r\n                Swal.fire({\r\n                    position: 'center',\r\n                    icon: 'success',\r\n                    title: res?.message,\r\n                    showConfirmButton: false,\r\n                    timer: 2500\r\n                }) \r\n\r\n                dispatch(storeNotes(_notes)); \r\n\r\n                handleClose();\r\n            }\r\n    }).catch((err) => {\r\n        console.log(err)\r\n    })\r\n\r\n  }\r\n\r\n\r\n  // handle editor\r\n  const handleEditorChange = (e, editor) => {\r\n    const data = editor.getData();\r\n    setNote(data);\r\n  }  \r\n\r\n  // handle loading state\r\nReact.useEffect(() => { \r\n    if (isLoading || isFetching) {\r\n        document.getElementsByTagName('body')[0].style.cursor = 'progress';\r\n      } else {\r\n        document.getElementsByTagName('body')[0].style.cursor = 'default';\r\n      }\r\n}, [isLoading, isFetching])\r\n\r\n\r\n\r\n\r\n  // handle uplaoded file delete request\r\nconst [deleteNoteUploadedFile] = useDeleteNoteUploadedFileMutation();\r\n\r\nconst handleFileDelete = (e, file) => { \r\n    // delete\r\n    deleteNoteUploadedFile(file?.id).unwrap();\r\n   \r\n    // delete form ui\r\n    let previousFile = [...attachedFiles];\r\n    let index = previousFile?.indexOf(file);\r\n    previousFile.splice(index,1);\r\n    setAttachedFiles(previousFile);\r\n}\r\n\r\n\r\n    const content = () => {\r\n        return (\r\n        <div className='sp1-subtask-form --modal-panel'>\r\n            <div className='sp1-subtask-form --modal-panel-header'> \r\n                 <h6>Update Notes\r\n                        {isFetching && <div \r\n                            className=\"spinner-border text-dark ml-2\" \r\n                            role=\"status\"\r\n                            style={{\r\n                                width: '16px',\r\n                                height: '16px',\r\n                                border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                                borderRightColor: 'transparent' \r\n                            }}\r\n                        />}\r\n                  </h6> \r\n                <Button\r\n                    aria-label=\"close-modal\"\r\n                    className='_close-modal'\r\n                    onClick={handleClose}\r\n                >\r\n                    <i className=\"fa-solid fa-xmark\" />\r\n                </Button> \r\n            </div>\r\n\r\n            <div className=\"sp1-subtask-form --modal-panel-body\">\r\n                {isFetching && \r\n                    <div className='w-100' style={{\r\n                        width: '100%',\r\n                        height: '100%',\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        left: 0,\r\n                        zIndex: 1\r\n                    }}/>\r\n                }\r\n                <div className='py-3'>\r\n                    <Input \r\n                        id='title'\r\n                        label=\"Title\"\r\n                        type=\"text\" \r\n                        placeholder='Enter a task title'\r\n                        name='title'\r\n                        required={true}\r\n                        value={title}\r\n                        error= {errTitle}\r\n                        onChange={e => handleChange(e, setTitle)}\r\n                    />\r\n\r\n                    <div className='sp1_st_write_comment_editor pr-0' style={{minHeight: '100px'}}>\r\n                        <h6 className='mb-3 f-14' style={{color:'#777'}}>Write Note</h6>\r\n                        <CKEditorComponent data={note} onChange={handleEditorChange}/>\r\n                    </div>\r\n\r\n                    <div className='mt-3'>\r\n                        <h6 className='mb-3 f-14' style={{color:'#777'}}>Upload Files</h6>\r\n                        <UploadFilesInLine  \r\n                            files={files} \r\n                            setFiles={setFiles} \r\n                            previous={attachedFiles}\r\n                            onPreviousFileDelete={handleFileDelete}\r\n                        />\r\n                    </div>\r\n\r\n\r\n                    <div className=\"mt-5\"> \r\n                            <div className=\"d-flex align-items-center\">\r\n                                <Button\r\n                                    variant='secondary'\r\n                                    className='mr-2'\r\n                                    onClick={handleClose}\r\n                                > \r\n                                    Cancel\r\n                                </Button> \r\n    \r\n                                {!isLoading ? (\r\n                                    <Button onClick={handleSubmit}>\r\n                                        <i className=\"fa-regular fa-paper-plane\"></i>\r\n                                        Update\r\n                                    </Button>\r\n                                ) : (\r\n                                <Button className='cursor-processing'>\r\n                                    <div \r\n                                        className=\"spinner-border text-white\" \r\n                                        role=\"status\"\r\n                                        style={{\r\n                                            width: '18px',\r\n                                            height: '18px', \r\n                                        }}\r\n                                    >\r\n                                    </div>\r\n                                    Processing...\r\n                                </Button>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n\r\n\r\n if(deviceWidth > 1200){\r\n    return (\r\n        <CustomModal \r\n            isOpen={isOpen} \r\n            toggleRef={toggleRef}\r\n        > \r\n            <React.Fragment>\r\n            {content()}\r\n            </React.Fragment>\r\n        </CustomModal>\r\n      )\r\n }else{\r\n    return (\r\n        <Modal isOpen={isOpen}> \r\n            <React.Fragment>\r\n            {content()}\r\n            </React.Fragment>\r\n        </Modal>\r\n      )\r\n }\r\n}\r\n\r\nexport default EditNote;","import * as React from 'react'\r\nimport Button from '../../components/Button'\r\nimport CustomModal from '../../components/CustomModal' \r\nimport { useGetTaskDetailsQuery } from '../../../services/api/SingleTaskPageApi'\r\nimport { useSearchParams } from 'react-router-dom'\r\nimport { User } from '../../../utils/user-details'\r\nimport ContentLoader from \"react-content-loader\"\r\nimport UploadFilesInLine from '../../../file-upload/UploadFilesInLine'\r\nimport { useWindowSize } from 'react-use'\r\nimport Modal from '../../components/Modal'\r\n\r\n\r\nconst NoteView = ({close, isOpen, toggleRef}) => {\r\n    const [searchParams] = useSearchParams();\r\n    const noteId = searchParams.get('note');\r\n    const type = searchParams.get('type');\r\n    const { width: deviceWidth} = useWindowSize();\r\n\r\n    // fetch all task \r\n    const {data, isFetching} = useGetTaskDetailsQuery(`/${noteId}/json?mode=task_note_edit`, {\r\n        skip: type ? (type !== 'view' || !noteId) : true,\r\n        refetchOnMountOrArgChange: true\r\n    }) \r\n    \r\n  const user = data ?  new User(data.user) : null;\r\n\r\n  const content = () =>{\r\n    return(\r\n        <div className='sp1-subtask-form --modal-panel'>\r\n            <div className='sp1-subtask-form --modal-panel-header'> \r\n                <h6>Notes</h6> \r\n                {isFetching && <div \r\n                    className=\"spinner-border text-dark ml-2 mr-auto\" \r\n                    role=\"status\"\r\n                    style={{\r\n                        width: '16px',\r\n                        height: '16px',\r\n                        border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                        borderRightColor: 'transparent'\r\n                    }}\r\n                />} \r\n                <Button\r\n                    aria-label=\"close-modal\"\r\n                    className='_close-modal'\r\n                    onClick={close}\r\n                >\r\n                    <i className=\"fa-solid fa-xmark\" />\r\n                </Button> \r\n            </div>\r\n\r\n            <div className=\"sp1-subtask-form --modal-panel-body\">\r\n                <div className='py-3'>\r\n                    <div>\r\n                        {isFetching ? <>Loading...</> : \r\n                        <>\r\n                            <div className='d-flex align-items-center'>\r\n                                <div className=''>\r\n                                    <img src={user?.getAvatar()} alt=\"\" width={40} height={40} />\r\n                                </div>\r\n                                <div className='px-3'>\r\n                                    <h6 className='mb-0'>{user?.getName()}</h6>\r\n                                    <span className='' style={{color: '#A5ACB5'}}>{user?.getDesignationName()}</span>\r\n                                </div>\r\n                            </div> \r\n                            <div className='mt-4'>\r\n                                <h6 className='font-weight-bold'>{data?.title}</h6>\r\n                                <div className='sp1_ck_content mb-5' dangerouslySetInnerHTML={{__html: data?.note}} />\r\n                                {data?.files && <UploadFilesInLine previous={data?.files} mode='preview'/>}\r\n                            </div>\r\n                        </>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n  }\r\n\r\n  if(deviceWidth > 1200){\r\n    return (\r\n        <CustomModal \r\n            isOpen={isOpen} \r\n            toggleRef={toggleRef}\r\n        > \r\n            <React.Fragment>\r\n            {content()}\r\n            </React.Fragment>\r\n        </CustomModal>\r\n    )\r\n  }else{\r\n    return <Modal isOpen={isOpen} > \r\n        <React.Fragment>\r\n            {content()}\r\n        </React.Fragment>\r\n     </Modal>\r\n  }\r\n}\r\n\r\nexport default NoteView","import React from 'react'\r\nimport Note from './Note'\r\nimport CreateNote from './CreateNote';\r\nimport Button from '../../components/Button';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { storeNotes } from '../../../services/features/subTaskSlice';\r\nimport { useLazyGetTaskDetailsQuery } from '../../../services/api/SingleTaskPageApi';\r\nimport EditNote from './EditNote';\r\nimport NoteView from './NoteView';\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\n\r\nconst NoteSection = () => {\r\n  const {task, notes} = useSelector(s => s.subTask); \r\n  const [mode, setMode] = React.useState('');\r\n\r\n  const [modalRefButton, setModalRefButton] = React.useState(null); \r\n\r\n  const dispatch = useDispatch();   \r\n  const navigate = useNavigate();\r\n  const [searchParams] = useSearchParams();\r\n  const paramType = searchParams.get('type');\r\n\r\n\r\n  // fetch all task \r\n  const [getTaskDetails, {isFetching}] = useLazyGetTaskDetailsQuery('', {\r\n    skip: notes?.length\r\n  })\r\n\r\n  // control mode \r\n  React.useEffect(() => {\r\n    let _mode = paramType ? paramType : '';\r\n    setMode(_mode);\r\n  }, [paramType])\r\n\r\n\r\n  // if task notes fetch completed store data into redux store\r\n  React.useEffect(()=> {\r\n    if(task && task.id){\r\n      getTaskDetails(`/${task?.id}/json?mode=task_note`)\r\n      .unwrap()\r\n      .then(res => {\r\n        if(res){\r\n          dispatch(storeNotes(res));\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n    } \r\n  }, [task]);\r\n \r\n \r\n  // close modal\r\n  const close = (e) => { \r\n    navigate(`/account/tasks/${task.id}`); \r\n  }\r\n\r\n  return (\r\n    <div className='sp1_task_right_card mb-3' ref={setModalRefButton} style={{zIndex: mode ? '99' : ''}}>\r\n       <div className='d-flex border-bottom pb-2 align-items-center justify-content-between mb-2 font-weight-bold'>\r\n          <span className=\"f-16\">Notes</span>\r\n          {isFetching && \r\n                <div \r\n                    className=\"spinner-border text-dark ml-2 mr-auto\" \r\n                    role=\"status\"\r\n                    style={{\r\n                        width: '16px',\r\n                        height: '16px',\r\n                        border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                        borderRightColor: 'transparent' \r\n                    }}\r\n                />\r\n          }\r\n          <Button\r\n              variant='tertiary'\r\n              className=\"sp1_tark_add_item\" \r\n              aria-label=\"addButton\"\r\n              onClick={() => navigate(`?type=create`)}\r\n          > \r\n              {mode === 'create' ? (\r\n                <> <i className=\"fa-solid fa-xmark\" style= {{fontSize: '12px'}}/> Close </> \r\n                ) :\r\n                (\r\n                  <> <i className=\"fa-solid fa-plus\"  style= {{fontSize: '12px'}} /> Note  </>\r\n                )\r\n              }\r\n          </Button>\r\n        </div>\r\n\r\n        {/* left dropdown */}\r\n        {mode && <button \r\n          aria-label='openCommentModalButton'  \r\n          \r\n          className='sp1_task_right_dl_toggle'\r\n          onClick={close}\r\n          style={{zIndex: mode ? '110' : ''}}\r\n        >\r\n            <i \r\n              className={`fa-solid fa-circle-chevron-${ mode ? 'right' : 'left'}`} \r\n              style={{color: \"#276fec\"}} \r\n            />\r\n        </button>}\r\n      {/* left dropdown */}\r\n\r\n        {/* create new */} \r\n        <CreateNote \r\n            close={close}  \r\n            isOpen={mode === 'create'} \r\n            toggleRef={modalRefButton}\r\n        /> \r\n\r\n        {/* edit note */} \r\n        <EditNote \r\n          close={close} \r\n          isOpen={ mode === 'edit'}   \r\n          toggleRef={modalRefButton}\r\n        />  \r\n\r\n\r\n        {/* note view */}\r\n        <NoteView \r\n          close={close}\r\n          isOpen={mode === 'view'} \r\n          toggleRef={modalRefButton}\r\n        /> \r\n\r\n        <div className=\"sp1_task_right_card--body\">\r\n          { !isFetching ? notes?.length > 0 ? notes.map(note => (\r\n            <Note \r\n              key={note.id} \r\n              note={note}  \r\n            /> \r\n          )): <div\r\n            className='d-flex align-items-center justify-content-center'\r\n            style={{\r\n              color: '#B4BCC4',\r\n              fontSize: '15px',\r\n              textAlign: 'center',\r\n              height: '100%',\r\n              width: '100%',\r\n            }}\r\n          >\r\n              Empty Notes\r\n            </div> : \r\n            <div className='d-flex align-items-center justify-content-center'\r\n            style={{\r\n              color: '#5A6169',\r\n              fontSize: '15px',\r\n              textAlign: 'center',\r\n              height: '100%',\r\n              width: '100%',\r\n            }}\r\n          > \r\n              <div \r\n                    className=\"spinner-border text-dark ml-2\" \r\n                    role=\"status\"\r\n                    style={{\r\n                        width: '16px',\r\n                        height: '16px',\r\n                        border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                        borderRightColor: 'transparent',\r\n                        marginRight: '10px'\r\n                    }}\r\n                />\r\n              Loading...\r\n            </div> }\r\n        </div>\r\n\r\n   </div>\r\n  )\r\n}\r\n\r\nexport default NoteSection","import * as React from 'react'\r\nimport Button from '../../components/Button'\r\nimport CustomModal from '../../components/CustomModal' \r\n\r\n\r\nconst  ViewComment = ({close, isOpen, toggleRef, comment}) => { \r\n  return (\r\n    <CustomModal isOpen={isOpen} toggleRef={toggleRef}>\r\n        <div className='sp1-subtask-form --modal-panel'>\r\n            <div className='sp1-subtask-form --modal-panel-header'> \r\n                <Button\r\n                    aria-label=\"close-modal\"\r\n                    className='_close-modal ml-auto'\r\n                    onClick={close}\r\n                >\r\n                    <i className=\"fa-solid fa-xmark\" />\r\n                </Button> \r\n            </div>\r\n\r\n            <div className=\"sp1-subtask-form --modal-panel-body\">\r\n                <div className='py-3'>\r\n                    <div>\r\n                        {/* comment here... */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </CustomModal>\r\n    \r\n  )\r\n}\r\n\r\nexport default ViewComment \r\n\r\n","import React from 'react'\r\nimport Rating from '../../../global/Rating'\r\nimport useSWR from 'swr';\r\nimport axios from 'axios';\r\nimport { useSelector } from 'react-redux'\r\nimport ViewComment from './ViewComment';\r\n\r\n\r\nconst fetcher = (url) => axios.get(url).then(res => res.data); \r\n\r\nconst RevisionSection = ({task}) => { \r\n  const [toggleRef, setToggleRef] = React.useState(null);\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n\r\n  const toggle = (e) => {\r\n    e.preventDefault();\r\n    setIsOpen(!isOpen);\r\n  }\r\n\r\n  const close = e => {\r\n    setIsOpen(false);\r\n  }\r\n\r\n\r\n  const { data, error, isLoading } = useSWR(`/account/task/${task.id}/json?mode=task_approve`, fetcher);\r\n\r\n\r\n  const cmt = data?.comment;\r\n  const commentLength = cmt?.length > 250; \r\n  let comment = commentLength ? cmt?.slice(0, 250): cmt;  \r\n  comment = comment || `<span className='' style=\"color: #A7A9B2\">No Comment is Available</span>`\r\n \r\n  return (\r\n    <div className=\"sp1_task_right_card mb-3\" ref={setToggleRef} style={{maxHeight:'450px'}}>  \r\n\r\n        {/* side drop toggle button */}\r\n        {isOpen && (\r\n            <button \r\n                aria-label='openCommentModalButton'  \r\n                \r\n                className='sp1_task_right_dl_toggle'\r\n                onClick={toggle}\r\n                style={{zIndex: isOpen ? '110' : ''}}\r\n            >\r\n                <i \r\n                className={`fa-solid fa-circle-chevron-${ isOpen ? 'right' : 'left'}`} \r\n                style={{color: \"#276fec\"}} \r\n                />\r\n            </button>\r\n        )}\r\n        {/* side drop toggle button end */}\r\n\r\n        <div className=\"d-flex border-bottom pb-2 align-items-center justify-content-between mb-2 font-weight-bold\">\r\n            <span className=\"f-16\">Task Review</span> \r\n        </div> \r\n       \r\n        <div className=\"d-flex align-items-center mb-2\">\r\n            <div className=\"\" style={{width: '150px'}}>Deadline Meet : </div>\r\n            <div className=\"d-flex align-items-center\">\r\n                <Rating rating={Number(data?.deadline_meet)} />\r\n            </div>\r\n        </div> \r\n\r\n        <div className=\"d-flex align-items-center mb-2\">\r\n            <div className=\"\" style={{width: '150px'}}>Submission Quality: </div>\r\n            <div className=\"d-flex align-items-center\">  \r\n                <Rating rating={Number(data?.submission_quality)} />\r\n            </div>\r\n        </div> \r\n\r\n        <div className=\"d-flex align-items-center mb-2\">\r\n            <div className=\"\" style={{width: '150px'}}>Req. Fullfillment: </div>\r\n            <div className=\"d-flex align-items-center\"> \r\n            <Rating rating={Number(data?.req_fullfillment)} />\r\n            </div>\r\n        </div> \r\n\r\n        <div className=\"d-flex align-items-center mb-2\">\r\n            <div className=\"\" style={{width: '150px'}}>Overall Task Ratings: </div>\r\n            <div className=\"d-flex align-items-center\"> \r\n                <Rating rating={Number(data?.overall_tasks)} /> \r\n            </div>\r\n        </div> \r\n\r\n        <div className=\"mb-2\">\r\n            <span className=\"font-weight-bold d-block mb-1\">Comments:</span>\r\n            <div style={{color:'#777', fontSize: '13px'}}>\r\n                <div className='sp1_ck_content' dangerouslySetInnerHTML={{__html: comment}}></div> \r\n                { commentLength && <a href=\"#\" onClick={toggle} >Read More</a>}\r\n            </div>\r\n        </div> \r\n        <ViewComment isOpen={isOpen} toggleRef={toggleRef} close={close} comment={data?.comment} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RevisionSection","import React from \"react\"; \r\nimport { User } from \"../../../../utils/user-details\"; \r\nimport Accordion from \"../../../components/Accordion\";\r\nimport Guideline from \"../../../components/Guideline\";\r\nimport RevisionText from \"../../../components/RevisionText\";\r\nimport GenarelLoader from \"../../../components/loader/GenarelLoader\";\r\nimport ArticleLoader from \"../../../components/loader/ArticleLoader\";\r\nimport dayjs from \"dayjs\";\r\nimport { Placeholder } from \"../../../../global/Placeholder\";\r\n\r\nconst Genarel = ({task, isFetching}) => { \r\n    const loggedUser = new User(window?.Laravel?.user);\r\n\r\n    \r\n    return (\r\n        <div className=\"row\">\r\n            {isFetching ? <GenarelLoader /> : \r\n                <React.Fragment>\r\n                    <div className=\"col-12 col-xl-6 pb-3 pb-xl-0\">\r\n                        <div className=\"d-flex flex-column\" style={{ gap: \"10px\" }}>\r\n                            <h6 className=\"\">\r\n                                Task: <a target=\"__blank\" href={`/account/tasks/${task?.id}`} className=\"text-primary font-weight-normal\">\r\n                                    {task?.getSubtaskTitle()}\r\n                                </a>\r\n                            </h6>\r\n                            {\r\n                                task?.isSubtask && (\r\n                                    <div className=\"sp1_st-list-item\">\r\n                                        <div className=\"sp1_st-list-item-head\">\r\n                                            Parent Task :\r\n                                        </div>\r\n                                        <div className=\"sp1_st-list-item-value\">\r\n                                            <a href={`/account/tasks/${task?.parentTaskId}`} className=\"text-dark text-hover-underline\">\r\n                                                {task?.parentTaskTitle}\r\n                                            </a>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            }\r\n\r\n                            {/* project name */}\r\n                            {/* <div className=\"sp1_st-list-item\">\r\n                                <div className=\"sp1_st-list-item-head\">Project : </div>\r\n                                <div className=\"sp1_st-list-item-value\">\r\n                                    <span className=\"dot-color bg-danger mr-2\" />\r\n                                    <a href={`/account/projects/${task?.projectId}`} className=\"text-dark text-hover-underline\"> \r\n                                        {task?.projectName} \r\n                                    </a>\r\n                                </div>\r\n                            </div> */}\r\n\r\n                            {/* milestone */}\r\n                            {/* <div className=\"sp1_st-list-item\">\r\n                                <div className=\"sp1_st-list-item-head\">\r\n                                    Milestone :{\" \"}\r\n                                </div>\r\n                                <div className=\"sp1_st-list-item-value\">\r\n                                    <span className=\"dot-color bg-primary mr-2\" />\r\n                                    {task?.milestoneTitle}\r\n                                </div>\r\n                            </div> */}\r\n\r\n                            {/* asignee to */}\r\n                            <div className=\"sp1_st-list-item\">\r\n                                <div className=\"sp1_st-list-item-head\">\r\n                                    Assigned To :{\" \"}\r\n                                </div>\r\n                                <div className=\"sp1_st-list-item-value\">\r\n                                    <div style={{ width: \"32px\", height: \"32px\" }}>\r\n                                        <img\r\n                                            src={task?.assigneeTo?.getAvatar()}\r\n                                            alt={task?.assigneeTo?.getName()}\r\n                                            width=\"32px\"\r\n                                            height=\"32px\"\r\n                                            className=\"rounded-circle\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"ml-2\">\r\n                                        <span\r\n                                            className={`d-block f-14 font-weight-bold`}\r\n                                        >\r\n                                            <a href={task?.assigneeTo?.getUserLink()} className=\"text-dark hover-underline\">{task?.assigneeTo?.getName()}</a> \r\n                                            {Number(task?.assigneeTo?.getId()) ===\r\n                                                Number(loggedUser?.getId()) && (\r\n                                                <sup\r\n                                                    className=\"rounded-pill bg-dark text-white px-1\"\r\n                                                    style={{ fontSize: \"10px\" }}\r\n                                                >\r\n                                                    {\" \"}\r\n                                                    It's You{\" \"}\r\n                                                </sup>\r\n                                            )}\r\n                                        </span>\r\n\r\n                                        <span style={{ fontSize: \"12px\" }}>\r\n                                            {task?.assigneeTo?.getDesignationName()}\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* assignee by */}\r\n                            <div className=\"sp1_st-list-item\">\r\n                                <div className=\"sp1_st-list-item-head\">\r\n                                    Assigned by:{\" \"}\r\n                                </div>\r\n                                <div className=\"sp1_st-list-item-value\">\r\n                                    <div style={{ width: \"32px\", height: \"32px\" }}>\r\n                                        <img\r\n                                            src={task?.assigneeBy?.getAvatar()}\r\n                                            alt={task?.assigneeBy?.getName()}\r\n                                            width=\"32px\"\r\n                                            height=\"32px\"\r\n                                            className=\"rounded-circle\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"ml-2\">\r\n                                        <span\r\n                                            className={`d-block f-14 font-weight-bold`}\r\n                                        >\r\n                                            <a \r\n                                                href={task?.assigneeBy?.getUserLink()}\r\n                                                className=\"text-dark hover-underline\"\r\n                                            >\r\n                                                {task?.assigneeBy?.getName()}\r\n                                            </a>\r\n                                            {Number(task?.assigneeBy?.getId()) ===\r\n                                                Number(loggedUser?.getId()) && (\r\n                                                <sup\r\n                                                    className=\"rounded-pill bg-dark text-white px-1\"\r\n                                                    style={{ fontSize: \"10px\" }}\r\n                                                >\r\n                                                    It's You\r\n                                                </sup>\r\n                                            )}\r\n                                        </span>\r\n\r\n                                        <span style={{ fontSize: \"12px\" }}>\r\n                                            {task?.assigneeBy?.getDesignationName()}\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* PRIORITY */}\r\n\r\n                            <div className=\"sp1_st-list-item\">\r\n                                <div className=\"sp1_st-list-item-head\">Priority : </div>\r\n                                <div className=\"sp1_st-list-item-value\">\r\n                                    <span\r\n                                        className=\"dot-color mr-2\"\r\n                                        style={{ background: \"rgba(252, 189, 1, 1)\" }}\r\n                                    />\r\n                                    {task?.priority}\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* category */}\r\n                            <div className=\"sp1_st-list-item\">\r\n                                <div className=\"sp1_st-list-item-head\">\r\n                                    Task Category :{\" \"}\r\n                                </div>\r\n                                <div className=\"sp1_st-list-item-value\">\r\n                                    {task?.category?.name}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </React.Fragment>\r\n            }\r\n\r\n            <div\r\n                className=\"col-12 col-xl-6 d-flex flex-column py-3 px-3\"\r\n                style={{ gap: \"10px\", background: \"#F0F2F6\" }}\r\n            >\r\n                <div className=\"font-weight-bold d-block\"> Status: </div>\r\n\r\n                {\r\n                    isFetching ?\r\n                    <Placeholder width=\"80px\" />:\r\n                    <div\r\n                    className=\"d-flex align-items-center\"\r\n                    style={{ gap: \"6px\" }}\r\n                >\r\n                    <span\r\n                        className=\"dot-color mr-2\"\r\n                        style={{ background: task?.boardColumn?.labelColor }}\r\n                    />\r\n                    <span className=\"font-weight-bold\">{task?.boardColumn.columnName}</span>\r\n                </div>\r\n                }\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-6 col-sm-5 col-md-3 col-xl-6\">\r\n                        Start Date{\" \"}\r\n                    </div>\r\n                    <div className=\"col-6 col-sm-7 col-md-9 col-xl-6\">\r\n                        : {isFetching ?\r\n                    <Placeholder width=\"80px\" />:\r\n                    task?.getStartDate(\"MMM DD, YYYY\")}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-6 col-sm-5 col-md-3 col-xl-6\">\r\n                        Due Date{\" \"}\r\n                    </div>\r\n                    <div className=\"col-6 col-sm-7 col-md-9 col-xl-6\">\r\n                        : {isFetching ?\r\n                    <Placeholder width=\"80px\" />:\r\n                    task?.getDueDate(\"MMM DD, YYYY\")}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Time Estimate */}\r\n                {/* <div className=\"row\">\r\n                    <div className=\"col-6 col-sm-5 col-md-3 col-xl-6\">\r\n                        Time Estimate{\" \"}\r\n                    </div>\r\n                    <div className=\"col-6 col-sm-7 col-md-9 col-xl-6\">\r\n                        : {task?.getEstimateTime()}\r\n                    </div>\r\n                </div> */}\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-6 col-sm-5 col-md-3 col-xl-6\">\r\n                    Total Hours Logged{\" \"}\r\n                    </div>\r\n                    <div className=\"col-6 col-sm-7 col-md-9 col-xl-6\">\r\n                        : {isFetching ?\r\n                    <Placeholder width=\"80px\" />:\r\n                    task?.parentTaskTimeLog || \"--\"}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* <div className=\"row\">\r\n                    <div className=\"col-6 col-sm-5 col-md-3 col-xl-6\">\r\n                        Parent Task Hours Logged{\" \"}\r\n                    </div>\r\n                    <div className=\"col-6 col-sm-7 col-md-9 col-xl-6\">\r\n                        : {task?.parentTaskTimeLog || \"--\"}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-6 col-sm-5 col-md-3 col-xl-6\">\r\n                        Subtask Hours Logged:{\" \"}\r\n                    </div>\r\n                    <div className=\"col-6 col-sm-7 col-md-9 col-xl-6\">\r\n                        : {task?.subTaskTimeLog || \"--\"}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-6 col-sm-5 col-md-3 col-xl-6\">\r\n                        Total Hours Logged{\" \"}\r\n                    </div>\r\n                    <div className=\"col-6 col-sm-7 col-md-9 col-xl-6\">\r\n                        : {task?.totalTimeLog || \"--\"}\r\n                    </div>\r\n                </div> */}\r\n            </div>\r\n\r\n            <div className=\"col-12 border-top py-4 mt-4\">\r\n                {/* <Accordion expendable={false} title=\"General Guidelines\">\r\n                    {\r\n                        isFetching ? \r\n                        <ArticleLoader /> :\r\n                        <Guideline text={task?.guidelines} editorContainerClass=\"modal-guideline-editor-text\" />\r\n                    }\r\n                </Accordion> */}\r\n\r\n                {_.size(task?.revisions) > 0 &&\r\n                    <Accordion\r\n                        title={_.last(task?.revisions)?.revisionStatus}\r\n                        headingClass=\"d-flex align-items-center justify-content-between\"\r\n                        headingStyle={{\r\n                            background: \"rgba(227,62,79,1)\",\r\n                            color: \"#fff\",\r\n                        }}\r\n                    >\r\n\r\n                        {_.map(task?.revisions, (revision, index) => (\r\n                                <RevisionText\r\n                                    key={revision.id}\r\n                                    index={index + 1}\r\n                                    date={dayjs(revision.createdAt).format('MMM DD, YYYY')}\r\n                                    time={dayjs(revision.createdAt).format('hh:mm a')}\r\n                                    text={revision?.comment}\r\n                                />\r\n                            ))\r\n                        }\r\n                        \r\n                    </Accordion>\r\n                }\r\n\r\n                <Accordion expendable={false} title=\"Task Descriptions\">\r\n                    <Guideline text={task?.description} />\r\n                </Accordion>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Genarel;\r\n","const Loader = ({title =\"Loading...\"}) => {\r\n  return (\r\n        <div className='d-flex align-items-center'>\r\n            <div\r\n                className=\"spinner-border text-dark mr-2\"\r\n                role=\"status\"\r\n                style={{\r\n                    width: \"16px\",\r\n                    height: \"16px\",\r\n                    border: \"0.14em solid rgba(0, 0, 0, .25)\",\r\n                    borderRightColor: \"transparent\",\r\n                }}\r\n            /> \r\n            <span>{title}</span>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default Loader;","import React, { Suspense, lazy } from 'react'\r\nimport Loader from '../../../components/Loader'\r\nconst SubmittedWorkItem = lazy(() => import('./SubmittedWorkItem'))\r\n\r\nconst SubmittedWork = ({task, submittedWork, loading}) => { \r\n  return (\r\n    <React.Fragment>\r\n        <h6 className='font-weight-bold'>Submitted Work</h6>\r\n        <div className='d-flex flex-column h-100' style={{gap:'10px'}}>\r\n\r\n            {loading && <div className='mt-3'><Loader /></div>}  \r\n            {submittedWork.length > 0 ? submittedWork.map((s) => (\r\n                <React.Fragment key={s?.task_id}>\r\n                    <Suspense fallback={<div className='mt-3'><Loader /></div>}>\r\n                        <SubmittedWorkItem data={s} task={task} />\r\n                    </Suspense>\r\n                </React.Fragment> \r\n            )): null}\r\n        </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default SubmittedWork","import React from \"react\";\r\nimport { TimeLog } from \"../../../../utils/single-task\"; \r\nimport Loader from \"../../../components/Loader\"; \r\n\r\nconst TimeLogContainer = ({ task, timeLog, isLoading }) => {\r\n\r\n    \r\n    return (\r\n        <div className=\"sp1_modal_timelog_view\">\r\n            <div><h6> Session Logs </h6> </div>\r\n            <div>\r\n                <table className=\"sp1_subtask_log-tbl\">\r\n                        <thead className=\"__thead\">\r\n                            <tr>\r\n                                <th>Employee</th>\r\n                                <th>Start Time</th>\r\n                                <th>End Time</th>\r\n                                <th>Memo</th>\r\n                                <th>Hours Logged</th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                </table>\r\n                <div className=\"sp1_modal_timelog_view-tbl-contanier\">  \r\n                    <table className=\"sp1_subtask_log-tbl\"> \r\n                        <tbody className=\"__tbody\"> \r\n                            {timeLog\r\n                                ? timeLog.map((log) => (\r\n                                    <TableRow key={log.id} log={log} />\r\n                                ))\r\n                                : null}\r\n\r\n                            {isLoading && <tr><td className=\"py-2 text-center\" colSpan={5}><Loader /></td></tr>}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TimeLogContainer;\r\n\r\nconst TableRow = ({ log }) => {\r\n    const timeLog = new TimeLog(log);\r\n    const user = timeLog?.user;\r\n\r\n\r\n    return (\r\n        <tr className=\"__tbody_tr\">\r\n            <td className=\"__tbody_td _tbody_td_employee\">\r\n                <img src={user?.getAvatar()} alt={user?.getName()} />\r\n                <span className=\"px-2\">{user?.getName()}</span>\r\n            </td> \r\n            <td className='__tbody_td _tbody_td_start_time'>\r\n                {timeLog?.getStartTime()} <br/>\r\n                {timeLog?.getStartTime('hh:mm a')}\r\n            </td>\r\n            \r\n            <td className='__tbody_td _tbody_td_start_time _tbody_td_start_end'>\r\n                {!timeLog?.endTime ? <span className=\"text-success font-weight-bold\">Active</span> :\r\n                    <>\r\n                        {timeLog?.getEndTime()} <br/>\r\n                        {timeLog?.getEndTime('hh:mm a')}\r\n                    </>\r\n                }\r\n\r\n            </td> \r\n            <td className=\"__tbody_td _tbody_td_memo\">{timeLog?.memo}</td> \r\n            <td className=\"__tbody_td _tbody_td_hour_logged\">{timeLog?.hoursLogged}</td>\r\n        </tr>\r\n    );\r\n};\r\n","import React from 'react'\r\nimport Rating from '../../../../global/Rating';\r\nimport Loader from '../../../components/Loader';\r\n\r\nconst TaskReview = ({review, isLoading}) => {\r\n    const data = review; \r\n    let comment = data?.comment || `<span className='' style=\"color: #A7A9B2\">No Comment is Available</span>`;\r\n   \r\n    return (\r\n        <div className=\"sp1_task_right_card mb-3\" style={{maxHeight:'450px'}}>  \r\n          {/* side drop toggle button end */}\r\n          <div className=\"d-flex border-bottom pb-2 align-items-center justify-content-between mb-2 font-weight-bold\">\r\n              <span className=\"f-16\">Task Review</span> \r\n          </div> \r\n\r\n          {isLoading ? <Loader/> : <React.Fragment>\r\n            \r\n            <div className=\"d-flex align-items-center mb-2\">\r\n                <div className=\"\" style={{width: '150px'}}>Deadline Meet : </div>\r\n                <div className=\"d-flex align-items-center\">\r\n                    <Rating rating={Number(data?.deadline_meet)} />\r\n                </div>\r\n            </div> \r\n    \r\n            <div className=\"d-flex align-items-center mb-2\">\r\n                <div className=\"\" style={{width: '150px'}}>Submission Quality: </div>\r\n                <div className=\"d-flex align-items-center\">  \r\n                    <Rating rating={Number(data?.submission_quality)} />\r\n                </div>\r\n            </div> \r\n    \r\n            <div className=\"d-flex align-items-center mb-2\">\r\n                <div className=\"\" style={{width: '150px'}}>Req. Fullfillment: </div>\r\n                <div className=\"d-flex align-items-center\"> \r\n                <Rating rating={Number(data?.req_fullfillment)} />\r\n                </div>\r\n            </div> \r\n    \r\n            <div className=\"d-flex align-items-center mb-2\">\r\n                <div className=\"\" style={{width: '150px'}}>Overall Task Ratings: </div>\r\n                <div className=\"d-flex align-items-center\"> \r\n                    <Rating rating={Number(data?.overall_tasks)} /> \r\n                </div>\r\n            </div> \r\n    \r\n            <div className=\"mb-2\">\r\n                <span className=\"font-weight-bold d-block mb-1\">Comments:</span>\r\n                <div style={{color:'#777', fontSize: '13px'}}>\r\n                    <div className='sp1_ck_content' dangerouslySetInnerHTML={{__html: comment}}></div>\r\n                </div>\r\n            </div> \r\n            </React.Fragment>} \r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskReview","import React from \"react\";\r\nimport ContentLoader from \"react-content-loader\";\r\n\r\nconst HistoryLoader = (props) => (\r\n    <ContentLoader\r\n        speed={2}\r\n        width={450}\r\n        height={45}\r\n        viewBox=\"0 0 450 45\"\r\n        backgroundColor=\"#f3f3f3\"\r\n        foregroundColor=\"#ecebeb\"\r\n        {...props}\r\n    >\r\n        <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"46\" height=\"48\" />\r\n        <rect x=\"62\" y=\"29\" rx=\"0\" ry=\"0\" width=\"227\" height=\"12\" />\r\n        <rect x=\"60\" y=\"5\" rx=\"0\" ry=\"0\" width=\"344\" height=\"12\" />\r\n    </ContentLoader>\r\n);\r\n\r\nexport default HistoryLoader;\r\n","import React, {lazy, Suspense} from 'react'\r\nimport Loader from '../../../components/Loader' \r\nimport HistoryLoader from '../../../components/HistoryLoader';\r\nconst InnerHistoryItem = lazy(()=> import('../../history/InnerHistoryItem'));\r\n\r\nconst History = ({histories, isLoading}) => { \r\n  return (\r\n    <React.Fragment>\r\n        <h6 className='font-weight-bold'> Histories </h6> \r\n        <div className='mt-3 px-2'>  \r\n          {histories.length > 0 ? histories.map(d => (\r\n             <React.Fragment key={d.id}>\r\n               <Suspense fallback={<HistoryLoader />}>\r\n                  <InnerHistoryItem history={d} />\r\n              </Suspense>\r\n             </React.Fragment> \r\n          )):null} \r\n          {isLoading && <Loader />}\r\n        </div> \r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default History\r\n\r\n\r\n\r\n// history loader","import React from 'react'\r\nimport Loader from '../../../components/Loader'\r\nimport CommentSendBox from '../../comments/CommentSendBox'\r\nimport InnerComment from '../../comments/InnerComment'\r\n\r\nconst Comments = ({task, comments, onCommentPost, isLoading}) => {\r\n  return (\r\n    <React.Fragment>\r\n        <div className='d-flex flex-column'>\r\n            <CommentSendBox task={task} onCommentPost ={onCommentPost}/>  \r\n            <div className='sp1_task_comment_list mt-4'>\r\n                <div className='font-weight-bold pb-3'>Comments: </div>\r\n                <div className='sp1_task_comment_list_items'>\r\n                    {isLoading && comments?.length === 0 && <Loader />}\r\n                    {comments?.length > 0 && comments?.map(comment => (\r\n                        <InnerComment key={comment.id} comment={comment} />\r\n                    )) }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </React.Fragment> \r\n  )\r\n}\r\n\r\nexport default Comments","import * as React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Genarel from \"./preview/Genarel\";\r\nimport { SingleTask } from \"../../../utils/single-task\";\r\nimport {\r\n    useGetTaskDetailsQuery,\r\n    useLazyGetSubmittedTaskQuery,\r\n    useLazyGetTaskDetailsQuery,\r\n} from \"../../../services/api/SingleTaskPageApi\";\r\nimport SubmittedWork from \"./preview/SubmittedWork\";\r\nimport TimeLog from \"./preview/TimeLog\";\r\nimport TaskReview from \"./preview/TaskReview\";\r\nimport History from \"./preview/History\";\r\nimport Comments from \"./preview/Comments\";\r\nimport _ from \"lodash\";\r\nimport { useSingleTask } from \"../../../hooks/useSingleTask\";\r\n\r\nconst PreviewSubtask = ({ parentTask, subTask }) => {\r\n    const [task, setTask] = React.useState(null)\r\n    const taskID = subTask?.id;\r\n    const [submittedWork, setSubmittedWork] = React.useState([]);\r\n    const [timeLog, setTimeLog] = React.useState([]);\r\n    const [review, setReview] = React.useState(null);\r\n    const [histories, setHistories] = React.useState([]);\r\n    const [comments, setComments] = React.useState([]);\r\n\r\n    const { \r\n        getTaskById, \r\n        getSubmittionInfo, \r\n        taskDetailsIsFetching, \r\n        submittionInfoIsFetching\r\n     } = useSingleTask();\r\n\r\n\r\n    const [getTaskDetails, { isFetching: detailFetchingStateLoading }] =\r\n        useLazyGetTaskDetailsQuery();\r\n\r\n\r\n    // fetch task details\r\n    React.useEffect(() => {\r\n        (\r\n            async () => {\r\n               let task = await getTaskById(taskID)\r\n               task = new SingleTask(task)\r\n               setTask(task);\r\n            }\r\n        )()\r\n    }, [])\r\n   \r\n\r\n    //   fetch submitted rtk api\r\n    const fetchData = (url, cb) => {\r\n        getTaskDetails(`/${task?.id}/json?mode=${url}`)\r\n            .unwrap()\r\n            .then((res) =>{\r\n                let d = _.orderBy(res, 'id', 'desc');\r\n                cb(d);\r\n            })\r\n            .catch((err) => console.error(err));\r\n    };\r\n\r\n    // fetch submitted works when submitted tab clieked\r\n    const fetchSubmittedWork = async (e) => {\r\n        e.preventDefault();\r\n        if (submittedWork.length === 0) {\r\n            const data = await getSubmittionInfo(taskID);\r\n            console.log({data})\r\n            setSubmittedWork([...data]);\r\n        }\r\n    };\r\n\r\n    // fetch timelog data on tab click\r\n    const fetchTimeLogData = (e) => {\r\n        e.preventDefault();\r\n        if (timeLog.length === 0) {\r\n            fetchData(\"task_time_log\", setTimeLog);\r\n        }\r\n    };\r\n\r\n    // fetch review\r\n    const fetchReviewData = (e) => {\r\n        e.preventDefault();\r\n        fetchData(\"task_approve\", setReview);\r\n    };\r\n\r\n    // fetch histories\r\n    const fetchHistories = (e) => {\r\n        e.preventDefault();\r\n        fetchData(\"task_history\", setHistories);\r\n    };\r\n\r\n    // fetch comments\r\n    const fetchComments = (e) => {\r\n        e.preventDefault();\r\n        fetchData(\"task_comment\", setComments);\r\n    };\r\n\r\n    // on comment post\r\n    const onCommentPost = (comment) => {\r\n        const _comments = [...comments];\r\n        _comments.unshift(comment);\r\n        setComments(_comments);\r\n    };\r\n \r\n\r\n    return (\r\n        <React.Fragment>\r\n            {/* tab */}\r\n            <div\r\n                className=\"nav flex-column nav-pills sp1-subtask-modal-sidebar\"\r\n                id=\"v-pills-tab\"\r\n                role=\"tablist\"\r\n                aria-orientation=\"vertical\"\r\n            >\r\n                <a\r\n                    className=\"nav-link active\"\r\n                    id=\"v-pills-general-tab\"\r\n                    data-toggle=\"pill\"\r\n                    href=\"#v-pills-home\"\r\n                    role=\"tab\"\r\n                    aria-controls=\"v-pills-home\"\r\n                    aria-selected=\"true\"\r\n                >\r\n                    General\r\n                </a>\r\n                <a\r\n                    className=\"nav-link\"\r\n                    id=\"v-pills-submitted-work-tab\"\r\n                    data-toggle=\"pill\"\r\n                    href=\"#v-pills-submitted-work\"\r\n                    role=\"tab\"\r\n                    aria-controls=\"v-pills-submitted-work\"\r\n                    aria-selected=\"false\"\r\n                    onClick={fetchSubmittedWork}\r\n                >\r\n                    Submitted Works\r\n                </a>\r\n                <a\r\n                    className=\"nav-link\"\r\n                    id=\"v-pills-comments-tab\"\r\n                    data-toggle=\"pill\"\r\n                    href=\"#v-pills-comments\"\r\n                    role=\"tab\"\r\n                    aria-controls=\"v-pills-comments\"\r\n                    aria-selected=\"false\"\r\n                    onClick={fetchComments}\r\n                >\r\n                    Comment\r\n                </a>\r\n                <a\r\n                    className=\"nav-link\"\r\n                    id=\"v-pills-time-log-work-tab\"\r\n                    data-toggle=\"pill\"\r\n                    href=\"#v-pills-time-log-work\"\r\n                    role=\"tab\"\r\n                    aria-controls=\"v-pills-time-log-work\"\r\n                    aria-selected=\"false\"\r\n                    onClick={fetchTimeLogData}\r\n                >\r\n                    Time Logs\r\n                </a>\r\n                <a\r\n                    className=\"nav-link\"\r\n                    id=\"v-pills-history-tab\"\r\n                    data-toggle=\"pill\"\r\n                    href=\"#v-pills-history\"\r\n                    role=\"tab\"\r\n                    aria-controls=\"v-pills-history\"\r\n                    aria-selected=\"false\"\r\n                    onClick={fetchHistories}\r\n                >\r\n                    History\r\n                </a>\r\n                <a\r\n                    className=\"nav-link\"\r\n                    id=\"v-pills-task-review-work-tab\"\r\n                    data-toggle=\"pill\"\r\n                    href=\"#v-pills-task-review-work\"\r\n                    role=\"tab\"\r\n                    aria-controls=\"v-pills-task-review-work\"\r\n                    aria-selected=\"false\"\r\n                    onClick={fetchReviewData}\r\n                >\r\n                    Task Review\r\n                </a>\r\n            </div>\r\n\r\n            <div\r\n                className=\"tab-content p-3 sp1-subtask-modal-tab-content\"\r\n                id=\"v-pills-tabContent\"\r\n            >\r\n                <div\r\n                    className=\"tab-pane fade show active sp1_st_tab_panel\"\r\n                    id=\"v-pills-home\"\r\n                    role=\"tabpanel\"\r\n                    aria-labelledby=\"v-pills-general-tab\"\r\n                >\r\n                    <div className=\"mr-3\">\r\n                        <Genarel isFetching={taskDetailsIsFetching} taskID={taskID} task={task} />\r\n                    </div>\r\n                </div>\r\n                <div\r\n                    className=\"tab-pane fade\"\r\n                    id=\"v-pills-submitted-work\"\r\n                    role=\"tabpanel\"\r\n                    aria-labelledby=\"v-pills-submitted-work-tab\"\r\n                >\r\n                    <div className=\"mr-3\">\r\n                        <SubmittedWork\r\n                            task={task}\r\n                            submittedWork={submittedWork}\r\n                            loading={submittionInfoIsFetching}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div\r\n                    className=\"tab-pane fade\"\r\n                    id=\"v-pills-comments\"\r\n                    role=\"tabpanel\"\r\n                    aria-labelledby=\"v-pills-comments-tab\"\r\n                >\r\n                    <Comments\r\n                        task={task}\r\n                        comments={comments}\r\n                        onCommentPost={onCommentPost}\r\n                        isLoading={detailFetchingStateLoading}\r\n                    />\r\n                </div> \r\n\r\n                <div\r\n                    className=\"tab-pane fade\"\r\n                    id=\"v-pills-time-log-work\"\r\n                    role=\"tabpanel\"\r\n                    aria-labelledby=\"v-pills-time-log-work-tab\"\r\n                >\r\n                    <div className=\"mr-3\">\r\n                        <TimeLog\r\n                            task={task}\r\n                            timeLog={timeLog}\r\n                            isLoading={detailFetchingStateLoading}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div\r\n                    className=\"tab-pane fade\"\r\n                    id=\"v-pills-history\"\r\n                    role=\"tabpanel\"\r\n                    aria-labelledby=\"v-pills-history-tab\"\r\n                >\r\n                    <div className=\"mr-3\">\r\n                        <History\r\n                            histories={histories}\r\n                            isLoading={detailFetchingStateLoading}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div\r\n                    className=\"tab-pane fade\"\r\n                    id=\"v-pills-task-review-work\"\r\n                    role=\"tabpanel\"\r\n                    aria-labelledby=\"v-pills-task-review-work-tab\"\r\n                >\r\n                    <TaskReview\r\n                        review={review}\r\n                        isLoading={detailFetchingStateLoading}\r\n                    />\r\n                </div>\r\n            </div>\r\n            {/* end tab */}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default PreviewSubtask;\r\n","import { Rating } from '@smastrom/react-rating';\r\nimport '@smastrom/react-rating/style.css';\r\nimport dayjs from 'dayjs';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { HiOutlineSelector } from 'react-icons/hi';\r\nimport { useDispatch } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport CKEditorComponent from '../../../../ckeditor/index';\r\nimport FileUploader from '../../../../file-upload/FileUploader';\r\nimport { Placeholder } from '../../../../global/Placeholder';\r\nimport { useSingleTask } from '../../../../hooks/useSingleTask';\r\nimport { useApproveSubmittedTaskMutation, useGetSubmittedTaskQuery } from '../../../../services/api/SingleTaskPageApi';\r\nimport Button from '../../../components/Button';\r\nimport Modal from '../../../components/Modal';\r\nimport SubmitButton from '../../../components/SubmitButton';\r\n\r\nconst ApproveTask = ({task, status, auth}) => {\r\n  const dispatch = useDispatch();\r\n  const [showApproveForm, setShowApproveForm] = useState(false);\r\n  const [completedWithInDeadline, setCompletedWithInDeadline] = useState(1);\r\n  const [submittedStar, setSubmittedStar] = useState(1);\r\n  const [fullfilledStar, setFullfilledStar] = useState(1);\r\n  const [comment, setComment] = useState('');\r\n\r\n  const [oldSubmittion, setOldSubmittion] = useState([]);\r\n  const [latestSubmittion, setLatestSubmittion] = useState({});\r\n\r\n  const [approveSubmittedTask, {isLoading}] = useApproveSubmittedTaskMutation();\r\n  const { data: getSubmittedTask, isFetching  } = useGetSubmittedTaskQuery(task?.id);\r\n\r\n  const { approveTask,  approveTaskLoadingStatus } = useSingleTask();\r\n\r\n  const [err, setErr] = useState(null);\r\n\r\n \r\n useEffect(() => {\r\n    if(getSubmittedTask){\r\n        const data = _.sortBy(getSubmittedTask, ['submission_no']);\r\n        const latest = _.last(data);\r\n        const old = _.initial(data);\r\n        setOldSubmittion([...old]);\r\n        setLatestSubmittion(latest);\r\n    }\r\n }, [isFetching]);\r\n\r\n  const close = (e) => {\r\n    e.preventDefault();\r\n    setShowApproveForm(false)\r\n  }\r\n\r\n  // editor data \r\n  const onWriteOnEditor = (e, editor) => {\r\n    const data = editor.getData();\r\n    setComment(data);\r\n  }\r\n\r\n\r\n  const isValid = () =>{\r\n    let count = 0;\r\n    const error = new Object();\r\n\r\n    if(!comment){\r\n        error.comment = \"Please add a comment!\"\r\n        count ++;\r\n    }\r\n\r\n    setErr(error);\r\n    return !count;\r\n  }\r\n\r\n  // submit \r\n  const handleOnSubmit = async (e) =>{\r\n    e.preventDefault();\r\n    const data = {\r\n        rating: completedWithInDeadline,\r\n        rating2: submittedStar,\r\n        rating3: fullfilledStar,\r\n        comment,\r\n        task_id: task?.id,\r\n        user_id: auth?.getId()\r\n    }   \r\n\r\n    if(isValid()){ \r\n        const cb = () => setShowApproveForm(false);\r\n        await approveTask(data, cb ); \r\n    }else{\r\n        toast.warn(\"Please add a comment!\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <Button\r\n            variant='success'\r\n            onClick={() => setShowApproveForm(true)}\r\n            className='d-flex align-items-center border-success'\r\n        >\r\n            <i className=\"fa-solid fa-handshake-angle\"></i>\r\n            <span className=\"d-inline ml-1\">Approve</span>\r\n        </Button>\r\n\r\n        <Modal isOpen={showApproveForm} className=\"sp1_single_task--modal w-100\">\r\n            <div className=\"sp1_single_task--modal-panerl-wrapper w-100\">\r\n                <div\r\n                    className=\"sp1_single_task--modal-panel w-100\"\r\n                    style={{ maxWidth: '600px', minWidth: '320px' }}\r\n                >\r\n                    <div className=\"border-bottom pb-2 pl-3 pr-2 mb-3 d-flex align-items-center justify-content-between\">\r\n                        <div className=\"font-weight-bold f-16\"> Approve Task </div>\r\n                        <Button onClick={close} className=\"\">\r\n                            <i className=\"fa-solid fa-xmark\" />\r\n                        </Button>\r\n                    </div>\r\n\r\n                    <div className=\"px-3\">\r\n                         { _.size(oldSubmittion) > 0 &&\r\n                            <div className='mb-3'>\r\n                                <div className=\"sp1_st--approve-card\"> \r\n                                    <div className=\"sp1_st--approve-card-header\" data-toggle=\"collapse\" href=\"#oldSubmittedSuccess\" role=\"button\"   aria-expanded=\"false\" aria-controls=\"oldSubmittedSuccess\">\r\n                                        Old Submitted Works ({_.size(oldSubmittion)})\r\n                                        <button>\r\n                                            <HiOutlineSelector />\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"collapse multi-collapse shadow-none\" id=\"oldSubmittedSuccess\">\r\n                                    <div className=\"card card-body\">\r\n                                        {\r\n                                            _.size(oldSubmittion) > 0 ?\r\n                                            _.map(oldSubmittion, (task)=>(\r\n                                                <SubmittedWorkCard key={`${task.id}_${task?.submission_no}`} data={task} isLoading={isFetching}/>\r\n                                            )):\r\n                                            <span>\r\n                                                No Old Submittion!\r\n                                            </span>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                         }\r\n                        {/* content */}\r\n                        {\r\n                            // getSubmittedTask?.submission_no === getSubmittedTask.\r\n                        }\r\n                        <SubmittedWorkCard data={latestSubmittion} latest={true} isLoading={isFetching} />\r\n                    </div>\r\n                    {\r\n                        !isFetching && \r\n                        <div className=\"mt-4 px-3\">\r\n                            <form action=\"\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"\" className='font-weight-bold'>Is This Task Completed Within Deadline?<sup className='f-16'>*</sup></label>\r\n                                    <div className=''>\r\n                                        <Rating\r\n                                            style={{ maxWidth: 120 }}\r\n                                            value={completedWithInDeadline}\r\n                                            onChange={setCompletedWithInDeadline}\r\n                                            radius='small'\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n    \r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"\" className='font-weight-bold'>How Beautifully The Task Is Submitted?<sup className='f-16'>*</sup></label>\r\n                                    <div className=''>\r\n                                        <Rating\r\n                                            style={{ maxWidth: 120 }}\r\n                                            value={submittedStar}\r\n                                            onChange={setSubmittedStar}\r\n                                            radius='small'\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n    \r\n    \r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"\" className='font-weight-bold'>\r\n                                        How Perfectly The Task Requirements Are Fullfilled?<sup className='f-16'>*</sup>\r\n                                    </label>\r\n                                    <div className=''>\r\n                                        <Rating\r\n                                            style={{ maxWidth: 120 }}\r\n                                            value={fullfilledStar}\r\n                                            onChange={setFullfilledStar}\r\n                                            radius='small'\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n    \r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"\" className='font-weight-bold'>\r\n                                        Any Recommendations For Developer?<sup className='f-16'>*</sup>\r\n                                    </label>\r\n                                    <div className='ck-editor-holder'>\r\n                                        <CKEditorComponent onChange={onWriteOnEditor} />\r\n                                    </div>\r\n                                </div>\r\n    \r\n                                <div className=\"mt-3 d-flex align-items-center\">\r\n                                    <Button onClick={close} variant=\"tertiary\" className=\"ml-auto mr-2\">\r\n                                       Close \r\n                                    </Button>\r\n    \r\n                                    {/* {!isLoading ? (\r\n                                        <React.Fragment>\r\n                                            <Button onClick={handleOnSubmit}>Approve</Button>\r\n                                        </React.Fragment>\r\n                                    ) : (\r\n                                        <React.Fragment>\r\n                                            <Button className=\"cursor-processing\">\r\n                                                <div\r\n                                                    className=\"spinner-border text-white\"\r\n                                                    role=\"status\"\r\n                                                    style={{\r\n                                                        width: \"18px\",\r\n                                                        height: \"18px\",\r\n                                                    }}\r\n                                                />{\" \"}\r\n                                                Processing...\r\n                                            </Button>\r\n                                        </React.Fragment>\r\n                                    )} */}\r\n                                    <SubmitButton onClick={handleOnSubmit} title=\"Approve\" isLoading={approveTaskLoadingStatus} />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    }\r\n                    \r\n                </div>\r\n            </div>\r\n        </Modal> \r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ApproveTask\r\n\r\n\r\n// Submitted work\r\n\r\nconst SubmittedWorkCard = ({data, latest=false, className=\"\", style, isLoading = false}) => {\r\n\r\n    const links = _.compact(_.split(data?.links, ','));\r\n    const attaches =  _.compact(_.split(data?.attaches, ','));\r\n   \r\n\r\n    if(isLoading){\r\n        return <div className={`sp1_st--approve-card mb-3 ${className}`} style={style}> \r\n            <div className=\"sp1_st--approve-card-header\">\r\n                <Placeholder height=\"14px\" width='80px' className='mb-2' />\r\n                <Placeholder height=\"14px\" width='50px' className='mb-2' />\r\n            </div>\r\n\r\n            <div className='sp1_st--approve-card-body'>\r\n                <div className='mb-2'>\r\n                    <Placeholder height=\"14px\" width='80px' className='mb-2'/>\r\n\r\n                    <div className='ml-2'>\r\n                        <Placeholder height=\"14px\" width='100%' className='mb-2'/>\r\n                        <Placeholder height=\"14px\" width='100%' className='mb-2'/>\r\n                        <Placeholder height=\"14px\" width='100%' className='mb-2'/>\r\n                    </div> \r\n                </div>\r\n\r\n                <div className='mb-2'>\r\n                    <Placeholder height=\"14px\" width='80px' className='mb-2'/>\r\n\r\n                    <div className='ml-2'>\r\n                        <Placeholder height=\"14px\" width='100%' className='mb-2'/>\r\n                        <Placeholder height=\"14px\" width='100%' className='mb-2'/>\r\n                        <Placeholder height=\"14px\" width='50%' className='mb-2'/>\r\n                    </div> \r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    \r\n    return(\r\n        <div className={`sp1_st--approve-card mb-3 ${className}`} style={style}> \r\n            <div className=\"sp1_st--approve-card-header\">\r\n                <span>{latest ? 'Latest': \"Old\"} Submittion {!latest && `(${data?.submission_no})`}</span>\r\n                <span>\r\n                    {dayjs(data?.submission_date).format('MMM DD, YYYY hh:mm a')}\r\n                </span>\r\n            </div>\r\n\r\n            <div className='sp1_st--approve-card-body'>\r\n                <div className='mb-2'>\r\n                    <div className='font-weight-bold f-12' style={{color: '#81868E'}}> Links</div>\r\n                    <ol style={{listStyle: 'unset'}}>\r\n                        {_.map(links, (link, index) =>(\r\n                            <li key={`${link}_${index}`} style={{listStyle: 'numaric'}}>\r\n                                <a href={link}>{link}</a>\r\n                            </li>\r\n                        ))}\r\n                    </ol>\r\n                </div>\r\n\r\n                <div className='mb-2'>\r\n                    <div className=\"font-weight-bold f-12\" style={{color: '#81868E'}}>Description</div>\r\n                    <div className='sp1_ck_content p-2' dangerouslySetInnerHTML={{__html: data?.text ?? `<span style=\"color:rgb(180,188,196);\">Comment Not Available</span>`}}/>\r\n                </div>\r\n\r\n\r\n                <div className=\"mt-3\">\r\n                <span\r\n                    className=\"d-block f-12 font-weight-bold mb-2\"\r\n                    style={{ color: \"#767581\" }}\r\n                >\r\n                    Attached Files\r\n                </span>\r\n                {_.size(attaches) > 0 ? (\r\n                    <FileUploader>\r\n                        {_.map(attaches, (file, index) => (\r\n                            <FileUploader.Preview\r\n                                key={`${file}_${index}`}\r\n                                fileName={file}\r\n                                downloadAble={true}\r\n                                deleteAble={false}\r\n                                downloadUrl={`${file}`}\r\n                                previewUrl={`${file}`}\r\n                                fileType={_.includes([\"png\",\"jpg\", \"jpeg\", \"gif\", \"svg\"], _.last(_.split(file, '.'))) ? 'images' : 'others'}\r\n                                ext=\"\"\r\n                            />\r\n                        ))}\r\n                    </FileUploader>\r\n                    ) : (\r\n                        <span\r\n                            className=\"px-2\"\r\n                            style={{ color: \"rgb(180, 188, 196)\" }}\r\n                        >\r\n                            No Attachment is available\r\n                        </span>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import _ from \"lodash\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useCheckEditableSubTaskQuery, useLazyCheckSubTaskTimerQuery } from \"../../../services/api/SingleTaskPageApi\";\r\nimport { SingleTask } from \"../../../utils/single-task\";\r\nimport { User } from \"../../../utils/user-details\";\r\nimport Button from \"../../components/Button\";\r\nimport Modal from \"../../components/Modal\";\r\nimport PreviewSubtask from \"./PreviewSubtask\";\r\nimport ApproveTask from \"../task-actions/approve-task/ApproveTask\";\r\n\r\nconst SubTask = ({ subTask, task, status, toggleEditForm }) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const auth = new User(window?.Laravel?.user);\r\n\r\n\r\n    const [checkSubTaskTimer, {isFetching}] = useLazyCheckSubTaskTimerQuery()\r\n      // check task edit\r\n\r\n        const { data } = useCheckEditableSubTaskQuery(subTask?.id);\r\n        const isEditable = data?.task === 0;\r\n\r\n    const toggle = (e) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      setIsOpen(true);\r\n    }\r\n\r\n\r\n    const hasEditPermission = () => {\r\n        return Number(subTask?.added_by) === auth?.getId() && _.includes([1,2,3], status?.id);\r\n    }\r\n\r\n    const onEdit = (e) => {\r\n        e.preventDefault();\r\n        checkSubTaskTimer(subTask?.id)\r\n        .unwrap()\r\n        .then(res=>{\r\n            if(res?.status === 200){\r\n                toggleEditForm(e, subTask?.id)\r\n            }else{\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: 'You cannot edit the task because timer is already running',\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const onModalEditButtonClick = (e) => {\r\n        e.preventDefault();\r\n        checkSubTaskTimer(subTask?.id)\r\n        .unwrap()\r\n        .then(res=>{\r\n            if(res?.status === 200){\r\n                window.location = `/account/tasks/${subTask?.id}/edit`\r\n            }else{\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: 'You cannot edit the task because timer is already running',\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <div\r\n            className=\"d-flex align-items-center justify-content-between sp1_tark_right_item\"\r\n            style={{ gap: \"16px\" }}\r\n        >\r\n            <div className=\"w-100 text-ellipsis\">\r\n                <div onClick={toggle} className=\"hover-underline\" style={{cursor: 'pointer'}}>\r\n                    {subTask?.title}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"d-flex align-items-center\">\r\n                <div\r\n                    onClick={toggle}\r\n                    className=\"mr-2 py-2 sp1_task_righ_action_btn\"\r\n                    style={{cursor: 'pointer'}}\r\n                >\r\n                    <i className=\"fa-regular fa-eye\"></i>\r\n                </div>\r\n                {\r\n                    isEditable && hasEditPermission() && <div\r\n                        onClick={onEdit}\r\n                        className=\"mr-2 py-2 sp1_task_righ_action_btn\"\r\n                        style={{cursor: 'pointer'}}\r\n                    >\r\n                        {isFetching ?  <div\r\n                            className=\"spinner-border text-dark ml-2\"\r\n                            role=\"status\"\r\n                            style={{\r\n                                width: \"16px\",\r\n                                height: \"16px\",\r\n                                border: \"0.14em solid rgba(0, 0, 0, .25)\",\r\n                                borderRightColor: \"transparent\",\r\n                            }}\r\n                        /> :<i className=\"fa-regular fa-pen-to-square\"></i>}\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n\r\n\r\n            {/* task Preview Modal */}\r\n            <React.Fragment>\r\n                <Modal\r\n                    className={`sp1_subtask_offsetcanvas--modal`}\r\n                    isOpen={isOpen}\r\n                >\r\n                    <div\r\n                        className={`sp1_subtask_offsetcanvas ${\r\n                            isOpen ? \"open\" : \"\"\r\n                        }`}\r\n                    >\r\n                        <div className=\"d-flex align-items-center justify-content-between p-2 sp1_subtask_offsetcanvas--bar\">\r\n                            <div className=\"pl-3\">\r\n                                <span className=\"font-weight-bold f-16\">\r\n                                    Sub Task # {subTask?.id} :{\" \"}\r\n                                    <span className=\"font-weight-normal\">\r\n                                        {subTask?.title}\r\n                                    </span>{\" \"}\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"d-flex align-items-center ml-auto\">\r\n                                {/* <ApproveTask\r\n                                    task={subTask}\r\n                                    auth={auth}\r\n                                />\r\n\r\n                                <Button variant=\"success\" onClick={() => setIsOpen(false)} className=\"mr-2 bg-danger\">\r\n                                    Revision\r\n                                </Button> */}\r\n\r\n                                {isEditable && hasEditPermission() && <a href=\"#\" onClick={onModalEditButtonClick} className=\"border text-dark mr-2 py-1 px-2\">\r\n                                    {isFetching ?  <div\r\n                                        className=\"spinner-border text-dark ml-2\"\r\n                                        role=\"status\"\r\n                                        style={{\r\n                                            width: \"16px\",\r\n                                            height: \"16px\",\r\n                                            border: \"0.14em solid rgba(0, 0, 0, .25)\",\r\n                                            borderRightColor: \"transparent\",\r\n                                        }}\r\n                                    /> :<i className=\"fa-regular fa-pen-to-square\"></i>}\r\n                                </a>}\r\n                                <a\r\n                                    href={`/account/tasks/${subTask?.id}`}\r\n                                    target=\"_blank\"\r\n                                    className=\"border text-dark mr-2 py-1 px-2\"\r\n                                >\r\n                                    {/* <i className=\"fa-solid fa-up-right-and-down-left-from-center\" /> */}\r\n                                    <i className=\"fa-solid fa-arrow-up-right-from-square\"></i>\r\n                                </a>\r\n                                <Button onClick={() => setIsOpen(false)} className=\"\">\r\n                                    <i className=\"fa-solid fa-xmark\" />\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"sp1_subtask_offsetcanvas--body\">\r\n                            <PreviewSubtask\r\n                                parentTask={task}\r\n                                subTask={subTask}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            </React.Fragment>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SubTask;\r\n","import * as React from 'react';\r\nimport DatePicker from 'react-datepicker';\r\n\r\nconst DatePickerComponent = ({date, selected, setDate, minDate, maxDate, placeholderText}) => {\r\n\r\n  return (\r\n        <DatePicker\r\n            selected={date}\r\n            dateFormat='dd-MM-yyyy'\r\n            onChange={(d) => setDate(d)}\r\n            className='w-100 border-0 py-2'\r\n            minDate={minDate}\r\n            maxDate={maxDate}\r\n            placeholderText={placeholderText}\r\n        />\r\n  )\r\n}\r\n\r\nexport default DatePickerComponent;\r\n","import { Combobox } from \"@headlessui/react\";\r\nimport * as React from \"react\";\r\nimport _ from \"lodash\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n    useDeveloperInProgressTaskQuery,\r\n    useGetTaskDetailsQuery,\r\n} from \"../../../services/api/SingleTaskPageApi\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { Placeholder } from '../../../global/Placeholder'\r\n\r\nconst AssginedToSelection = ({ selected, onSelect }) => {\r\n    const [query, setQuery] = React.useState(\"\");\r\n\r\n    const params = useParams();\r\n    const { data: employees, isFetching } = useGetTaskDetailsQuery(\r\n        `/${params?.taskId}/json?mode=employees`\r\n    );\r\n\r\n    const filteredData =\r\n        query === \"\"\r\n            ? employees\r\n            : employees?.filter((employee) => {\r\n                  return employee?.name\r\n                      .toLowerCase()\r\n                      .includes(query.toLowerCase());\r\n              });\r\n\r\n    return (\r\n        <Combobox value={selected} onChange={onSelect}>\r\n            <div className=\"form-group position-relative my-3\">\r\n                <label htmlFor=\"\">Assigned To</label>\r\n                <Combobox.Button className=\"d-flex align-items-center w-100 sp1-selection-display-button\">\r\n                    <Combobox.Input\r\n                        onChange={(e) => setQuery(e.target.value)}\r\n                        placeholder=\"--\"\r\n                        displayValue={(value) => value?.name || \"\"}\r\n                        className=\"form-control height-35 f-14 sp1-selection-display w-100\"\r\n                    />\r\n                    <div className=\"__icon\">\r\n                        <i className=\"fa-solid fa-sort\"></i>\r\n                    </div>\r\n                </Combobox.Button>\r\n\r\n                <Combobox.Options className=\"sp1-select-options\">\r\n                    {isFetching && (\r\n                        <div className=\"sp1-select-option-nodata\">\r\n                            <Loader />\r\n                        </div>\r\n                    )}\r\n\r\n                    {filteredData?.length === 0 ? (\r\n                        <div className=\"sp1-select-option-nodata\">\r\n                            Nothing found.\r\n                        </div>\r\n                    ) : (\r\n                        filteredData?.map((employee) => (\r\n                            <Option key={employee.id} employee={employee} />\r\n                        ))\r\n                    )}\r\n                </Combobox.Options>\r\n            </div>\r\n        </Combobox>\r\n    );\r\n};\r\n\r\nexport default AssginedToSelection;\r\n\r\nconst Option = ({ employee }) => {\r\n    const { data, isLoading } = useDeveloperInProgressTaskQuery(\r\n        employee?.id,\r\n        { skip: !employee?.id }\r\n    );\r\n  \r\n    if(isLoading){\r\n        return <div className=\"sp1-select-option mb-2\">\r\n            <div className=\"d-flex align-items-center px-3\"> \r\n                <Placeholder />\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <Combobox.Option\r\n            key={employee?.id}\r\n            className={({ active }) =>\r\n                `sp1-select-option ${active ? \"active\" : \"\"}`\r\n            }\r\n            value={{\r\n                ...employee,\r\n                isOverloaded: data?.status === 400,\r\n            }}\r\n        >\r\n            {({ selected }) => (\r\n                <div\r\n                    className=\"d-flex align-items-center\"\r\n                    style={{ gap: \"10px\" }}\r\n                >\r\n                    <div\r\n                        className=\"rounded-circle\"\r\n                        style={{\r\n                            width: \"28px\",\r\n                            height: \"28px\",\r\n                            overflow: \"hidden\",\r\n                        }}\r\n                    >\r\n                        <img\r\n                            src={employee?.image_url}\r\n                            alt={employee?.name}\r\n                            width={100}\r\n                            height={100}\r\n                            className=\"rounded-circle\"\r\n                            style={{\r\n                                width: \"100%\",\r\n                                height: \"100%\",\r\n                                objectFit: \"fill\",\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <span\r\n                        className={`block truncate ${\r\n                            selected ? \"font-medium\" : \"font-normal\"\r\n                        }`}\r\n                    >\r\n                        <span className=\"mr-2\">{employee?.name}</span>\r\n                        {data?.status === 400 ? <span className=\"badge badge-danger\">Overloaded</span> : \r\n                        employee?.developer_status === 1 ? (\r\n                            <span className=\"badge badge-warning\">\r\n                                Working...\r\n                            </span>\r\n                        ) : (\r\n                            <span className=\"badge badge-primary\">\r\n                                Open to Work\r\n                            </span>\r\n                        )}\r\n\r\n\r\n                    </span>\r\n                    {selected ? (\r\n                        <span className=\"ml-auto\">\r\n                            <i className=\"fa-solid fa-check\"></i>\r\n                        </span>\r\n                    ) : null}\r\n                </div>\r\n            )}\r\n        </Combobox.Option>\r\n    );\r\n};\r\n","import * as React from 'react';\r\nimport { Listbox } from '@headlessui/react'\r\n\r\n\r\n\r\nconst priority = [\"Emergency\", \"Urgent\", \"Regular\"]\r\n\r\n\r\nconst PrioritySelection = ({selected, setSelected}) => { \r\n    return(\r\n        <Listbox value={selected} onChange={setSelected}>\r\n            <div className=\"form-group position-relative my-3\">\r\n                <label htmlFor=\"\"> Priority <sup>*</sup> </label>\r\n                    <Listbox.Button className=\" sp1-selection-display-button form-control height-35 f-14 sp1-selection-display bg-white w-100\">{selected}\r\n                    \r\n                    <div className='__icon'>\r\n                        <i className=\"fa-solid fa-sort\"></i>\r\n                    </div>\r\n                </Listbox.Button>\r\n                <Listbox.Options  className=\"sp1-select-options\">\r\n                    {priority?.map((s, i) => (\r\n                        <Listbox.Option \r\n                            key={i}\r\n                            className={({ active }) =>  `sp1-select-option ${ active ? 'active' : ''}`}\r\n                            value={s}\r\n                        > {s} </Listbox.Option>\r\n                    ))}\r\n                </Listbox.Options>\r\n            </div>\r\n        </Listbox>\r\n    )\r\n}\r\n\r\nexport default PrioritySelection;","/* eslint-disable react/display-name */\r\nimport PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n\r\nconst SearchBox = ({value, onChange, placeholder=\"Search\", autoFocus=false, className=\"\", ...props}) => {\r\n        const ref = React.useRef(null);\r\n        React.useEffect(() => {\r\n            if (autoFocus) {\r\n                ref.current.focus();\r\n            }\r\n        }, [autoFocus, ref])\r\n        return (\r\n            <div className='cnx__ins__ui_search'>\r\n                <input \r\n                    type='text' \r\n                    placeholder= {placeholder}\r\n                    value={value}\r\n                    className={`cnx__ins__ui_search_input ${className}`}\r\n                    onChange={e => onChange(e.currentTarget.value)}  \r\n                    ref={ref}   \r\n                    {...props}\r\n                />\r\n\r\n                {/* search icons */}\r\n                    <div className='cnx__ins__ui_search_icon'>\r\n                        <svg \r\n                            xmlns=\"http://www.w3.org/2000/svg\" \r\n                            className='cnx__ins__ui_search_icon_svg mb-1'\r\n                            viewBox=\"0 0 24 24\" width=\"15\" height=\"15\">\r\n                            <path d=\"M23.707,22.293l-5.969-5.969a10.016,10.016,0,1,0-1.414,1.414l5.969,5.969a1,1,0,0,0,1.414-1.414ZM10,18a8,8,0,1,1,8-8A8.009,8.009,0,0,1,10,18Z\"/>\r\n                        </svg>\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\nSearchBox.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    placeholder: PropTypes.string,\r\n    className: PropTypes.string,\r\n    autoFocus: PropTypes.bool,\r\n}\r\n\r\n\r\nexport default SearchBox;","import { Combobox } from '@headlessui/react'\r\nimport * as React from 'react'\r\nimport SearchBox from '../../components/form/Searchbox';\r\nimport _  from 'lodash';\r\nimport { useParams } from 'react-router-dom';\r\nimport Loader from '../../components/Loader';\r\nimport { useGetTaskDetailsQuery } from '../../../../react-latest/services/api/SingleTaskPageApi';\r\n\r\n\r\n\r\nconst TaskCategorySelectionBox = ({selected, onSelect, taskId}) => {\r\n    const [query, setQuery] = React.useState('');\r\n\r\n    const params = useParams();\r\n    const {\r\n        data:categories,\r\n        isFetching\r\n    } = useGetTaskDetailsQuery(`/${params?.taskId || taskId}/json?mode=category`);\r\n\r\n\r\n    const filteredData =\r\n    query === ''\r\n      ? categories\r\n      : categories?.filter((cat) => {\r\n          return cat?.category_name.toLowerCase().includes(query.toLowerCase())\r\n        })\r\n\r\n  return (\r\n    <Combobox value={selected} onChange={onSelect}>\r\n        <div className=\"form-group position-relative my-3\">\r\n            <label htmlFor=\"\">Task category<sup>*</sup></label>\r\n            <Combobox.Button className=\"d-flex align-items-center w-100 sp1-selection-display-button\">\r\n                <Combobox.Input\r\n                    onChange={e => setQuery(e.target.value)}\r\n                    placeholder='--'\r\n                    displayValue={(value) => value?.category_name || ''}\r\n                    className=\"form-control height-35 f-14 sp1-selection-display w-100\"\r\n                />\r\n                <div className='__icon'>\r\n                    <i className=\"fa-solid fa-sort\"></i>\r\n                </div>\r\n            </Combobox.Button>\r\n\r\n            <Combobox.Options className=\"sp1-select-options\">\r\n\r\n                {isFetching && (\r\n                    <div className='sp1-select-option-nodata'>\r\n                        <Loader />\r\n                    </div>\r\n                )}\r\n\r\n                {filteredData?.length===0 ?\r\n                    <div className='sp1-select-option-nodata'>\r\n                         Nothing found.\r\n                    </div>\r\n                :filteredData?.map((cat, catIdx) => (\r\n                <Combobox.Option\r\n                    key={catIdx}\r\n                    className={({ active }) =>  `sp1-select-option ${ active ? 'active' : ''}`}\r\n                    value={cat}\r\n                >\r\n                    {({ selected }) => (\r\n                        <>\r\n                            <span\r\n                                className={`block truncate ${\r\n                                selected ? 'font-medium' : 'font-normal'\r\n                                }`}\r\n                            >\r\n                                {cat?.category_name}\r\n                            </span>\r\n                            {selected ? (\r\n                                <span className=\"ml-auto\"> <i className='fa-solid fa-check'/> </span>\r\n                            ) : null}\r\n                        </>\r\n                    )}\r\n                </Combobox.Option>\r\n            ))}\r\n            </Combobox.Options>\r\n        </div>\r\n    </Combobox >\r\n  )\r\n}\r\n\r\nexport default TaskCategorySelectionBox\r\n","import React from 'react'\r\nimport Modal from '../../components/Modal'\r\nimport Button from '../../components/Button'\r\nimport {User} from '../../../utils/user-details';\r\n\r\nconst LeadConfirmationModal = ({isOpen, onConfirm}) => {\r\n  const [buttonVisible, setButtonVisible] = React.useState(false);\r\n  const [countDown, setCountDown] = React.useState(20);\r\n  const auth = new User(window.Laravel.user);\r\n\r\n  React.useEffect(() => { \r\n    if(auth.getRoleId() && auth.getRoleId() === 6){\r\n      let count = countDown ?? 0;\r\n\r\n      let timeIntervelId = setInterval(() => {\r\n          setCountDown(count--);\r\n      }, 1000);\r\n  \r\n  \r\n      let timeOutId = setTimeout(() => {\r\n        setButtonVisible(true);\r\n        clearInterval(timeIntervelId)\r\n      }, 22000);\r\n  \r\n      \r\n  \r\n      return () => {\r\n        clearTimeout(timeOutId);\r\n        clearInterval(timeIntervelId);\r\n      };\r\n    }\r\n    \r\n    \r\n    return () =>  onConfirm(); \r\n  }, []);\r\n\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} className=\"subtask-timer-confirmation--modal\">\r\n        <div className='subtask-timer-confirmation--panel'>\r\n           <div className=\"subtask-timer-confirmation--content\">\r\n                <h4 className='mb-3'> Do You Understand The Following Things? </h4>\r\n                \r\n                <ol type='A'>\r\n                    <li> Your teams job is not to decide what the look and feel of a website will be based on a few reference websites </li>\r\n                    <li>Your teams job is not to research a theme based on an instruction shared by the PM. </li>\r\n                    <li>Your teams job is not to research a plugin based on a problem shared by PM.</li>\r\n                    <li>Your teams job is not to choose the color scheme of a website.</li>\r\n                    <li>Your teams job is not to talk to the support for example the shopify support team, theme support, plugin support and any other support for any solution.</li>\r\n                    <li>Your teams job is not to create the training videos for the client after the completion of a project. </li>\r\n                    <li>You understand that all your teams hours have to be logged/tracked and you team mates will questioned if each of them doesn’t log at least 7 hours for any reason.</li>\r\n                </ol>\r\n\r\n\r\n                <p>In general, anything that has to do with requirements define (of any sort) has to be done by the project manager. Your teams job is to execute the work based on the defined requirements.  </p> \r\n\r\n                <p>If for any reason, project manager needs your help for any of those things, he will have to create a separate task for each of them and those tasks have to be authorized by the top management mandatorily.</p>\r\n                \r\n                <p> Report immediately if you are asked to do any of these and if it was’t authorized by top management. You should see a text like “Authorized by top management” at the right side of the task title if it was authorized.In case, you don’t report, the extra time taken for these will be considered as your lackings (as they will remain unaccountable) and you will receive negative performance score.”</p>\r\n\r\n                <div className='d-flex align-items-center'>\r\n                     <Button \r\n                        onClick={onConfirm} \r\n                        className='ml-auto'\r\n                        disabled={!buttonVisible}\r\n                      > \r\n                        Yes, I Fully Understand This {!buttonVisible && `(${countDown})`}\r\n                      </Button> \r\n                </div>\r\n           </div>\r\n        </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default LeadConfirmationModal","import React, { useState } from \"react\";\r\nimport Input from \"../../components/form/Input\";\r\nimport Button from \"../../components/Button\";\r\nimport { useWorkingEnvironmentMutation } from \"../../../services/api/SingleTaskPageApi\";\r\nimport SubmitButton from \"../../components/SubmitButton\";\r\nimport { checkIsURL } from \"../../../utils/check-is-url\";\r\nimport { toast } from \"react-toastify\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst WorkingEnvironmentForm = ({ task, onSubmit, close }) => {\r\n    const [siteUrl, setSiteUrl] = useState(\"\");\r\n    const [frontendPassword, setFrontendPassword] = useState(\"\");\r\n    const [loginUrl, setLoginUrl] = useState(\"\");\r\n    const [\r\n        siteLoginCredentialUserNameOrEmail,\r\n        setSiteLoginCredentialUserNameOrEmail,\r\n    ] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [err, setErr] = useState(null);\r\n\r\n    const [workingEnvironment, { isLoading }] = useWorkingEnvironmentMutation();\r\n\r\n    // handle input change\r\n    const handleChange = (e, setState) => {\r\n        e.preventDefault();\r\n        setState(e.target.value);\r\n    };\r\n\r\n    const isValid = () => {\r\n        let count = 0;\r\n        const error = new Object();\r\n\r\n        if (!siteUrl) {\r\n            count++;\r\n            error.siteUrl = \"You have to provide Working/Staging Site's URL\";\r\n        } else if (!checkIsURL(siteUrl)) {\r\n            count++;\r\n            error.siteUrl = \"Please enter a valid URL\";\r\n            toast.warn(\"Please enter a valid Working/Staging Site's URL\", {\r\n                position: \"top-right\",\r\n            });\r\n        }\r\n\r\n        if (!loginUrl) {\r\n            count++;\r\n            error.loginUrl =\r\n                \"You have to provide Working/Staging Site's Admin Panel URL\";\r\n        } else if (!checkIsURL(loginUrl)) {\r\n            count++;\r\n            error.loginUrl = \"Please enter a valid URL\";\r\n            toast.warn(\r\n                \"Please enter a valid Working/Staging Site's Admin Panel URL\",\r\n                { position: \"top-right\" }\r\n            );\r\n        }\r\n\r\n        if (!siteLoginCredentialUserNameOrEmail) {\r\n            count++;\r\n            error.username =\r\n                \"You have to provide Working/Staging Site's Admin Username/Email\";\r\n        }\r\n\r\n        if (!password) {\r\n            count++;\r\n            error.password =\r\n                \"You have to provide Working/Staging Site's Admin Password\";\r\n        }\r\n\r\n        if (!frontendPassword) {\r\n            count++;\r\n            error.frontendPassword =\r\n                \"You have to provide Working/Staging Site's Frontend Password\";\r\n        }\r\n\r\n        setErr(error);\r\n        return !count;\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        const data = {\r\n            project_id: task?.projectId,\r\n            site_url: siteUrl,\r\n            login_url: loginUrl,\r\n            email: siteLoginCredentialUserNameOrEmail,\r\n            password: password,\r\n            task_id: task?.id,\r\n            frontend_password: frontendPassword,\r\n        };\r\n\r\n        if (isValid()) {\r\n            try {\r\n                await workingEnvironment(data)\r\n                    .unwrap()\r\n                    .then((res) => {\r\n                        close();\r\n                        Swal.fire(\r\n                            \"Working environment store successfully\",\r\n                            \"You can create subtask now\",\r\n                            \"success\"\r\n                        ).then(({isConfirmed})=>{\r\n                            onSubmit();\r\n                        });\r\n                    });\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        } else {\r\n            toast.error(\"Please provide all required fields\", {\r\n                position: \"top-right\",\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"sp1-subtask-form w-100 --form -row\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 lg:col-6\">\r\n                    <Input\r\n                        id=\"siteURL\"\r\n                        label=\"Working/Staging Site's URL\"\r\n                        type=\"text\"\r\n                        placeholder=\"Type Working/Staging Site's URL\"\r\n                        name=\"stie_url\"\r\n                        required={true}\r\n                        value={siteUrl}\r\n                        error={err?.siteUrl}\r\n                        onChange={(e) => handleChange(e, setSiteUrl)}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-12 lg:col-6\">\r\n                    <Input\r\n                        id=\"frontendPassword\"\r\n                        label=\"Frontend Password\"\r\n                        type=\"text\"\r\n                        placeholder=\"Frontent Password\"\r\n                        name=\"frontend-end-password\"\r\n                        required={true}\r\n                        value={frontendPassword}\r\n                        error={err?.frontendPassword}\r\n                        onChange={(e) => handleChange(e, setFrontendPassword)}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-4\">\r\n                    <Input\r\n                        id=\"loginUrl\"\r\n                        label=\"Working/Staging Site's Admin Panel URL\"\r\n                        type=\"text\"\r\n                        placeholder=\"Type Working/Staging Site's Admin Panel URL\"\r\n                        name=\"login_url\"\r\n                        required={true}\r\n                        value={loginUrl}\r\n                        error={err?.loginUrl}\r\n                        onChange={(e) => handleChange(e, setLoginUrl)}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-5 h-100\">\r\n                    <Input\r\n                        id=\"siteLoginCredential\"\r\n                        label=\"Working/Staging Site's Admin Panel Username/Email\"\r\n                        type=\"text\"\r\n                        placeholder=\"Type Working/Staging Site's Admin Panel Username/Email\"\r\n                        name=\"site-login-credential\"\r\n                        required={true}\r\n                        value={siteLoginCredentialUserNameOrEmail}\r\n                        error={err?.username}\r\n                        onChange={(e) =>\r\n                            handleChange(\r\n                                e,\r\n                                setSiteLoginCredentialUserNameOrEmail\r\n                            )\r\n                        }\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-3\">\r\n                    <div className=\"h-100 d-md-flex align-items-end\">\r\n                        <Input\r\n                            id=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"text\"\r\n                            placeholder=\"Password\"\r\n                            name=\"password\"\r\n                            className=\"mt-md-auto\"\r\n                            required={true}\r\n                            value={password}\r\n                            error={err?.password}\r\n                            onChange={(e) => handleChange(e, setPassword)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"col-12 mt-3\">\r\n                <div className=\"d-flex align-items-center justify-content-end\">\r\n                    <Button\r\n                        variant=\"secondary\"\r\n                        className=\"mr-2\"\r\n                        onClick={close}\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n\r\n                    <SubmitButton onClick={handleSubmit} isLoading={isLoading}>\r\n                        <i className=\"fa-regular fa-paper-plane\" />\r\n                        Create\r\n                    </SubmitButton>\r\n\r\n                    {/* {isLoading ? (\r\n                        <Button onClick={handleSubmit}>\r\n                            \r\n                        </Button>\r\n                    ) : (\r\n                        <Button className=\"cursor-processing\">\r\n                            <div\r\n                                className=\"spinner-border text-white\"\r\n                                role=\"status\"\r\n                                style={{\r\n                                    width: \"18px\",\r\n                                    height: \"18px\",\r\n                                }}\r\n                            ></div>\r\n                            Processing...\r\n                        </Button>\r\n                    )} */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WorkingEnvironmentForm;\r\n","import React, { useState } from \"react\";\r\nimport CKEditorComponent from \"../../../ckeditor\";\r\nimport UploadFilesInLine from \"../../../file-upload/UploadFilesInLine\";\r\nimport Button from \"../../components/Button\";\r\nimport Input from \"../../components/form/Input\";\r\nimport DatePicker from \"../comments/DatePicker\";\r\nimport AssginedToSelection from \"./AssignedToSelection\";\r\nimport PrioritySelection from \"./PrioritySelection\";\r\nimport TaskCategorySelectionBox from \"./TaskCategorySelectionBox\";\r\n\r\nimport _ from \"lodash\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport {\r\n    useCheckRestrictedWordsMutation,\r\n    useCreateSubtaskMutation,\r\n    useLazyGetTaskDetailsQuery,\r\n} from \"../../../services/api/SingleTaskPageApi\";\r\n\r\nimport { Listbox } from \"@headlessui/react\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { setWorkingEnvironmentStatus, storeSubTasks } from \"../../../services/features/subTaskSlice\";\r\nimport { checkIsURL } from \"../../../utils/check-is-url\";\r\nimport { CompareDate } from \"../../../utils/dateController\";\r\nimport { SingleTask } from \"../../../utils/single-task\";\r\nimport { User } from \"../../../utils/user-details\";\r\nimport LeadConfirmationModal from \"./LeadConfirmationModal\";\r\nimport WorkingEnvironmentForm from \"./WorkingEnvironmentForm\";\r\nimport { useRefetchTaskDetails } from \"../../SingleIndependentTask\";\r\n\r\nconst SubTaskForm = ({ close, isFirstSubtask = false }) => {\r\n    const refetchTask = useRefetchTaskDetails();\r\n    const { task:taskDetails, subTask, isWorkingEnvironmentSubmit } = useSelector((s) => s.subTask);\r\n    const dispatch = useDispatch();\r\n    const dayjs = new CompareDate();\r\n\r\n    //   form data\r\n    const [title, setTitle] = useState(\"\");\r\n    const [parentTask, setParentTask] = useState(\"\");\r\n    const [startDate, setStateDate] = useState(null);\r\n    const [dueDate, setDueDate] = useState(null);\r\n    const [taskCategory, setTaskCategory] = useState(\"\");\r\n    const [assignedTo, setAssignedTo] = useState(null);\r\n    // const [taskObserver, setTaskObserver] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    // const [status, setStatus] = useState(\"To Do\");\r\n    const [priority, setPriority] = useState(\"Regular\");\r\n\r\n    // const [estimateTimeHour, setEstimateTimeHour] = useState(0);\r\n    // const [estimateTimeMin, setEstimateTimeMin] = useState(0);\r\n    \r\n    const [files, setFiles] = React.useState([]);\r\n\r\n    const [pageType, setPageType] = React.useState(\"\");\r\n    const [pageTypeOthers, setPageTypeOthers] = React.useState(\"\");\r\n    const [pageName, setPageName] = React.useState(\"\");\r\n    const [pageURL, setPageURL] = React.useState(\"\");\r\n    const [numberOfPage, setNumberOfPage] = React.useState(0);\r\n    const [existingDesignLink, setExistingDesignLink] = React.useState(\"\");\r\n    const [pageTypePriority, setPageTypePriority ] = React.useState(\"\");\r\n    const [pageTypeName, setPageTypeName] = React.useState(\"\");\r\n\r\n    const [err, setErr] = useState(null);\r\n\r\n    const task = new SingleTask(taskDetails);\r\n    const auth = new User(window?.Laravel?.user);\r\n\r\n\r\n    // const params = useParams();\r\n    const [createSubtask, { isLoading, error }] = useCreateSubtaskMutation();\r\n    // const {  } = useGetTaskDetailsQuery(`/${task?.id}/json?mode=estimation_time`);\r\n    const [ getTaskDetails, {data: estimation, isFetching}] = useLazyGetTaskDetailsQuery();\r\n\r\n    const [showForm, setShowForm] = React.useState(false);\r\n\r\n    const required_error = error?.status === 422 ? error?.data : null;\r\n    const [containViolation, setContainViolation] = React.useState(false);\r\n\r\n    const navigate = useNavigate();\r\n\r\n\r\n    // const [\r\n    //     checkRestrictedWords,\r\n    //     {isLoading: checking}\r\n    // ] = useCheckRestrictedWordsMutation();\r\n    const checking = false;\r\n    \r\n\r\n    // handle change\r\n    React.useEffect(() => {\r\n        setParentTask(task?.title);\r\n    }, [task]);\r\n\r\n    React.useEffect(() => {\r\n        getTaskDetails(`/${task?.id}/json?mode=estimation_time`).unwrap();\r\n    }, [])\r\n\r\n    // handle onchange\r\n    const handleChange = (e, setState) => {\r\n        e.preventDefault();\r\n        let value = e.target.value;\r\n        setState(value);\r\n    };\r\n\r\n\r\n    const isValid = () => {\r\n        let count = 0;\r\n        const error = new Object();\r\n\r\n        if(!title){\r\n            error.title = 'The title field is required';\r\n            count++;\r\n        }\r\n\r\n        if(!startDate){\r\n            error.startDate = 'You have to select a start date';\r\n            count++;\r\n        }\r\n\r\n        if(!dueDate){\r\n            error.dueDate = 'You have to select a due date';\r\n            count++;\r\n        }\r\n\r\n\r\n        if(!taskCategory){\r\n            error.taskCategory = \"You have to select task category\";\r\n            count++;\r\n        }\r\n\r\n        if(!assignedTo){\r\n            error.assignedTo = \"You have to select an user\";\r\n            count++;\r\n        }\r\n\r\n        if(assignedTo && assignedTo?.isOverloaded){\r\n            toast.warn(`You cannot assign this task to ${assignedTo?.name}  because ${assignedTo?.gender === 'male' ? 'He ' : 'She '} has more than 04 Submittable tasks.`)\r\n            count++;\r\n        }\r\n\r\n\r\n        if(!pageType){\r\n            error.taskType = \"You have to Select task type\";\r\n            count++;\r\n        }else{\r\n            if(_.toLower(pageType) === _.toLower('New Page Design')){\r\n                if(!pageTypePriority){\r\n                    error.pageTypePriority = \"You have to Select page type\";\r\n                    count++;\r\n                }\r\n\r\n                if(!pageName){\r\n                    error.pageName= \"You have to Select page name\";\r\n                    count++;\r\n                }\r\n\r\n                if(!pageURL){\r\n                    error.pageUrl= \"You have to provide page URL\";\r\n                    count++;\r\n                }else if(!checkIsURL(pageURL)){\r\n                    error.pageUrl= \"You have to provide a valid page URL\";\r\n                    toast.warn(\"You have to provide a valid page URL\");\r\n                    count++;\r\n                }\r\n            }\r\n\r\n\r\n            if(_.toLower(pageType) === _.toLower('Others')){\r\n                if(!pageTypeOthers){\r\n                    error.pageTypeOthers = \"You have to select an option\"\r\n                    count++;\r\n                }\r\n\r\n                if(!pageName){\r\n                    error.pageName= \"You have to Select page name\";\r\n                    count++;\r\n                }\r\n\r\n                if(!pageURL){\r\n                    error.pageUrl= \"You have to provide page URL\";\r\n                    count++;\r\n                }else if(!checkIsURL(pageURL)){\r\n                    error.pageUrl= \"You have to provide a valid page URL\";\r\n                    toast.warn(\"You have to provide a valid page URL\");\r\n                    count++;\r\n                }\r\n            }\r\n\r\n            if(_.toLower(pageType) === _.toLower('Cloning Existing Design')){\r\n                if(!pageTypeName){\r\n                    error.pageTypeName = \"You have to select an option\"\r\n                    count++;\r\n                }\r\n\r\n                if(!numberOfPage){\r\n                    error.numberOfPage= \"The minimum required number is 1\"\r\n                    count++;\r\n                }\r\n\r\n                if(!existingDesignLink){\r\n                    error.existingDesignLink= \"You have to provide Exiting Design Link\";\r\n                    count++;\r\n                }else if(!checkIsURL(existingDesignLink)){\r\n                    error.existingDesignLink= \"You have to provide a valid Exiting Design Link\";\r\n                    toast.warn(\"You have to provide a valid Exiting Design Link\");\r\n                    count++;\r\n                }\r\n            }\r\n\r\n\r\n            if(!description){\r\n                error.description = \"The description field is required\";\r\n                count++;\r\n            }\r\n        }\r\n\r\n        setErr(error);\r\n        return !count;\r\n    }\r\n\r\n\r\n\r\n    // handle submission\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const _startDate = dayjs.dayjs(startDate).format(\"DD-MM-YYYY\");\r\n        const _dueDate = dayjs.dayjs(dueDate).format(\"DD-MM-YYYY\");\r\n\r\n        const fd = new FormData();\r\n        // fd.append(\"milestone_id\", task?.milestoneID);\r\n        fd.append(\"task_id\", task?.id);\r\n        fd.append(\"title\", title);\r\n        fd.append(\"start_date\", _startDate);\r\n        fd.append(\"due_date\", _dueDate);\r\n        // fd.append(\"project_id\", task?.projectId);\r\n        fd.append(\"task_category_id\", taskCategory?.id);\r\n        fd.append(\"user_id\", assignedTo?.id);\r\n        fd.append(\"description\", description);\r\n        fd.append(\"board_column_id\", task?.boardColumn?.id);\r\n        fd.append(\"priority\", _.lowerCase(priority));\r\n        // fd.append(\"estimate_hours\", estimateTimeHour);\r\n        // fd.append(\"estimate_minutes\", estimateTimeMin);\r\n        fd.append(\"image_url\", null);\r\n        fd.append(\"subTaskID\", null);\r\n        fd.append(\"addedFiles\", null);\r\n        fd.append('task_type', pageType ?? null);\r\n        fd.append('page_type', pageTypePriority);\r\n        fd.append('page_name', pageName);\r\n        fd.append('page_url', pageURL);\r\n        fd.append('task_type_other', pageTypeOthers);\r\n        fd.append('page_type_name', pageTypeName);\r\n        fd.append('number_of_pages', numberOfPage);\r\n        fd.append('existing_design_link', existingDesignLink);\r\n        fd.append(\r\n            \"_token\",\r\n            document\r\n                .querySelector(\"meta[name='csrf-token']\")\r\n                .getAttribute(\"content\")\r\n        );\r\n        Array.from(files).forEach((file) => {\r\n            fd.append(\"file[]\", file);\r\n        });\r\n\r\n        // const submit = async () => {\r\n\r\n            if(isValid()){\r\n                await createSubtask(fd)\r\n                .unwrap()\r\n                .then((res) => {\r\n                    if (res?.status === \"success\") {\r\n                        let _subtask = [\r\n                            ...subTask,\r\n                            { id: res?.sub_task?.id, title: res?.sub_task?.title },\r\n                        ];\r\n                        dispatch(storeSubTasks(_subtask));\r\n                        close();\r\n\r\n                        Swal.fire({\r\n                            position: \"center\",\r\n                            icon: \"success\",\r\n                            title: res.message,\r\n                            showConfirmButton: false,\r\n                            timer: 2500,\r\n                        });\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    if (err?.status === 422) {\r\n                        Swal.fire({\r\n                            position: \"center\",\r\n                            icon: \"error\",\r\n                            title: \"Please fill up all required fields\",\r\n                            showConfirmButton: true,\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if (isLoading) {\r\n            document.getElementsByTagName(\"body\")[0].style.cursor = \"progress\";\r\n        } else {\r\n            document.getElementsByTagName(\"body\")[0].style.cursor = \"default\";\r\n        }\r\n    }, [isLoading]);\r\n\r\n    // editor data handle\r\n    const handleEditorChange = (e, editor) => {\r\n        const data = editor.getData();\r\n        setDescription(data);\r\n    };\r\n\r\n    const estimateError = (err) => {\r\n        const text = _.head(err?.errors?.hours)\r\n        return text\r\n    };\r\n\r\n    useEffect(() => {\r\n        // const showEnv = _.size(task?.subtask) === 0 ? true : false;\r\n        if(auth.getRoleId() === 6){\r\n            dispatch(setWorkingEnvironmentStatus(!isFirstSubtask));\r\n        }\r\n    }, [isFirstSubtask])\r\n\r\n\r\n    // useEffect(()=>{\r\n    //   console.log({isFirstSubtask,isWorkingEnvironmentSubmit});\r\n    // },[isFirstSubtask,isWorkingEnvironmentSubmit]);\r\n\r\n    // useEffect(()=>{\r\n    //   console.log({isWorkingEnvironmentSubmit,isFirstSubtask,task});\r\n    // },[isWorkingEnvironmentSubmit,isFirstSubtask,task])\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"sp1-subtask-form --modal-panel\">\r\n                <div className=\"sp1-subtask-form --modal-panel-header\">\r\n                    <h6>\r\n                        { !isWorkingEnvironmentSubmit ? \"Working Environment\" : \"Create Sub Task\"}\r\n                    </h6>\r\n                    <Button\r\n                        aria-label=\"close-modal\"\r\n                        className=\"_close-modal\"\r\n                        onClick={close}\r\n                    >\r\n                        <i className=\"fa-solid fa-xmark\" />\r\n                    </Button>\r\n                </div>\r\n\r\n                <div className=\"sp1-subtask-form --modal-panel-body sp1_subtask_form\">\r\n                    {/* working environment form */}\r\n                    {!isWorkingEnvironmentSubmit &&\r\n                        <WorkingEnvironmentForm\r\n                            task={task}\r\n                            onSubmit={() =>{\r\n                                refetchTask()\r\n                            }}\r\n                            close={close}\r\n                        /> }\r\n                    {/* end working environment form */}\r\n\r\n                    {isWorkingEnvironmentSubmit &&\r\n                        <LeadConfirmationModal\r\n                            isOpen={!showForm}\r\n                            onConfirm={() => setShowForm(true)}\r\n                        />\r\n                    }\r\n                    {showForm && (\r\n                        <div className=\"sp1-subtask-form --form row\">\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <Input\r\n                                    id=\"title\"\r\n                                    label=\"Title\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter a task title\"\r\n                                    name=\"title\"\r\n                                    required={true}\r\n                                    value={title}\r\n                                    error={err?.title || required_error?.title?.[0]}\r\n                                    onChange={(e) => handleChange(e, setTitle)}\r\n                                />\r\n                            </div>\r\n\r\n\r\n                            {/* Milestone */}\r\n                            {/* <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group my-3\">\r\n                                    <label\r\n                                        className={`f-14 text-dark-gray mb-1`}\r\n                                        data-label=\"true\"\r\n                                    >\r\n                                        Milestone\r\n                                    </label>\r\n                                    <input\r\n                                        className={`form-control height-35 f-14`}\r\n                                        readOnly\r\n                                        defaultValue={milestone}\r\n                                    />\r\n                                </div>\r\n                            </div> */}\r\n\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group my-3\">\r\n                                    <label\r\n                                        className={`f-14 text-dark-gray mb-1`}\r\n                                        data-label=\"true\"\r\n                                    >\r\n                                        Parent Task\r\n                                    </label>\r\n                                    <input\r\n                                        className={`form-control height-35 f-14`}\r\n                                        readOnly\r\n                                        defaultValue={parentTask}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            {/* Project */}\r\n                            {/* <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group my-3\">\r\n                                    <label\r\n                                        className={`f-14 text-dark-gray mb-1`}\r\n                                        data-label=\"true\"\r\n                                    >\r\n                                        Project\r\n                                    </label>\r\n                                    <input\r\n                                        className={`form-control height-35 f-14`}\r\n                                        readOnly\r\n                                        defaultValue={project}\r\n                                    />\r\n                                </div>\r\n                            </div> */}\r\n\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group my-3\">\r\n                                    <label htmlFor=\"\">\r\n                                        Start Date <sup className=\"f-14\">*</sup>\r\n                                    </label>\r\n                                    <div className=\"form-control height-35 f-14\">\r\n                                        <DatePicker\r\n                                            placeholderText={`Ex: ${dayjs\r\n                                                .dayjs()\r\n                                                .format(\"DD-MM-YYYY\")}`}\r\n                                            minDate={dayjs.dayjs(task?.startDate).toDate()}\r\n                                            maxDate={\r\n                                                dueDate ||\r\n                                                dayjs.dayjs(task?.dueDate).toDate()\r\n                                            }\r\n                                            date={startDate}\r\n                                            setDate={setStateDate}\r\n                                        />\r\n                                    </div>\r\n                                    {required_error?.start_date?.[0] && (\r\n                                        <div style={{ color: \"red\" }}>\r\n                                            {required_error?.start_date?.[0]}\r\n                                        </div>\r\n                                    )}\r\n\r\n                                    {err?.startDate && (\r\n                                        <div style={{ color: \"red\" }}>\r\n                                            {err?.startDate}\r\n                                        </div>\r\n                                    )}\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group my-3\">\r\n                                    <label htmlFor=\"\">\r\n                                        Due Date <sup className=\"f-14\">*</sup>\r\n                                    </label>\r\n                                    <div className=\"form-control height-35 f-14\">\r\n                                        <DatePicker\r\n                                            placeholderText={`Ex: ${dayjs\r\n                                                .dayjs()\r\n                                                .format(\"DD-MM-YYYY\")}`}\r\n                                            minDate={\r\n                                                startDate || dayjs.dayjs(task?.startDate).toDate()\r\n                                            }\r\n                                            maxDate={dayjs.dayjs(task?.dueDate).toDate()}\r\n                                            date={dueDate}\r\n                                            setDate={setDueDate}\r\n                                        />\r\n                                    </div>\r\n                                    {required_error?.due_date?.[0] && (\r\n                                        <div style={{ color: \"red\" }}>\r\n                                            {required_error?.due_date?.[0]}\r\n                                        </div>\r\n                                    )}\r\n\r\n                                    {err?.dueDate && (\r\n                                        <div style={{ color: \"red\" }}>\r\n                                            {err?.dueDate}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <TaskCategorySelectionBox\r\n                                    selected={taskCategory}\r\n                                    onSelect={setTaskCategory}\r\n                                />\r\n\r\n                                {err?.taskCategory && (\r\n                                    <div style={{ color: \"red\" }}>\r\n                                        {err?.taskCategory}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <AssginedToSelection\r\n                                    selected={assignedTo}\r\n                                    onSelect={setAssignedTo}\r\n                                />\r\n\r\n                                {err?.assignedTo && (\r\n                                    <div style={{ color: \"red\" }}>\r\n                                        {err?.assignedTo}\r\n                                    </div>\r\n                                )}\r\n\r\n                                {assignedTo?.isOverloaded && <div style={{ color: \"red\" }}>\r\n                                        {`You cannot assign this task to ${assignedTo?.name}  because ${assignedTo?.gender === 'male' ? 'He ' : 'She '} has more than 10 Submittable tasks.`}\r\n                                    </div>}\r\n                            </div>\r\n                            {/*\r\n                    <div className=\"col-6\">\r\n                        <TaskObserverSelection />\r\n                    </div> */}\r\n\r\n                            {/* <div className=\"col-12 col-md-6\">\r\n                                <StatusSelection />\r\n                            </div> */}\r\n\r\n                            {/* Page Type  */}\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <Listbox value={pageType} onChange={setPageType}>\r\n                                    <div className=\"form-group position-relative my-3\">\r\n                                        <label htmlFor=\"\"> Task Type <sup>*</sup> </label>\r\n                                            <Listbox.Button className=\" sp1-selection-display-button form-control height-35 f-14 sp1-selection-display bg-white w-100\">\r\n                                            <span className=\"singleline-ellipsis pr-3\">\r\n                                                {pageType ?? \"--\"}\r\n                                            </span>\r\n\r\n                                            <div className='__icon'>\r\n                                                <i className=\"fa-solid fa-sort\"></i>\r\n                                            </div>\r\n                                        </Listbox.Button>\r\n                                        <Listbox.Options  className=\"sp1-select-options\">\r\n                                            {[\"New Page Design\", \"Cloning Existing Design\", \"Others\"]?.map((s, i) => (\r\n                                                <Listbox.Option\r\n                                                    key={i}\r\n                                                    className={({ active }) =>  `sp1-select-option ${ active ? 'active' : ''}`}\r\n                                                    value={s}\r\n                                                >\r\n                                                    {({selected}) => (\r\n                                                        <>\r\n                                                          {s}\r\n\r\n                                                          {selected ? <i className=\"fa-solid fa-check ml-2\" />: ''}\r\n                                                        </>\r\n                                                    )}\r\n                                                </Listbox.Option>\r\n                                            ))}\r\n                                        </Listbox.Options>\r\n                                    </div>\r\n                                </Listbox>\r\n\r\n                                {required_error?.pageType?.[0] && (\r\n                                        <div style={{ color: \"red\" }}>\r\n                                            {required_error?.pageType?.[0]}\r\n                                        </div>\r\n                                    )}\r\n\r\n\r\n\r\n                                {err?.taskType && (\r\n                                    <div style={{ color: \"red\" }}>\r\n                                        {err?.taskType}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n\r\n                            {\r\n                                pageType === \"New Page Design\"?\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <Listbox value={pageTypePriority} onChange={setPageTypePriority}>\r\n                                        <div className=\"form-group position-relative my-3\">\r\n                                            <label htmlFor=\"\"> Page Type <sup>*</sup> </label>\r\n                                                <Listbox.Button className=\" sp1-selection-display-button form-control height-35 f-14 sp1-selection-display bg-white w-100\">\r\n                                                <span className=\"singleline-ellipsis pr-3\">\r\n                                                    {pageTypePriority ?? \"--\"}\r\n                                                </span>\r\n\r\n                                                <div className='__icon'>\r\n                                                    <i className=\"fa-solid fa-sort\"></i>\r\n                                                </div>\r\n                                            </Listbox.Button>\r\n                                            <Listbox.Options  className=\"sp1-select-options\">\r\n                                                {[\r\n                                                    \"Primary Page Development\",\r\n                                                    \"Secondary Page Development\",\r\n                                                ]?.map((s, i) => (\r\n                                                    <Listbox.Option\r\n                                                        key={i}\r\n                                                        className={({ active }) =>  `sp1-select-option ${ active ? 'active' : ''}`}\r\n                                                        value={s}\r\n                                                    >\r\n                                                        {({selected}) => (\r\n                                                            <>\r\n                                                            {s}\r\n\r\n                                                            {selected ? <i className=\"fa-solid fa-check ml-2\" />: ''}\r\n                                                            </>\r\n                                                        )}\r\n\r\n                                                    </Listbox.Option>\r\n                                                ))}\r\n                                            </Listbox.Options>\r\n                                        </div>\r\n                                    </Listbox>\r\n\r\n\r\n                                {err?.pageTypePriority && (\r\n                                    <div style={{ color: \"red\" }}>\r\n                                        {err?.pageTypePriority}\r\n                                    </div>\r\n                                )}\r\n                                </div> : null\r\n                            }\r\n\r\n                            {/* Others */}\r\n                            {\r\n                                pageType === \"Others\"?\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <Listbox value={pageTypeOthers} onChange={setPageTypeOthers}>\r\n                                        <div className=\"form-group position-relative my-3\">\r\n                                            <label htmlFor=\"\"> Others <sup>*</sup> </label>\r\n                                                <Listbox.Button className=\" sp1-selection-display-button form-control height-35 f-14 sp1-selection-display bg-white w-100\">\r\n                                                <span className=\"singleline-ellipsis pr-3\">\r\n                                                    {pageTypeOthers ?? \"--\"}\r\n                                                </span>\r\n\r\n                                                <div className='__icon'>\r\n                                                    <i className=\"fa-solid fa-sort\"></i>\r\n                                                </div>\r\n                                            </Listbox.Button>\r\n                                            <Listbox.Options  className=\"sp1-select-options\">\r\n                                                {[\r\n                                                    \"Page Design Change\",\r\n                                                    \"Speed Optimization\",\r\n                                                    \"Fixing Issues/Bugs\",\r\n                                                    \"Responsiveness Issue Fixing/Making Something Responsive\"\r\n                                                ]?.map((s, i) => (\r\n                                                    <Listbox.Option\r\n                                                        key={i}\r\n                                                        className={({ active }) =>  `sp1-select-option ${ active ? 'active' : ''}`}\r\n                                                        value={s}\r\n                                                    >\r\n                                                        {({selected}) => (\r\n                                                            <>\r\n                                                            {s}\r\n\r\n                                                            {selected ? <i className=\"fa-solid fa-check ml-2\" />: ''}\r\n                                                            </>\r\n                                                        )}\r\n\r\n                                                    </Listbox.Option>\r\n                                                ))}\r\n                                            </Listbox.Options>\r\n                                        </div>\r\n                                    </Listbox>\r\n\r\n\r\n                                    {err?.pageTypeOthers && (\r\n                                        <div style={{ color: \"red\" }}>\r\n                                            {err?.pageTypeOthers}\r\n                                        </div>\r\n                                    )}\r\n                                </div> : null\r\n                            }\r\n\r\n                           {\r\n                             pageType ?\r\n                                <React.Fragment>\r\n                                    {\r\n                                        pageType === \"Cloning Existing Design\" ?\r\n                                            <>\r\n                                                {/* <div className=\"col-12 col-md-6\">\r\n                                                    <Input\r\n                                                        id=\"page_type_name\"\r\n                                                        label=\"Page type name\"\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Enter page type name...\"\r\n                                                        name=\"pageTypeName\"\r\n                                                        required={true}\r\n                                                        value={pageTypeName}\r\n\r\n                                                        onChange={(e) => handleChange(e, setPageTypeName)}\r\n                                                    />\r\n                                                </div> */}\r\n                                                <div className=\"col-12 col-md-6\">\r\n                                                    <Listbox value={pageTypeName} onChange={setPageTypeName}>\r\n                                                        <div className=\"form-group position-relative my-3\">\r\n                                                            <label htmlFor=\"\"> Page Type Name <sup>*</sup> </label>\r\n                                                                <Listbox.Button className=\" sp1-selection-display-button form-control height-35 f-14 sp1-selection-display bg-white w-100\">\r\n                                                                <span className=\"singleline-ellipsis pr-3\">\r\n                                                                    {pageTypeName ?? \"--\"}\r\n                                                                </span>\r\n\r\n                                                                <div className='__icon'>\r\n                                                                    <i className=\"fa-solid fa-sort\"></i>\r\n                                                                </div>\r\n                                                            </Listbox.Button>\r\n                                                            <Listbox.Options  className=\"sp1-select-options\">\r\n                                                                {[\r\n                                                                    \"Primary Page Development\",\r\n                                                                    \"Secondary Page Development\",\r\n                                                                ]?.map((s, i) => (\r\n                                                                    <Listbox.Option\r\n                                                                        key={i}\r\n                                                                        className={({ active }) =>  `sp1-select-option ${ active ? 'active' : ''}`}\r\n                                                                        value={s}\r\n                                                                    >\r\n                                                                        {({selected}) => (\r\n                                                                            <>\r\n                                                                            {s}\r\n\r\n                                                                            {selected ? <i className=\"fa-solid fa-check ml-2\" />: ''}\r\n                                                                            </>\r\n                                                                        )}\r\n\r\n                                                                    </Listbox.Option>\r\n                                                                ))}\r\n                                                            </Listbox.Options>\r\n                                                        </div>\r\n                                                    </Listbox>\r\n                                                    {err?.pageTypeName || required_error?.page_type?.[0]}\r\n                                                </div>\r\n                                            </>\r\n\r\n                                            :\r\n                                            <>\r\n\r\n                                                <div className=\"col-12 col-md-6\">\r\n                                                    <Input\r\n                                                        id=\"page_name\"\r\n                                                        label=\"Page Name\"\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Enter page name\"\r\n                                                        name=\"page name\"\r\n                                                        required={true}\r\n                                                        value={pageName}\r\n                                                        error={err?.pageName}\r\n                                                        onChange={(e) => handleChange(e, setPageName)}\r\n                                                    />\r\n                                                </div>\r\n\r\n\r\n                                                <div className=\"col-12 col-md-6\">\r\n                                                    <Input\r\n                                                        id=\"page_url\"\r\n                                                        label=\"Page URL\"\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Enter page url\"\r\n                                                        name=\"page url\"\r\n                                                        required={true}\r\n                                                        value={pageURL}\r\n                                                        error={err?.pageUrl || required_error?.page_url?.[0]}\r\n                                                        onChange={(e) => handleChange(e, setPageURL)}\r\n                                                    />\r\n                                                </div>\r\n                                            </>\r\n                                    }\r\n\r\n\r\n\r\n\r\n                                    {\r\n                                        pageType=== \"Cloning Existing Design\"?\r\n                                        <>\r\n                                            <div className=\"col-12 col-md-6\">\r\n                                                <Input\r\n                                                    id=\"number_of_pages\"\r\n                                                    label=\"Number of Pages\"\r\n                                                    type=\"number\"\r\n                                                    placeholder=\"--\"\r\n                                                    name=\"number_of_pages\"\r\n                                                    required={true}\r\n                                                    value={numberOfPage}\r\n                                                    error={err?.numberOfPage}\r\n                                                    onChange={(e) => handleChange(e, setNumberOfPage)}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            <div className=\"col-12 col-md-6\">\r\n                                                <Input\r\n                                                    id=\"exiting_project_url\"\r\n                                                    label=\"Existing Design Link\"\r\n                                                    type=\"Link\"\r\n                                                    placeholder=\"--\"\r\n                                                    name=\"exiting_project_url\"\r\n                                                    required={true}\r\n                                                    value={existingDesignLink}\r\n                                                    error={err?.existingDesignLink}\r\n                                                    onChange={(e) => handleChange(e, setExistingDesignLink)}\r\n                                                />\r\n                                            </div>\r\n                                        </> : null\r\n                                    }\r\n                                </React.Fragment>\r\n                             :null\r\n                           }\r\n                            {/*  */}\r\n\r\n\r\n\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <PrioritySelection\r\n                                    selected={priority}\r\n                                    setSelected={setPriority}\r\n                                />\r\n                            </div>\r\n\r\n\r\n                            {/* Set Estimate Time */}\r\n                            {/* <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group my-3\">\r\n                                    <label\r\n                                        htmlFor=\"\"\r\n                                        className=\"f-14 text-dark-gray\"\r\n                                    >\r\n                                        Set Estimate Time{\" \"}\r\n                                        <sup className=\"f-14\"> * </sup>\r\n                                    </label>\r\n                                    <div className=\"d-flex align-items-center\">\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            className=\"form-control height-35 f-14 mr-2\"\r\n                                            value={estimateTimeHour}\r\n                                            onWheel={e => e.currentTarget.blur()}\r\n                                            onChange={(e) =>handleChange( e,setEstimateTimeHour)}\r\n                                        />{\" \"}\r\n                                        hrs\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            className=\"form-control height-35 f-14 mr-2 ml-2\"\r\n                                            value={estimateTimeMin}\r\n                                            onWheel={e => e.currentTarget.blur()}\r\n                                            onChange={(e) =>\r\n                                                handleChange(\r\n                                                    e,\r\n                                                    setEstimateTimeMin\r\n                                                )\r\n                                            }\r\n                                        />{\" \"}\r\n                                        min\r\n                                    </div>\r\n\r\n                                    <div style={{ color: \"red\" }}>\r\n                                        {estimateError(required_error)}\r\n                                    </div>\r\n\r\n                                    <div style={{ color: \"#F73B12\" }}>\r\n                                    Estimation time can't exceed {estimation?.hours_left} hours {estimation?.minutes_left} minutes\r\n                                    </div>\r\n                                </div>\r\n                            </div> */}\r\n\r\n\r\n\r\n\r\n                            <div className=\"col-12\">\r\n                                <div className=\"form-group my-3\">\r\n                                    <label htmlFor=\"\"> Description </label>\r\n                                    <div\r\n                                        className=\"sp1_st_write_comment_editor\"\r\n                                        style={{ minHeight: \"100px\" }}\r\n                                    >\r\n                                        <CKEditorComponent\r\n                                            onChange={handleEditorChange}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    {required_error?.description?.[0] && <span className=\"text-danger\"><small> {required_error?.description?.[0]} </small></span>}\r\n                                    {err?.description && <span className=\"text-danger\"><small> {err?.description} </small></span>}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-12\">\r\n                                <UploadFilesInLine\r\n                                    files={files}\r\n                                    setFiles={setFiles}\r\n                                />\r\n                            </div>\r\n\r\n\r\n                           {/* {err?.violationWord ? <div className=\"alert alert-danger mt-2 w-100 text-center\" dangerouslySetInnerHTML={{__html: err?.violationWord}} />: null} */}\r\n\r\n                            <div className=\"col-12 mt-3 pb-3\">\r\n                                <div className=\"d-flex align-items-center justify-content-end\">\r\n                                    <Button\r\n                                        variant=\"secondary\"\r\n                                        className=\"mr-2\"\r\n                                        onClick={close}\r\n                                    >\r\n                                        Cancel\r\n                                    </Button>\r\n\r\n                                    {!isLoading && !checking ? (\r\n                                        <Button onClick={handleSubmit}>\r\n                                            <i className=\"fa-regular fa-paper-plane\"></i>\r\n                                            Create\r\n                                        </Button>\r\n                                    ) : (\r\n                                        <Button className=\"cursor-processing\">\r\n                                            <div\r\n                                                className=\"spinner-border text-white\"\r\n                                                role=\"status\"\r\n                                                style={{\r\n                                                    width: \"18px\",\r\n                                                    height: \"18px\",\r\n                                                }}\r\n                                            ></div>\r\n                                            Processing...\r\n                                        </Button>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SubTaskForm;\r\n","import React, { useState } from 'react'\r\nimport Button from '../../components/Button'\r\nimport Input from '../../components/form/Input'\r\nimport TaskCategorySelectionBox from './TaskCategorySelectionBox'\r\nimport AssginedToSelection from './AssignedToSelection'\r\nimport PrioritySelection from './PrioritySelection'\r\nimport DatePicker from '../comments/DatePicker'\r\nimport CKEditorComponent from '../../../ckeditor'\r\nimport UploadFilesInLine from '../../../file-upload/UploadFilesInLine'\r\nimport _ from 'lodash'\r\nimport { useDeleteUplaodedFileMutation, useEditSubtaskMutation, useGetTaskDetailsQuery, useLazyGetTaskDetailsQuery } from '../../../services/api/SingleTaskPageApi'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { storeSubTasks } from '../../../services/features/subTaskSlice'\r\nimport { CompareDate } from '../../../utils/dateController'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst dayjs = new CompareDate();\r\n\r\n\r\nconst  SubtTaskEditForm= ({close, editId}) => {\r\n    const { task, subTask } = useSelector(s => s.subTask);\r\n    const dispatch = useDispatch();\r\n\r\n//   form data\r\n  const [title, setTitle] = useState('');\r\n  const [milestone, setMilestone] = useState('');\r\n  const [parentTask, setParentTask] = useState('');\r\n  const [startDate, setStateDate] = useState(new Date());\r\n  const [dueDate, setDueDate] = useState(new Date());\r\n  const [project, setProject] = useState(\"\");\r\n  const [taskCategory, setTaskCategory] = useState('')\r\n  const [assignedTo, setAssignedTo] = useState('');\r\n  const [taskObserver, setTaskObserver] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [status, setStatus] = useState('To Do');\r\n  const [priority, setPriority] = useState('Medium');\r\n  const [estimateTimeHour, setEstimateTimeHour ] = useState('');\r\n  const [estimateTimeMin, setEstimateTimeMin ] = useState('');\r\n  const [attachedFiles, setAttachedFiles] = useState([]);\r\n  const [files, setFiles] = React.useState([]);\r\n\r\n    const params = useParams();\r\n\r\nconst [\r\n    editSubtask,\r\n    { isLoading, error }\r\n] = useEditSubtaskMutation();\r\n\r\nconst [\r\n    getTaskDetails,\r\n    { data: edit, isFetching: editDataIsFetching}\r\n] = useLazyGetTaskDetailsQuery();\r\n\r\n\r\n// find edited subtask\r\nconst editSubTask = subTask.find(d => d.id === editId);\r\n\r\nconst { data: estimation, isFetching } = useGetTaskDetailsQuery(`/${params?.taskId}/json?mode=estimation_time`);\r\n\r\n\r\nconst required_error = error?.status === 422 ? error?.data: null;\r\n\r\n\r\n// handle change\r\nReact.useEffect(() => {\r\n    const formatedDate = (d) => {\r\n        let day = dayjs.dayjs(d).toDate();\r\n        return day;\r\n    }\r\n    getTaskDetails(`/${editId}/json?mode=sub_task_edit`).unwrap().then(res => {\r\n        if(res){\r\n            const assigneeTo = res?.users?.[0];\r\n\r\n            setTitle(res.heading);\r\n            setMilestone(res.milestone_title);\r\n            setParentTask(task?.heading);\r\n            setStateDate(formatedDate(res.start_date));\r\n            setDueDate(formatedDate(res.due_date));\r\n            setProject(res.project_name);\r\n            setTaskCategory(res.task_category);\r\n            setAssignedTo(assigneeTo ? {id: assigneeTo?.id, name: assigneeTo?.name}: '');\r\n            setDescription(res.description);\r\n            setPriority(_.startCase(res.priority));\r\n            setEstimateTimeHour(res.estimate_hours);\r\n            setEstimateTimeMin(res.estimate_minutes);\r\n            setAttachedFiles(res.files);\r\n\r\n\r\n\r\n        }\r\n    }).catch((err) => {\r\n        console.log(err)\r\n    } )\r\n}, [task, editId])\r\n\r\n\r\n\r\n// handle onchange\r\nconst handleChange = (e, setState) =>{\r\n    e.preventDefault();\r\n    let value = e.target.value;\r\n    setState(value);\r\n}\r\n\r\n// handle submission\r\nconst handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  const _startDate = dayjs.dayjs(startDate).format('DD-MM-YYYY');\r\n  const _dueDate = dayjs.dayjs(dueDate).format('DD-MM-YYYY');\r\n\r\n  const fd = new FormData();\r\n    fd.append('milestone_id', task?.milestone_id);\r\n    fd.append('task_id', task?.id);\r\n    fd.append('title', title);\r\n    fd.append('start_date', _startDate);\r\n    fd.append('due_date', _dueDate);\r\n    fd.append('project_id', task?.project_id);\r\n    fd.append('task_category_id', taskCategory?.id);\r\n    fd.append('user_id', assignedTo?.id);\r\n    fd.append('description', description);\r\n    fd.append('board_column_id', task?.board_column_id);\r\n    fd.append('priority', _.lowerCase(priority));\r\n    fd.append('estimate_hours', estimateTimeHour);\r\n    fd.append('estimate_minutes', estimateTimeMin);\r\n    fd.append('image_url', null);\r\n    fd.append('subTaskID', editSubTask?.subtask_id);\r\n    fd.append('addedFiles', null);\r\n    fd.append('_method', 'PUT');\r\n    fd.append('_token', document.querySelector(\"meta[name='csrf-token']\").getAttribute(\"content\"));\r\n    Array.from(files).forEach((file) => {\r\n        fd.append('file[]', file);\r\n    });\r\n\r\n    editSubtask({data: fd, id: editId}).unwrap().then(res => {\r\n            if(res?.status === 'success'){\r\n\r\n                 let _subtask = [...subTask];\r\n                 _subtask = _subtask?.map(s => {\r\n                    if(Number(s?.id) === Number(res?.sub_task?.id)){\r\n                        return res?.sub_task\r\n                    }else return s;\r\n                 })\r\n\r\n                dispatch(storeSubTasks(_subtask));\r\n\r\n                Swal.fire({\r\n                    position: 'center',\r\n                    icon: 'success',\r\n                    title: res?.message,\r\n                    showConfirmButton: false,\r\n                    timer: 2500\r\n                })\r\n\r\n                close();\r\n            }\r\n    }).catch((err) => {\r\n        if(err?.status === 422){\r\n            Swal.fire({\r\n                position: 'center',\r\n                icon: 'error',\r\n                title: \"Please fill out all required fields\",\r\n                showConfirmButton: true,\r\n            })\r\n        }\r\n    })\r\n}\r\n\r\n// handle uplaoded file delete request\r\nconst [deleteUplaodedFile] = useDeleteUplaodedFileMutation();\r\nconst handleFileDelete = (e, file) => {\r\n    // delete\r\n    deleteUplaodedFile(file?.id).unwrap();\r\n\r\n    // delete form ui\r\n    let previousFile = [...attachedFiles];\r\n    let index = previousFile?.indexOf(file);\r\n    previousFile.splice(index,1);\r\n    setAttachedFiles(previousFile);\r\n}\r\n\r\n\r\n// handle loading state\r\nReact.useEffect(() => {\r\n    if (isLoading || editDataIsFetching) {\r\n        document.getElementsByTagName('body')[0].style.cursor = 'progress';\r\n      } else {\r\n        document.getElementsByTagName('body')[0].style.cursor = 'default';\r\n      }\r\n}, [isLoading, editDataIsFetching])\r\n\r\n\r\n\r\nconst handleEditorChange = (e, editor) => {\r\n    const data = editor.getData();\r\n    setDescription(data);\r\n}\r\n\r\nconst estimateError= (err) =>{\r\n    let errText = '';\r\n    let hoursErr = err?.estimate_hours?.[0];\r\n    let minErr = err?.estimate_minutes?.[0];\r\n    if(hoursErr) errText += hoursErr;\r\n    if(minErr) errText += minErr;\r\n    return errText;\r\n}\r\n\r\n  return (\r\n    <>\r\n        <div className='sp1-subtask-form --modal-panel'>\r\n            <div className='sp1-subtask-form --modal-panel-header'>\r\n                 <h6>\r\n                        Edit Sub Task\r\n                        {editDataIsFetching && <div\r\n                            className=\"spinner-border text-dark ml-2\"\r\n                            role=\"status\"\r\n                            style={{\r\n                                width: '16px',\r\n                                height: '16px',\r\n                                border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                                borderRightColor: 'transparent'\r\n                            }}\r\n                        />}\r\n                </h6>\r\n                <Button\r\n                    aria-label=\"close-modal\"\r\n                    className='_close-modal'\r\n                    onClick={close}\r\n                >\r\n                    <i className=\"fa-solid fa-xmark\" />\r\n                </Button>\r\n            </div>\r\n\r\n            <div className=\"sp1-subtask-form --modal-panel-body position-relative\">\r\n                {editDataIsFetching &&\r\n                    <div className='w-100' style={{\r\n                        width: '100%',\r\n                        height: '100%',\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        left: 0,\r\n                        zIndex: 1\r\n                    }}/>\r\n                }\r\n                <div className='sp1-subtask-form --form row'>\r\n                    <div className=\"col-6\">\r\n                        <Input\r\n                            id='title'\r\n                            label=\"Title\"\r\n                            type=\"text\"\r\n                            placeholder='Enter a task title'\r\n                            name='title'\r\n                            required={true}\r\n                            value={title}\r\n                            error= {required_error?.title?.[0]}\r\n                            onChange={e => handleChange(e, setTitle)}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label\r\n                                className={`f-14 text-dark-gray mb-1`}\r\n                                data-label=\"true\"\r\n                            >\r\n                                Milestone\r\n                            </label>\r\n                            <input\r\n                                className={`form-control height-35 f-14`}\r\n                                readOnly\r\n                                defaultValue={milestone}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label\r\n                                className={`f-14 text-dark-gray mb-1`}\r\n                                data-label=\"true\"\r\n                            >\r\n                                Parent Task\r\n                            </label>\r\n                            <input\r\n                                className={`form-control height-35 f-14`}\r\n                                readOnly\r\n                                defaultValue={parentTask}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label\r\n                                className={`f-14 text-dark-gray mb-1`}\r\n                                data-label=\"true\"\r\n                            >\r\n                                Project\r\n                            </label>\r\n                            <input\r\n                                className={`form-control height-35 f-14`}\r\n                                readOnly\r\n                                defaultValue={project}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\">Start Date <sup className='f-14'>*</sup></label>\r\n                            <div className=\"form-control height-35 f-14\">\r\n                                <DatePicker\r\n                                    placeholderText={`Ex: ${dayjs.dayjs().format('DD-MM-YYYY')}`}\r\n                                    minDate={dayjs.dayjs(task?.start_date).toDate()}\r\n                                    maxDate={dueDate || dayjs.dayjs(task?.due_date).toDate()}\r\n                                    date={startDate}\r\n                                    setDate={setStateDate}\r\n                                />\r\n                            </div>\r\n                            {\r\n                                required_error?.start_date?.[0] &&\r\n                               <div style={{color: 'red'}}>{required_error?.start_date?.[0]}</div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='col-6'>\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\">Due Date <sup className='f-14'>*</sup></label>\r\n                            <div className=\"form-control height-35 f-14\">\r\n                                <DatePicker\r\n                                    placeholderText={`Ex: ${dayjs.dayjs().format('DD-MM-YYYY')}`}\r\n                                    minDate={startDate || dayjs.dayjs(task?.start_date).toDate()}\r\n                                    maxDate={dayjs.dayjs(task?.due_date).toDate()}\r\n                                    date={dueDate}\r\n                                    setDate={setDueDate}\r\n                                />\r\n                            </div>\r\n                            {\r\n                                required_error?.due_date?.[0] &&\r\n                               <div style={{color: 'red'}}>{required_error?.due_date?.[0]}</div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <TaskCategorySelectionBox selected={taskCategory} onSelect={setTaskCategory}  />\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <AssginedToSelection selected={assignedTo} onSelect={setAssignedTo} />\r\n                    </div>\r\n{/*\r\n                    <div className=\"col-6\">\r\n                        <TaskObserverSelection />\r\n                    </div> */}\r\n\r\n                    {/* <div className=\"col-6\">\r\n                        <StatusSelection />\r\n                    </div> */}\r\n\r\n                    <div className=\"col-6\">\r\n                        <PrioritySelection selected={priority} setSelected={setPriority} />\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\" className='f-14 text-dark-gray'>Set Estimate Time <sup className='f-14'> * </sup></label>\r\n                            <div className=\"d-flex align-items-center\">\r\n                                <input\r\n                                    type='number'\r\n                                    onWheel={e => e.currentTarget.blur()}\r\n                                    className=\"form-control height-35 f-14 mr-2\"\r\n                                    value={estimateTimeHour}\r\n                                    onChange={(e) => handleChange(e, setEstimateTimeHour)}\r\n                                /> hrs\r\n                                <input\r\n                                    type='number'\r\n                                    onWheel={e => e.currentTarget.blur()}\r\n                                    className=\"form-control height-35 f-14 mr-2 ml-2\"\r\n                                    value={estimateTimeMin}\r\n                                    onChange={e => handleChange(e, setEstimateTimeMin)}\r\n                                /> min\r\n                            </div>\r\n\r\n                            <div style={{color: 'red'}}>\r\n                                {estimateError(required_error)}\r\n                            </div>\r\n                            <div style={{color: 'red'}}>\r\n                            Estimation time can't exceed {estimation?.hours_left} hours {estimation?.minutes_left} minutes\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\"> Description </label>\r\n                            <div className='sp1_st_write_comment_editor' style={{minHeight: '100px'}}>\r\n                                <CKEditorComponent data={description} onChange={handleEditorChange} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className='col-12'>\r\n                        <UploadFilesInLine\r\n                            onPreviousFileDelete={handleFileDelete}\r\n                            previous={attachedFiles}\r\n                            files={files}\r\n                            setFiles={setFiles}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-12 mt-3\">\r\n\r\n                        <div className=\"d-flex align-items-center justify-content-end\">\r\n                            <Button\r\n                                variant='secondary'\r\n                                className='mr-2'\r\n                                onClick={close}\r\n                            >\r\n                                Cancel\r\n                            </Button>\r\n\r\n                            {!isLoading ? (\r\n                                <Button onClick={handleSubmit}>\r\n                                    <i className=\"fa-regular fa-paper-plane\"></i>\r\n                                    Update\r\n                                </Button>\r\n                            ) : (\r\n                            <Button className='cursor-processing'>\r\n                                <div\r\n                                    className=\"spinner-border text-white\"\r\n                                    role=\"status\"\r\n                                    style={{\r\n                                        width: '18px',\r\n                                        height: '18px',\r\n                                    }}\r\n                                >\r\n                                </div>\r\n                                Processing...\r\n                            </Button>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SubtTaskEditForm\r\n","import _ from \"lodash\";\r\nimport { User } from \"../utils/user-details\";\r\n\r\n\r\n// * task page permission\r\n\r\nexport function singleTaskPagePermission (task, auth) {\r\n    let hasPermission = false;\r\n    // check is auth\r\n    const isAuth = auth.getRoleId() === 1;\r\n    const pmPermission = task.projectManagerId === auth.getId();\r\n    hasPermission = true;\r\n\r\n    return hasPermission;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// permission for timer control\r\nexport function timeControlPermision({task, status, loggedUser }){\r\n    let statusPermission = false;\r\n    let assigneePermission = false;\r\n\r\n    let statusId = status ? status.id : -1;\r\n    let assignedUser = task?.assigneeTo;\r\n    let _loggedUser = loggedUser;\r\n\r\n    // if status id 2 or 3 show timer start button\r\n    if([2,3].includes(Number(statusId))){\r\n        statusPermission = true;\r\n    }\r\n\r\n    // if task assign to\r\n    if(assignedUser.getId() === _loggedUser.getId()){\r\n        assigneePermission = true;\r\n    }\r\n    return statusPermission && assigneePermission && _.size(task?.subtask) === 0\r\n}\r\n\r\n\r\n// mark as completed button permission controller\r\nexport function markAsCompletedButtonPermission({task, status, loggedUser}){\r\n    let statusPermission = false;\r\n    let assigneePermission = false;\r\n\r\n    let statusId = status ? status.id : -1;\r\n    let assignedUser = task?.assigneeTo;\r\n    let _loggedUser = new User(loggedUser);\r\n\r\n\r\n\r\n    // if task assign to\r\n    if(assignedUser.getId() === _loggedUser.getId()){\r\n        assigneePermission = true;\r\n        if(_loggedUser?.getRoleId() === 6){\r\n            if([8].includes(Number(statusId))){\r\n                statusPermission = true;\r\n            }\r\n        }else{\r\n            if([2,3].includes(Number(statusId))){\r\n                statusPermission = true;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return statusPermission && assigneePermission;\r\n}\r\n\r\n\r\n// approve button permission\r\nexport function approveButtonPermission({task, status, loggedUser}){\r\n    let statusPermission = false;\r\n    let assigneePermission = false;\r\n\r\n    let statusId = status ? status.id : -1;\r\n    let assignedUser = task?.assigneeBy;\r\n    let _loggedUser = new User(loggedUser);\r\n\r\n    // if status id 6 show timer start button\r\n    if([6].includes(Number(statusId))){\r\n        statusPermission = true;\r\n    }\r\n\r\n    // if task assign to\r\n    if(assignedUser.getId() === _loggedUser.getId()){\r\n        assigneePermission = true;\r\n    }else if(_loggedUser?.getRoleId() === 1){\r\n        assigneePermission = true\r\n    }\r\n\r\n    return statusPermission && assigneePermission;\r\n}\r\n\r\n\r\n// approve button permission\r\nexport function needRevisionPermision({task, status, loggedUser}){\r\n    let statusPermission = false;\r\n    let assigneePermission = false;\r\n\r\n    let statusId = status ? status.id : -1;\r\n    let assignedUser = task?.assigneeBy;\r\n    let _loggedUser = new User(loggedUser);\r\n\r\n    // if status id 6 show timer start button\r\n    if([6].includes(Number(statusId))){\r\n        statusPermission = true;\r\n    }\r\n\r\n    // if task assign to\r\n    if(assignedUser.getId() === _loggedUser.getId()){\r\n        assigneePermission = true;\r\n    }else if(_loggedUser?.getRoleId() === 1){\r\n        assigneePermission = true\r\n    }\r\n\r\n    return statusPermission && assigneePermission;\r\n}\r\n\r\n\r\n// revision button\r\nexport function revisionButtonPermission ({task, status, loggedUser}){\r\n    let statusPermission = false;\r\n    let assigneePermission = false;\r\n\r\n    let statusId = status ? status.id : -1;\r\n    let assignedUser = task?.assigneeTo;\r\n    let _loggedUser = loggedUser;\r\n//    console.log(statusId)\r\n    // if status id 6 show timer start button\r\n    if([1].includes(Number(statusId))){\r\n        statusPermission = true;\r\n    }\r\n\r\n    // if task assign to\r\n    if(assignedUser.getId() === _loggedUser.getId()){\r\n        assigneePermission = true;\r\n    }\r\n\r\n    return statusPermission && assigneePermission;\r\n}\r\n\r\n\r\n\r\n// submit for client approval button permission\r\n\r\nexport function submitForClientApproval({task, status, auth}){\r\n    let statusPermission = false;\r\n    let assigneePermission = false;\r\n    let statusId = status ? status.id : -1;\r\n    let assignedUser = task?.assigneeBy;\r\n\r\n    // if status id 6 show timer start button\r\n    if([8].includes(Number(statusId))){ statusPermission = true; }\r\n\r\n    // if task assign to\r\n    if(\r\n        (assignedUser?.getId() === auth?.getId() &&\r\n        auth?.getRoleId() === 4) ||\r\n        auth?.getRoleId() === 1\r\n    ){\r\n        assigneePermission = true;\r\n    }\r\n\r\n    return statusPermission && assigneePermission;\r\n}\r\n\r\nexport function clientApproveConfirmationButtonPermission({task, status, auth}){\r\n    let statusPermission = false;\r\n    let assigneePermission = false;\r\n    let statusId = status ? status.id : -1;\r\n    let assignedUser = task?.assigneeBy;\r\n\r\n    // if status id 6 show timer start button\r\n    if([9].includes(Number(statusId))){ statusPermission = true; }\r\n\r\n    // if task assign to\r\n    if(\r\n        (assignedUser?.getId() === auth?.getId() &&  auth?.getRoleId() === 4) ||\r\n        auth?.getRoleId() === 1\r\n    ){\r\n        assigneePermission = true;\r\n    }\r\n\r\n    return statusPermission && assigneePermission;\r\n}\r\n\r\n\r\nexport function taskEditPermision({task, status, auth}){\r\n    let statusPermission = false;\r\n    let assigneePermission = false;\r\n    let statusId = status ? status.id : -1;\r\n    let assignedUser = task?.assigneeBy;\r\n\r\n    // if status id 6 show timer start button\r\n    if([1,2,3].includes(Number(statusId))){ statusPermission = true; }\r\n\r\n    // if task assign to\r\n    if(\r\n        (assignedUser?.getId() === auth?.getId() ) ||\r\n        auth?.getRoleId() === 1\r\n    ){\r\n        assigneePermission = true;\r\n    }\r\n\r\n    return statusPermission && assigneePermission;\r\n}\r\n\r\n\r\n// sub task creation permission\r\n\r\nexport function subTaskCreationPermision({task, status, auth}){\r\n    let statusPermission = false;\r\n    let assigneePermission = false;\r\n    let statusId = status ? status.id : -1;\r\n    let assignedUser = task?.assigneeTo;\r\n    let assignedBy = task?.assignedBy;\r\n\r\n    // if status id 6 show timer start button\r\n    if([1,2,3].includes(Number(statusId))){ statusPermission = true }\r\n\r\n    // if task assign to\r\n    if(\r\n        (\r\n            assignedUser?.getId() === auth?.getId() ||\r\n            assignedBy?.getId() === auth?.getId()\r\n            &&  _.includes([5,6,9,10], auth?.getRoleId())\r\n        ) \r\n        // ||\r\n        // auth?.getRoleId() === 1\r\n    ){\r\n        assigneePermission = true;\r\n    }\r\n\r\n    return statusPermission && assigneePermission;\r\n}\r\n","import React from \"react\";\r\nimport SubTask from \"./SubTask\";\r\nimport SubTaskForm from \"./SubTaskForm\";\r\nimport Button from \"../../components/Button\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    useGetTaskDetailsQuery,\r\n    useLazyGetInProgressTaskStatusQuery,\r\n    useLazyGetTaskDetailsQuery,\r\n} from \"../../../services/api/SingleTaskPageApi\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { storeSubTasks } from \"../../../services/features/subTaskSlice\";\r\nimport SubtTaskEditForm from \"./SubTaskEditForm\";\r\nimport CustomModal from \"../../components/CustomModal\";\r\nimport {useWindowSize} from 'react-use';\r\nimport Modal from \"../../components/Modal\";\r\nimport _ from \"lodash\";\r\nimport { User } from \"../../../utils/user-details\";\r\nimport { SingleTask } from '../../../utils/single-task';\r\nimport { subTaskCreationPermision } from \"../../permissions\";\r\nimport { toast } from \"react-toastify\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst SubTaskSection = ({status}) => {\r\n    const { task, subTask } = useSelector((s) => s.subTask);\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const [edit, setEdit] = React.useState(null);\r\n    const [formMode, setFormMode] = React.useState(\"add\");\r\n    const [isTaskModalOpen, setIsTaskModalOpen] = React.useState(false);\r\n    const [subtaskModalToggleRef, setSubtaskModalToggleRef] =\r\n        React.useState(null);\r\n    const {width} = useWindowSize();\r\n    const auth = new User(window?.Laravel?.user);\r\n    \r\n    // check in progress task history \r\n    const [getInProgressTaskStatus, { isFetching: inProgressTaskStatus }] = useLazyGetInProgressTaskStatusQuery();\r\n\r\n    const toggleAddButton = async () => {\r\n        // try{\r\n        //     const res = await getInProgressTaskStatus(`/${auth?.getId()}`).unwrap();\r\n        //     if(res.status === 400){\r\n        //         toast.error(res?.message, {theme: 'colored'})\r\n        //     }else{\r\n        //         setIsTaskModalOpen(!isTaskModalOpen);\r\n        //     }\r\n \r\n        // }catch(err){\r\n        //     console.log(err)\r\n        // }\r\n\r\n        setIsTaskModalOpen(!isTaskModalOpen);\r\n    }\r\n\r\n    const closeAddModal = () => {\r\n        setIsTaskModalOpen(false);\r\n        setFormMode(\"add\");\r\n        navigate(`/account/tasks/${task?.id}`);\r\n    };\r\n    const toggleEditButton = (e) => {\r\n        setFormMode(\"edit\");\r\n        setIsTaskModalOpen(!isTaskModalOpen);\r\n    };\r\n\r\n    // edit modal form control\r\n    const toggleEditForm = (e, id) => {\r\n        e.preventDefault();\r\n        setEdit(id);\r\n        setIsTaskModalOpen(true);\r\n    };\r\n\r\n    const closeEditForm = () => {\r\n        setEdit(null);\r\n        setIsTaskModalOpen(false);\r\n    };\r\n\r\n    // handle create new subtask\r\n    // const handleCreateSubTask = () => {\r\n    //     // if parent task has not already any subtask\r\n    //     // show the Working Environment form\r\n    //     // else create from\r\n    // };\r\n\r\n    // edit modal form control end\r\n    // const {\r\n    //   data,\r\n    //   isFetching\r\n    // } = useGetTaskDetailsQuery(`/${task?.id}/json?mode=sub_task`, {\r\n    //   skip: subTask?.length\r\n    // });\r\n\r\n    // fetch all task\r\n    const [getTaskDetails, { isFetching }] = useLazyGetTaskDetailsQuery(\"\", {\r\n        skip: subTask?.length,\r\n    });\r\n\r\n\r\n\r\n    // useEffect(()=>{\r\n    //     console.log({task,subTask,isFetching});\r\n    //   },[task,subTask,isFetching])\r\n\r\n\r\n\r\n    // if task notes fetch completed store data into redux store\r\n    React.useEffect(() => {\r\n        if (task && task.id) {\r\n            getTaskDetails(`/${task?.id}/json?mode=sub_task`)\r\n                .unwrap()\r\n                .then((res) => {\r\n                    if (res) {\r\n                        dispatch(storeSubTasks(res));\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        }\r\n    }, [task]);\r\n\r\n    // React.useEffect(() => {\r\n    //   if(!isFetching && data){\r\n    //     dispatch(storeSubTasks(data));\r\n    //   }\r\n    // },[data])\r\n\r\n    const Task = new SingleTask(task);\r\n\r\n    return (\r\n        <div\r\n            className=\"sp1_task_right_card mb-3\"\r\n            ref={setSubtaskModalToggleRef}\r\n            style={{ zIndex: isTaskModalOpen ? \"99\" : \"\" }}\r\n        >\r\n            {\r\n                width > 1200 ?\r\n                <React.Fragment>\r\n                    {/* modal */}\r\n                        <CustomModal\r\n                            toggleRef={subtaskModalToggleRef}\r\n                            isOpen={isTaskModalOpen}\r\n                            close={closeAddModal}\r\n                            formMode={formMode}\r\n                        >\r\n                            {\r\n                            // !edit ?\r\n                                <SubTaskForm\r\n                                    close={closeAddModal}\r\n                                    isFirstSubtask={!Task.workEnvData}\r\n                                /> \r\n                            // : <SubtTaskEditForm close={closeEditForm} editId={edit} /> \r\n                            }\r\n                        </CustomModal>\r\n                </React.Fragment>:\r\n                <React.Fragment>\r\n                    {/* modal */}\r\n                        <Modal isOpen={isTaskModalOpen}>\r\n                            {!edit ? (\r\n                                <SubTaskForm\r\n                                    close={closeAddModal}\r\n                                    isFirstSubtask={!Task.workEnvData}\r\n                                />\r\n                            ) : (<SubtTaskEditForm close={closeEditForm} editId={edit} /> )}\r\n                        </Modal>\r\n                </React.Fragment>\r\n            }\r\n\r\n            {/* left dropdown */}\r\n\r\n            {isTaskModalOpen && (\r\n                <button\r\n                    aria-label=\"openCommentModalButton\"\r\n                    \r\n                    className=\"sp1_task_right_dl_toggle\"\r\n                    onClick={toggleAddButton}\r\n                    style={{ zIndex: isTaskModalOpen ? \"110\" : \"\" }}\r\n                >\r\n                    <i\r\n                        className={`fa-solid fa-circle-chevron-${\r\n                            isTaskModalOpen ? \"right\" : \"left\"\r\n                        }`}\r\n                        style={{ color: \"#276fec\" }}\r\n                    />\r\n                </button>\r\n            )}\r\n            {/* left dropdown */}\r\n\r\n            <div className=\"d-flex border-bottom pb-2 align-items-center justify-content-between mb-2 font-weight-bold\">\r\n                <div className=\"f-16\">\r\n                    <span>Sub Task</span>\r\n                    {isFetching && (\r\n                        <div\r\n                            className=\"spinner-border text-dark ml-2\"\r\n                            role=\"status\"\r\n                            style={{\r\n                                width: \"16px\",\r\n                                height: \"16px\",\r\n                                border: \"0.14em solid rgba(0, 0, 0, .25)\",\r\n                                borderRightColor: \"transparent\",\r\n                            }}\r\n                        />\r\n                    )}\r\n                </div>\r\n\r\n               {\r\n                    subTaskCreationPermision({task: Task, auth, status}) && \r\n                        <Button\r\n                            variant=\"tertiary\"\r\n                            className=\"sp1_tark_add_item\"\r\n                            aria-label=\"addButton\"\r\n                            onClick={toggleAddButton}\r\n                        >\r\n                            {isTaskModalOpen ? (\r\n                                <React.Fragment>\r\n                                    <i className=\"fa-solid fa-xmark\" style={{ fontSize: \"12px\" }} /> Close\r\n                                </React.Fragment>\r\n                            ) : (\r\n                                <React.Fragment>\r\n                                    {inProgressTaskStatus ? \r\n                                    <Loader title=\"Loading...\" />\r\n                                    : <><i className=\"fa-solid fa-plus\" style={{ fontSize: \"12px\" }} />  Sub Task</>}\r\n                                </React.Fragment>\r\n                            )}\r\n                        </Button>\r\n               } \r\n            </div>\r\n\r\n            <div className=\"sp1_task_right_card--body\">\r\n                {!isFetching ? (\r\n                    _.size(subTask) !== 0 ? (\r\n                        subTask?.map((sub) => (\r\n                            <SubTask\r\n                                key={sub.id}\r\n                                subTask={sub}\r\n                                task={task}\r\n                                status={status}\r\n                                toggleEditForm={toggleEditForm}\r\n                            />\r\n                        ))\r\n                    ) : (\r\n                        <div\r\n                            className=\"d-flex align-items-center justify-content-center\"\r\n                            style={{\r\n                                color: \"#B4BCC4\",\r\n                                fontSize: \"15px\",\r\n                                textAlign: \"center\",\r\n                                height: \"100%\",\r\n                                width: \"100%\",\r\n                            }}\r\n                        >\r\n                            Sub Task is Not Available\r\n                        </div>\r\n                    )\r\n                ) : (\r\n                    <div\r\n                        className=\"d-flex align-items-center justify-content-center\"\r\n                        style={{\r\n                            color: \"#5A6169\",\r\n                            fontSize: \"15px\",\r\n                            textAlign: \"center\",\r\n                            height: \"100%\",\r\n                            width: \"100%\",\r\n                        }}\r\n                    >\r\n                        <div\r\n                            className=\"spinner-border text-dark ml-2\"\r\n                            role=\"status\"\r\n                            style={{\r\n                                width: \"16px\",\r\n                                height: \"16px\",\r\n                                border: \"0.14em solid rgba(0, 0, 0, .25)\",\r\n                                borderRightColor: \"transparent\",\r\n                                marginRight: \"10px\",\r\n                            }}\r\n                        />\r\n                        Loading...\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SubTaskSection;","import React from \"react\";\r\nimport CustomModal from \"../../components/CustomModal\";\r\nimport Button from \"../../components/Button\";\r\nimport { User } from \"../../../utils/user-details\";\r\nimport dayjs from \"dayjs\";\r\nimport FileUploader from \"../../../file-upload/FileUploader\";\r\nimport { useWindowSize } from 'react-use'\r\nimport Modal from \"../../components/Modal\";\r\n\r\nconst SubmitionView = ({ isOpen, close, toggle, data, isLoading }) => {\r\n    const links = _.compact(_.split(data?.links, ','));\r\n    const attaches = _.compact(_.split(data?.attaches, ',')); \r\n    const { width: deviceWidth } = useWindowSize();\r\n\r\n    const content = () => {\r\n        return(\r\n            <div className=\"sp1-subtask-form --modal-panel --modal-submitted\">\r\n                <div className=\"sp1-subtask-form --modal-panel-header\">\r\n                    <div className=\"d-flex align-items-center\">\r\n                        <h6>Submitted Task </h6>\r\n                        {isLoading && (\r\n                            <div\r\n                                className=\"spinner-border text-dark ml-2\"\r\n                                role=\"status\"\r\n                                style={{\r\n                                    width: \"16px\",\r\n                                    height: \"16px\",\r\n                                    border: \"0.14em solid rgba(0, 0, 0, .25)\",\r\n                                    borderRightColor: \"transparent\",\r\n                                }}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                    <Button\r\n                        aria-label=\"close-modal\"\r\n                        className=\"_close-modal\"\r\n                        onClick={close}\r\n                    >\r\n                        <i className=\"fa-solid fa-xmark\" />\r\n                    </Button>\r\n                </div>\r\n\r\n                <div className=\"sp1-subtask-form --modal-panel-body --modal-submitted-body\">\r\n                    <div className=\"mt-3 d-flex flex-column\" style={{ gap: \"10px\" }} >\r\n                        <div>\r\n                            <span className=\"fs-14 font-weight-bold d-block mb-3\" style={{ color: \"#767581\" }} >\r\n                                Submitted By\r\n                            </span>\r\n\r\n                            <div className=\"d-flex align-items-center\">\r\n                                <div>\r\n                                    {\r\n                                        data?.image ? (\r\n                                            <img\r\n                                            src={`/user-uploads/avatar/${data?.image}`}\r\n                                            alt={data?.name}\r\n                                            width={32}\r\n                                            height={32}\r\n                                            className=\"rounded-circle\"\r\n                                        />):(\r\n                                            <div className=\"sp1-item-center rounded-circle border\" style={{ width: '32px', height: '32px' }} >\r\n                                                <span className=\"font-weight-bold\" style={{fontSize:'1.2rem'}}>{data?.name?.slice(0,1)}</span>\r\n                                            </div>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                                <div className=\"d-flex flex-column px-2\">\r\n                                    <a className=\"text-underline text-primary\" href={`/account/employees/${data?.user_id}`} style={{ color: \"#767581\" }} > {data?.name} </a>\r\n                                    <span className=\"d-block\" style={{ color: \"#767581\" }}>\r\n                                        {dayjs(data?.submission_date).format( \"MMM DD, YYYY\" )} at {dayjs(data?.submission_date).format(\"hh:mm a\" )}\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex flex-column mt-3\" style={{ gap: \"10px\" }} >\r\n                            <span className=\"d-block fs-14 font-weight-bold\" style={{ color: \"#767581\" }} > Links </span>\r\n                            <ul style={{  listStyle: \"unset\", marginLeft: \"30px\"}} >\r\n                                {links?.map((link, i) => (\r\n                                    <li style={{ listStyle: \"unset\" }}  key={link + i} >\r\n                                        <a className=\"hover-underline text-primary\" target=\"_blank\" href={link} > {link} </a>\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n\r\n                        <div className=\"mt-2 mt-3\">\r\n                            <span className=\"d-block fs-12 font-weight-bold mb-2\" style={{ color: \"#767581\" }}>\r\n                                Description\r\n                            </span>\r\n                            {data?.text ? (\r\n                                <div className=\"sp1_ck_content\" dangerouslySetInnerHTML={{ __html: data?.text }} />\r\n                            ) : (\r\n                                <span style={{ color: \"rgb(180, 188, 196)\" }}>\r\n                                    No description is available\r\n                                </span>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"mt-3\">\r\n                            <span className=\"d-block fs-12 font-weight-bold mb-2\" style={{ color: \"#767581\" }}>\r\n                                Attached Files\r\n                            </span>\r\n\r\n                            {_.size(attaches) > 0 ? (\r\n                                <FileUploader>\r\n                                    {_.map(attaches, (file, index) => (\r\n                                        <FileUploader.Preview\r\n                                            key={`${file}_${index}`}\r\n                                            fileName={file}\r\n                                            downloadAble={true}\r\n                                            deleteAble={false}\r\n                                            downloadUrl={`${file}`}\r\n                                            previewUrl={`${file}`}\r\n                                            fileType={_.includes([\"png\",\"jpg\", \"jpeg\", \"gif\", \"svg\"], _.last(_.split(file, '.'))) ? 'images' : 'others'}\r\n                                            ext=\"\"\r\n                                        />\r\n                                    ))}\r\n                                </FileUploader>\r\n                                ) : (\r\n                                    <span\r\n                                        className=\"\"\r\n                                        style={{ color: \"rgb(180, 188, 196)\" }}\r\n                                    >\r\n                                        No Attachment is available\r\n                                    </span>\r\n                                )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if(deviceWidth > 1200){\r\n        return (\r\n            <CustomModal isOpen={isOpen} toggleRef={toggle}>\r\n                {content()}\r\n            </CustomModal>\r\n        )\r\n    }else{\r\n        return (\r\n            <React.Fragment>\r\n                <Modal isOpen={isOpen}> { content() } </Modal> \r\n            </React.Fragment>\r\n        );\r\n    }\r\n};\r\n\r\nexport default SubmitionView;\r\n","import React from 'react'\r\nimport SubmitionView from './SubmitionView';\r\nimport { Link, useSearchParams } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\n\r\nconst WorkItem = ({data, toggle, modalRef, close, isLoading}) => { \r\n  const [searchParams] = useSearchParams();\r\n  const previewId = searchParams.get('submitted-work') || 0;\r\n\r\n  return (\r\n    <div className=\"d-flex align-items-center justify-content-between sp1_tark_right_item\">\r\n        <div> \r\n            <a className='hover-underline text-primary' href={`/account/tasks/${data?.task_id}`}> Task#{data?.task_id} </a>\r\n            ({data?.submission_no}) submitted by <a className='hover-underline text-primary' href={`/account/employees/${data?.user_id}`}>{data?.name}</a> </div>\r\n\r\n        <div>{dayjs(data?.submission_date).format('MMM DD, YYYY')}</div>\r\n\r\n        <div className=\"d-flex align-items-center\">\r\n            <Link to={`?submitted-work=${data?.task_id}${data?.submission_no}`} className=\"mr-2 py-2 sp1_task_righ_action_btn\">\r\n              <i className=\"fa-regular fa-eye\"></i>\r\n            </Link>\r\n        </div> \r\n\r\n       {\r\n        Number(previewId) === Number(`${data?.task_id}${data?.submission_no}`) && \r\n        <SubmitionView\r\n            isOpen={Number(previewId) === Number(`${data?.task_id}${data?.submission_no}`)}\r\n            toggle={modalRef}\r\n            data={data}\r\n            close={close}\r\n            isLoading={isLoading}\r\n        />\r\n       } \r\n    </div> \r\n  )\r\n}\r\n\r\nexport default WorkItem","import React from 'react'\r\nimport { User } from '../../../utils/user-details'\r\nimport { Link } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\n\r\nconst InnerWorkItem = ({data}) => { \r\n  return (\r\n    <div className=\"d-flex align-items-center justify-content-between sp1_tark_right_item px-0 py-2\" styte={{gap: \"16px\"}}>\r\n        <div> \r\n            <a \r\n              className='hover-underline text-primary' \r\n              href={`/account/tasks/${data?.task_id}`}\r\n            > \r\n              Task#{data?.task_id} \r\n            </a>\r\n            ({data?.submission_no}) submitted by <a className='hover-underline text-primary' href={`/account/employees/${data?.user_id}`}>{data?.name}</a> </div>\r\n\r\n        <div>{dayjs(data?.submission_date).format('MMM DD, YYYY')}</div>  \r\n\r\n        <div className=\"d-flex align-items-center\">\r\n            <Link to={`?submitted-work=${data?.task_id}${data?.submission_no}`} className=\"mr-2 py-2 sp1_task_righ_action_btn\">\r\n              <i className=\"fa-regular fa-eye\"></i>\r\n            </Link>\r\n        </div> \r\n    </div> \r\n  )\r\n}\r\n\r\nexport default InnerWorkItem","import React from 'react'\r\nimport CustomModal from '../../components/CustomModal'\r\nimport Button from '../../components/Button'\r\nimport InnerWorkItem from './InnerWorkItem'\r\nimport Modal from '../../components/Modal'\r\nimport { useWindowSize } from 'react-use'\r\n\r\nconst SubmittedModalView = ({\r\n    isOpen, \r\n    toggle,\r\n    data,\r\n    close,\r\n    isLoading\r\n}) => {\r\n  const { width: deviceWidth } = useWindowSize();\r\n \r\n  const content = () => {\r\n        return(\r\n            <div className='sp1-subtask-form --modal-panel --modal-submitted'>\r\n                <div className='sp1-subtask-form --modal-panel-header'> \r\n                    <div className='d-flex align-items-center'>\r\n                        <h6>Submitted Task </h6>\r\n                        {isLoading && <div \r\n                            className=\"spinner-border text-dark ml-2\" \r\n                            role=\"status\"\r\n                            style={{\r\n                                width: '16px',\r\n                                height: '16px',\r\n                                border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                                borderRightColor: 'transparent' \r\n                            }}\r\n                        />}\r\n                    </div> \r\n                    <Button\r\n                        aria-label=\"close-modal\"\r\n                        className='_close-modal'\r\n                        onClick={close}\r\n                    >\r\n                        <i className=\"fa-solid fa-xmark\" />\r\n                    </Button> \r\n                </div>\r\n\r\n                <div className=\"sp1-subtask-form --modal-panel-body px-0\">\r\n                    {data?.map(d => (\r\n                        <InnerWorkItem key={`${d.task_id}_${d.submission_no}`} data={d} />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        )\r\n  }\r\n\r\n\r\n  return (\r\n        deviceWidth > 1200 ? \r\n        <React.Fragment>\r\n            <CustomModal isOpen={isOpen} toggleRef={toggle} > {content()} </CustomModal>\r\n        </React.Fragment> : \r\n        <React.Fragment>\r\n            <Modal isOpen={isOpen}> { content() } </Modal> \r\n        </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default SubmittedModalView","import * as React from 'react' \r\nimport WorkItem from './WorkItem';\r\nimport useSWR from 'swr';\r\nimport SubmitionView from './SubmitionView';\r\nimport { useLocation, useNavigate, useSearchParams } from 'react-router-dom';\r\nimport SubmittedModalView from './SubmittedModalView';\r\nimport _ from 'lodash';\r\n\r\nconst fetcher = (url) => axios.get(url).then(res => res.data); \r\n\r\nconst SubmittedWork = ({task}) => { \r\n  const [modalRefButton, setModalRefButton] = React.useState(null); \r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const navigate = useNavigate(); \r\n  const location = useLocation();\r\n  const { data, error, isLoading } = useSWR(`/account/tasks/get-task-submissions/${task?.id}`, fetcher, {refreshInterval: 1000 * 3600});\r\n  const [searchParams] = useSearchParams();\r\n  const preview = searchParams.get('submitted-work');\r\n  const modal = searchParams.get('view-modal')\r\n    // control modal\r\n  const toggle = (e) => {\r\n    e.preventDefault();\r\n    if(preview || modal){\r\n      if(location.state && location.state.from){\r\n        navigate(location.state.from);\r\n      }else{navigate(`/account/tasks/${task?.id}`);} \r\n    }else{\r\n      navigate(`/account/tasks/${task?.id}?view-modal=submitted-work`) \r\n    }\r\n  };\r\n  const close = () => { \r\n    if(location.state && location.state.from){\r\n      navigate(location.state.from);\r\n    }else{navigate(`/account/tasks/${task?.id}`);} \r\n  }\r\n \r\n  return (\r\n    <div className='sp1_task_right_card mb-3'  \r\n    ref={setModalRefButton} \r\n    style={{zIndex:  (preview || modal === 'submitted-work') ? 99 : ''}}>\r\n        <div className='d-flex border-bottom pb-2 align-items-center justify-content-between mb-2 font-weight-bold'>\r\n        <span className=\"f-16\">Submitted Works</span> \r\n          {isLoading && \r\n            <div \r\n                className=\"spinner-border text-dark ml-2 mr-auto\" \r\n                role=\"status\"\r\n                style={{\r\n                    width: '16px',\r\n                    height: '16px',\r\n                    border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                    borderRightColor: 'transparent' \r\n                }}\r\n            />\r\n          }\r\n        </div>\r\n\r\n\r\n        {/* side drop toggle button */}\r\n       {\r\n        _.size(data) > 0 &&\r\n        <button \r\n            aria-label='openCommentModalButton'\r\n            className='sp1_task_right_dl_toggle'\r\n            onClick={toggle}\r\n            style={{zIndex:  (preview || modal === 'submitted-work') ? '110' : ''}}\r\n          >\r\n            <i \r\n              className={`fa-solid fa-circle-chevron-${ (preview || modal === 'submitted-work') ? 'right' : 'left'}`} \r\n              style={{color: \"#276fec\"}} \r\n            />\r\n        </button>\r\n       } \r\n\r\n        <SubmittedModalView\r\n            isOpen={modal === 'submitted-work'}\r\n            toggle={modalRefButton}\r\n            data={_.orderBy(data, ['task_id', 'submission_no'], ['desc', 'desc'])}\r\n            close={close}\r\n            isLoading={isLoading}\r\n        />\r\n\r\n        {/* side drop toggle button end */} \r\n        <div className=\"sp1_task_right_card--body\"> \r\n        {\r\n          _.size(data) > 0 ? \r\n            _.map(_.orderBy(data, ['task_id', 'submission_no'], ['desc', 'desc']), item => (\r\n              <WorkItem \r\n                key={item?.submission_date + item?.submission_no} \r\n                data={item} \r\n                toggle={toggle} \r\n                close={close}\r\n                isLoading={isLoading}\r\n                modalRef={modalRefButton} \r\n              />\r\n            )):\r\n            <div\r\n                className=\"d-flex align-items-center justify-content-center\"\r\n                style={{\r\n                    color: \"#B4BCC4\",\r\n                    fontSize: \"15px\",\r\n                    textAlign: \"center\",\r\n                    height: \"100%\",\r\n                    width: \"100%\",\r\n                }}\r\n            >\r\n                No Submitted Work is Available\r\n            </div>\r\n        }\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SubmittedWork ","import React from 'react'\r\nimport Modal from '../../components/Modal'\r\nimport Button from '../../components/Button'\r\n\r\nconst StartTimerConfirmationModal = ({isOpen, onConfirm}) => {\r\n  const [buttonVisible, setButtonVisible] = React.useState(false);\r\n  const [countDown, setCountDown] = React.useState(20);\r\n\r\n  React.useEffect(() => {\r\n    let count = countDown ?? 0;\r\n\r\n    let timeIntervelId = setInterval(() => {\r\n        setCountDown(count--);\r\n    }, 1000);\r\n\r\n\r\n    let timeOutId = setTimeout(() => {\r\n      setButtonVisible(true);\r\n      clearInterval(timeIntervelId)\r\n    }, 22000);\r\n\r\n    \r\n\r\n    return () => {\r\n      clearTimeout(timeOutId);\r\n      clearInterval(timeIntervelId);\r\n    };\r\n  }, []);\r\n\r\n  const text = `<html><head><meta content=\"text/html; charset=UTF-8\" http-equiv=\"content-type\"><style type=\"text/css\">ol{margin:0;padding:0}table td,table th{padding:0}.c0{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:\"Arial\";font-style:normal}.c1{padding-top:0pt;padding-bottom:0pt;line-height:1.15;orphans:2;widows:2;text-align:left}.c2{background-color:#ffffff;max-width:468pt;padding:72pt 72pt 72pt 72pt}.c3{height:11pt}.title{padding-top:0pt;color:#000000;font-size:26pt;padding-bottom:3pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}.subtitle{padding-top:0pt;color:#666666;font-size:15pt;padding-bottom:16pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}li{color:#000000;font-size:11pt;font-family:\"Arial\"}p{margin:0;color:#000000;font-size:11pt;font-family:\"Arial\"}h1{padding-top:20pt;color:#000000;font-size:20pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h2{padding-top:18pt;color:#000000;font-size:16pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h3{padding-top:16pt;color:#434343;font-size:14pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h4{padding-top:14pt;color:#666666;font-size:12pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h5{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h6{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;font-style:italic;orphans:2;widows:2;text-align:left}</style></head><body class=\"c2 doc-content\"><p class=\"c1\"><span class=\"c0\">Do You Understand The Following Things?</span></p><p class=\"c1\"><span class=\"c0\">A. Your job is not to decide what the look and feel of a website will be based on a few reference websites.</span></p><p class=\"c1\"><span class=\"c0\">B. Your job is not to research a theme based on an instruction shared by the PM.</span></p><p class=\"c1\"><span class=\"c0\">C. Your job is not to research a plugin based on a problem shared by PM.</span></p><p class=\"c1\"><span class=\"c0\">D. Your job is not to choose the color scheme of a website.</span></p><p class=\"c1\"><span class=\"c0\">E. Your job is not to talk to the support for example the Shopify support team, theme support, plugin support and any other support for any solution.</span></p><p class=\"c1\"><span class=\"c0\">F. Your job is not to create the training videos for the client after the completion of a project.</span></p><p class=\"c1\"><span class=\"c0\">G. You understand that all your hours have to be logged/tracked, and you will be questioned if you don&rsquo;t log at least 7 hours for any reason.</span></p><p class=\"c1 c3\"><span class=\"c0\"></span></p><p class=\"c1\"><span class=\"c0\">In general, anything that has to do with requirements define (of any sort) has to be done by the project manager. Your job is to execute the work based on the defined requirements.</span></p><p class=\"c1 c3\"><span class=\"c0\"></span></p><p class=\"c1\"><span class=\"c0\">If for any reason, project manager needs your help for any of those things, he will have to create a separate task for each of them and those tasks have to be authorized by the top management mandatorily. Report immediately if you are asked to do any of these and if it wasn&rsquo;t authorized by top management. You should see a text like &ldquo;Authorized by top management&rdquo; on the right side of the task title if it was authorized.</span></p><p class=\"c1 c3\"><span class=\"c0\"></span></p><p class=\"c1\"><span class=\"c0\">In case, you don&rsquo;t report, the extra time taken for these will be considered as your lacking (as they will remain unaccountable) and you will receive negative performance score.&quot;</span></p><p class=\"c1 c3\"><span class=\"c0\"></span></p><p class=\"c1\"><span class=\"c0\">&#2438;&#2474;&#2472;&#2495; &#2453;&#2495; &#2472;&#2495;&#2478;&#2509;&#2472;&#2482;&#2495;&#2454;&#2495;&#2468; &#2476;&#2495;&#2487;&#2479;&#2492;&#2455;&#2497;&#2482;&#2495; &#2476;&#2497;&#2461;&#2503;&#2472;?</span></p><p class=\"c1 c3\"><span class=\"c0\"></span></p><p class=\"c1\"><span class=\"c0\">&#2535;&#2404; &#2453;&#2527;&#2503;&#2453;&#2463;&#2495; &#2480;&#2503;&#2475;&#2494;&#2480;&#2503;&#2472;&#2509;&#2488; &#2451;&#2527;&#2503;&#2476;&#2488;&#2494;&#2439;&#2463;&#2503;&#2480; &#2451;&#2474;&#2480; &#2477;&#2495;&#2468;&#2509;&#2468;&#2495; &#2453;&#2480;&#2503; &#2453;&#2509;&#2482;&#2494;&#2527;&#2503;&#2472;&#2509;&#2463;&#2503;&#2480; &#2451;&#2527;&#2503;&#2476;&#2488;&#2494;&#2439;&#2463;&#2503;&#2480; Look &amp; Feel &#2453;&#2503;&#2478;&#2472; &#2489;&#2476;&#2503; &#2468;&#2494;&#2480; &#2476;&#2495;&#2487;&#2527;&#2503; &#2488;&#2495;&#2470;&#2509;&#2471;&#2494;&#2472;&#2509;&#2468; &#2472;&#2503;&#2527;&#2494; &#2438;&#2474;&#2472;&#2494;&#2480; &#2453;&#2494;&#2460; &#2472;&#2527;&#2404;</span></p><p class=\"c1\"><span class=\"c0\">&#2536;&#2404; &#2474;&#2509;&#2480;&#2507;&#2460;&#2503;&#2453;&#2509;&#2463; &#2478;&#2509;&#2479;&#2494;&#2472;&#2503;&#2460;&#2494;&#2480;&#2503;&#2480; &#2439;&#2472;&#2509;&#2488;&#2463;&#2509;&#2480;&#2494;&#2453;&#2486;&#2472; &#2437;&#2472;&#2497;&#2479;&#2494;&#2527;&#2496; &#2480;&#2495;&#2488;&#2494;&#2480;&#2509;&#2458; &#2453;&#2480;&#2503; &#2469;&#2495;&#2478; &#2454;&#2497;&#2433;&#2460;&#2503; &#2476;&#2503;&#2480; &#2453;&#2480;&#2494; &#2438;&#2474;&#2472;&#2494;&#2480; &#2453;&#2494;&#2460; &#2472;&#2527;&#2404;</span></p><p class=\"c1\"><span class=\"c0\">&#2537;&#2404; &#2474;&#2509;&#2480;&#2507;&#2460;&#2503;&#2453;&#2509;&#2463; &#2478;&#2509;&#2479;&#2494;&#2472;&#2503;&#2460;&#2494;&#2480;&#2503;&#2480; &#2439;&#2472;&#2509;&#2488;&#2463;&#2509;&#2480;&#2494;&#2453;&#2486;&#2472; &#2437;&#2472;&#2497;&#2479;&#2494;&#2527;&#2496; &#2480;&#2495;&#2488;&#2494;&#2480;&#2509;&#2458; &#2453;&#2480;&#2503; &#2474;&#2509;&#2482;&#2494;&#2455;&#2495;&#2472; &#2454;&#2497;&#2433;&#2460;&#2503; &#2476;&#2503;&#2480; &#2453;&#2480;&#2494; &#2438;&#2474;&#2472;&#2494;&#2480; &#2453;&#2494;&#2460; &#2472;&#2527;&#2404;</span></p><p class=\"c1\"><span class=\"c0\">&#2538;&#2404; &#2451;&#2527;&#2503;&#2476;&#2488;&#2494;&#2439;&#2463;&#2503;&#2480; &#2453;&#2494;&#2482;&#2494;&#2480; &#2488;&#2509;&#2453;&#2495;&#2478; &#2453;&#2495; &#2489;&#2476;&#2503; &#2488;&#2503;&#2463;&#2494; &#2474;&#2459;&#2472;&#2509;&#2470; &#2453;&#2480;&#2494; &#2476;&#2494; &#2453;&#2507;&#2472; &#2488;&#2495;&#2470;&#2509;&#2471;&#2494;&#2472;&#2509;&#2468; &#2472;&#2503;&#2527;&#2494; &#2438;&#2474;&#2472;&#2494;&#2480; &#2453;&#2494;&#2460; &#2472;&#2527;&#2404;</span></p><p class=\"c1\"><span class=\"c0\">&#2539;&#2404; &#2453;&#2507;&#2472; &#2471;&#2480;&#2472;&#2503;&#2480; &#2488;&#2478;&#2488;&#2509;&#2479;&#2494;&#2480; &#2488;&#2478;&#2494;&#2471;&#2494;&#2472;&#2503;&#2480; &#2460;&#2472;&#2509;&#2479;&#2503; &#2453;&#2507;&#2472; &#2474;&#2509;&#2480;&#2453;&#2494;&#2480; &#2488;&#2494;&#2474;&#2507;&#2480;&#2509;&#2463; &#2463;&#2495;&#2478;&#2503;&#2480; &#2488;&#2494;&#2469;&#2503; &#2479;&#2507;&#2455;&#2494;&#2479;&#2507;&#2455; &#2453;&#2480;&#2494; (&#2479;&#2503;&#2478;&#2472;, &#2486;&#2474;&#2495;&#2475;&#2494;&#2439; &#2488;&#2494;&#2474;&#2507;&#2480;&#2509;&#2463; &#2463;&#2495;&#2478;, &#2469;&#2495;&#2478; &#2488;&#2494;&#2474;&#2507;&#2480;&#2509;&#2463;, &#2474;&#2509;&#2482;&#2494;&#2455;&#2495;&#2472; &#2488;&#2494;&#2474;&#2507;&#2480;&#2509;&#2463;, &#2447;&#2476;&#2434; &#2437;&#2472;&#2509;&#2479; &#2453;&#2507;&#2472; &#2488;&#2494;&#2474;&#2507;&#2480;&#2509;&#2463; &#2463;&#2495;&#2478;) &#2438;&#2474;&#2472;&#2494;&#2480; &#2453;&#2494;&#2460; &#2472;&#2527;&#2404;</span></p><p class=\"c1\"><span class=\"c0\">&#2540;&#2404; &#2474;&#2509;&#2480;&#2507;&#2460;&#2503;&#2453;&#2509;&#2463; &#2486;&#2503;&#2487; &#2489;&#2476;&#2494;&#2480; &#2474;&#2480;&#2503; &#2453;&#2509;&#2482;&#2494;&#2527;&#2503;&#2472;&#2509;&#2463;&#2503;&#2480; &#2460;&#2472;&#2509;&#2479;&#2503; &#2453;&#2507;&#2472; &#2474;&#2509;&#2480;&#2453;&#2494;&#2480; &#2463;&#2509;&#2480;&#2503;&#2439;&#2472;&#2495;&#2434; &#2477;&#2495;&#2465;&#2495;&#2451; &#2476;&#2494;&#2472;&#2494;&#2472;&#2507; &#2438;&#2474;&#2472;&#2494;&#2480; &#2453;&#2494;&#2460; &#2472;&#2527;&#2404;</span></p><p class=\"c1\"><span class=\"c0\">&#2541;&#2404; &#2438;&#2474;&#2472;&#2495; &#2488;&#2509;&#2476;&#2496;&#2453;&#2494;&#2480; &#2453;&#2480;&#2459;&#2503;&#2472; &#2479;&#2503;, &#2438;&#2474;&#2472;&#2494;&#2453;&#2503; &#2438;&#2474;&#2472;&#2494;&#2480; &#2488;&#2453;&#2482; &#2453;&#2494;&#2460;&#2503;&#2480; &#2488;&#2478;&#2527; Seopage1 &#2447;&#2480; &#2439; &#2438;&#2480; &#2474;&#2495; &#2488;&#2495;&#2488;&#2509;&#2463;&#2503;&#2478;&#2503; &#2463;&#2509;&#2480;&#2509;&#2479;&#2494;&#2453; &#2453;&#2480;&#2468;&#2503; &#2489;&#2476;&#2503; &#2447;&#2476;&#2434; &#2479;&#2470;&#2495; &#2438;&#2474;&#2472;&#2495; &#2453;&#2507;&#2472; &#2453;&#2494;&#2480;&#2467;&#2503; &#2453;&#2478;&#2474;&#2453;&#2509;&#2487;&#2503; 7 &#2456;&#2467;&#2509;&#2463;&#2494; &#2463;&#2509;&#2480;&#2509;&#2479;&#2494;&#2453; &#2472;&#2494; &#2453;&#2480;&#2503;&#2472; &#2468;&#2494;&#2489;&#2482;&#2503; &#2438;&#2474;&#2472;&#2494;&#2453;&#2503; &#2474;&#2509;&#2480;&#2486;&#2509;&#2472; &#2453;&#2480;&#2494; &#2489;&#2476;&#2503;&#2404;</span></p><p class=\"c1 c3\"><span class=\"c0\"></span></p><p class=\"c1\"><span class=\"c0\">&#2488;&#2494;&#2471;&#2494;&#2480;&#2467;&#2477;&#2494;&#2476;&#2503;, &#2479;&#2503;&#2453;&#2507;&#2472;&#2507; &#2471;&#2480;&#2467;&#2503;&#2480; &#2474;&#2509;&#2480;&#2479;&#2492;&#2507;&#2460;&#2472;&#2496;&#2479;&#2492;&#2468;&#2494; &#2476;&#2494; Requirements &#2447;&#2480; &#2476;&#2495;&#2487;&#2527;&#2503; &#2488;&#2495;&#2470;&#2509;&#2471;&#2494;&#2472;&#2509;&#2468; &#2472;&#2503;&#2527;&#2494; (&#2479;&#2503; &#2453;&#2507;&#2472; &#2471;&#2480;&#2467;&#2503;&#2480;) &#2474;&#2509;&#2480;&#2507;&#2460;&#2503;&#2453;&#2509;&#2463; &#2478;&#2509;&#2479;&#2494;&#2472;&#2503;&#2460;&#2494;&#2480;&#2503;&#2480; &#2453;&#2494;&#2460;&#2404; &#2438;&#2474;&#2472;&#2494;&#2480; &#2453;&#2494;&#2460; &#2489;&#2458;&#2509;&#2459;&#2503;, &#2438;&#2474;&#2472;&#2494;&#2480; &#2441;&#2474;&#2480;&#2503; &#2447;&#2488;&#2494;&#2439;&#2472; &#2453;&#2480;&#2494; &#2453;&#2494;&#2460;&#2455;&#2497;&#2482;&#2507;&#2453;&#2503; &#2474;&#2509;&#2480;&#2507;&#2460;&#2503;&#2453;&#2509;&#2463; &#2478;&#2509;&#2479;&#2494;&#2472;&#2503;&#2460;&#2494;&#2480;&#2503;&#2480; &#2470;&#2503;&#2527;&#2494; &#2488;&#2495;&#2470;&#2509;&#2471;&#2494;&#2472;&#2509;&#2468; &#2437;&#2472;&#2509;&#2479;&#2479;&#2494;&#2527;&#2496; &#2476;&#2494;&#2488;&#2509;&#2468;&#2476;&#2494;&#2527;&#2472; &#2453;&#2480;&#2494;&#2404;</span></p><p class=\"c1 c3\"><span class=\"c0\"></span></p><p class=\"c1\"><span class=\"c0\">&#2479;&#2470;&#2495; &#2453;&#2507;&#2472; &#2453;&#2494;&#2480;&#2467;&#2503;, &#2474;&#2509;&#2480;&#2507;&#2460;&#2503;&#2453;&#2509;&#2463; &#2478;&#2509;&#2479;&#2494;&#2472;&#2503;&#2460;&#2494;&#2480; &#2447;&#2439; &#2453;&#2507;&#2472;&#2451; &#2453;&#2494;&#2460;&#2503; &#2438;&#2474;&#2472;&#2494;&#2480; &#2488;&#2494;&#2489;&#2494;&#2479;&#2509;&#2479;&#2503;&#2480; &#2474;&#2509;&#2480;&#2479;&#2492;&#2507;&#2460;&#2472; &#2478;&#2472;&#2503; &#2453;&#2480;&#2503;, &#2468;&#2494;&#2489;&#2482;&#2503; &#2468;&#2495;&#2472;&#2495; &#2488;&#2503;&#2455;&#2497;&#2482;&#2495;&#2480; &#2460;&#2472;&#2509;&#2479; &#2438;&#2482;&#2494;&#2470;&#2494; &#2438;&#2482;&#2494;&#2470;&#2494; &#2476;&#2495;&#2486;&#2503;&#2487; &#2471;&#2480;&#2467;&#2503;&#2480; &#2453;&#2494;&#2460; &#2468;&#2504;&#2480;&#2495; &#2453;&#2480;&#2468;&#2503; &#2489;&#2476;&#2503; &#2447;&#2476;&#2434; &#2448; &#2453;&#2494;&#2460;&#2455;&#2497;&#2482;&#2495; &#2437;&#2476;&#2486;&#2509;&#2479;&#2439; &#2463;&#2474; &#2478;&#2509;&#2479;&#2494;&#2472;&#2503;&#2460;&#2478;&#2503;&#2472;&#2509;&#2463; &#2453;&#2480;&#2509;&#2468;&#2499;&#2453; &#2437;&#2472;&#2497;&#2478;&#2507;&#2470;&#2495;&#2468; &#2489;&#2468;&#2503; &#2489;&#2476;&#2503;&#2404; &#2479;&#2470;&#2495; &#2438;&#2474;&#2472;&#2494;&#2453;&#2503; &#2447;&#2439; &#2471;&#2480;&#2467;&#2503;&#2480; &#2453;&#2507;&#2472;&#2451; &#2453;&#2494;&#2460; &#2453;&#2480;&#2468;&#2503; &#2476;&#2482;&#2494; &#2489;&#2479;&#2492; &#2447;&#2476;&#2434; &#2488;&#2503;&#2439; &#2453;&#2494;&#2460;&#2463;&#2495; &#2479;&#2470;&#2495; &#2463;&#2474; &#2478;&#2509;&#2479;&#2494;&#2472;&#2503;&#2460;&#2478;&#2503;&#2472;&#2509;&#2463; &#2453;&#2480;&#2509;&#2468;&#2499;&#2453; &#2437;&#2472;&#2497;&#2478;&#2507;&#2470;&#2495;&#2468; &#2472;&#2494; &#2489;&#2479;&#2492; &#2468;&#2476;&#2503; &#2468;&#2494; &#2437;&#2476;&#2495;&#2482;&#2478;&#2509;&#2476;&#2503; &#2463;&#2474; &#2478;&#2509;&#2479;&#2494;&#2472;&#2503;&#2460;&#2478;&#2503;&#2472;&#2509;&#2463;&#2503;&#2480; &#2453;&#2494;&#2459;&#2503; &#2480;&#2495;&#2474;&#2507;&#2480;&#2509;&#2463;&#2503;&#2480; &#2478;&#2494;&#2471;&#2509;&#2479;&#2478;&#2503; &#2460;&#2494;&#2472;&#2494;&#2468;&#2503; &#2489;&#2476;&#2503;&#2404; &nbsp;&#2488;&#2494;&#2471;&#2494;&#2480;&#2467;&#2468;, &#2447;&#2439; &#2471;&#2480;&#2467;&#2503;&#2480; &#2453;&#2494;&#2460;&#2503;&#2480; &#2453;&#2509;&#2487;&#2503;&#2468;&#2509;&#2480;&#2503;, &#2488;&#2434;&#2486;&#2509;&#2482;&#2495;&#2487;&#2509;&#2463; &#2474;&#2503;&#2460;&#2503;&#2480; &#2465;&#2494;&#2472; &#2474;&#2494;&#2486;&#2503; &ldquo;Authorized by top management&rdquo; &#2447;&#2439; &#2471;&#2480;&#2467;&#2503;&#2480; &#2447;&#2453;&#2463;&#2495; &#2482;&#2503;&#2454;&#2494; &#2470;&#2503;&#2454;&#2468;&#2503; &#2474;&#2494;&#2480;&#2476;&#2503;&#2472; &#2479;&#2470;&#2495; &#2488;&#2503;&#2463;&#2495; &#2463;&#2474; &#2478;&#2509;&#2479;&#2494;&#2472;&#2503;&#2460;&#2478;&#2503;&#2472;&#2509;&#2463; &#2453;&#2480;&#2509;&#2468;&#2499;&#2453; &#2437;&#2472;&#2497;&#2478;&#2507;&#2470;&#2495;&#2468; &#2489;&#2479;&#2492;&#2404;</span></p><p class=\"c1 c3\"><span class=\"c0\"></span></p><p class=\"c1\"><span class=\"c0\">&#2447;&#2439;&#2471;&#2480;&#2467;&#2503;&#2480; &#2437;&#2472;&#2472;&#2497;&#2478;&#2507;&#2470;&#2495;&#2468; &#2453;&#2494;&#2460;&#2503;&#2480; &#2453;&#2509;&#2487;&#2503;&#2468;&#2509;&#2480;&#2503; &#2438;&#2474;&#2472;&#2495; &#2479;&#2470;&#2495; &#2480;&#2495;&#2474;&#2507;&#2480;&#2509;&#2463; &#2472;&#2494; &#2453;&#2480;&#2503;&#2472;, &#2468;&#2494;&#2489;&#2482;&#2503; &#2488;&#2503;&#2439; &#2453;&#2494;&#2460;&#2503;&#2480; &#2460;&#2472;&#2509;&#2479;&#2503; &#2438;&#2474;&#2472;&#2495; &#2479;&#2503;&#2439; &#2488;&#2478;&#2527; &#2476;&#2509;&#2479;&#2527; &#2453;&#2480;&#2476;&#2503;&#2472; &#2468;&#2494; &#2455;&#2509;&#2480;&#2489;&#2472;&#2479;&#2507;&#2455;&#2509;&#2479; &#2476;&#2482;&#2503; &#2476;&#2495;&#2476;&#2503;&#2458;&#2495;&#2468; &#2489;&#2476;&#2503; &#2472;&#2494; &#2447;&#2476;&#2434; &#2447;&#2439; &#2471;&#2480;&#2467;&#2503;&#2480; &#2437;&#2472;&#2472;&#2497;&#2478;&#2507;&#2470;&#2495;&#2468; &#2453;&#2494;&#2460;&#2503; &#2460;&#2524;&#2495;&#2468; &#2469;&#2494;&#2453;&#2494;&#2480; &#2460;&#2472;&#2509;&#2479;&#2503; &#2438;&#2474;&#2472;&#2494;&#2480; &#2474;&#2494;&#2480;&#2475;&#2480;&#2509;&#2478;&#2503;&#2472;&#2509;&#2488; &#2488;&#2509;&#2453;&#2507;&#2480;&#2503; &#2472;&#2503;&#2455;&#2503;&#2463;&#2495;&#2477; &#2474;&#2527;&#2503;&#2472;&#2509;&#2463; &#2479;&#2507;&#2455; &#2489;&#2476;&#2503;&#2404;</span></p><p class=\"c1 c3\"><span class=\"c0\"></span></p></body></html>`\r\n\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} className=\"subtask-timer-confirmation--modal\">\r\n        <div className='subtask-timer-confirmation--panel'>\r\n           <div className=\"subtask-timer-confirmation--content\">\r\n            <div dangerouslySetInnerHTML={{__html: text}} />\r\n\r\n            \r\n                {/* <h4 className='mb-3'> Do You Understand The Following Things? </h4>\r\n                \r\n                <ol type='A'>\r\n                    <li> Your job is not to decide what the look and feel of a website will be based on a few reference websites. </li>\r\n                    <li>Your job is not to research a theme based on an instruction shared by the PM.</li>\r\n                    <li>Your job is not to research a plugin based on a problem shared by PM.</li>\r\n                    <li>Your job is not to choose the color scheme of a website.</li>\r\n                    <li>Your job is not to talk to the support for example the Shopify support team, theme support, plugin support and any other support for any solution.</li>\r\n                    <li>Your job is not to create the training videos for the client after the completion of a project.</li>\r\n                    <li>You understand that all your hours have to be logged/tracked, and you will be questioned if you don’t log at least 7 hours for any reason.</li>\r\n                </ol>\r\n\r\n\r\n                <p>In general, anything that has to do with requirements define (of any sort) has to be done by the project manager. Your job is to execute the work based on the defined requirements. </p> \r\n\r\n                <p>If for any reason, project manager needs your help for any of those things, he will have to create a separate task for each of them and those tasks have to be authorized by the top management mandatorily. Report immediately if you are asked to do any of these and if it wasn’t authorized by top management. You should see a text like “Authorized by top management” on the right side of the task title if it was authorized.</p>\r\n                \r\n                <p> In case, you don’t report, the extra time taken for these will be considered as your lacking (as they will remain unaccountable) and you will receive negative performance score.”</p>\r\n                */}\r\n                <div className='d-flex align-items-center'>\r\n                     <Button \r\n                        onClick={onConfirm} \r\n                        className='ml-auto'\r\n                        disabled={!buttonVisible}\r\n                      > \r\n                        Yes, I Fully Understand This {!buttonVisible && `(${countDown})`}\r\n                      </Button> \r\n                </div> \r\n           </div>\r\n        </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default StartTimerConfirmationModal","import * as React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setLessTrackModal } from \"../../../../services/features/subTaskSlice\";\r\nimport Modal from \"../../../components/Modal\";\r\nimport Loader from \"../../../components/Loader\";\r\n\r\nconst StopTimerConfrimationPopUp = React.lazy(() =>\r\n    import(\"./StopTimerConfrimationPopUp\")\r\n);\r\n\r\nconst LessTrackTimerModal = ({ stopTimer, startTimer }) => {\r\n    const { task, lessTrackModal, lessTrackModalFor } = useSelector(\r\n        (s) => s.subTask\r\n    );\r\n    const dispatch = useDispatch();\r\n\r\n    const close = () => {\r\n        dispatch(setLessTrackModal({ show: false, type: \"\" }));\r\n    };\r\n\r\n    // temporarily stop timer now\r\n    const stopTimerTemporarily = () => {\r\n        if (lessTrackModalFor === \"STOP_TIMER\") {\r\n            stopTimer();\r\n        }\r\n\r\n        if (lessTrackModalFor === \"START_TIMER\") {\r\n            startTimer();\r\n        }\r\n\r\n        close();\r\n    };\r\n    // lessTrackModal\r\n    return (\r\n        <Modal isOpen={lessTrackModal} className=\"sp1_single_task--modal\">\r\n            <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n                <React.Suspense\r\n                    fallback={\r\n                        <div className=\"sp1_single_task--modal-panel\">\r\n                            <Loader />\r\n                        </div>\r\n                    }\r\n                >\r\n                    <StopTimerConfrimationPopUp\r\n                        handleTemporarilyStopTimer={stopTimerTemporarily}\r\n                        close={close}\r\n                    />\r\n                </React.Suspense>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default LessTrackTimerModal;\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport Button from \"../../components/Button\";\r\nimport StartTimerConfirmationModal from \"./StartTimerConfirmationModal\";\r\nimport {\r\n    useLazyGetTaskDetailsQuery,\r\n    useLazyGetUserTrackTimeQuery,\r\n    useStartTimerApiMutation,\r\n    useStopTimerApiMutation\r\n} from \"../../../services/api/SingleTaskPageApi\";\r\nimport { CompareDate } from \"../../../utils/dateController\";\r\nimport _ from \"lodash\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setLessTrackModal, setTaskStatus } from \"../../../services/features/subTaskSlice\";\r\nimport LessTrackTimerModal from \"./stop-timer/LessTrackTimerModal\";\r\nimport { User } from \"../../../utils/user-details\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\n// component\r\nconst TimerControl = ({ task, timerStart, setTimerStart, auth }) => {\r\n    const [timerId, setTimerId] = useState(null);\r\n    const [seconds, setSeconds] = useState(0);\r\n    const [isOpenConfirmationModal, setIsOpenConfirmationModal] =\r\n        useState(false); \r\n\r\n    const dispatch = useDispatch(); \r\n    const dayjs = new CompareDate(); \r\n    const loggedUser = new User(window?.Laravel?.user);\r\n    const navigate = useNavigate();\r\n\r\n\r\n    const timerStatus = task?.ranningTimer?.status;\r\n    const taskRunning = useMemo(() => timerStatus, [timerStatus])\r\n\r\n\r\n\r\n    // check timer is already running\r\n    useEffect(() => {\r\n        if (taskRunning === \"running\") {\r\n            let serverTime = task?.ranningTimer?.time;\r\n            let localTime = dayjs.dayjs().unix();\r\n            let timer = localTime - serverTime;\r\n            setTimerStart(true);\r\n            setSeconds(timer);\r\n            setTimerId(task?.ranningTimer?.id);\r\n        }\r\n    }, [taskRunning]);\r\n\r\n    //   timer control\r\n    useEffect(() => {\r\n        let interval = null;\r\n        if (timerStart) {\r\n            //   interval for timer\r\n            interval = setInterval(() => {\r\n                setSeconds((s) => s + 1);\r\n            }, 1000);\r\n        } else clearInterval(interval); // clear interval\r\n        return () => clearInterval(interval); // clear interval\r\n    }, [timerStart]);\r\n\r\n    // time formating\r\n    const timer = () => {\r\n        const hours = Math.floor(seconds / 3600);\r\n        const minutes = Math.floor((seconds % 3600) / 60);\r\n        const s = Math.floor((seconds % 3600) % 60);\r\n\r\n        // format\r\n        let sec = s < 10 ? `0${s}` : s;\r\n        let min = minutes < 10 ? `0${minutes}` : minutes;\r\n        let hr = hours < 10 ? `0${hours}` : hours;\r\n        return `${hr}:${min}:${sec}`;\r\n    };\r\n\r\n    // tostar\r\n    const Toast = Swal.mixin({\r\n        toast: true,\r\n        position: \"top-end\",\r\n        showConfirmButton: false,\r\n        timer: 5000,\r\n        timerProgressBar: true,\r\n    });\r\n\r\n    /******** Start timer control *********/\r\n\r\n    // timer start first timer : checking api\r\n    const [\r\n        startTimerFirstCheck,\r\n        { isFetching: startTimerFirstCheckIsFetching },\r\n    ] = useLazyGetTaskDetailsQuery();\r\n\r\n    // start timer api slice\r\n    const [startTimerApi, { isLoading: timerStartStatusIsLoading }] =\r\n        useStartTimerApiMutation();\r\n\r\n    // stop timer api slice\r\n    const [stopTimerApi, { isLoading: timerStopStatusIsLoading }] =\r\n        useStopTimerApiMutation();\r\n    \r\n    \r\n\r\n    // timer start control\r\n    const startTimerControl = () => {\r\n        setIsOpenConfirmationModal(false);\r\n        startTimerApi({\r\n            task_id: task?.id,\r\n            project_id: task?.projectId,\r\n            memo: task?.title,\r\n            user_id: window?.Laravel?.user?.id,\r\n        })\r\n            .unwrap()\r\n            .then((res) => {\r\n                  if (res?.status === \"success\" || res?.status === 200) {\r\n                    setTimerStart(true);\r\n                    setTimerId(res?.id);\r\n                    dispatch(setTaskStatus(res?.task_status));\r\n                    Toast.fire({\r\n                        icon: 'success',\r\n                        title: _.startCase(res?.message),\r\n                    });\r\n                } else {\r\n                    Toast.fire({\r\n                        icon: 'warning',\r\n                        title: _.startCase(res?.message),\r\n                    });\r\n                }\r\n            })\r\n            .catch((err) => { \r\n                if(err.status === 400){\r\n                    if(err.data.acknowledgement_submitted === false){\r\n                        Swal.fire({\r\n                            title:  \"You have not meet last day's minimum hour count. Please share the reasons!\",\r\n                            showDenyButton: true,\r\n                            confirmButtonText: 'Yes',\r\n                            denyButtonText: `Close`,\r\n                            icon: 'warning'\r\n                          }).then((result) => {\r\n                            /* Read more about isConfirmed, isDenied below */\r\n                            if (result.isConfirmed) {\r\n                                dispatch(setLessTrackModal({\r\n                                    show: true, \r\n                                    type: 'START_TIMER', \r\n                                    date: dayjs.dayjs(err?.data?.date).format(\"MMM DD, YYYY\"),\r\n                                }))\r\n                            } \r\n                          })\r\n                     }\r\n                     \r\n                     else if(err.data.daily_submission_submitted === false){\r\n                        Swal.fire({\r\n                            title:  \"You didn't submit last day daily submission\",\r\n                            showDenyButton: true,\r\n                            confirmButtonText: 'Yes',\r\n                            denyButtonText: `Close`,\r\n                            icon: 'warning'\r\n                          }).then((result) => {\r\n                            /* Read more about isConfirmed, isDenied below */\r\n                            if (result.isConfirmed) {\r\n                                navigate(`?modal=daily-submission&date_type=last-date`)\r\n                            } \r\n                          })\r\n                     }\r\n    \r\n                } \r\n            });\r\n    };\r\n\r\n    // start timer function\r\n    const startTimer = (e) => {\r\n        e.preventDefault();\r\n        \r\n        startTimerFirstCheck(\r\n            `/${task?.id}/json?mode=developer_first_task_check&project_id=${task?.projectId}`\r\n        )\r\n            .unwrap()\r\n            .then((res) => {\r\n                if (res.is_first_task) {\r\n                    setIsOpenConfirmationModal(true);\r\n                } else startTimerControl();\r\n            })\r\n    };\r\n\r\n    \r\n\r\n    /*********** End of Start Timer control ***************/\r\n\r\n    // stop timer\r\n    const stopTimer = () => { \r\n        //navigate(`/account/tasks/${task?.id}?modal=daily-submission&trigger=stop-button`); \r\n        stopTimerApi({ timeId: timerId })\r\n            .unwrap()\r\n            .then((res) => {\r\n                if (res?.status === \"success\" || res?.status === 200) {\r\n                    Toast.fire({\r\n                        icon: \"success\",\r\n                        title: _.startCase(res?.message),\r\n                    });\r\n                    setTimerStart(false);\r\n                    setSeconds(0);\r\n                    timerId(null);\r\n                } else {\r\n                    Toast.fire({\r\n                        icon: 'warning',\r\n                        title: _.startCase(res?.message),\r\n                    });\r\n                }\r\n            });\r\n    }; \r\n    const [getUserTrackTime, {\r\n        isFetching: trackTimerFetcing\r\n    }] = useLazyGetUserTrackTimeQuery();\r\n\r\n    // handle stop timer \r\n    const handleStopTimer = () => {\r\n        // fetch data\r\n        getUserTrackTime(loggedUser?.getId())\r\n        .unwrap()\r\n        .then(res => { \r\n            if(res){\r\n                let currentTime = dayjs.dayjs(res.current_time);\r\n                let target = currentTime.set('hour', 16).set('minute', 45).set('second', 0);\r\n                const isSaturday = currentTime.day() === 6;\r\n\r\n                if(isSaturday){\r\n                    target = currentTime.set('hour', 13).set('minute', 0).set('second', 0);\r\n                }\r\n\r\n                let check = dayjs.dayjs(currentTime).isBefore(target);\r\n                let isDev = _.includes([5, 9 , 10], Number(auth?.getRoleId()));\r\n                if(!check && isDev){\r\n                    res.tracked_times < res.target_time ?  dispatch(setLessTrackModal({show: true, type: 'STOP_TIMER', date: 'Today'})) : stopTimer()\r\n                }else{\r\n                    stopTimer();\r\n                }\r\n            }\r\n            \r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    // control loading states...\r\n    useEffect(() => {\r\n        if (startTimerFirstCheckIsFetching || timerStartStatusIsLoading) {\r\n            document.getElementsByTagName(\"body\")[0].style.cursor = \"progress\";\r\n        } else {\r\n            document.getElementsByTagName(\"body\")[0].style.cursor = \"default\";\r\n        }\r\n    }, [startTimerFirstCheckIsFetching, timerStartStatusIsLoading]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {!timerStart ? (\r\n                <React.Fragment>\r\n                    {!timerStartStatusIsLoading &&\r\n                    !startTimerFirstCheckIsFetching ? (\r\n                        <Button\r\n                            variant=\"tertiary\"\r\n                            onClick={startTimer}\r\n                            className=\"d-flex align-items-center btn-outline-dark text-dark\"\r\n                        >\r\n                            <i className=\"fa-solid fa-circle-play\" />\r\n                            <span>Start Timer</span> \r\n                        </Button>\r\n                    ) : (\r\n                        <Button className=\"cursor-processing mr-2\">\r\n                            <div\r\n                                className=\"spinner-border text-white\"\r\n                                role=\"status\"\r\n                                style={{ width: \"18px\", height: \"18px\" }}\r\n                            ></div>\r\n                            Starting...\r\n                        </Button>\r\n                    )}\r\n                    <StartTimerConfirmationModal\r\n                        isOpen={isOpenConfirmationModal}\r\n                        onConfirm={startTimerControl}\r\n                    />\r\n                </React.Fragment>\r\n            ) : (\r\n                <React.Fragment>\r\n                    <Button\r\n                        variant=\"tertiary\"\r\n                        className=\"d-flex align-items-center btn-outline-dark text-dark\"\r\n                    >\r\n                        <i className=\"fa-solid fa-stopwatch\" />\r\n                        <span className=\"d-inline ml-1\">{timer()}</span>\r\n                    </Button>\r\n\r\n                    {/* <StopTimerControl\r\n                        stopTimer={stopTimer}\r\n                        timerStopStatusIsLoading={timerStopStatusIsLoading}\r\n                    /> */}\r\n\r\n                    {\r\n                        trackTimerFetcing ? \r\n                        (\r\n                            <Button className=\"cursor-processing\">\r\n                                <div\r\n                                    className=\"spinner-border text-white\"\r\n                                    role=\"status\"\r\n                                    style={{ width: \"18px\", height: \"18px\" }}\r\n                                />\r\n                                Processing...\r\n                            </Button>\r\n                        ):\r\n\r\n                        !timerStopStatusIsLoading ? (\r\n                            <Button\r\n                                variant=\"tertiary\"\r\n                                onClick={handleStopTimer}\r\n                                className=\"d-flex align-items-center btn-outline-dark text-dark\"\r\n                            >\r\n                                <i className=\"fa-solid fa-pause\" />\r\n                                <span className=\"d-inline ml-1\">Stop Timer</span>\r\n                            </Button>\r\n                        ) : (\r\n                            <Button className=\"cursor-processing\">\r\n                                <div\r\n                                    className=\"spinner-border text-white\"\r\n                                    role=\"status\"\r\n                                    style={{ width: \"18px\", height: \"18px\" }}\r\n                                />\r\n                                Stopping...\r\n                            </Button>\r\n                        )\r\n                    } \r\n                </React.Fragment>\r\n            )}\r\n\r\n\r\n            {/* LessTrackTimerModal */}\r\n            <LessTrackTimerModal stopTimer={stopTimer} startTimer={startTimerControl} />\r\n\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default TimerControl\r\n","import _ from \"lodash\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport CKEditorComponent from \"../../../ckeditor/index\";\r\nimport FileUploader from \"../../../file-upload/FileUploader\";\r\nimport {\r\n    useLazyCheckSubTaskStateQuery,\r\n    useMarkAsCompleteMutation,\r\n} from \"../../../services/api/SingleTaskPageApi\";\r\nimport Button from \"../../components/Button\";\r\nimport Loader from \"../../components/Loader\";\r\nimport Modal from \"../../components/Modal\";\r\nimport SubmitButton from \"../../components/SubmitButton\";\r\n\r\nimport { checkIsURL } from \"../../../utils/check-is-url\";\r\nimport Swal from \"sweetalert2\";\r\n// import Swal from \"sweetalert2\";\r\n\r\nconst MarkAsComplete = ({ task, auth }) => {\r\n    // form data\r\n    const dispatch = useDispatch();\r\n    const [links, setLinks] = useState([\"\"]);\r\n    const [linkErr, setLinkErr] = useState(\"\");\r\n    const [isModalUrl, setIsModalUrl] = useState(false);\r\n    const [files, setFiles] = useState([]);\r\n    const [comment, setComment] = useState(\"\");\r\n    const [commentErr, setCommentErr] = useState(\"\");\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    const [markAsComplete, { isLoading: isSubmitting }] =\r\n        useMarkAsCompleteMutation();\r\n    const [checkSubTaskState, { isFetching }] = useLazyCheckSubTaskStateQuery();\r\n\r\n    const [markAsCompleteModaIsOpen, setMarkAsCompleteModalIsOpen] =\r\n        useState(false);\r\n\r\n    // open modal\r\n    const open = () => {\r\n        navigate(`${location.pathname}?modal=complete-task`);\r\n    };\r\n\r\n    // close modal\r\n    const close = () => {\r\n        navigate(`${location.pathname}`);\r\n    };\r\n\r\n    // const [err, setErr] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const url = new URLSearchParams(location.search);\r\n        if (url.get(\"modal\") === \"complete-task\") {\r\n            setIsModalUrl(true);\r\n        } else {\r\n            setIsModalUrl(false);\r\n        }\r\n    }, [location]);\r\n\r\n    useEffect(() => {\r\n        // const url = new URLSearchParams(location.search);\r\n\r\n        // if (url.get('modal')==='complete-task') {\r\n        if (isModalUrl) {\r\n            if (Number(auth.getRoleId()) === 6) {\r\n                checkSubTaskState(task?.id)\r\n                    .unwrap()\r\n                    .then((res) => {\r\n                        if (res.status === \"true\" || res.status === true) {\r\n                            // const htmlContent = (\r\n                            //     <div className=\"__tostar_modal\">\r\n                            //         <strong>\r\n                            //             You can't complete this task because you\r\n                            //             have some pending subtask?\r\n                            //         </strong>\r\n                            //         <ul className=\"py-1\">\r\n                            //             {res.subtasks.map((el, idx) => (\r\n                            //                 <li\r\n                            //                     key={el.id}\r\n                            //                     style={{\r\n                            //                         listStyle: \"unset\",\r\n                            //                         fontSize: \"13px\",\r\n                            //                     }}\r\n                            //                 >\r\n                            //                     <a\r\n                            //                         href={`/account/tasks/${el.id}`}\r\n                            //                     >\r\n                            //                         {idx + 1}. {el.heading}\r\n                            //                     </a>{\" \"}\r\n                            //                     (\r\n                            //                     <a\r\n                            //                         href={`/account/clients/${el.clientId}`}\r\n                            //                     >\r\n                            //                         {el.client_name}\r\n                            //                     </a>\r\n                            //                     )\r\n                            //                 </li>\r\n                            //             ))}\r\n                            //         </ul>\r\n                            //     </div>\r\n                            // );\r\n                            // toast.warn(htmlContent, {\r\n                            //     position: \"top-center\",\r\n                            //     icon: false,\r\n                            // });\r\n                            Swal.fire({\r\n                                icon:'warning',\r\n                                title:`You can't complete this task because you\r\n                                have some pending subtask?`\r\n                            })\r\n                            close();\r\n                        } else {\r\n                            setMarkAsCompleteModalIsOpen(true);\r\n                        }\r\n                    });\r\n            } else {\r\n                setMarkAsCompleteModalIsOpen(true);\r\n            }\r\n        } else {\r\n            setMarkAsCompleteModalIsOpen(false);\r\n        }\r\n        // }\r\n        // else{\r\n        //     setMarkAsCompleteModalIsOpen(false);\r\n        // }\r\n    }, [isModalUrl]);\r\n\r\n    // handle editor change\r\n    const handleEditorChange = (e, editor) => {\r\n        const data = editor.getData();\r\n        setComment(data);\r\n    };\r\n\r\n    // handle remove link\r\n    const handleRemoveLink = (e, index) => {\r\n        const _links = [...links];\r\n        _links.splice(index, 1);\r\n        setLinks(_links);\r\n    };\r\n\r\n    // handle link change\r\n    const handleOnLinkInputChange = (e, index) => {\r\n        const _links = [...links];\r\n        (_links[index] = e.target.value), setLinks(_links);\r\n    };\r\n\r\n    // check validation\r\n    const isValid = () => {\r\n        let valid = true;\r\n        if (!_.size(links) || links[0] === \"\") {\r\n            setLinkErr(\"You must provide at least one link to your work\");\r\n            toast.warn(\"You must provide at least one link to your work\");\r\n            valid = false;\r\n        }\r\n\r\n        if (_.size(links)) {\r\n            _.forEach(links, (link) => {\r\n                if (!checkIsURL(link)) {\r\n                    toast.warn(\"Please provide a valid url\");\r\n                    setLinkErr(\"Please provide a valid url\");\r\n                    valid = false;\r\n                }\r\n            });\r\n        }\r\n\r\n        if (comment === \"\") {\r\n            setCommentErr(\"Please describe what you've done !\");\r\n            toast.warn(\"Please describe what you've done!\");\r\n            valid = false;\r\n        }\r\n\r\n        return valid;\r\n    };\r\n\r\n    // handle submit\r\n    const handleSubmit = (e) => {\r\n        const formData = new FormData();\r\n        formData.append(\"text\", comment);\r\n        formData.append(\"user_id\", auth?.getId());\r\n        formData.append(\"task_id\", task?.id);\r\n        links.map((link) => formData.append(\"link[]\", link));\r\n        files?.map((file) => formData.append(\"file[]\", file));\r\n        formData.append(\r\n            \"_token\",\r\n            document\r\n                .querySelector(\"meta[name='csrf-token']\")\r\n                .getAttribute(\"content\")\r\n        );\r\n\r\n        if (isValid()) {\r\n            markAsComplete(formData)\r\n                .unwrap()\r\n                .then((res) => {\r\n                    // const Toast = Swal.mixin({\r\n                    //     toast: true,\r\n                    //     position: 'top-end',\r\n                    //     showConfirmButton: false,\r\n                    //     timer: 3000,\r\n                    //     timerProgressBar: true,\r\n                    // })\r\n\r\n                    // Toast.fire({\r\n                    //     icon: 'success',\r\n                    //     title: 'Task submitted successfully'\r\n                    // })\r\n                    const Toast = Swal.mixin({\r\n                        toast: true,\r\n                        position: \"top-end\",\r\n                        showConfirmButton: false,\r\n                        timer: 3000,\r\n                        timerProgressBar: true,\r\n                    });\r\n\r\n                    Toast.fire({\r\n                        icon: \"success\",\r\n                        title: \"Task submitted successfully\",\r\n                    });\r\n                    close();\r\n                })\r\n                .catch((err)=>{\r\n                    close();\r\n                    console.log(err);\r\n                })\r\n                .finally(()=>{\r\n                  close();\r\n                });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                variant=\"tertiary\"\r\n                onClick={open}\r\n                className=\"d-flex align-items-center btn-outline-dark text-dark\"\r\n            >\r\n                {isFetching ? (\r\n                    <Loader title=\"Processing...\" />\r\n                ) : (\r\n                    <i className=\"fa-solid fa-check\" />\r\n                )}\r\n                <span className=\"d-inline ml-1\">\r\n                    {\" \"}\r\n                    {isFetching ? \"\" : \"Mark As Complete\"}\r\n                </span>\r\n            </Button>\r\n\r\n            <Modal\r\n                isOpen={markAsCompleteModaIsOpen}\r\n                className=\"sp1_mark-as--modal\"\r\n            >\r\n                <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n                    <div className=\"sp1_mark-as--modal-panel\">\r\n                        {/* heading bar */}\r\n                        <div className=\"sp1_mark-as--modal-heading\">\r\n                            <h6 className=\"mb-0\">Submit Task</h6>\r\n\r\n                            <Button aria-label=\"closeModal\" onClick={close}>\r\n                                <i className=\"fa-solid fa-xmark\" />\r\n                            </Button>\r\n                        </div>\r\n\r\n                        {/* body */}\r\n                        <div\r\n                            className=\"sp1_mark-as--modal-body px-3\"\r\n                            style={{ overflow: \"unset\" }}\r\n                        >\r\n                            <form>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"exampleFormControlInput1\">\r\n                                        Submit Links What You've Done\r\n                                        <sup>*</sup>\r\n                                        <span\r\n                                            className=\"ml-2\"\r\n                                            data-toggle=\"tooltip\"\r\n                                            data-placement=\"top\"\r\n                                            title=\"Submit Links What You've Done\"\r\n                                            data-boundary=\"window\"\r\n                                            style={{ cursor: \"pointer\" }}\r\n                                        >\r\n                                            <i className=\"fa-regular fa-circle-question\" />\r\n                                        </span>\r\n                                    </label>\r\n                                    {links?.map((link, i) => (\r\n                                        <div\r\n                                            key={i}\r\n                                            className=\"mark-as-compeleted-link mb-2\"\r\n                                        >\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control py-2\"\r\n                                                id=\"exampleFormControlInput1\"\r\n                                                placeholder=\"--\"\r\n                                                value={link}\r\n                                                onChange={(e) =>\r\n                                                    handleOnLinkInputChange(\r\n                                                        e,\r\n                                                        i\r\n                                                    )\r\n                                                }\r\n                                            />\r\n\r\n                                            {links?.length > 1 && (\r\n                                                <button\r\n                                                    onClick={(e) =>\r\n                                                        handleRemoveLink(e, i)\r\n                                                    }\r\n                                                >\r\n                                                    <i className=\"fa-regular fa-trash-can\"></i>\r\n                                                </button>\r\n                                            )}\r\n                                        </div>\r\n                                    ))}\r\n\r\n                                    {linkErr && (\r\n                                        <small\r\n                                            id=\"emailHelp\"\r\n                                            class=\"form-text text-danger\"\r\n                                        >\r\n                                            {linkErr}\r\n                                        </small>\r\n                                    )}\r\n\r\n                                    <button\r\n                                        className=\"mt-2 d-flex align-items-center bg-transparent\"\r\n                                        style={{ gap: \"10px\" }}\r\n                                        onClick={(e) => {\r\n                                            e.preventDefault();\r\n                                            setLinks((prev) => [...prev, \"\"]);\r\n                                        }}\r\n                                    >\r\n                                        <i className=\"fa-solid fa-circle-plus\" />\r\n                                        Add Another Link\r\n                                    </button>\r\n                                </div>\r\n\r\n                                {/* upload files */}\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"exampleFormControlInput1\">\r\n                                        Attachments\r\n                                        <span\r\n                                            className=\"ml-2\"\r\n                                            data-toggle=\"tooltip\"\r\n                                            data-placement=\"top\"\r\n                                            title=\"Attachment\"\r\n                                            data-boundary=\"window\"\r\n                                            style={{ cursor: \"pointer\" }}\r\n                                        >\r\n                                            <i className=\"fa-regular fa-circle-question\" />\r\n                                        </span>\r\n                                    </label>\r\n                                    <FileUploader\r\n                                        files={files}\r\n                                        setFiles={setFiles}\r\n                                    >\r\n                                        <FileUploader.Input />\r\n                                        <FileUploader.SelectedFiles>\r\n                                            {({ previews, onDelete }) =>\r\n                                                Array.from(previews)?.map(\r\n                                                    (p, i) => (\r\n                                                        <FileUploader.Preview\r\n                                                            key={i}\r\n                                                            id={i}\r\n                                                            fileName={p.name}\r\n                                                            previewUrl={\r\n                                                                p.preview\r\n                                                            }\r\n                                                            fileType={p.type}\r\n                                                            onRemove={onDelete}\r\n                                                        />\r\n                                                    )\r\n                                                )\r\n                                            }\r\n                                        </FileUploader.SelectedFiles>\r\n                                    </FileUploader>\r\n                                </div>\r\n                                {/* End Upload files */}\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label\r\n                                        htmlFor=\"exampleFormControlInput1\"\r\n                                        style={{ maxWidth: \"95%\" }}\r\n                                    >\r\n                                        Mention clearly if anything asked in the\r\n                                        instruction couldn't be done or if there\r\n                                        is anything else your reporting boss\r\n                                        should know while approving or rejecting\r\n                                        this task<sup>*</sup>\r\n                                        <span\r\n                                            className=\"ml-2\"\r\n                                            data-toggle=\"tooltip\"\r\n                                            data-placement=\"top\"\r\n                                            title=\"Describe What You've Done\"\r\n                                            data-boundary=\"window\"\r\n                                            style={{ cursor: \"pointer\" }}\r\n                                        >\r\n                                            <i className=\"fa-regular fa-circle-question\" />\r\n                                        </span>\r\n                                    </label>\r\n\r\n                                    <div className=\"ck-editor-holder stop-timer-options\">\r\n                                        <CKEditorComponent\r\n                                            onChange={handleEditorChange}\r\n                                        />\r\n                                    </div>\r\n                                    {commentErr && (\r\n                                        <small\r\n                                            id=\"emailHelp\"\r\n                                            class=\"form-text text-danger\"\r\n                                        >\r\n                                            {commentErr}\r\n                                        </small>\r\n                                    )}\r\n                                </div>\r\n\r\n                                <div className=\"mt-3 d-flex align-items-center\">\r\n                                    <Button\r\n                                        variant=\"tertiary\"\r\n                                        className=\"ml-auto mr-2\"\r\n                                        onClick={close}\r\n                                    >\r\n                                        Close\r\n                                    </Button>\r\n                                    <SubmitButton\r\n                                        onClick={handleSubmit}\r\n                                        isLoading={isSubmitting}\r\n                                        title=\"Submit\"\r\n                                    />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MarkAsComplete;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport CKEditorComponent from \"../../../../ckeditor\";\r\nimport { useRevision } from \"../../../../hooks/useRevision\";\r\nimport { useCreateRevisionMutation } from \"../../../../services/api/SingleTaskPageApi\";\r\nimport Button from \"../../../components/Button\";\r\nimport SubmitButton from \"../../../components/SubmitButton\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst RevisionCreationModal = ({ close, task, auth }) => {\r\n    const [reason, setReason] = useState(null);\r\n    const [reasonError, setReasonError] = useState(\"\");\r\n    const [comment, setComment] = useState(\"\");\r\n    const [commentError, setCommentError] = useState(\"\");\r\n    const [isDeniable, setIsDeniable] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const {\r\n        getLeadDeveloperAcknowladgementOptions,\r\n        getProjectManagerAcknowladgementOptions,\r\n    } = useRevision();\r\n    const { pathname } = useLocation();\r\n    const navigate = useNavigate();\r\n    // console.log({pathname});\r\n\r\n    const role = auth.getRoleId();\r\n\r\n    const revisionOptions =\r\n        (role === 1 || role === 4 || role === 8)\r\n            ? getProjectManagerAcknowladgementOptions()\r\n            : getLeadDeveloperAcknowladgementOptions();\r\n\r\n    const [createRevision, { isLoading }] = useCreateRevisionMutation();\r\n\r\n    // radio button change\r\n    const handleChange = (value) => {\r\n        setReason(value);\r\n    };\r\n\r\n    // editor change text\r\n    const handleEditorTextChange = (e, editor) => {\r\n        const data = editor.getData();\r\n        setComment(data);\r\n    };\r\n\r\n    // validation\r\n    const validate = () => {\r\n        let errorCount = 0;\r\n\r\n        if (comment === \"\") {\r\n            errorCount++;\r\n            setCommentError(\r\n                \"You have to explain the revision in details, so that lead developer/developer can understand where they need to work.\"\r\n            );\r\n        }\r\n\r\n        if (!reason) {\r\n            errorCount++;\r\n            setReasonError(\"You have to select a reason from above options\");\r\n        }\r\n\r\n        return errorCount === 0;\r\n    };\r\n\r\n    // handle submission\r\n    const handleSubmission = (e) => {\r\n        e.preventDefault();\r\n\r\n        const data = {\r\n            task_id: task?.id,\r\n            user_id: auth?.id,\r\n            revision_acknowledgement: reason?.revision ?? \"\",\r\n            acknowledgement_id: reason?.id,\r\n            comment,\r\n            is_deniable: reason?.isDeniable ?? false,\r\n        };\r\n\r\n        if (validate()) {\r\n            createRevision(data)\r\n                .unwrap()\r\n                .then((res) => {\r\n                    const Toast = Swal.mixin({\r\n                        toast: true,\r\n                        position: \"top-end\",\r\n                        showConfirmButton: false,\r\n                        timer: 3000,\r\n                        timerProgressBar: true,\r\n                    });\r\n\r\n                    Toast.fire({\r\n                        icon: \"success\",\r\n                        title: \"Task submitted for Revision successfully\",\r\n                    });\r\n                    navigate(`${pathname}`);\r\n                    close();\r\n                })\r\n                .catch((err) => console.log(err));\r\n        } else {\r\n            const Toast = Swal.mixin({\r\n                toast: true,\r\n                position: \"top-end\",\r\n                showConfirmButton: false,\r\n                timer: 3000,\r\n                timerProgressBar: true,\r\n            });\r\n\r\n            Toast.fire({\r\n                icon: \"error\",\r\n                title: \"Your forgot to fill up some required fields\",\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div\r\n                className=\"sp1_single_task--modal-panel\"\r\n                style={{ maxWidth: \"550px\" }}\r\n            >\r\n                <div className=\"border-bottom pb-2 px-3 mb-3 d-flex align-items-center justify-content-between\">\r\n                    <div className=\"font-weight-bold f-14\">\r\n                        Revision - Task: {task?.id}#\r\n                        {task?.title || task?.heading}\r\n                    </div>\r\n                    <Button onClick={close} className=\"\">\r\n                        <i className=\"fa-solid fa-xmark\" />\r\n                    </Button>\r\n                </div>\r\n\r\n                <form className=\"px-3\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                            Select Reason for Revision\r\n                            <sup className=\"f-16\">*</sup> :\r\n                        </label>\r\n                        <div className=\"px-3\">\r\n                            {revisionOptions.map((option) => (\r\n                                <div\r\n                                    key={option.id}\r\n                                    className=\"form-check d-flex align-items-start mb-2\"\r\n                                >\r\n                                    <input\r\n                                        className=\"form-check-input mr-2\"\r\n                                        type=\"radio\"\r\n                                        name=\"exampleRadios\"\r\n                                        id={option.id}\r\n                                        required={true}\r\n                                        onChange={() => handleChange(option)}\r\n                                        value={option.revision}\r\n                                        style={{\r\n                                            width: \"16px\",\r\n                                            height: \"16px\",\r\n                                            marginTop: \"3px\",\r\n                                        }}\r\n                                    />\r\n                                    <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor={option.id}\r\n                                        style={{ marginBottom: \"3px\" }}\r\n                                    >\r\n                                        {option.revision}\r\n                                    </label>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        {reasonError && (\r\n                            <small\r\n                                id=\"emailHelp\"\r\n                                className=\"form-text text-danger\"\r\n                            >\r\n                                {reasonError}\r\n                            </small>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                            Explain or Comment<sup className=\"f-16\">*</sup> :\r\n                        </label>\r\n                        <div className=\"ck-editor-holder\">\r\n                            <CKEditorComponent\r\n                                onChange={handleEditorTextChange}\r\n                            />\r\n                        </div>\r\n                        {commentError && (\r\n                            <small\r\n                                id=\"emailHelp\"\r\n                                className=\"form-text text-danger\"\r\n                            >\r\n                                {commentError}\r\n                            </small>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div>\r\n                        <div className=\"mt-3 d-flex align-items-center\">\r\n                            <Button\r\n                                onClick={close}\r\n                                variant=\"tertiary\"\r\n                                className=\"ml-auto mr-2\"\r\n                            >\r\n                                Close\r\n                            </Button>\r\n                            <SubmitButton\r\n                                title=\"Submit\"\r\n                                onClick={handleSubmission}\r\n                                isLoading={isLoading}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default RevisionCreationModal;\r\n","import React, {useState, lazy, Suspense} from 'react'\r\nimport Button from '../../../components/Button' \r\nimport Modal from '../../../components/Modal';\r\nimport { SingleTask } from '../../../../utils/single-task';\r\nimport RevisionCreationModal from './RevisionCreationModal';\r\n\r\nconst RevisionControl = ({task, auth}) => {\r\n    const [revisionModal, setRevisionModal] = useState(false);\r\n    const singleTask = new SingleTask(task)\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <Button\r\n            variant='tertiary'\r\n            onClick={() => setRevisionModal(true)}\r\n            className='d-flex align-items-center sp1-st-revision-btn sp1-st-revision-btn'\r\n        >\r\n            <i className=\"fa-solid fa-plus-minus\" />\r\n            <span className=\"d-inline ml-1\">Need Revision</span>\r\n        </Button> \r\n\r\n        <Modal isOpen={revisionModal} className=\"sp1_single_task--modal\">\r\n            <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n                <RevisionCreationModal auth={auth} task={singleTask} close={() => setRevisionModal(false)} />\r\n            </div>\r\n        </Modal> \r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default RevisionControl\r\n","import React, { useState } from \"react\";\r\nimport Modal from \"../../../components/Modal\";\r\nimport Button from \"../../../components/Button\";\r\nimport CKEditorComponent from \"../../../../ckeditor\";\r\nimport SubmitButton from \"../../../components/SubmitButton\";\r\n\r\n// button\r\nexport const AcceptAndContinueButton = ({ isLoading, onClick }) => {\r\n    if (!isLoading) {\r\n        return <Button onClick={onClick}>Accept & Continue</Button>;\r\n    } else {\r\n        <React.Fragment>\r\n            <Button className=\"cursor-processing\">\r\n                <div\r\n                    className=\"spinner-border text-white\"\r\n                    role=\"status\"\r\n                    style={{\r\n                        width: \"18px\",\r\n                        height: \"18px\",\r\n                    }}\r\n                />{\" \"}\r\n                Processing...\r\n            </Button>\r\n        </React.Fragment>;\r\n    }\r\n};\r\n\r\n// component\r\nexport const RevisionAcceptAndContinue = ({\r\n    task,\r\n    revision,\r\n    onSubmit,\r\n    close,\r\n    onNext,\r\n    isSubmitting = false,\r\n}) => {\r\n    const [comment, setComment] = useState(\"\");\r\n    const [err, setErr] = useState(\"\");\r\n\r\n    const handleEditorDataChange = (e, editor) => {\r\n        const data = editor.getData();\r\n        setComment(data);\r\n    };\r\n\r\n    const handleOnSubmit = e => {\r\n        e.preventDefault();\r\n        if(comment !== ''){\r\n            onSubmit({comment});\r\n        }else{\r\n            setErr(\"You have to Explain Why & How Did This Happen!\")\r\n        }\r\n    }\r\n\r\n    const auth = window?.Laravel?.user;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <form action=\"\">\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                        Please Explain Why & How Did This Happen?{\" \"}\r\n                        <sup className=\"f-16 text-red\">*</sup>\r\n                    </label>\r\n                    <div className=\"ck-editor-holder\">\r\n                        <CKEditorComponent onChange={handleEditorDataChange} />\r\n                    </div>\r\n                    {err && <small id=\"emailHelp\" className=\"form-text text-danger\">\r\n                        {err}\r\n                    </small>}\r\n\r\n                    <div className=\"mt-3 d-flex align-items-center\">\r\n                        <Button\r\n                            onClick={close}\r\n                            variant=\"tertiary\"\r\n                            className=\"ml-auto mr-2\"\r\n                        >\r\n                            Back\r\n                        </Button>\r\n\r\n                        {!isSubmitting ? (\r\n                            <React.Fragment>\r\n                                {_.includes([4, 6], auth?.role_id) ? (\r\n                                    <Button onClick={handleOnSubmit}>Next</Button>\r\n                                ): \r\n                                    <SubmitButton\r\n                                        title=\"Submit\" \r\n                                        isLoading={isSubmitting}\r\n                                        onClick={handleOnSubmit}\r\n                                    />\r\n                                }\r\n                            </React.Fragment>\r\n                        ) : (\r\n                            <React.Fragment>\r\n                                <Button className=\"cursor-processing\">\r\n                                    <div\r\n                                        className=\"spinner-border text-white\"\r\n                                        role=\"status\"\r\n                                        style={{\r\n                                            width: \"18px\",\r\n                                            height: \"18px\",\r\n                                        }}\r\n                                    />{\" \"}\r\n                                    Processing...\r\n                                </Button>\r\n                            </React.Fragment>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </React.Fragment>\r\n    );\r\n};\r\n","import React from 'react'\r\nimport Button from '../../../components/Button'\r\nimport { AcceptAndContinueButton } from './RevisionAcceptAndContinue'\r\nimport { Placeholder } from '../../../../global/Placeholder'\r\nimport { User } from '../../../../utils/user-details'\r\nimport SubmitButton from '../../../components/SubmitButton'\r\n\r\nconst RevisionView = ({revision, isLoading, onAccept, onDeny, onContinue, isContinue}) => {\r\n    const auth = new User(window?.Laravel?.user);\r\n\r\n\r\n    const getComment = () => {\r\n        const roleId = auth?.getRoleId();\r\n        if(roleId === 6 || roleId === 9 || roleId === 10){\r\n            return revision?.pm_comment;\r\n        }else {\r\n            return revision?.lead_comment;\r\n        }\r\n    }\r\n    const comment = getComment();\r\n    if(isLoading){\r\n        return (\r\n            <React.Fragment>\r\n                <div>\r\n                    <div>\r\n                        <Placeholder width='450px' className='mb-2' />\r\n                        <Placeholder width='100px' className='mb-3' />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='st_revision_comment mb-4'>\r\n\r\n                    {isLoading &&\r\n                        <div>\r\n                            <Placeholder width='100%' className='mb-2' />\r\n                            <Placeholder width='100%' className='mb-2' />\r\n                            <Placeholder width='30%' className='mb-2' />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }else if(!comment && !isLoading){\r\n        return null;\r\n    }else{\r\n        return (\r\n            <React.Fragment>\r\n                {revision?.revision_acknowledgement &&\r\n                    <div>\r\n                        {!isLoading ? (\r\n                            <p>\r\n                                <span className='font-weight-bold text-danger f-16'>Reason: </span>\r\n                                { revision?.revision_acknowledgement ?? revision?.revision_reason }\r\n                            </p>\r\n                        ): <div>\r\n                            <Placeholder width='450px' className='mb-2' />\r\n                            <Placeholder width='100px' className='mb-3' />\r\n                        </div>}\r\n                    </div>\r\n                }\r\n\r\n                <div className='st_revision_comment'>\r\n                    {!isLoading && <div className='sp1_ck_content' dangerouslySetInnerHTML={{__html: comment}} />}\r\n\r\n                    {isLoading &&\r\n                        <div>\r\n                            <Placeholder width='100%' className='mb-2' />\r\n                            <Placeholder width='100%' className='mb-2' />\r\n                            <Placeholder width='30%' className='mb-2' />\r\n                        </div>\r\n                    }\r\n                </div>\r\n                <div className=\"mt-4 mb-2 d-flex align-items-center\">\r\n                   {!isLoading && (\r\n                        revision?.is_deniable ? (\r\n                            <React.Fragment>\r\n                                <Button onClick={onDeny} variant=\"tertiary\" className=\"ml-auto mr-2\">\r\n                                    Deny & Continue\r\n                                </Button>\r\n\r\n                                <AcceptAndContinueButton\r\n                                    onClick={onAccept}\r\n                                    isLoading={false}\r\n                                />\r\n                            </React.Fragment>\r\n                        ):\r\n                            <React.Fragment>\r\n                                <div className='ml-auto'>\r\n                                <SubmitButton\r\n                                    onClick={onContinue}\r\n                                    variant=\"primary\"\r\n                                    isLoading={isContinue}\r\n                                    title=\"Continue\"\r\n                                />\r\n                                </div>\r\n                            </React.Fragment>\r\n                    )\r\n                   }\r\n                </div>\r\n            </React.Fragment>\r\n          )\r\n    }\r\n\r\n}\r\n\r\nexport default RevisionView\r\n","import React, { useState } from \"react\";\r\nimport Button from \"../../../components/Button\";\r\nimport { Listbox } from \"@headlessui/react\";\r\nimport { HiOutlineSelector } from \"react-icons/hi\";\r\nimport CKEditorComponent from \"../../../../ckeditor\";\r\nimport SubmitButton from \"../../../components/SubmitButton\";\r\nimport _ from \"lodash\";\r\n\r\nconst options = [\r\n    {\r\n        id: \"LDRx10\",\r\n        revision: \"I overlooked a few things while checking\",\r\n        isDeniable: true,\r\n    },\r\n    {\r\n        id: \"LDRx11\",\r\n        revision: \"I couldn't understand a few things in the instruction\",\r\n        isDeniable: false,\r\n    },\r\n];\r\n\r\nconst AssigneeRevisionToDev = ({\r\n    task,\r\n    onBack,\r\n    onSubmit,\r\n    revision,\r\n    type = false,\r\n    isSubmitting = false,\r\n}) => {\r\n    const [reason, setReason] = useState(null);\r\n    const [reasonError, setReasonError] = useState(\"\");\r\n    const [comments, setComments] = useState([]);\r\n    const [commentError, setCommentError] = useState(false);\r\n    const [subtasks, setSubtasks] = useState([]);\r\n    const [subtaskError, setSubtaskError] = useState(\"\");\r\n    const [isDeniable, setIsDeniable] = useState(false);\r\n\r\n    // radio button change\r\n    const handleChange = (value) => {\r\n        setReason(value);\r\n    };\r\n\r\n    // editor change text\r\n    const hanldeEditorTextChange = (e, editor, id) => {\r\n        const data = editor.getData();\r\n        const _comments = [...comments];\r\n\r\n        const index = _comments?.findIndex((d) => d.subtask_id === id);\r\n        if (index === -1) {\r\n            _comments.push({\r\n                id: id,\r\n                subtask_id: id,\r\n                comment: data,\r\n                acknowledgement_id: reason?.id ?? \"\",\r\n            });\r\n        } else {\r\n            _comments[index] = {\r\n                id: id,\r\n                subtask_id: id,\r\n                comment: data,\r\n                acknowledgement_id: reason?.id ?? \"\",\r\n            };\r\n        }\r\n\r\n        setComments([..._comments]);\r\n    };\r\n\r\n    // validation\r\n    const validate = () => {\r\n        let errorCount = 0;\r\n        if (reason === null && revision?.is_deniable && type) {\r\n            errorCount++;\r\n            setReasonError(\"You have to select a reason from below options\");\r\n        }\r\n\r\n        if (_.size(task?.subtask) > 0) {\r\n            if (subtasks.length === 0) {\r\n                errorCount++;\r\n                setSubtaskError(\r\n                    \"You need to selecd at least one sub task to continue.\"\r\n                );\r\n            }\r\n\r\n            if (comments.length === 0 || comments.length !== subtasks.length) {\r\n                errorCount++;\r\n                setCommentError(true);\r\n            }\r\n\r\n            comments?.map((comment) => {\r\n                if (comment?.comment === \"\") {\r\n                    errorCount++;\r\n                    setCommentError(true);\r\n                }\r\n            });\r\n        }\r\n\r\n        return errorCount === 0 ? true : false;\r\n    };\r\n\r\n    // handle submiton\r\n    const handleSubmition = (e) => {\r\n        e.preventDefault();\r\n\r\n        const data = {\r\n            task_id: task?.id,\r\n            reason: reason?.revision,\r\n            comments,\r\n            is_deniable: reason?.isDeniable ?? false,\r\n        };\r\n        if (validate()) {\r\n            onSubmit(data);\r\n        }\r\n    };\r\n\r\n    const onBackButtonClick = (e) => {\r\n        e.preventDefault();\r\n        onBack();\r\n    };\r\n \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <form action=\"\">\r\n                {revision?.is_deniable !== 0 && type ? (\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                            Revision Acknowledgement\r\n                            <sup className=\"f-16\">*</sup> :\r\n                        </label>\r\n                        <div className=\"px-3\">\r\n                            {_.map(options, (revision) => (\r\n                                <div\r\n                                    key={revision.id}\r\n                                    className=\"form-check d-flex align-items-start mb-2\"\r\n                                >\r\n                                    <input\r\n                                        className=\"form-check-input mr-2\"\r\n                                        type=\"radio\"\r\n                                        name=\"exampleRadios\"\r\n                                        id={revision.id}\r\n                                        required={true}\r\n                                        onChange={() => handleChange(revision)}\r\n                                        value={revision.revision}\r\n                                        style={{\r\n                                            width: \"16px\",\r\n                                            height: \"16px\",\r\n                                            marginTop: \"3px\",\r\n                                        }}\r\n                                    />\r\n                                    <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor={revision.id}\r\n                                        style={{ marginBottom: \"3px\" }}\r\n                                    >\r\n                                        {revision.revision}\r\n                                    </label>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        {reasonError && (\r\n                            <small\r\n                                id=\"emailHelp\"\r\n                                className=\"form-text text-danger\"\r\n                            >\r\n                                {reasonError}\r\n                            </small>\r\n                        )}\r\n                    </div>\r\n                ) : null}\r\n\r\n                {task?.taskSubTask?.length > 0 && (\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                            Select SubTask\r\n                            <sup className=\"font-weight-bold f-16\">*</sup> :\r\n                        </label>\r\n                        <SubtaskSelectionMenu\r\n                            task={task}\r\n                            subTasks={subtasks}\r\n                            setSubtasks={setSubtasks}\r\n                        />\r\n                    </div>\r\n                )}\r\n\r\n                {subtasks?.length > 0 && (\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                            Comment:\r\n                        </label>\r\n                        {subtasks.map((s, i) => (\r\n                            <React.Fragment key={s.subtask_id}>\r\n                                <div className=\"form-group\">\r\n                                    <label\r\n                                        htmlFor=\"\"\r\n                                        className=\"font-weight-bold\"\r\n                                    >\r\n                                        {i + 1}. Task: {s?.title}\r\n                                    </label>{\" \"}\r\n                                    <br />\r\n                                    <label className=\"font-weight-bold\">\r\n                                        Write Your Revision\r\n                                        <sup className=\"font-weight-bold f-16\">\r\n                                            *\r\n                                        </sup>\r\n                                        :{\" \"}\r\n                                    </label>\r\n                                    <div className=\"ck-editor-holder\">\r\n                                        <CKEditorComponent\r\n                                            onChange={(e, editor) =>\r\n                                                hanldeEditorTextChange(\r\n                                                    e,\r\n                                                    editor,\r\n                                                    s?.subtask_id\r\n                                                )\r\n                                            }\r\n                                        />\r\n                                    </div>\r\n                                    {commentError && (\r\n                                        <small\r\n                                            id=\"emailHelp\"\r\n                                            className=\"form-text text-danger\"\r\n                                        >\r\n                                            You have to explain the revision in\r\n                                            details, so that Developer can\r\n                                            understand where they need to work.\r\n                                        </small>\r\n                                    )}\r\n                                </div>\r\n                            </React.Fragment>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n\r\n                <div className=\"mt-3 mb-3 d-flex align-items-center\">\r\n                    {/* <Button\r\n                        onClick={onBackButtonClick}\r\n                        variant=\"tertiary\"\r\n                        className=\"ml-auto mr-2\"\r\n                    >\r\n                        Back\r\n                    </Button>\r\n                     */}\r\n                    <NextAndContinueButton\r\n                        onClick={handleSubmition}\r\n                        isLoading={isSubmitting}\r\n                    />\r\n                </div>\r\n            </form>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AssigneeRevisionToDev;\r\n\r\nconst NextAndContinueButton = ({ onClick, isLoading }) => {\r\n    if (!isLoading) {\r\n        return (\r\n            <Button className=\"ml-auto\" onClick={onClick}>\r\n                {\" \"}\r\n                Continue\r\n            </Button>\r\n        );\r\n    } else {\r\n        return (\r\n            <Button className=\"cursor-processing ml-auto\">\r\n                <div\r\n                    className=\"spinner-border text-white mr-2\"\r\n                    role=\"status\"\r\n                    style={{\r\n                        width: \"18px\",\r\n                        height: \"18px\",\r\n                    }}\r\n                />\r\n                Processing...\r\n            </Button>\r\n        );\r\n    }\r\n};\r\n\r\n// sub task selection menu\r\nconst SubtaskSelectionMenu = ({ task, subTasks, setSubtasks }) => {\r\n    return (\r\n        <div className=\"position-relative\">\r\n            <Listbox value={subTasks} onChange={setSubtasks} multiple>\r\n                <Listbox.Button className=\"position-relative w-100 bg-white py-2 pl-2 pr-1 border d-flex align-items-center justify-content-between\">\r\n                    <span\r\n                        className=\"w-100 mr-auto text-left d-flex flex-wrap align-items-center\"\r\n                        style={{ gap: \"6px\" }}\r\n                    >\r\n                        {subTasks?.length > 0\r\n                            ? subTasks.map((s) => (\r\n                                  <span\r\n                                      key={s.subtask_id}\r\n                                      className=\"badge badge-light\"\r\n                                      style={{ fontSize: \"13px\" }}\r\n                                  >\r\n                                      {\" \"}\r\n                                      {s?.title}{\" \"}\r\n                                  </span>\r\n                              ))\r\n                            : \"Select Subtasks\"}\r\n                    </span>\r\n                    <HiOutlineSelector />\r\n                </Listbox.Button>\r\n                <Listbox.Options\r\n                    className=\"position-absolute bg-white p-2 shadow w-100\"\r\n                    style={{\r\n                        zIndex: 10,\r\n                        maxHeight: \"350px\",\r\n                        overflowY: \"auto\",\r\n                    }}\r\n                >\r\n                    {task?.taskSubTask?.length > 0 ? (\r\n                        task?.taskSubTask?.map((s) => (\r\n                            <Listbox.Option\r\n                                value={s}\r\n                                key={s.subtask_id}\r\n                                tabIndex={-1}\r\n                                className={({ active }) =>\r\n                                    active\r\n                                        ? \"task-selection-list-option active\"\r\n                                        : \"task-selection-list-option\"\r\n                                }\r\n                            >\r\n                                {({ selected }) => (\r\n                                    <React.Fragment>\r\n                                        <div>{s.title} <span className=\"badge badge-success\">{s.assigned_to_name}</span></div>\r\n                                        {selected && (\r\n                                            <div>\r\n                                                <i className=\"fa-solid fa-check\"></i>\r\n                                            </div>\r\n                                        )}\r\n                                    </React.Fragment>\r\n                                )}\r\n                            </Listbox.Option>\r\n                        ))\r\n                    ) : (\r\n                        <div>No Data Found</div>\r\n                    )}\r\n                </Listbox.Options>\r\n            </Listbox>\r\n        </div>\r\n    );\r\n};\r\n","import React, {useState} from 'react'\r\nimport Button from '../../../components/Button';\r\nimport CKEditorComponent from '../../../../ckeditor';\r\nimport SubmitButton from '../../../components/SubmitButton';\r\nimport { User } from '../../../../utils/user-details';\r\n\r\n\r\n\r\nconst denyOptions = (type) => {\r\n    switch(type){\r\n        case 'lead_dev': \r\n            return ([\r\n                {id: 'deny1', title: 'The project manager added new things in the instruction which was not part of the original instruction'},\r\n                {id: 'deny2', title: 'The way the project manager is interpreting his original instruction now was not possible to understand from what his writing'}\r\n            ])\r\n        case 'dev':\r\n            return([\r\n                {id: 'deny1', title: 'The lead developer added new things in the instruction which was not part of the original instruction'},\r\n                {id: 'deny2', title: 'The way the lead developer is interpreting his original instruction now was not possible to understand from what his writing'}\r\n            ])\r\n        default: []\r\n    }\r\n}\r\n\r\n\r\n\r\nconst DenyAndContinue = ({onSubmit, isSubmitting, onBack, task}) => {\r\n    const auth = new User(window?.Laravel?.user);\r\n    const [reason, setReason] = useState(\"\");\r\n    const [reasonError, setReasonError] = useState(\"\");\r\n    const [comment, setComment] = useState(\"\");\r\n    const [commentError, setCommentError] = useState(\"\");\r\n    const [err, setErr] = useState(null);\r\n\r\n    const handleEditorDataChange = (e, editor) => {\r\n        const data = editor.getData();\r\n        setComment(data);\r\n    };\r\n\r\n    // radio button change\r\n    const handleChange = (e) => {\r\n        setReason(e.target.value);\r\n    };\r\n\r\n     // validation\r\n     const validate = () => {\r\n        let errorCount = 0;\r\n        \r\n        if(comment === \"\"){\r\n             errorCount++;\r\n             setCommentError('You have to explain the revision in details, so that lead developer/developer can understand where they need to work.')     \r\n        }\r\n \r\n        if(reason === ''){\r\n             errorCount++;\r\n             setReasonError('You have to select a reason from above options')\r\n        }\r\n \r\n        return errorCount === 0; \r\n     }\r\n\r\n\r\n    const handleOnSubmit = e => {\r\n        e.preventDefault();\r\n        if(validate()){\r\n            onSubmit({\r\n                comment,\r\n                denyReason: reason\r\n            });\r\n        }else{\r\n            setErr(\"You have to Explain Why Did You Deny!\")\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    const options = auth?.getRoleId() === 6 ? denyOptions('lead_dev') : denyOptions('dev');\r\n    return (\r\n        <React.Fragment>  \r\n            <form action=\"\">\r\n                {/* reason for deny */}\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                        Select reason for deny<sup className=\"f-16\">*</sup> :\r\n                    </label>\r\n                    <div className=\"px-3\">\r\n                        {options.map(option => (\r\n                            <div key={option.id} className=\"form-check d-flex align-items-start mb-2\">\r\n                                <input\r\n                                    className=\"form-check-input mr-2\"\r\n                                    type=\"radio\"\r\n                                    name=\"exampleRadios\"\r\n                                    id={option.id}\r\n                                    required= {true}\r\n                                    onChange={handleChange}\r\n                                    value={option.title}\r\n                                    style={{\r\n                                        width: \"16px\",\r\n                                        height: \"16px\",\r\n                                        marginTop: \"3px\",\r\n                                    }}\r\n                                    \r\n                                />\r\n                                <label\r\n                                    className=\"form-check-label\"\r\n                                    htmlFor={option.id}\r\n                                    style={{ marginBottom: \"3px\" }}\r\n                                >\r\n                                    {option.title}\r\n                                </label>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    {reasonError && <small id=\"emailHelp\" className=\"form-text text-danger\">{reasonError}</small>}\r\n                </div>\r\n\r\n\r\n                {/* rich editor  */}\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                        Please Explain Why Did You Deny? <sup className=\"f-16 text-red\">*</sup>\r\n                    </label>\r\n                    <div className=\"ck-editor-holder\">\r\n                        <CKEditorComponent onChange={handleEditorDataChange} />\r\n                    </div>\r\n                    {commentError && <small id=\"emailHelp\" className=\"form-text text-danger\">\r\n                        {commentError}\r\n                    </small>} \r\n                </div>\r\n\r\n                <div className=\"mt-3 d-flex align-items-center\">\r\n                        <Button onClick={onBack} variant=\"tertiary\" className=\"ml-auto mr-2\">\r\n                            Back\r\n                        </Button>\r\n\r\n                        {!isSubmitting ? (\r\n                            <React.Fragment>\r\n                                <React.Fragment>\r\n                                {_.includes([4, 6], auth?.getRoleId()) ? (\r\n                                    <Button onClick={handleOnSubmit}>Next</Button>\r\n                                ): \r\n                                    <SubmitButton\r\n                                        title=\"Submit\" \r\n                                        isLoading={isSubmitting}\r\n                                        onClick={handleOnSubmit}\r\n                                    />\r\n                                }\r\n                            </React.Fragment>\r\n                            </React.Fragment>\r\n                        ) : (\r\n                            <React.Fragment>\r\n                                <Button className=\"cursor-processing\">\r\n                                    <div\r\n                                        className=\"spinner-border text-white\"\r\n                                        role=\"status\"\r\n                                        style={{\r\n                                            width: \"18px\",\r\n                                            height: \"18px\",\r\n                                        }}\r\n                                    />{\" \"}\r\n                                    Processing...\r\n                                </Button>\r\n                            </React.Fragment>\r\n                        )}\r\n                    </div>\r\n            </form>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default DenyAndContinue","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport Button from \"../../../components/Button\";\r\nimport RevisionView from \"./RevisionView\";\r\nimport { RevisionAcceptAndContinue } from \"./RevisionAcceptAndContinue\";\r\nimport AssigneeRevisionToDev from \"./AssigneeRevisionToDev\";\r\nimport DenyAndContinue from \"./DenyAndContinue\";\r\nimport {\r\n    useGetRevisionDetailsQuery,\r\n    useRevisionAcceptOrDenyByLeadDeveloperMutation,\r\n    useRevisionAcceptOrDenyMutation,\r\n} from \"../../../../services/api/SingleTaskPageApi\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setTaskStatus } from \"../../../../services/features/subTaskSlice\";\r\nimport _ from \"lodash\";\r\nimport { User } from \"../../../../utils/user-details\";\r\n\r\nconst RevisionViewModal = ({ task, close }) => {\r\n    const { task: Task } = useSelector((s) => s.subTask);\r\n    const [show, setShow] = useState(\"REVISION\");\r\n    const [accept, setAccept] = useState(\"\");\r\n    const [comment, setComment] = useState(\"\");\r\n    const [denyReason, setDenyReason] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n    const { data: revision, isFetching } = useGetRevisionDetailsQuery(task?.id);\r\n    //   const [revisionAcceptOrDeny, {isLoading: isLoadingRevisionReview}] = useRevisionAcceptOrDenyMutation();\r\n    const auth = new User(window?.Laravel?.user);\r\n    const [revisionAcceptOrDeny, { isLoading: isLoadingRevisionReview }] =\r\n        useRevisionAcceptOrDenyByLeadDeveloperMutation();\r\n\r\n    // useEffect(()=>{\r\n    //   console.log({Task,name:Task?.create_by?.name});\r\n    // },[Task])\r\n\r\n    // handle Accept and continue submition\r\n    const hanldeAcceptAndContinueSubmition = (data, type) => {\r\n        setComment(data);\r\n        setShow(type);\r\n    };\r\n\r\n    // handle Accept and continue submition\r\n    const hanldeDenyAndContinueSubmition = (data, type) => {\r\n        setComment(data);\r\n        setDenyReason(data?.denyReason);\r\n        setShow(type);\r\n    };\r\n\r\n    const handleOnSubmit = (data, type) => {\r\n        let fdata = {\r\n            comment: comment?.comment ?? \"\",\r\n            task_id: data?.task_id,\r\n            project_id: task?.projectId,\r\n            user_id: auth?.getId(),\r\n            subTask: _.map(data?.comments, (comment) => ({\r\n                ...comment,\r\n                is_deniable: data?.is_deniable,\r\n            })),\r\n            revision_acknowledgement: data?.reason ?? \"\",\r\n            revision_id: revision?.id,\r\n            mode: data?.continue ? \"continue\" : accept,\r\n            deny_reason: denyReason ?? \"\",\r\n            is_deniable: data?.is_deniable ?? false,\r\n        };\r\n\r\n        const params =\r\n            !data?.continue && accept === \"deny\"\r\n                ? \"deny-continue\"\r\n                : \"accept-continue\";\r\n\r\n        revisionAcceptOrDeny({ fdata, params })\r\n            .unwrap()\r\n            .then((res) => {\r\n                close();\r\n            })\r\n            .catch((err) => console.log(err));\r\n    };\r\n\r\n    const handleContinueButton = () => {\r\n        console.log(revision);\r\n        setAccept(\"continue\");\r\n        if (_.size(revision?.taskSubTask) === 0) {\r\n            setShow(\"DENY_ASSIGNEE_TO_DEV\");\r\n            close();\r\n        } else {\r\n            handleOnSubmit(\r\n                {\r\n                    continue: true,\r\n                },\r\n                \"\"\r\n            );\r\n        }\r\n    };\r\n\r\n    const generateModalTitle = useCallback(() => {\r\n        if (auth.getRoleId() === 4) {\r\n            return show === \"ASSIGNEE_TO_DEV\"\r\n                ? \"Revision For Lead Developer\"\r\n                : `Revision By ${Task?.create_by?.name}`;\r\n        } else if (auth.getRoleId() === 6) {\r\n            return show === \"ASSIGNEE_TO_DEV\"\r\n                ? \"Revision For Developer\"\r\n                : `Revision By ${Task?.create_by?.name}`;\r\n        } else if (auth.getRoleId() === 9 || auth.getRoleId() === 10) {\r\n            return `Revision By ${Task?.create_by?.name}`;\r\n        } else return \"Revision By Lead Developer\";\r\n    }, [Task]);\r\n\r\n    //   console.log({task})\r\n    return (\r\n        <React.Fragment>\r\n            <div\r\n                className=\"sp1_single_task--modal-panel\"\r\n                style={{ maxWidth: \"550px\" }}\r\n            >\r\n                <div className=\"border-bottom pb-2 px-3 mb-3 d-flex align-items-center justify-content-between\">\r\n                    <div className=\"font-weight-bold f-16\">\r\n                        Task#{task?.id}:{generateModalTitle()}\r\n                    </div>\r\n                    <Button onClick={close} className=\"\">\r\n                        <i className=\"fa-solid fa-xmark\" />\r\n                    </Button>\r\n                </div>\r\n\r\n                <div className=\"px-3\">\r\n                    {/* revision view */}\r\n                    {show === \"REVISION\" && (\r\n                        <RevisionView\r\n                            revision={revision}\r\n                            isLoading={isFetching}\r\n                            isContinue={isLoadingRevisionReview}\r\n                            onAccept={() => {\r\n                                setAccept(\"accept\");\r\n                                setShow(\"ACCEPT_AND_CONTINUE\");\r\n                            }}\r\n                            onDeny={() => {\r\n                                setAccept(\"deny\");\r\n                                setShow(\"DENY_AND_CONTINUE\");\r\n                            }}\r\n                            onContinue={handleContinueButton}\r\n                        />\r\n                    )}\r\n\r\n                    {/* revision accepted after view */}\r\n                    {show === \"ACCEPT_AND_CONTINUE\" && (\r\n                        <RevisionAcceptAndContinue\r\n                            task={task}\r\n                            isSubmitting={isLoadingRevisionReview}\r\n                            onSubmit={(data) =>\r\n                                hanldeAcceptAndContinueSubmition(\r\n                                    data,\r\n                                    \"ASSIGNEE_TO_DEV\"\r\n                                )\r\n                            }\r\n                            close={() => setShow(\"REVISION\")}\r\n                        />\r\n                    )}\r\n\r\n                    {/* revision assigned to dev after accepted */}\r\n                    {_.size(task?.taskSubTask) > 0 &&\r\n                        show === \"ASSIGNEE_TO_DEV\" && (\r\n                            <AssigneeRevisionToDev\r\n                                task={task}\r\n                                revision={revision}\r\n                                type={true}\r\n                                onSubmit={(data) =>\r\n                                    handleOnSubmit(data, \"ASSIGNEE_TO_DEV\")\r\n                                }\r\n                                isSubmitting={isLoadingRevisionReview}\r\n                                onBack={() => setShow(\"ACCEPT_AND_CONTINUE\")}\r\n                            />\r\n                        )}\r\n\r\n                    {/* revision denied after view */}\r\n                    {show === \"DENY_AND_CONTINUE\" && (\r\n                        <DenyAndContinue\r\n                            task={task}\r\n                            onSubmit={(data) =>\r\n                                hanldeDenyAndContinueSubmition(\r\n                                    data,\r\n                                    \"DENY_ASSIGNEE_TO_DEV\"\r\n                                )\r\n                            }\r\n                            isSubmitting={isLoadingRevisionReview}\r\n                            onBack={() => setShow(\"REVISION\")}\r\n                        />\r\n                    )}\r\n\r\n                    {/* revision assigned to dev after denied */}\r\n                    {_.size(task?.taskSubTask) > 0 &&\r\n                        show === \"DENY_ASSIGNEE_TO_DEV\" && (\r\n                            <AssigneeRevisionToDev\r\n                                task={task}\r\n                                revision={revision}\r\n                                type={false}\r\n                                onSubmit={(data) =>\r\n                                    handleOnSubmit(data, \"DENY_ASSIGNEE_TO_DEV\")\r\n                                }\r\n                                isSubmitting={isLoadingRevisionReview}\r\n                                onBack={() => setShow(\"DENY_AND_CONTINUE\")}\r\n                            />\r\n                        )}\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default RevisionViewModal;\r\n","import React, {useState} from 'react'\r\nimport Button from '../../../components/Button'\r\nimport RevisionView from './RevisionView'\r\nimport { RevisionAcceptAndContinue } from './RevisionAcceptAndContinue';\r\nimport AssigneeRevisionToDev from './AssigneeRevisionToDev';\r\nimport DenyAndContinue from './DenyAndContinue';\r\nimport { useGetRevisionDetailsQuery, useRevisionAcceptOrDenyMutation } from '../../../../services/api/SingleTaskPageApi';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setTaskStatus } from '../../../../services/features/subTaskSlice';\r\nimport { User } from '../../../../utils/user-details';\r\n\r\nconst DeveloperRevisionView = ({task, close}) => {\r\n  const [show, setShow] = useState(\"REVISION\");\r\n  const [accept, setAccept] = useState('');\r\n  const dispatch = useDispatch();\r\n  const { data: revision, isFetching: isFetchingRevision } = useGetRevisionDetailsQuery(task?.id);\r\n  const [revisionAcceptOrDeny, {isLoading: isLoadingRevisionReview}] = useRevisionAcceptOrDenyMutation();\r\n  const auth = new User(window?.Laravel?.user);\r\n\r\n  // handle Accept and continue submission\r\n  const handleAcceptAndContinueSubmission = (data, type) => {\r\n\r\n    const _data = {\r\n        comment: data?.comment ?? '',\r\n        deny_reason: data?.denyReason ?? '',\r\n        task_id: task?.id,\r\n        user_id: auth?.getId(),\r\n        revision_id: revision?.id,\r\n        mode: data?.continue ? 'continue' : accept\r\n    }\r\n\r\n\r\n    revisionAcceptOrDeny(_data)\r\n    .unwrap()\r\n    .then(res => {\r\n        if(_.includes([4, 6], auth?.getRoleId())){\r\n            setShow(type);\r\n        }else{\r\n            dispatch(setTaskStatus(res?.task_status));\r\n            close();\r\n        }\r\n    })\r\n    .catch(err => console.log(err))\r\n  }\r\n\r\n\r\n  // generate modal title by user role id\r\n\r\n  const generateModalTitle = () => {\r\n    if(auth.getRoleId() === 4){\r\n        return show === \"ASSIGNEE_TO_DEV\"  ? \"Revision For Lead Developer\":\"Revision By Project Manager/Top Management\";\r\n    }else if(auth.getRoleId() === 6){\r\n        return show === \"ASSIGNEE_TO_DEV\"  ? \"Revision For Developer\":\"Revision By Project Manager/Top Management\";\r\n    }else if(auth.getRoleId() === 9 || auth.getRoleId() === 10){\r\n        return \"Revision By Project Manager/Top Management\";\r\n    }else return \"Revision By Lead Developer\"\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <div\r\n            className=\"sp1_single_task--modal-panel\"\r\n            style={{ maxWidth: \"550px\" }}\r\n        >\r\n            <div className=\"border-bottom pb-2 px-3 mb-3 d-flex align-items-center justify-content-between\">\r\n                <div className=\"font-weight-bold f-16\">\r\n                    Task#{task?.id}: {\" \"} {generateModalTitle()}\r\n                </div>\r\n                <Button onClick={close} className=\"\">\r\n                    <i className=\"fa-solid fa-xmark\" />\r\n                </Button>\r\n            </div>\r\n\r\n            <div className=\"px-3\">\r\n               {show === 'REVISION' &&\r\n                    <RevisionView\r\n                        revision={revision}\r\n                        isLoading= {isFetchingRevision}\r\n                        isContinue={isLoadingRevisionReview}\r\n                        onAccept={() => {\r\n                            setAccept('accept');\r\n                            setShow('ACCEPT_AND_CONTINUE');\r\n                        }}\r\n                        onDeny={() => {\r\n                            setAccept(\"deny\");\r\n                            setShow('DENY_AND_CONTINUE')\r\n                        }}\r\n\r\n                        onContinue={() => {\r\n                            setAccept('continue')\r\n                            handleAcceptAndContinueSubmission({continue: true}, '')\r\n                        }}\r\n\r\n                    />\r\n                }\r\n\r\n                {\r\n                    show === 'ACCEPT_AND_CONTINUE' &&\r\n                    <RevisionAcceptAndContinue\r\n                        task={task}\r\n                        isSubmitting={isLoadingRevisionReview}\r\n                        onSubmit={data => handleAcceptAndContinueSubmission(data, \"ASSIGNEE_TO_DEV\")}\r\n                        close={() => setShow(\"REVISION\")}\r\n                    />\r\n                }\r\n\r\n                {show === \"DENY_AND_CONTINUE\" &&\r\n                    <DenyAndContinue\r\n                        task={task}\r\n                        onSubmit={data => handleAcceptAndContinueSubmission(data, \"DENY_ASSIGNEE_TO_DEV\")}\r\n                        isSubmitting = {isLoadingRevisionReview}\r\n                        onBack={() => setShow(\"REVISION\")}\r\n                    />\r\n                }\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\n\r\nexport default DeveloperRevisionView\r\n","import React, { useState } from 'react';\r\nimport Button from '../../../components/Button';\r\nimport Modal from '../../../components/Modal';\r\nimport { SingleTask } from '../../../../utils/single-task';\r\nimport RevisionViewModal from './RevisionViewModal';\r\nimport _ from 'lodash';\r\nimport DeveloperRevisionView from './DeveloperRevisionView';\r\nimport { revisionButtonPermission } from '../../../permissions';\r\n\r\nconst RevisionViewControl = ({task, auth, status}) => {\r\n    const [revisionModal, setRevisionModal] = useState(false);\r\n    const singleTask = task;\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <Button\r\n            variant='tertiary'\r\n            onClick={() => setRevisionModal(true)}\r\n            className='d-flex align-items-center sp1-st-revision-btn --view-revision'\r\n        >\r\n            <i className=\"fa-solid fa-plus-minus\" />\r\n            <span className=\"d-inline ml-1\">Revision</span>\r\n        </Button>\r\n\r\n        <Modal isOpen={revisionModal} className=\"sp1_single_task--modal\">\r\n            <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n                {\r\n                    _.includes([6], auth?.getRoleId()) ?\r\n                    <RevisionViewModal\r\n                        task={singleTask}\r\n                        close={() => setRevisionModal(false)}\r\n                    />\r\n                    :\r\n                    <DeveloperRevisionView\r\n                        task={task}\r\n                        close={() => setRevisionModal(false)}\r\n                    />\r\n                }\r\n\r\n            </div>\r\n        </Modal>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default RevisionViewControl\r\n","import React, {useState, useRef} from 'react'\r\nimport Button from '../../../components/Button'\r\nimport Modal from '../../../components/Modal';\r\nimport { useClickAway } from 'react-use';\r\nimport { useSubmitForClientApprovalMutation } from '../../../../services/api/SingleTaskPageApi';\r\nimport Loader from '../../../components/Loader';\r\n\r\nexport const SubmitForClientApproval = ({task, auth}) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const closeModal = () => setIsOpen(false)\r\n  const openModal = () => setIsOpen(true)\r\n  const ref = useRef();\r\n  useClickAway(ref, closeModal);\r\n\r\n\r\n  const [submitForClientApproval, {isLoading}] = useSubmitForClientApprovalMutation();\r\n\r\n\r\n  const handleOnSubmit = ()=>{\r\n    submitForClientApproval({task_id: task?.id, user_id: auth?.getId()})\r\n    .unwrap()\r\n    .then(res => {\r\n      Swal.fire({\r\n          position: \"center\",\r\n          icon: \"success\",\r\n          title: 'Submitted Task For Client Approval Successfully',\r\n          showConfirmButton: false,\r\n          timer: 2500,\r\n      });\r\n    })\r\n    .catch(err => console.log(err))\r\n    .finally(() => closeModal())\r\n  }\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <React.Fragment>\r\n          {\r\n            isLoading ? \r\n            <React.Fragment>\r\n              <div className=\"cursor-processing cnx__btn cnx__btn_sm cnx__btn_primary\">\r\n                    <div\r\n                        className=\"spinner-border text-white\"\r\n                        role=\"status\"\r\n                        style={{\r\n                            width: \"18px\",\r\n                            height: \"18px\",\r\n                        }}\r\n                    ></div>\r\n                    Processing...\r\n                </div>\r\n            </React.Fragment>\r\n            :\r\n              <Button \r\n                  variant='success'\r\n                  onClick={openModal}\r\n                  className='d-flex align-items-center border-success'\r\n              >\r\n                  <i className=\"fa-solid fa-handshake-angle\"></i>\r\n                  <span className=\"d-inline ml-1\">Submit For Client Approval</span>\r\n              </Button> \r\n          }\r\n        </React.Fragment>\r\n        <Modal isOpen={isOpen} className=\"sp1_single_task--modal\">\r\n            <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n              <div \r\n                ref={ref}\r\n                className=\"sp1_single_task--modal-panel position-absolute p-2 mb-3\"\r\n                style={{top:'50%', left:'50%',transform:'translate(-50%, -50%)', width: '250px'}}\r\n              >\r\n                {!isLoading &&\r\n                  <div className='d-flex align-items-center border-bottom pb-1'>\r\n                    <Button variant='tertiary' onClick={closeModal} className='ml-auto border-0'>\r\n                      <i className='fa-solid fa-xmark' />\r\n                    </Button>\r\n                </div>\r\n                }\r\n                <div className='d-flex flex-column align-items-center p-2' style={{gap:'10px'}}>\r\n                  {isLoading && \r\n                    <React.Fragment>\r\n                      <Loader title='Submitting...' />\r\n                    </React.Fragment>\r\n                  }\r\n                  \r\n                  {!isLoading &&\r\n                    <React.Fragment>\r\n                      <img src='/img/warning.gif' alt='' style={{width: '50px', height: '50px'}}/>\r\n                      <div className='d-flex flex-column aling-items-center'>\r\n                        <h5 className='d-block mb-3'>Are You Sure?</h5>\r\n                        <div className='d-flex align-items-center justify-content-center'>\r\n                          <Button onClick={handleOnSubmit} className='mr-2 py-0'>Yes</Button>\r\n                          <Button variant='tertiary' onClick={closeModal} className='py-0'>No</Button>\r\n                        </div>\r\n                      </div>\r\n                   </React.Fragment>\r\n                  }\r\n                </div>\r\n              </div>\r\n            </div>\r\n        </Modal> \r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Button from '../../../components/Button'\r\nimport { useConfirmClientApprovalMutation } from '../../../../services/api/SingleTaskPageApi'\r\nimport SubmitButton from '../../../components/SubmitButton';\r\n\r\nconst ClientAcceptedTask = ({task}) => { \r\n\r\n  const [confirmClientApproval, {isLoading}] = useConfirmClientApprovalMutation();\r\n\r\n  const handleClick=(e)=>{\r\n    e.preventDefault();\r\n    confirmClientApproval({\r\n        task_id: task?.id\r\n    }).unwrap()\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <SubmitButton \r\n            onClick={handleClick}\r\n            variant='success'\r\n            isLoading={isLoading}\r\n            className='d-flex align-items-center border-success'\r\n        >\r\n            <i className=\"fa-solid fa-check\"></i>\r\n            <span className=\"d-inline ml-1\">Client Has Accepted This Task</span>\r\n        </SubmitButton>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ClientAcceptedTask","import React, { useState, useRef } from \"react\";\r\nimport CKEditorComponent from \"../../../../ckeditor\";\r\nimport Button from \"../../../components/Button\";\r\nimport { useCreateRevisionMutation } from \"../../../../services/api/SingleTaskPageApi\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setTaskStatus } from \"../../../../services/features/subTaskSlice\";\r\nimport SubmitButton from \"../../../components/SubmitButton\";\r\n\r\n\r\n\r\n\r\nconst projectManagerAcknowladgement = [\r\n    {\r\n        id: \"CPRx01\",\r\n        title: 'Client added some additional requirements which was not part of the actual job scope',\r\n        isDeniable: false,\r\n    },\r\n    {\r\n        id: 'PLRx12',\r\n        title: 'I submitted the work without proper checking and overlooked the issues',\r\n        isDeniable: true,\r\n    },\r\n    {\r\n        id: 'PLRx03',\r\n        title: 'I couldnt understand clients expectation properly earlier',\r\n        isDeniable: false\r\n    },\r\n    {\r\n        id: 'PLRx04',\r\n        title: 'I didnt understand the job properly as it’s very technical in nature and relied fully on technical team for success',\r\n        isDeniable: false,\r\n    },\r\n    {\r\n        id: 'CPRx05',\r\n        title: \"The client didnt change his instruction but his interpretation of the original instruction now is weird and nobody could have interpreted it this way from his instruction\",\r\n        isDeniable: false,\r\n        createDispute: true,\r\n    },\r\n    {\r\n        id: 'CPRx06',\r\n        title: \"The client is asking for some minor changes which he couldn’t specify until he saw the completed work and we can’t charge him for these\",\r\n        isDeniable: false,\r\n    },\r\n    {\r\n        id: 'SPRx01',\r\n        title: \"Sales person discussed something in a verbal meeting with the client and then forgot to document it when assigning\",\r\n        isDeniable: false,\r\n        createDispute: false,\r\n    },\r\n    {\r\n        id: 'SPRx02',\r\n        title: \"Sales person couldn't define requirement properly and I also failed to define it after I took over\",\r\n        isDeniable: false,\r\n        createDispute: false,\r\n    },\r\n    {\r\n        id: 'SPRx03',\r\n        title: \"Sales overpromised: This task is not doable to this extent or in this way and I informed management about it on day 1\",\r\n        isDeniable: false,\r\n        createDispute: false,\r\n    }\r\n]\r\n\r\n\r\nconst AssigneeToLeadFromClientRevision = ({ close, onBack, onSubmit, task, auth, isSubmitting }) => {\r\n    const [reason, setReason] = useState(null);\r\n    const [reasonError, setReasonError] = useState(\"\");\r\n    const [comment, setComment] = useState(\"\");\r\n    const [commentError, setCommentError] = useState(\"\");\r\n    const [additionalPaid, setAdditionalPaid] = useState('');\r\n    const [additionalInfo, setAdditionalInfo] = useState(null);\r\n    const [additionalAmount, setAdditionalAmount] = useState(0);\r\n    const [additionalError, setAdditionalError] = useState('');\r\n\r\n    // radio button change\r\n    const handleChange = (e, reason) => {\r\n        setReason(reason);\r\n        setAdditionalAmount(0);\r\n        setAdditionalPaid('');\r\n        setAdditionalInfo(null);\r\n    };\r\n\r\n\r\n    // on blur\r\n    const handleBlurEvent = () => {\r\n        Swal.fire({\r\n            title: 'Do you want to create a milestone?',\r\n            // showDenyButton: true,\r\n            confirmButtonText: 'Yes',\r\n            // denyButtonText: `No`,\r\n            }).then(res => {\r\n            if(res.isConfirmed){\r\n                window.open(`/account/projects/${task?.projectId}?tab=milestones`, '_blank');\r\n            }\r\n        })\r\n    }\r\n\r\n    // additional payment\r\n    const hasAdditionalPayment = (isPay) =>{\r\n        setAdditionalPaid(() => isPay ? 'yes': 'no');\r\n    }\r\n\r\n    // editor change text\r\n    const handleEditorTextChange= (e, editor) => {\r\n        const data = editor.getData();\r\n        setComment(data);\r\n    }\r\n\r\n    // validation\r\n    const validate = () => {\r\n       let errorCount = 0;\r\n\r\n       if(comment === \"\"){\r\n            errorCount++;\r\n            setCommentError('You have to explain the revision in details, so that lead developer can understand where they need to work.')\r\n       }\r\n\r\n       if(!reason){\r\n            errorCount++;\r\n            setReasonError('You have to select a reason from above options')\r\n       }\r\n\r\n\r\n       if(reason && reason?.id === 'CPRx01'){\r\n            if(additionalPaid === 'yes' && additionalAmount === 0){\r\n                errorCount++;\r\n                setAdditionalError('You have to provide amount')\r\n            }\r\n\r\n            if(additionalPaid === 'no' && !additionalInfo){\r\n                errorCount++;\r\n                setAdditionalError('You have to select an option')\r\n            }\r\n       }\r\n\r\n       return errorCount === 0;\r\n    }\r\n\r\n\r\n    // handle submission\r\n    const handleSubmission=(e)=>{\r\n        e.preventDefault();\r\n\r\n\r\n\r\n        const data = {\r\n            acknowledgement_id: reason?.id ,\r\n            task_id: task?.id,\r\n            user_id: auth?.id,\r\n            is_deniable: reason?.isDeniable,\r\n            revision_acknowledgement: reason?.title,\r\n            comment: comment,\r\n            additional_amount: Number(additionalAmount),\r\n            additional_status: additionalPaid,\r\n            additional_comment: additionalInfo?.info ?? '',\r\n            dispute_create: reason?.createDispute || additionalInfo?.disputeCreate || false\r\n        }\r\n\r\n        if(validate()){\r\n            onSubmit(data);\r\n        }else{\r\n            console.log('Your forgot to fillup some required fields')\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n                <form className=\"px-3\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                            Select Reason for Revision<sup className=\"f-16\">*</sup> :\r\n                        </label>\r\n                        <div className=\"px-3\">\r\n                            {\r\n                                _.map(projectManagerAcknowladgement, option => (\r\n                                    <div key={option.id} className=\"form-check d-flex align-items-start mb-2\">\r\n                                        <input\r\n                                            className=\"form-check-input mr-2\"\r\n                                            type=\"radio\"\r\n                                            name=\"exampleRadios\"\r\n                                            id={option.id}\r\n                                            required= {true}\r\n                                            onChange={e => handleChange(e, option)}\r\n                                            value={option.title}\r\n                                            style={{\r\n                                                width: \"16px\",\r\n                                                height: \"16px\",\r\n                                                marginTop: \"3px\",\r\n                                            }}\r\n\r\n                                        />\r\n                                        <label\r\n                                            className=\"form-check-label\"\r\n                                            htmlFor={option.id}\r\n                                            style={{ marginBottom: \"3px\" }}\r\n                                        >\r\n                                           {option.title}\r\n                                        </label>\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                        {reasonError && <small id=\"emailHelp\" className=\"form-text text-danger\">{reasonError}</small>}\r\n                    </div>\r\n\r\n                    {reason?.id === 'CPRx01' &&\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"\" className=\"d-block font-weight-bold\">Is the client paying additionally for these changes? <sup>*</sup></label>\r\n                            <div className=\"d-block\">\r\n                                    <div className=\"form-check form-check-inline\">\r\n                                        <input\r\n                                            className=\"form-check-input\"\r\n                                            name=\"milestone\"\r\n                                            type=\"radio\"\r\n                                            id=\"createMilestoneYes\"\r\n                                            value=\"1\"\r\n                                            onChange={(e)=>hasAdditionalPayment(true)}\r\n                                            style={{\r\n                                                width: \"16px\",\r\n                                                height: \"16px\",\r\n                                                marginTop: \"3px\",\r\n                                            }}\r\n                                        />\r\n                                        <label htmlFor=\"createMilestoneYes\" className=\"form-check-label\">Yes</label>\r\n                                    </div>\r\n                                    <div className=\"form-check form-check-inline\">\r\n                                        <input\r\n                                            className=\"form-check-input\"\r\n                                            name=\"milestone\"\r\n                                            type=\"radio\"\r\n                                            id=\"createMilestoneNo\"\r\n                                            value=\"0\"\r\n                                            onChange={(e) => hasAdditionalPayment(false)}\r\n                                            style={{\r\n                                                width: \"16px\",\r\n                                                height: \"16px\",\r\n                                                marginTop: \"3px\",\r\n                                            }}\r\n                                        />\r\n                                        <label htmlFor=\"createMilestoneNo\" className=\"form-check-label\">No</label>\r\n                                    </div>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n\r\n                    {additionalPaid === 'yes' &&\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"\" className=\"d-block font-weight-bold\">Amount? <sup>*</sup></label>\r\n                            <div className=\"input-group\">\r\n                                <div className=\"input-group-prepend\">\r\n                                    <div className=\"input-group-text\">$</div>\r\n                                </div>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    onChange={e => setAdditionalAmount(e.target.value)}\r\n                                    className=\"form-control\"\r\n                                    id=\"inlineFormInputGroup\"\r\n                                    placeholder=\"300\"\r\n                                    onBlur={handleBlurEvent}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    }\r\n\r\n                    {\r\n                        additionalPaid === 'no' &&\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"\" className=\"d-block font-weight-bold\">Is the client paying additionally for these changes? <sup>*</sup></label>\r\n                            <div className=\"d-block\">\r\n                                    <div className=\"form-check mb-3\">\r\n                                        <input\r\n                                            name=\"additionalInformation\"\r\n                                            className=\"form-check-input\"\r\n                                            type=\"radio\"\r\n                                            id=\"additionalInformation1\"\r\n                                            onChange={e => setAdditionalInfo({\r\n                                                info: e.target.value,\r\n                                                disputeCreate: false,\r\n                                            })}\r\n                                            value=\"Client changed his/her mind and he/she don't want to pay additional payment. We have to continue the task for client satisfaction\"\r\n                                            style={{\r\n                                                width: \"16px\",\r\n                                                height: \"16px\",\r\n                                                marginTop: \"3px\",\r\n                                            }}\r\n                                        />\r\n                                        <label htmlFor=\"additionalInformation1\" className=\"form-check-label\">\r\n                                            Client changed his/her mind and he/she don't want to pay additional payment. We have to continue the task for client satisfaction\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"form-check\">\r\n                                        <input\r\n                                            className=\"form-check-input\"\r\n                                            name=\"additionalInformation\"\r\n                                            type=\"radio\"\r\n                                            id=\"additionalInformation2\"\r\n                                            value=\"The client is interpreting his original instruction in a very unusual way!\"\r\n                                            onChange={(e) => setAdditionalInfo({\r\n                                                info: e.target.value,\r\n                                                disputeCreate: true,\r\n                                            })}\r\n                                            style={{\r\n                                                width: \"16px\",\r\n                                                height: \"16px\",\r\n                                                marginTop: \"3px\",\r\n                                            }}\r\n                                        />\r\n                                        <label htmlFor=\"additionalInformation2\" className=\"form-check-label\">\r\n                                        The client is interpreting his original instruction in a very unusual way!\r\n                                        </label>\r\n                                    </div>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n\r\n                    { additionalError && <div className=\"mb-3\">\r\n                        <small id=\"emailHelp\" className=\"form-text text-danger\">\r\n                            {additionalError}\r\n                        </small>\r\n                    </div>}\r\n\r\n                    {/* Editor  */}\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                            Explain or Comment<sup className=\"f-16\">*</sup> :\r\n                        </label>\r\n                        <div className=\"ck-editor-holder\">\r\n                            <CKEditorComponent onChange={handleEditorTextChange}/>\r\n                        </div>\r\n                        {commentError && <small id=\"emailHelp\" className=\"form-text text-danger\">{commentError}</small>}\r\n                    </div>\r\n\r\n\r\n                    <div>\r\n                        <div className=\"mt-3 d-flex align-items-center\">\r\n                            <Button onClick={onBack} variant=\"tertiary\" className=\"ml-auto mr-2\">\r\n                                Back\r\n                            </Button>\r\n                            <SubmitButton title=\"Submit\" onClick={handleSubmission} isLoading={isSubmitting} />\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AssigneeToLeadFromClientRevision;\r\n","import React, {useState, lazy, Suspense} from 'react'\r\nimport Button from '../../../components/Button' \r\nimport Modal from '../../../components/Modal';\r\nimport { SingleTask } from '../../../../utils/single-task';\r\nimport ClientRevisionForm from './ClientRevisionForm';\r\nimport AssigneeToLeadFromClientRevision from './AssigneeToLeadFromClientRevision';\r\nimport { useStoreClientRevisionTaskMutation } from '../../../../services/api/SingleTaskPageApi';\r\n\r\nconst ClientRevision = ({task, auth}) => {\r\n    const [revisionModal, setRevisionModal] = useState(false);\r\n    const [show,setShow] = useState('ASSINEE_TO_DEV');\r\n    \r\n    const singleTask = task;\r\n\r\n    // client revision data\r\n    const [clientComment, setClientComment] = useState('');\r\n    const [clientAcknowledgement, setClientAcknowladgement] = useState('');\r\n\r\n\r\n    const [storeClientRevisionTask, {isLoading}] = useStoreClientRevisionTaskMutation();\r\n\r\n    const handleSubmit = (data) => {\r\n       setClientAcknowladgement(data?.reason);\r\n       setClientComment(data?.comment); \r\n       setShow('ASSINEE_TO_DEV'); \r\n    }\r\n\r\n    const close = () => {\r\n        setRevisionModal(false)\r\n    }\r\n\r\n    const handleSubmitToStore = (data) =>{\r\n        const fData = {\r\n            ...data,\r\n            project_id: task?.projectId\r\n        }\r\n  \r\n        // show toster notification\r\n        const showToster= () =>{\r\n            const Toast = Swal.mixin({\r\n                toast: true,\r\n                    position: 'top-end',\r\n                    showConfirmButton: false,\r\n                    timer: 3000,\r\n                    timerProgressBar: true,\r\n            }) \r\n            Toast.fire({\r\n                icon: 'success',\r\n                title: 'Task submitted for Revision successfully'\r\n            })\r\n        }\r\n    \r\n        storeClientRevisionTask(fData)\r\n        .unwrap()\r\n        .then(res => showToster())\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    \r\n  return (\r\n    <React.Fragment>\r\n        <Button\r\n            variant='tertiary'\r\n            onClick={() => setRevisionModal(true)}\r\n            className='d-flex align-items-center sp1-st-revision-btn sp1-st-revision-btn'\r\n        >\r\n            <i className=\"fa-solid fa-plus-minus\" />\r\n            <span className=\"d-inline ml-1\">Client Has Revision</span>\r\n        </Button> \r\n\r\n        <Modal isOpen={revisionModal} className=\"sp1_single_task--modal\">\r\n            <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n                <div\r\n                    className=\"sp1_single_task--modal-panel w-100 pb-3\"\r\n                    style={{ maxWidth: \"550px\" }}\r\n                >\r\n                    <div className=\"border-bottom pb-2 px-3 mb-3 d-flex align-items-center justify-content-between\">\r\n                        <div className=\"font-weight-bold f-14\">\r\n                            Task#{task?.id} - Client Revision\r\n                        </div>\r\n                        <Button onClick={close} className=\"\">\r\n                            <i className=\"fa-solid fa-xmark\" />\r\n                        </Button>\r\n                    </div>\r\n\r\n                    {/* {show === 'CLIENT_REVISION' && \r\n                        <ClientRevisionForm \r\n                            task={singleTask}\r\n                            close={() => setRevisionModal(false)} \r\n                            onSubmitForm={(data) => handleSubmit(data)}\r\n                        />\r\n                    }  */}\r\n                    {/* {show === \"ASSINEE_TO_DEV\" && */}\r\n                        <AssigneeToLeadFromClientRevision \r\n                            task={task}\r\n                            auth={auth}\r\n                            isSubmitting = {isLoading}\r\n                            onSubmit={handleSubmitToStore}\r\n                            close={() => setRevisionModal(false)}\r\n                            onBack={() => setShow('CLIENT_REVISION')}\r\n                        />\r\n                    {/* }  */}\r\n                </div>\r\n            </div>\r\n        </Modal> \r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ClientRevision \r\n\r\n","import React from 'react'\r\nimport { SubmitForClientApproval } from './SubmitForClientApproval'\r\nimport ClientAcceptedTask from './ClientAcceptedTask'\r\nimport { SingleTask } from '../../../../utils/single-task'\r\nimport ClientRevision from '../Revision/ClientRevision'\r\nimport { submitForClientApproval, clientApproveConfirmationButtonPermission } from '../../../permissions'\r\n\r\nconst ClientApproval = ({task, status, auth}) => {\r\n  return (\r\n    <React.Fragment>\r\n        { submitForClientApproval({task, status, auth}) && <SubmitForClientApproval task={task} auth={auth} /> }\r\n        { clientApproveConfirmationButtonPermission({task, status, auth}) && \r\n          <React.Fragment>\r\n            <ClientAcceptedTask task={task} auth={auth} />\r\n            <ClientRevision task={task} auth={auth} />\r\n          </React.Fragment>\r\n        }\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ClientApproval","import React, { useState, lazy, Suspense } from \"react\";\r\nimport Button from \"../../../components/Button\";\r\nimport Modal from \"../../../components/Modal\";\r\nimport { SingleTask } from \"../../../../utils/single-task\";\r\nimport Loader from \"../../../components/Loader\";\r\nconst ReportForm = lazy(() => import(\"./ReportForm\"));\r\n\r\nconst ReportControl = ({ task }) => {\r\n    const [reportModalOpen, setReportModalOpen] = useState(false); \r\n\r\n    const close = () => setReportModalOpen(false);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Button\r\n                variant=\"tertiary\"\r\n                onClick={() => setReportModalOpen(true)}\r\n                className=\"ml-auto d-flex align-items-center sp1-st-revision-btn --view-revision sp1_report_btn\"\r\n            >\r\n                <i className=\"fa-solid fa-flag\"></i>\r\n                <span className=\"d-inline ml-1\">Report</span>\r\n            </Button>\r\n\r\n            <Modal isOpen={reportModalOpen} className=\"sp1_single_task--modal\">\r\n                <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n                    <div\r\n                        className=\"sp1_single_task--modal-panel task-report-form--modal-panel\"\r\n                    >\r\n                        <div className=\"border-bottom pb-2 px-3 mb-3 d-flex align-items-center justify-content-between\">\r\n                            <div className=\"font-weight-bold f-14\">\r\n                                Task#{task?.id} : Report\r\n                            </div>\r\n                            <Button onClick={close} className=\"\">\r\n                                <i className=\"fa-solid fa-xmark\" />\r\n                            </Button>\r\n                        </div>\r\n                        <Suspense fallback={<div className=\"py-3 d-flex align-items-center justify-content-center\"><Loader /></div>}>\r\n                            <ReportForm task={task} close={close} />\r\n                        </Suspense>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ReportControl;\r\n","/* eslint-disable react/prop-types */\r\nimport { useState } from \"react\";\r\nimport FileUploader from \"../../../file-upload/FileUploader\";\r\nimport CKEditorComponent from \"../../../ckeditor\";\r\nimport SubmitButton from \"../../components/SubmitButton\";\r\nimport { convertTime } from \"../../../utils/converTime\";\r\nimport { Placeholder } from \"../../../global/Placeholder\";\r\nimport Checkbox from \"../../../UI/form/Cheeckbox\";\r\nimport { useSubmitDailySubmissionMutation } from \"../../../services/api/dailySubmissionApiSlice\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\n\r\nconst TodaysUpdateModalTableRow = ({ data, date, index, open, setOpen, loading, refetch }) => {\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const [attachmentLink, setAttachmentLink] = useState('');\r\n    const [checked, setChecked] = useState(false);\r\n    const [files, setFiles] = useState([]);\r\n    const [taskDescription, setTaskDescription] = useState('');\r\n    const [updatedValue,] = useState(null);\r\n    const [completedSection, setCompletedSection] = useState('');\r\n    const [submitDailySubmission, { isLoading: isSubmitting }] = useSubmitDailySubmissionMutation();\r\n\r\n\r\n    // error state\r\n    const [attachmentLinkError, setAttachmentLinkError] = useState('');\r\n    const [taskDescriptionError, setTaskDescriptionError] = useState('');\r\n    const [completedSectionError, setCompletedSectionError] = useState('')\r\n\r\n    // check validation of attachmentLink and taskDescription\r\n    const isValid = () => {\r\n        let valid = true;\r\n        if (attachmentLink === '') {\r\n            setAttachmentLinkError('You must provide the link of your work');\r\n            valid = false;\r\n        }\r\n        if (taskDescription === '') {\r\n            setTaskDescriptionError(\"Please describe what you've done !\");\r\n            valid = false;\r\n        }\r\n        if (completedSection === '') {\r\n            setCompletedSectionError(\"You must provide at least one section name that you have completed\");\r\n            valid = false;\r\n        }\r\n        return valid;\r\n    }\r\n\r\n\r\n    // daily update submission function\r\n    const handleSubmit = () => {\r\n        if (!isValid()) {\r\n            return;\r\n        }\r\n        const formData = new FormData();\r\n        formData.append('task_id', data.id);\r\n        formData.append('user_id', window.Laravel?.user?.id)\r\n        formData.append('project_id', data.projectId);\r\n        formData.append('task_heading', data.task_title);\r\n        formData.append('client_id', data.clientId);\r\n        formData.append('client_name', data.client_name);\r\n        formData.append('hours_spent', data.total_time_spent);\r\n        formData.append('link_name', attachmentLink);\r\n        formData.append('section_name', completedSection);\r\n        formData.append('comment', taskDescription);\r\n        formData.append('mark_as_complete', checked);\r\n        formData.append('report_date', date);\r\n        const _token = document.querySelector(\"meta[name='csrf-token']\").getAttribute(\"content\");\r\n        formData.append(\"_token\", _token);\r\n        files.forEach((file) => formData.append('file[]', file))\r\n\r\n\r\n        submitDailySubmission(formData)\r\n            .unwrap()\r\n            .then(res => {\r\n                // console.log(res);\r\n                if (res.mark_as_complete===\"true\" || res.mark_as_complete===true) {\r\n                    navigate(`${location.pathname}?modal=complete-task`);\r\n                }\r\n                const Toast = Swal.mixin({\r\n                    toast: true,\r\n                    position: 'top-end',\r\n                    showConfirmButton: false,\r\n                    timer: 3000,\r\n                    timerProgressBar: true,\r\n                })\r\n\r\n                Toast.fire({\r\n                    icon: 'success',\r\n                    title: 'Submitted successfully'\r\n                })\r\n                setOpen(null);\r\n                refetch();\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <tr\r\n                className={`sp1_tlr_tr ${open === index && 'openRow_bg'}`}\r\n                // style={{\r\n                //     backgroundColor: `${data.daily_submission_status ? 'lightgreen' : 'white'}`\r\n                // }}\r\n            >\r\n\r\n                <td className={`sp1_tlr_td`} style={{ minWidth: '50px' }}>{loading ? <Placeholder /> : index + 1}</td>\r\n                <td className={`sp1_tlr_td`}>{loading ? <Placeholder /> : data?.task_title}</td>\r\n                <td className={`sp1_tlr_td`}>{loading ? <Placeholder /> : \r\n                    data?.page_url ?\r\n                        <a href={data.page_url} title={data.page_url} target=\"_blank\">View Link</a>\r\n                        :\r\n                        'No Link attached'\r\n                }</td>\r\n                <td className={`sp1_tlr_td`}>{loading ? <Placeholder /> : convertTime(data.total_time_spent)}</td>\r\n                <td className={`sp1_tlr_td`}>{loading ? <Placeholder /> : data.client_name}</td>\r\n                <td className={`sp1_tlr_td`}>\r\n                    {\r\n                        loading ?\r\n                            <Placeholder />\r\n                            :\r\n                            <button\r\n                                onClick={() => {\r\n                                    if (data.daily_submission_status) {\r\n                                        return;\r\n                                    }\r\n                                    setOpen((prev) => {\r\n                                        if (prev === index) {\r\n                                            return null;\r\n                                        } else {\r\n                                            return index;\r\n                                        }\r\n                                    })\r\n                                }\r\n                                }\r\n                                className={`btn btn-sm ${data.daily_submission_status ? 'btn-success' : 'btn-outline-success'}`}\r\n                            >\r\n                                {\r\n                                    data.daily_submission_status ? 'Submitted' : 'Click To Submit'\r\n                                }\r\n                            </button>\r\n                    }\r\n                </td>\r\n            </tr>\r\n            {open === index && (\r\n                <tr className={``} style={{ border: \"solid gray 1px\", borderTop: \"none\" }}>\r\n                    <td colSpan={6}>\r\n                        <form className=\"from_body openRow_bg\">\r\n\r\n                            {/* completed section names */}\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"sectionName\">\r\n                                    Completed Section Name <sup>*</sup>\r\n                                    <span\r\n                                        className=\"ml-2\"\r\n                                        data-toggle=\"tooltip\"\r\n                                        data-placement=\"top\"\r\n                                        title=\"Sections Name\"\r\n                                        data-boundary=\"window\"\r\n                                        style={{ cursor: \"pointer\" }}\r\n                                    >\r\n                                        <i className=\"fa-regular fa-circle-question\" />\r\n                                    </span>\r\n                                </label>\r\n                                <input\r\n                                    value={completedSection}\r\n                                    type=\"text\"\r\n                                    id=\"sectionName\"\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        margin: '2px 0',\r\n                                        borderRadius: '3px',\r\n                                        border: 'none',\r\n                                        fontSize: '1.2rem',\r\n                                        padding: '10px',\r\n                                        color: 'gray'\r\n                                    }}\r\n                                    onChange={(e) => setCompletedSection(e.target.value)}\r\n                                />\r\n                                {completedSectionError && <small className=\"form-text text-danger\">{completedSectionError}</small>}\r\n                            </div>\r\n\r\n                            {/* attachment url link */}\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"sectionName\">\r\n                                    Screenshots/Screen records of the sections <sup>*</sup>\r\n                                    <span\r\n                                        className=\"ml-2\"\r\n                                        data-toggle=\"tooltip\"\r\n                                        data-placement=\"top\"\r\n                                        title=\"Sections Name\"\r\n                                        data-boundary=\"window\"\r\n                                        style={{ cursor: \"pointer\" }}\r\n                                    >\r\n                                        <i className=\"fa-regular fa-circle-question\" />\r\n                                    </span>\r\n                                </label>\r\n                                <input\r\n                                    value={attachmentLink}\r\n                                    type=\"text\"\r\n                                    id=\"sectionName\"\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        margin: '2px 0',\r\n                                        borderRadius: '3px',\r\n                                        border: 'none',\r\n                                        fontSize: '1.2rem',\r\n                                        padding: '10px',\r\n                                        color: 'gray'\r\n                                    }}\r\n                                    onChange={(e) => setAttachmentLink(e.target.value)}\r\n                                />\r\n                                {attachmentLinkError && <small className=\"form-text text-danger\">{attachmentLinkError}</small>}\r\n                            </div>\r\n\r\n                            {/* upload files */}\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"exampleFormControlInput1\">\r\n                                    Attachments\r\n                                    <span\r\n                                        className=\"ml-2\"\r\n                                        data-toggle=\"tooltip\"\r\n                                        data-placement=\"top\"\r\n                                        title=\"Attachment\"\r\n                                        data-boundary=\"window\"\r\n                                        style={{ cursor: \"pointer\" }}\r\n                                    >\r\n                                        <i className=\"fa-regular fa-circle-question\" />\r\n                                    </span>\r\n                                </label>\r\n                                <FileUploader files={files} setFiles={setFiles}>\r\n                                    <FileUploader.Input />\r\n                                    <FileUploader.SelectedFiles>\r\n                                        {({ previews, onDelete }) =>\r\n                                            Array.from(previews)?.map(\r\n                                                (p, i) => (\r\n                                                    <FileUploader.Preview\r\n                                                        key={i}\r\n                                                        id={i}\r\n                                                        fileName={p.name}\r\n                                                        previewUrl={p.preview}\r\n                                                        fileType={p.type}\r\n                                                        onRemove={onDelete}\r\n                                                    />\r\n                                                )\r\n                                            )\r\n                                        }\r\n                                    </FileUploader.SelectedFiles>\r\n                                </FileUploader>\r\n                            </div>\r\n                            {/* End Upload files */}\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"exampleFormControlInput2\" style={{ maxWidth: '95%' }}>\r\n                                    Describe which sections you have worked on today <sup className=\"text-danger\">*</sup>\r\n                                    <span\r\n                                        className=\"ml-2\"\r\n                                        data-toggle=\"tooltip\"\r\n                                        data-placement=\"top\"\r\n                                        title=\"Describe What You've Done\"\r\n                                        data-boundary=\"window\"\r\n                                        style={{ cursor: \"pointer\" }}\r\n                                    >\r\n                                        <i className=\"fa-regular fa-circle-question\" />\r\n                                    </span>\r\n                                </label>\r\n\r\n                                <div\r\n                                    className=\"sp1_st_write_comment_editor\"\r\n                                    style={{ minHeight: \"100px\" }}\r\n                                >\r\n                                    <CKEditorComponent\r\n                                        value={taskDescription}\r\n                                        onChange={(e, editor) => {\r\n                                            const data = editor.getData();\r\n                                            setTaskDescription(data);\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                {taskDescriptionError && <small className=\"form-text text-danger\">{taskDescriptionError}</small>}\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <Checkbox checked={checked} onChange={(e) => setChecked(e.target.checked)} label={'Mark as Complete'} className=\"user-select-none\" />\r\n                            </div>\r\n\r\n                            <div className=\"mt-3 d-flex align-items-center\" style={{ gap: '5px' }}>\r\n                                <SubmitButton onClick={handleSubmit} isLoading={isSubmitting} title=\"Submit\" />\r\n                                {/* <SubmitButton onClick={()=>{}} isLoading={false} title=\"Submit & Mark as Complete\"></SubmitButton> */}\r\n                            </div>\r\n                        </form>\r\n                    </td>\r\n                </tr>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TodaysUpdateModalTableRow;\r\n","import api from \"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[1]!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[2]!./DailySubmission.module.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import api from \"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[1]!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[2]!./DataTable.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { useState } from \"react\";\r\nimport TodaysUpdateModalTableRow from \"./TodaysUpdateModalTableRow\";\r\nimport style from \"./styles/DailySubmission.module.css\";\r\nimport \"./styles/DataTable.css\";\r\nimport { useGetDailySubmissionQuery } from \"../../../services/api/dailySubmissionApiSlice\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { User } from \"../../../utils/user-details\";\r\n\r\nconst TodaysUpdateModalTable = () => {\r\n    const [open, setOpen] = useState(null);\r\n    const [searchParams] = useSearchParams();\r\n    const date_type = searchParams.get(\"data_type\");\r\n\r\n    const loggedUser = new User(window.Laravel?.user);\r\n\r\n    const { data, isLoading, refetch } = useGetDailySubmissionQuery(\r\n        `${loggedUser?.id}?date_type=${date_type}`\r\n    ); \r\n\r\n    return (\r\n        <div className={`sp1_tlr_tbl_wrapper`} style={{ overflow: \"auto\" }}>\r\n            <table className={`sp1_tlr_table`} style={{ minWidth: \"0\" }}>\r\n                <thead>\r\n                    <tr className={``}>\r\n                        <th className={`sp1_tlr_th`}>SL No.</th>\r\n                        <th className={`sp1_tlr_th`}>Task Name</th>\r\n                        <th className={`sp1_tlr_th`}>Page Link</th>\r\n                        <th className={`sp1_tlr_th`}>\r\n                            Total Time Spend on This Task Today\r\n                        </th>\r\n                        <th className={`sp1_tlr_th`}>Client Name</th>\r\n                        <th className={`sp1_tlr_th`} style={{ width: \"10rem\" }}>\r\n                            Action\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody className={`sp1_tlr_tbody`}>\r\n                    {/* {\r\n                        (isLoading ? [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] : data?.data).filter((d) => !d.daily_submission_status).map((d, i) => <TodaysUpdateModalTableRow data={d} key={i} index={i} open={open} setOpen={setOpen} loading={isLoading} />)\r\n                    } */}\r\n                    {(isLoading\r\n                        ? [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\r\n                        : data?.data\r\n                    ).map((d, i) => (\r\n                        <TodaysUpdateModalTableRow\r\n                            data={d}\r\n                            date={data?.date}\r\n                            key={i}\r\n                            index={i}\r\n                            open={open}\r\n                            setOpen={setOpen}\r\n                            loading={isLoading}\r\n                            refetch={refetch}\r\n                        />\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodaysUpdateModalTable;\r\n","import { useState } from \"react\";\r\n// import { Button } from \"react-bootstrap\";\r\nimport CKEditorComponent from \"../../../ckeditor\";\r\nimport FileUploader from \"../../../file-upload/FileUploader\";\r\nimport Modal from \"../../components/Modal\";\r\nimport Button from \"../../components/Button\";\r\nimport SubmitButton from \"../../components/SubmitButton\";\r\nimport TodaysUpdateModalTable from \"../daily-submission/TodaysUpdateModalTable\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport Swal from \"sweetalert2\"; \r\nimport dayjs from \"dayjs\";\r\n\r\nconst DailySubmissionControl = () => {\r\n    const [todaysUpdateModalisOpen, setTodaysUpdateModalisOpen] =\r\n        useState(false);\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const url = new URLSearchParams(location.search);\r\n \r\n\r\n    const isOpen = url.get(\"modal\") === \"daily-submission\"; \r\n\r\n\r\n     \r\n\r\n    // console.log(location);\r\n\r\n    const close = () => {\r\n        if(url.get('trigger') === 'stop-button'){\r\n            Swal.fire({\r\n                icon: \"warning\",\r\n                title: \"If you don't submit the daily submission, you won't be able to start any task on next day.\",\r\n                showConfirmButton: true,\r\n            });\r\n        }\r\n\r\n        navigate(`${location.pathname}`);\r\n        setTodaysUpdateModalisOpen(false);\r\n    };\r\n    const open = () => navigate(`${location.pathname}?modal=daily-submission&data_type=today`);\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                variant=\"tertiary\"\r\n                // onClick={toggle}\r\n                onClick={open}\r\n                className=\"d-flex align-items-center btn-outline-dark text-dark\"\r\n            >\r\n                {/* {isFetching ? <Loader title=\"Processing...\" /> : <i className=\"fa-solid fa-check\" />} */}\r\n                <span className=\"d-inline ml-1\"> Submit Today's Update </span>\r\n            </Button>\r\n\r\n            <Modal isOpen={isOpen} className=\"sp1_mark-as--modal \">\r\n                <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n                    <div\r\n                        className=\"sp1_mark-as--modal-panel\"\r\n                        style={{ overflow: \"visible\", maxWidth: \"70rem\" }}\r\n                    >\r\n                        {/* heading bar */}\r\n                        <div className=\"sp1_mark-as--modal-heading\">\r\n                            <h6 className=\"mb-0\">Submit Today's Update</h6>\r\n\r\n                            <Button aria-label=\"closeModal\" onClick={close}>\r\n                                <i className=\"fa-solid fa-xmark\" />\r\n                            </Button>\r\n                        </div>\r\n\r\n                        {/* body */}\r\n                        <div\r\n                            className=\"sp1_mark-as--modal-body px-3\"\r\n                            style={{ overflow: \"visible\" }}\r\n                        >\r\n                            <div className=\"alert alert-warning text-center\">\r\n                                If you don't submit the daily submission, you\r\n                                won't be able to start any task on next day.\r\n                            </div>\r\n\r\n                            {isOpen && <TodaysUpdateModalTable />}\r\n                            <div className=\"mt-3 d-flex align-items-center\">\r\n                                <Button\r\n                                    variant=\"tertiary\"\r\n                                    className=\"ml-auto mr-2\"\r\n                                    onClick={close}\r\n                                >\r\n                                    Close\r\n                                </Button>\r\n                                {/* <SubmitButton onClick={handleSubmit} isLoading={isSubmitting} title=\"Submit\" /> */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DailySubmissionControl;\r\n","import React from 'react'\r\n\r\nexport default function GuideLineText() {\r\n\r\n    const html = `<html><head><meta content=\"text/html; charset=UTF-8\" http-equiv=\"content-type\"><style type=\"text/css\">ol{margin:0;padding:0}table td,table th{padding:0}.c4{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:\"Arial\";font-style:normal}.c0{padding-top:0pt;padding-bottom:0pt;line-height:1.15;orphans:2;widows:2;text-align:left}.c5{background-color:#ffffff;max-width:468pt;padding:72pt 72pt 72pt 72pt}.c2{height:11pt}.c3{font-style:italic}.c1{font-weight:700}.title{padding-top:0pt;color:#000000;font-size:26pt;padding-bottom:3pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}.subtitle{padding-top:0pt;color:#666666;font-size:15pt;padding-bottom:16pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}li{color:#000000;font-size:11pt;font-family:\"Arial\"}p{margin:0;color:#000000;font-size:11pt;font-family:\"Arial\"}h1{padding-top:20pt;color:#000000;font-size:20pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h2{padding-top:18pt;color:#000000;font-size:16pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h3{padding-top:16pt;color:#434343;font-size:14pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h4{padding-top:14pt;color:#666666;font-size:12pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h5{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h6{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.15;page-break-after:avoid;font-style:italic;orphans:2;widows:2;text-align:left}</style></head><body class=\"c5 doc-content\"><p class=\"c0\"><span>Other than all the old fields, we have introduced the task type and page type fields in the new subtask creation form. Here is a guide for you so you know when to choose which one: <br><br></span><span class=\"c1\">1. New page design:</span><span>&nbsp;When you are going to need any new pages developed (except for cloning for example duplicating a service page to create 20 more service pages and cases like this), you should select this one. It has 2 subdivisions in the next field: <br><br></span><span class=\"c1\">A. Primary page development:</span><span class=\"c4\">&nbsp;All the pages on the website that are money pages (can generate money or revenue), require significant effort to be developed and clients usually remain very picky about them and don&rsquo;t want to compromise anything in those pages are what we are calling primary pages. Primary pages will have these elements mandatorily: <br> &nbsp; &nbsp; They have to be money pages like home, product, service, collection etc. </span></p><p class=\"c0\"><span class=\"c4\">&nbsp; &nbsp; &nbsp;*Most of the traffic will be on these pages <br> &nbsp; &nbsp; They have not less than 6 sections and every section has to be well designed<br> &nbsp; &nbsp; Homepage should be always counted as a primary page. <br> &nbsp; &nbsp; The developers will have to put significant effort to build them</span></p><p class=\"c0\"><span>&nbsp; &nbsp; &nbsp;*The clients will be serious/picky about these pages and won&#39;t accept unless they are perfect. <br><br></span><span class=\"c1\">Rough numbers of primary page on a website:</span><span>&nbsp;Not more than 3 (Except for very rare cases)<br><br></span><span class=\"c1\">Example:</span><span>&nbsp;Home, product page and collection pages for woocommerce/shopify; home, service category and service page for service websites; Home, property buy/sale listing pages for a real estate broker site and like this. <br><br><br>B. </span><span class=\"c1\">Secondary page development:</span><span class=\"c4\">&nbsp;All the relatively less important pages on the site should go to secondary pages. The characteristics include: <br> &nbsp;*They don&rsquo;t generate money necessarily, they are needed for customers&#39; trust, information and other things. For example, about us, shipping policy, FAQ, return policy etc. <br> &nbsp;*They have less than 6 sections, for example contact us. <br> &nbsp;*Require less efforts from the developers to develop them.<br> &nbsp;*In many cases, developers can directly use the template with minimum customization. For example, cart, checkout pages on ecommerce sites. </span></p><p class=\"c0\"><span>&nbsp; *The clients will be less serious about them as these pages are not super sensitive. <br><br><br>2. </span><span class=\"c1\">Cloning existing design: <br></span><span class=\"c4\">Any cloning/duplication job that needs to be done in bulk should go under this. Example include: <br><br>A. Creating 20 service pages from 1 service page just by changing the content and the picture. <br>B. Creating/uploading 300 products after the product page will be developed initially. </span></p><p class=\"c0\"><span class=\"c4\">C. Creating 70 location pages from 1 page template finalized initially. <br><br>These tasks can be assigned to junior most persons in the team as these are identical to data entry works. <br><br></span></p><p class=\"c0\"><span>3. </span><span class=\"c1\">Others: </span><span><br>Under others, there are some other work types which you can select depending on your needs. <br><br>Choosing any task as the primary task will require authorization from team lead/management and the task will be assigned to the developers after the authorization part will be done. Declare any page as a primary page carefully as we are going to set up a point system for the developers where developers will get more points for the primary pages when compared to the secondary pages. So declaring any page as a primary page when it will take almost no effort to create can give the respective developer an unfair edge over the rest of him team members. <br><br></span><span class=\"c1\">P.S. </span><span class=\"c1 c3\">Other than these, we have added a new field named page url in the subtask creation form. So from now, you have to define the urls where the developers will work when assigning a task. It&rsquo;s important that the developers don&#39;t choose urls/permalinks randomly and you declare them beforehand and they use them mandatorily. <br><br></span><span class=\"c1\">Naming Criteria<br></span><span class=\"c4\">Make sure the subtask names are self explanatory so you or anyone else from the management knows what the subtask was about from its name. <br><br>For example, if the task name is &ldquo;Homepage&rdquo;, and if you have to break it into parts for obvious reasons, the subtask names should be as below: <br>Homepage mockup design (XD)</span></p><p class=\"c0\"><span class=\"c4\">Creating a custom slider for the homepage</span></p><p class=\"c0\"><span class=\"c4\">Converting XD to wordpress for the homepage</span></p><p class=\"c0 c2\"><span class=\"c4\"></span></p><p class=\"c0 c2\"><span><br><br><br></span></p></body></html>`\r\n  return (\r\n    <div dangerouslySetInnerHTML={{__html: html}}/>\r\n  )\r\n}\r\n","import { useState } from \"react\";\r\nimport Modal from \"../../components/Modal\";\r\nimport Button from \"../../components/Button\";\r\nimport GuideLineText from \"./subtask_creation_guide/GuideLineText\";\r\n\r\n\r\nexport default function SubtaskCreationControl({ className }) {\r\n  const [subtaskCreationModalIsOpen, setSubtaskCreationModalIsOpen] = useState(false);\r\n\r\n\r\n    // console.log(location);\r\n\r\n    const close = () => setSubtaskCreationModalIsOpen(false);\r\n    const open = () => setSubtaskCreationModalIsOpen(true);\r\n\r\n    return (\r\n        <div className={` ${className}`} >\r\n            <Button\r\n                variant=\"tertiary\"\r\n                // onClick={toggle}\r\n                onClick={open}\r\n                className=\"d-flex align-items-center btn-outline-dark text-dark\"\r\n            >\r\n                {/* {isFetching ? <Loader title=\"Processing...\" /> : <i className=\"fa-solid fa-check\" />} */}\r\n                <span className=\"d-inline ml-1\"> Subtask creation guide </span>\r\n            </Button>\r\n\r\n            <Modal isOpen={subtaskCreationModalIsOpen} className=\"sp1_mark-as--modal \">\r\n                <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n                    <div\r\n                        className=\"sp1_mark-as--modal-panel\"\r\n                        style={{ overflow: \"visible\", maxWidth: \"70rem\" }}\r\n                    >\r\n                        {/* heading bar */}\r\n                        <div className=\"sp1_mark-as--modal-heading\">\r\n                            <h6 className=\"mb-0 ml-2\" style={{fontStyle:'normal',fontWeight:'bold'}}>Subtask creation guide</h6>\r\n\r\n                            <Button aria-label=\"closeModal\" onClick={close}>\r\n                                <i className=\"fa-solid fa-xmark\" />\r\n                            </Button>\r\n                        </div>\r\n\r\n                        {/* body */}\r\n                        <div\r\n                            className=\"sp1_mark-as--modal-body px-3\"\r\n                            style={{ overflow: \"visible\" }}\r\n                        >\r\n                            \r\n                            <div style={{maxHeight:'80vh',overflow:'auto',padding:'0 20px 0 0'}}>\r\n                                <GuideLineText />\r\n                            </div>\r\n\r\n                            <div className=\"mt-3 d-flex align-items-center\">\r\n                                <Button\r\n                                    variant=\"tertiary\"\r\n                                    className=\"ml-auto mr-2\"\r\n                                    onClick={close}\r\n                                >\r\n                                    Close\r\n                                </Button>\r\n                                {/* <SubmitButton onClick={handleSubmit} isLoading={isSubmitting} title=\"Submit\" /> */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport TimerControl from \"./TimerControl\";\r\nimport MarkAsComplete from \"./MarkAsComplete\";\r\nimport {\r\n    timeControlPermision,\r\n    markAsCompletedButtonPermission,\r\n    taskEditPermision,\r\n    approveButtonPermission,\r\n    needRevisionPermision,\r\n    revisionButtonPermission,\r\n} from \"../../permissions\";\r\nimport RevisionControl from \"./Revision/RevisionControl\";\r\nimport RevisionViewControl from \"./Revision/RevisionViewControl\";\r\nimport ApproveTask from \"./approve-task/ApproveTask\";\r\nimport ClientApproval from \"./client-approval/ClientApproval\";\r\nimport ReportControl from \"./report/Report\";\r\nimport { User } from \"../../../utils/user-details\";\r\nimport _ from \"lodash\";\r\nimport { useDeveloperCanCompleteTaskQuery, useLazyCheckSubTaskTimerQuery } from \"../../../services/api/SingleTaskPageApi\";\r\nimport DailySubmissionControl from './DailySubmissionControl';\r\nimport SubtaskCreationControl from \"./SubtaskCreationControl\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst TaskAction = ({ task, status }) => {\r\n    const loggedUser = new User(window?.Laravel?.user);\r\n    const [timerStart, setTimerStart] = React.useState(false);\r\n\r\n\r\n    const [checkSubTaskTimer, { isFetching }] = useLazyCheckSubTaskTimerQuery();\r\n\r\n    const {  data: checkMarkAsCompleteEnableStatus, isLoading: isLoadingCompleteCheck } = useDeveloperCanCompleteTaskQuery(task?.id, {skip: !task.id});\r\n    const ENABLE_MARKASCOMPLETE_BUTTON = task && (task?.isSubtask ? checkMarkAsCompleteEnableStatus?.message === \"Developer can complete this task\" : true);\r\n\r\n    // console.log({task});\r\n\r\n\r\n    const onModalEditButtonClick = (e) => {\r\n        e.preventDefault();\r\n        checkSubTaskTimer(task?.id)\r\n            .unwrap()\r\n            .then((res) => {\r\n                if (res?.status === 200) {\r\n                    window.location = `/account/tasks/${task?.id}/edit`;\r\n                } else {\r\n                    Swal.fire({\r\n                        icon: \"error\",\r\n                        title: \"Oops...\",\r\n                        text: \"You cannot edit the task because timer is already running\",\r\n                    });\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    let time = task.isSubtask ? task?.parentTaskTimeLog : task?.totalTimeLog;\r\n\r\n    return (\r\n        <div\r\n            className=\"d-flex flex-wrap border-bottom pb-3 sp1_task_btn_group\"\r\n            style={{ gap: \"10px\" }}\r\n        >\r\n            {/* with permission */}\r\n            {timeControlPermision({ task, status, loggedUser }) ? (\r\n                <TimerControl\r\n                    task={task}\r\n                    timerStart={timerStart}\r\n                    setTimerStart={setTimerStart}\r\n                    auth={loggedUser}\r\n                />\r\n            ) : null}\r\n            {!timerStart && !isLoadingCompleteCheck &&\r\n            ENABLE_MARKASCOMPLETE_BUTTON && markAsCompletedButtonPermission({ task, status, loggedUser }) ? (\r\n                <MarkAsComplete task={task} auth={loggedUser} />\r\n            ) : null}\r\n\r\n\r\n            {/* develop */}\r\n            {approveButtonPermission({ task, status, loggedUser }) ? (\r\n                <ApproveTask task={task} status={status} auth={loggedUser} />\r\n            ) : null}\r\n            {needRevisionPermision({ task, status, loggedUser }) ? (\r\n                <RevisionControl task={task} auth={loggedUser} />\r\n            ) : null}\r\n\r\n            {/*  */}\r\n            {revisionButtonPermission({ task, status, loggedUser }) && (\r\n                <RevisionViewControl\r\n                    task={task}\r\n                    status={status}\r\n                    auth={loggedUser}\r\n                />\r\n            )}\r\n            {/* <TimeExtension task={task} /> */}\r\n            <ClientApproval task={task} status={status} auth={loggedUser} />\r\n\r\n             {/* daily submission control */}\r\n             {_.includes([5, 9, 10], loggedUser?.getRoleId()) && (\r\n                <DailySubmissionControl />\r\n             )}\r\n\r\n\r\n\r\n            {/* right side button container */}\r\n            <div style={{display:'inline-flex',marginLeft:'auto',gap:'0 10px'}}>\r\n\r\n                {/* Subtask creation guideline */}\r\n                {_.includes([6, 4, 1], loggedUser?.getRoleId()) && !task?.isSubtask &&  <SubtaskCreationControl />}\r\n\r\n\r\n                {/*********** Report Control ***********/}\r\n                {_.includes([6, 5, 9, 10], loggedUser?.getRoleId()) && (\r\n                    <ReportControl task={task} />\r\n                )}\r\n\r\n\r\n                {/* {taskEditPermision({ task, status, auth: loggedUser }) && (\r\n                    <Link\r\n                        to={`?modal=edit&task=${task?.id}`}\r\n                        onClick={onModalEditButtonClick}\r\n                        className=\"cnx__btn cnx__btn_sm cnx__btn_primary sp1_task-edit-button\"\r\n                        style={{\r\n                            marginLeft: 'none'\r\n                        }}\r\n                    >\r\n                        {isFetching ? (\r\n                            <div\r\n                                className=\"spinner-border text-dark ml-2\"\r\n                                role=\"status\"\r\n                                style={{\r\n                                    width: \"16px\",\r\n                                    height: \"16px\",\r\n                                    border: \"0.14em solid rgb(255, 255, 255)\",\r\n                                    borderRightColor: \"transparent\",\r\n                                }}\r\n                            />\r\n                        ) : (\r\n                            <i className=\"fa-regular fa-pen-to-square\"></i>\r\n                        )}\r\n                        <span className=\"ml-1 mr-2\">Edit</span>\r\n                    </Link>\r\n                )} */}\r\n\r\n                {task &&  task.boardColumn.id === 2 && !(_.includes([5, 6], loggedUser?.getRoleId()))  &&\r\n                    <Link\r\n                        to={`?modal=edit&task=${task?.id}`}\r\n                        className=\"cnx__btn cnx__btn_sm cnx__btn_primary sp1_task-edit-button\"\r\n                        style={{\r\n                            marginLeft: 'none'\r\n                        }}\r\n                    >\r\n                        <i className=\"fa-regular fa-pen-to-square\" />\r\n                        Edit\r\n                    </Link>\r\n                }\r\n            </div>\r\n\r\n            {/* {{-- 3 dot --}} */}\r\n            {/* <button type=\"button\" className=\"d-flex align-items-center btn btn-sm btn-outline-dark mr-2 border-0 ml-auto\">\r\n                <i className=\"bi bi-three-dots\" ></i>\r\n            </button> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TaskAction;\r\n","import { User } from \"../../../utils/user-details\";\r\nimport dayjs from 'dayjs';\r\n\r\nconst TableRow = ({log}) => {\r\n    const user = log?.user ? new User(log.user) : null;\r\n    return(\r\n        <tr className='__tbody_tr'>\r\n            <td className='__tbody_td _tbody_td_employee'>\r\n                <img src={user?.getAvatar()} alt={user?.getName()} />\r\n                <span className='px-2'>{user?.getName()}</span>\r\n            </td>\r\n\r\n            <td className='__tbody_td _tbody_td_start_time'>\r\n                {dayjs(log?.start_time).format('MMM DD, YYYY')} <br/>\r\n                {dayjs(log?.start_time).format('hh:mm a')}\r\n            </td>\r\n\r\n            <td className='__tbody_td _tbody_td_start_time _tbody_td_start_end'>\r\n                {log?.end_time ? <>\r\n                    {dayjs(log?.end_time).format('MMM DD, YYYY')} <br/>\r\n                    {dayjs(log?.end_time).format('hh:mm a')}\r\n                </> : <span className='text-success font-weight-bold'>Active</span>}\r\n            </td>\r\n\r\n            <td className='__tbody_td _tbody_td_memo'>\r\n                {log?.memo}\r\n            </td>\r\n\r\n            <td className='__tbody_td _tbody_td_hour_logged'>\r\n                {log?.hours_logged}\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default TableRow\r\n","import React from \"react\";\r\nimport CustomModal from \"../../components/CustomModal\";\r\nimport Modal from '../../components/Modal';\r\n\r\nimport { useClickAway, useWindowSize } from \"react-use\";\r\nimport TableRow from \"./InnerTableRow\";\r\nimport _ from \"lodash\";\r\nimport Avatar from \"../../../global/Avatar\";\r\nimport { User } from \"../../../utils/user-details\";\r\nimport dayjs from \"dayjs\";\r\nimport Button from \"../../components/Button\";\r\n\r\n\r\n\r\n\r\nconst Table = ({data}) => {\r\n    return(\r\n        <table className=\"sp1_subtask_log-tbl\">\r\n            <thead className=\"__thead\">\r\n                <tr>\r\n                    <th>Employee</th>\r\n                    <th>Start Time</th>\r\n                    <th>End Time</th>\r\n                    <th>Memo</th>\r\n                    <th>Hours Logged</th>\r\n                </tr>\r\n            </thead>\r\n\r\n            <tbody className=\"__tbody\">\r\n                {data\r\n                    ? data.map((log) => (\r\n                        <TableRow key={log.id} log={log} />\r\n                    ))\r\n                    : null}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\n\r\nconst Card = ({log, className}) => {\r\n    const user = new User(log.user);\r\n    return(\r\n        <div className={`border-bottom ${className}`}>\r\n            <div className=\"d-flex align-items-center\" style={{gap:'10px'}}>\r\n                <Avatar \r\n                    src={user?.getAvatar()} \r\n                    name={user?.getName()} \r\n                    alt={user?.getName()} \r\n                    type=\"circle\"\r\n                /> \r\n                <h6>{user?.getName()}</h6>\r\n            </div>\r\n            <div className=\"d-flex flex-column flex-wrap ml-5\" style={{gap: '4px'}}>\r\n                <span><span className=\"font-weight-bold\">Memo:</span> {log?.memo}</span>\r\n                <span><span className=\"font-weight-bold\">Hours Logged:</span> {log?.hours_logged}</span>\r\n                <span><span className=\"font-weight-bold\">Start Time:</span> {dayjs(log?.start_time).format('MMM DD, YYYY hh:mm a')} </span>\r\n                <span><span className=\"font-weight-bold\">End Time:</span> {dayjs(log?.end_time).format('MMM DD, YYYY hh:mm a')} </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst CardView = ({data}) => {\r\n    return(\r\n        <div className=\"d-flex flex-column\" style={{gap: '10px'}}>\r\n            {_.map(data, (log) =>(\r\n                    <Card log={log} key={log.id} className=\"w-100 py-2\" />\r\n                ))}\r\n        </div>\r\n    )\r\n}\r\n\r\n \r\nconst TimeLogTable = ({ isOpen, close, toggle, data = [] }) => {\r\n    const ref = React.useRef(null);\r\n    const {width: deviceWidth} = useWindowSize();\r\n    useClickAway(ref, close);\r\n\r\n\r\n\r\n    const content = () => {\r\n        return (\r\n            <div ref={ref} className=\"sp1-subtask-form --modal-panel\"> \r\n                <div className='sp1-subtask-form --modal-panel-header'> \r\n                    <h6>Session Logs</h6> \r\n                    <Button\r\n                        aria-label=\"close-modal\"\r\n                        className='_close-modal'\r\n                        onClick={close}\r\n                    >\r\n                        <i className=\"fa-solid fa-xmark\" />\r\n                    </Button> \r\n                </div>\r\n\r\n                <div className=\"sp1-subtask-form --modal-panel-body\">\r\n                    <div className=\"mt-3\">\r\n                        {deviceWidth > 800 ? <Table data={data} />: <CardView data={data} />}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    if(deviceWidth > 1200){\r\n        return (\r\n            <CustomModal isOpen={isOpen} toggleRef={toggle}>\r\n                <React.Fragment>{content()}</React.Fragment>       \r\n            </CustomModal>\r\n        );\r\n    }else{\r\n        return (\r\n            <Modal isOpen={isOpen}>\r\n                <React.Fragment>{content()}</React.Fragment>       \r\n            </Modal>\r\n        );\r\n    }\r\n\r\n};\r\nexport default TimeLogTable;\r\n","import React from 'react'\r\nimport { Placeholder } from '../../../global/Placeholder'\r\n\r\nconst TimeLogItemLoader = ({}) => {\r\n\r\n  return (\r\n    <div className=\"d-flex align-items-center justify-content-between sp1_tark_right_item py-2\" style={{gap: '10px', height: '30px'}}>\r\n        <div className='d-flex align-items-center'>\r\n            <Placeholder width=\"24px\" height=\"24px\" type='circle' className='mr-2' />\r\n            <span className='sp1_time_log_emplyee_name'>\r\n                <Placeholder width='100px' />\r\n            </span>\r\n        </div> \r\n\r\n        <div>\r\n            <Placeholder height=\"10px\" width='50px' />\r\n        </div> \r\n        <div>\r\n            <Placeholder height=\"10px\" width='50px' />\r\n        </div>\r\n        <div>\r\n            <Placeholder height=\"10px\" width='50px' />\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TimeLogItemLoader","import React, {lazy, Suspense} from 'react'\r\nconst TimeLogItem = lazy(() => import('./TimeLogItem'));\r\nimport TimeLogTable from './TimeLogTable';\r\nimport { useDispatch, useSelector } from 'react-redux'; \r\nimport { useLazyGetTaskDetailsQuery } from '../../../services/api/SingleTaskPageApi';\r\nimport { storeTimeLogs } from '../../../services/features/subTaskSlice';\r\nimport { Placeholder } from '../../../global/Placeholder';\r\nimport TimeLogItemLoader from './TimeLogItemLoader';\r\nimport _ from 'lodash';\r\n\r\n\r\nconst fetcher = (url) => axios.get(url).then(res => res.data); \r\n\r\n\r\nconst TimeLogSection = () => {\r\n  const {task, timeLogs} = useSelector(s => s.subTask);\r\n  const [modalRefButton, setModalRefButton] = React.useState(null); \r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  \r\n  // get data\r\n    // fetch all task \r\n    const [getTaskDetails, {isFetching}] = useLazyGetTaskDetailsQuery('', {\r\n      skip: timeLogs?.length\r\n    }) \r\n  \r\n    // if task notes fetch completed store data into redux store\r\n    React.useEffect(()=> {\r\n      if(task && task.id){\r\n        getTaskDetails(`/${task?.id}/json?mode=task_time_log`)\r\n        .unwrap()\r\n        .then(res => {\r\n          if(res){\r\n            dispatch(storeTimeLogs(res));\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n      } \r\n    }, [task]); \r\n    \r\n\r\n    // control modal\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  const close = () => setIsOpen(false);\r\n\r\n  return (\r\n    <div className='sp1_task_right_card mb-3'  \r\n    ref={setModalRefButton} style={{zIndex: isOpen ? '99' : ''}}>\r\n        <div className='d-flex border-bottom pb-2 align-items-center justify-content-between mb-2 font-weight-bold'>\r\n        <span className=\"f-16\">Session Logs</span> \r\n        {isFetching && \r\n                <div \r\n                    className=\"spinner-border text-dark ml-2 mr-auto\" \r\n                    role=\"status\"\r\n                    style={{\r\n                        width: '16px',\r\n                        height: '16px',\r\n                        border: '0.14em solid rgba(0, 0, 0, .25)',\r\n                        borderRightColor: 'transparent' \r\n                    }}\r\n                />\r\n          }\r\n        </div>\r\n\r\n\r\n        {/* side drop toggle button */}\r\n        {_.size(timeLogs) > 0 &&\r\n          <button \r\n              aria-label='openCommentModalButton'\r\n              className='sp1_task_right_dl_toggle'\r\n              onClick={toggle}\r\n              style={{zIndex: isOpen ? 110 : ''}}\r\n            >\r\n              <i \r\n                className={`fa-solid fa-circle-chevron-${ isOpen ? 'right' : 'left'}`} \r\n                style={{color: \"#276fec\"}} \r\n              />\r\n          </button>}\r\n        {/* side drop toggle button end */}\r\n\r\n\r\n          <TimeLogTable\r\n            isOpen={isOpen}\r\n            close={close}\r\n            toggle={modalRefButton}\r\n            data={timeLogs}\r\n          />\r\n\r\n\r\n        <div className=\"sp1_task_right_card--body\">\r\n          { _.size(timeLogs) > 0 ?\r\n            _.map(timeLogs, log => (\r\n              <React.Fragment key={log.id}>\r\n                <Suspense fallback={<TimeLogItemLoader />}>\r\n                  <TimeLogItem log={log}/>\r\n                </Suspense>\r\n              </React.Fragment>\r\n            )):\r\n            <div\r\n                className=\"d-flex align-items-center justify-content-center\"\r\n                style={{\r\n                    color: \"#B4BCC4\",\r\n                    fontSize: \"15px\",\r\n                    textAlign: \"center\",\r\n                    height: \"100%\",\r\n                    width: \"100%\",\r\n                }}\r\n            >\r\n                No Logged Session is Available\r\n            </div>\r\n          } \r\n        </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TimeLogSection","import api from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[1]!../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[2]!./task-edit-form.module.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import React, { useState, useEffect } from \"react\";\r\nimport _ from \"lodash\";\r\nimport Modal from \"../../components/Modal\";\r\nimport { useLocation, useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport Card from \"../../../global/Card\";\r\nimport styles from \"./task-edit-form.module.css\";\r\nimport { CompareDate } from \"../../../utils/dateController\";\r\nimport Input from \"../../components/form/Input\";\r\nimport DatePicker from \"../comments/DatePicker\";\r\nimport CKEditorComponent from \"../../../ckeditor\";\r\nimport Button from  '../../../global/Button'\r\nimport TaskCategorySelectionBox from \"./TaskCategorySelectionBox\";\r\nimport AssignedToSelection from \"./AssignedToSelection\";\r\nimport PrioritySelection from \"./PrioritySelection\";\r\nimport UploadFilesInLine from \"../../../file-upload/UploadFilesInLine\";\r\n\r\nimport {\r\n    useDeleteUplaodedFileMutation,\r\n    useGetTaskDetailsQuery,\r\n    useEditSubtaskMutation,\r\n} from \"../../../services/api/SingleTaskPageApi\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { storeSubTasks } from \"../../../services/features/subTaskSlice\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useUpdateTaskMutation } from \"../../../services/api/tasksApiSlice\";\r\nimport { useGetMilestoneDetailsQuery, useLazyGetMilestoneDetailsQuery } from \"../../../services/api/projectApiSlice\";\r\nimport { Listbox } from \"@headlessui/react\";\r\nimport Loader from \"../../../global/Loader\";\r\nimport { convertTime } from \"../../../utils/converTime\";\r\n\r\nconst dayjs = new CompareDate();\r\n\r\n// Edit form Provider\r\nconst EditFormProvider = ({ task }) => {\r\n    const [searchParams] = useSearchParams(); // get search params\r\n    const isVisible = searchParams.get(\"modal\") === \"edit\"; // check has modal\r\n    const taskId = searchParams.get(\"task\"); // get task id\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    const close = () => navigate(location.pathname, {replace: true});\r\n\r\n\r\n    const [updateTask, { isLoading, error }] = useUpdateTaskMutation();\r\n    // handle submission\r\n    const handleSubmission = (formData) => {\r\n        updateTask(formData).unwrap().then(res => {\r\n            if(res?.status === 200){\r\n                toast.success(\"Task Updated successfully!\");\r\n                close();\r\n            }\r\n        }).catch((err) => {\r\n            if(err?.status === 422){\r\n                toast.warn(\"Please fill out all required fields\")\r\n            }\r\n        })\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <Modal isOpen={isVisible}>\r\n            <Card className={styles.form_card}>\r\n                <Card.Head\r\n                  onClose={close}\r\n                  className={styles.form_card_head}\r\n                >\r\n                    <h6> Edit Task # {taskId} </h6>\r\n                </Card.Head>\r\n\r\n                <Card.Body className={styles.form_card_body}>\r\n                    <div className=\"\">\r\n                        {task && (\r\n                            <TaskEditForm\r\n                                task={task}\r\n                                onSubmit={handleSubmission}\r\n                                isLoading={isLoading}\r\n                                onClose={close}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default EditFormProvider;\r\n\r\nconst TaskEditForm = ({ task, onSubmit, isLoading, onClose}) => {\r\n    const editDataIsFetching = !task;\r\n    //form data\r\n    const [title, setTitle] = useState(task.title);\r\n    const [milestone, setMilestone] = useState({id: task.milestoneID, milestone_title: task.milestoneTitle});\r\n    const [parentTask, setParentTask] = useState(task.parentTaskTitle);\r\n    const [startDate, setStateDate] = useState(new Date(task.startDate));\r\n    const [dueDate, setDueDate] = useState(new Date(task.dueDate));\r\n    const [project, setProject] = useState(task.projectName);\r\n    const [taskCategory, setTaskCategory] = useState({\r\n        id: task.category.id,\r\n        category_name: task.category.name,\r\n    });\r\n    const [assignedTo, setAssignedTo] = useState({\r\n        id: task.assigneeTo.id,\r\n        name: task.assigneeTo.name,\r\n    });\r\n    const [description, setDescription] = useState(task.description);\r\n    const [priority, setPriority] = useState(task.priority);\r\n    const [estimateTimeHour, setEstimateTimeHour] = useState(\r\n        task.estimateHours\r\n    );\r\n    const [estimateTimeMin, setEstimateTimeMin] = useState(\r\n        task.estimateMinutes\r\n    );\r\n    const [attachedFiles, setAttachedFiles] = useState([]);\r\n    const [files, setFiles] = React.useState([]);\r\n    const [error, setError] = useState(null);\r\n\r\n    const { data: estimation, isFetching } = useGetTaskDetailsQuery(\r\n        `/${task.id}/json?mode=estimation_time`\r\n    );\r\n\r\n    const required_error = error?.status === 422 ? error?.data : null;\r\n\r\n    // handle onchange\r\n    const handleChange = (e, setState) => {\r\n        e.preventDefault();\r\n        let value = e.target.value;\r\n        setState(value);\r\n    };\r\n\r\n\r\n    // check validation\r\n    const isValid = () => {\r\n      let count = 0;\r\n      const err = new Object();\r\n\r\n      const errorMessages = {\r\n        requiredField: 'This field is required.',\r\n        startDate: 'Please select a start date.',\r\n        dueDate: 'Please select a due date.',\r\n        taskCategory: 'Please select a task category.',\r\n        assignedTo: 'Please select a user.',\r\n        overloadedUser: (name, gender) =>\r\n          `You cannot assign this task to ${name} because ${\r\n            gender === 'male' ? 'he ' : 'she '\r\n          } has more than 10 submittable tasks.`,\r\n        description: 'This field is required.',\r\n      };\r\n\r\n      const showError = (field) => {\r\n        err[field] = errorMessages[field];\r\n        count++;\r\n      }\r\n\r\n\r\n      if(!title) showError('title');\r\n      if(!startDate) showError('startDate');\r\n      if(!dueDate) showError('dueDate');\r\n      if(!taskCategory) showError('taskCategory');\r\n      if(!assignedTo) showError('assignedTo');\r\n\r\n      if (assignedTo && assignedTo?.isOverloaded) {\r\n        err.assignedTo = overloadedUser(assignedTo.name, genderPronoun);\r\n        count++;\r\n      }\r\n\r\n      if(!description) showError('description');\r\n\r\n      setError(error);\r\n      return count === 0;\r\n\r\n    }\r\n\r\n\r\n\r\n    const handleSubmit = () => {\r\n         //form data\r\n         const _startDate = dayjs.dayjs(startDate).format(\"DD-MM-YYYY\");\r\n         const _dueDate = dayjs.dayjs(dueDate).format(\"DD-MM-YYYY\");\r\n\r\n         const fd = new FormData();\r\n         fd.append(\"milestone_id\", task?.milestoneID);\r\n         fd.append(\"task_id\", task?.id);\r\n         fd.append(\"heading\", title);\r\n         fd.append(\"start_date\", _startDate);\r\n         fd.append(\"due_date\", _dueDate);\r\n         fd.append(\"project_id\", task?.projectId);\r\n         fd.append(\"category_id\", taskCategory?.id);\r\n         fd.append(\"user_id\", assignedTo?.id);\r\n         fd.append(\"description\", description);\r\n         fd.append(\"board_column_id\", task?.boardColumn.id);\r\n         fd.append(\"priority\", _.lowerCase(priority));\r\n         fd.append(\"estimate_hours\", estimateTimeHour);\r\n         fd.append(\"estimate_minutes\", estimateTimeMin);\r\n         fd.append(\"deliverable_id\", milestone?.deliverable_type ?? '');\r\n         fd.append(\"image_url\", null);\r\n         fd.append(\"addedFiles\", null);\r\n         fd.append(\"_method\", \"POST\");\r\n         fd.append(\r\n             \"_token\",\r\n             document\r\n                 .querySelector(\"meta[name='csrf-token']\")\r\n                 .getAttribute(\"content\")\r\n         );\r\n         Array.from(files).forEach((file) => {\r\n             fd.append(\"file[]\", file);\r\n         });\r\n\r\n        if(isValid()){\r\n         onSubmit(fd);\r\n        }else{\r\n         toast.warn('Please fill out all required fields!');\r\n        }\r\n\r\n    };\r\n\r\n\r\n      const {data: projects, isFetching: isFetchingMilestone} = useGetMilestoneDetailsQuery(task?.projectId)\r\n\r\n\r\n\r\n    // handle uploaded file delete request\r\n    const [deleteUplaodedFile] = useDeleteUplaodedFileMutation();\r\n    const handleFileDelete = (e, file) => {\r\n        // delete\r\n        deleteUplaodedFile(file?.id).unwrap();\r\n\r\n        // delete form ui\r\n        let previousFile = [...attachedFiles];\r\n        let index = previousFile?.indexOf(file);\r\n        previousFile.splice(index, 1);\r\n        setAttachedFiles(previousFile);\r\n    };\r\n\r\n    // handle loading state\r\n    React.useEffect(() => {\r\n        if (isLoading || editDataIsFetching) {\r\n            document.getElementsByTagName(\"body\")[0].style.cursor = \"progress\";\r\n        } else {\r\n            document.getElementsByTagName(\"body\")[0].style.cursor = \"default\";\r\n        }\r\n    }, [isLoading, editDataIsFetching]);\r\n\r\n    //   editor\r\n    const handleEditorChange = (e, editor) => {\r\n        const data = editor.getData();\r\n        setDescription(data);\r\n    };\r\n\r\n    const estimateError = (err) => {\r\n        let errText = \"\";\r\n        let hoursErr = err?.estimate_hours?.[0];\r\n        let minErr = err?.estimate_minutes?.[0];\r\n        if (hoursErr) errText += hoursErr;\r\n        if (minErr) errText += minErr;\r\n        return errText;\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"sp1-subtask-form --modal-panel-body position-relative\">\r\n                {editDataIsFetching && (\r\n                    <div\r\n                        className=\"w-100\"\r\n                        style={{\r\n                            width: \"100%\",\r\n                            height: \"100%\",\r\n                            position: \"absolute\",\r\n                            top: 0,\r\n                            left: 0,\r\n                            zIndex: 1,\r\n                        }}\r\n                    />\r\n                )}\r\n                <div className=\"sp1-subtask-form --form row\">\r\n                    <div className=\"col-6\">\r\n                        <Input\r\n                            id=\"title\"\r\n                            label=\"Title\"\r\n                            type=\"text\"\r\n                            placeholder=\"Enter a task title\"\r\n                            name=\"title\"\r\n                            required={true}\r\n                            value={title}\r\n                            error={required_error?.title?.[0]}\r\n                            onChange={(e) => handleChange(e, setTitle)}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label\r\n                                className={`f-14 text-dark-gray mb-1`}\r\n                                data-label=\"true\"\r\n                            >\r\n                                Project\r\n                            </label>\r\n                            <input\r\n                                className={`form-control height-35 f-14`}\r\n                                readOnly\r\n                                defaultValue={project}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    {/* Project Milestone Selection Menu */}\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <Listbox value={milestone} onChange={setMilestone}>\r\n                            <div className=\"form-group position-relative my-3\">\r\n                                <label\r\n                                    className={`f-14 text-dark-gray mb-1`}\r\n                                    data-label=\"true\"\r\n                                >\r\n                                    Milestone\r\n                                </label>\r\n                                <Listbox.Button className=\" sp1-selection-display-button form-control height-35 f-14 sp1-selection-display bg-white w-100\">\r\n                                    <span className=\"singleline-ellipsis\" >{milestone?.milestone_title ?? '--'}</span>\r\n                                    <div className='__icon'>\r\n                                        <i className=\"fa-solid fa-sort\"></i>\r\n                                    </div>\r\n                                </Listbox.Button>\r\n                                <Listbox.Options  className=\"sp1-select-options\">\r\n                                    {isFetchingMilestone && <span className=\"w-full d-block py-2 px-3\">Loading...</span>}\r\n\r\n                                    {_.map(projects?.milestones, (milestone) => (\r\n                                        <Listbox.Option\r\n                                            key={milestone.id}\r\n                                            className={({ active }) =>  `sp1-select-option ${styles.list_border}${ active ? 'active' : ''}`}\r\n                                            value={milestone}\r\n                                        >\r\n                                          {milestone?.milestone_title}\r\n                                        </Listbox.Option>\r\n                                    ))}\r\n                                </Listbox.Options>\r\n\r\n                                {error?.milestone && (\r\n                                    <div style={{ color: \"red\" }}>\r\n                                        {error?.milestone}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </Listbox>\r\n                    </div>\r\n\r\n                    {/* Project Deliverable */}\r\n                    <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group my-3\">\r\n                                    <label\r\n                                        className={`f-14 text-dark-gray mb-1`}\r\n                                        data-label=\"true\"\r\n                                    >\r\n                                        Project Deliverable\r\n                                    </label>\r\n                                    <div className=\"sp1-selection-display-button form-control height-35 f-14 sp1-selection-display bg-white w-100\">\r\n                                        <span className=\"singleline-ellipsis\">{isFetchingMilestone ? 'Loading...' : _.find(projects?.milestones, d => d.id === milestone.id)?.deliverable_type}</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                     {/*task.isSubtask && (\r\n                        <div className=\"col-6\">\r\n                            <div className=\"form-group my-3\">\r\n                                <label\r\n                                    className={`f-14 text-dark-gray mb-1`}\r\n                                    data-label=\"true\"\r\n                                >\r\n                                    Parent Task\r\n                                </label>\r\n                                <input\r\n                                    className={`form-control height-35 f-14`}\r\n                                    readOnly\r\n                                    defaultValue={parentTask}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    )} */}\r\n\r\n\r\n\r\n                    <div className=\"col-6\">\r\n\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\">\r\n                                Start Date <sup className=\"f-14\">*</sup>\r\n                            </label>\r\n                            <div className=\"form-control height-35 f-14\">\r\n                                <DatePicker\r\n                                    placeholderText={`Ex: ${dayjs\r\n                                        .dayjs()\r\n                                        .format(\"DD-MM-YYYY\")}`}\r\n                                    minDate={dayjs\r\n                                        .dayjs(task?.start_date)\r\n                                        .toDate()}\r\n                                    maxDate={\r\n                                        dueDate ||\r\n                                        dayjs.dayjs(task?.due_date).toDate()\r\n                                    }\r\n                                    date={startDate}\r\n                                    setDate={setStateDate}\r\n                                />\r\n                            </div>\r\n                            {required_error?.start_date?.[0] && (\r\n                                <div style={{ color: \"red\" }}>\r\n                                    {required_error?.start_date?.[0]}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\">\r\n                                Due Date <sup className=\"f-14\">*</sup>\r\n                            </label>\r\n                            <div className=\"form-control height-35 f-14\">\r\n                                <DatePicker\r\n                                    placeholderText={`Ex: ${dayjs\r\n                                        .dayjs()\r\n                                        .format(\"DD-MM-YYYY\")}`}\r\n                                    minDate={\r\n                                        startDate ||\r\n                                        dayjs.dayjs(task?.start_date).toDate()\r\n                                    }\r\n                                    maxDate={dayjs\r\n                                        .dayjs(task?.due_date)\r\n                                        .toDate()}\r\n                                    date={dueDate}\r\n                                    setDate={setDueDate}\r\n                                />\r\n                            </div>\r\n                            {required_error?.due_date?.[0] && (\r\n                                <div style={{ color: \"red\" }}>\r\n                                    {required_error?.due_date?.[0]}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <TaskCategorySelectionBox\r\n                            selected={taskCategory}\r\n                            onSelect={setTaskCategory}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <AssignedToSelection\r\n                            selected={assignedTo}\r\n                            onSelect={setAssignedTo}\r\n                        />\r\n                    </div>\r\n                    {/*\r\n                    <div className=\"col-6\">\r\n                        <TaskObserverSelection />\r\n                    </div> */}\r\n\r\n                    {/* <div className=\"col-6\">\r\n                        <StatusSelection />\r\n                    </div> */}\r\n\r\n                    <div className=\"col-6\">\r\n                        <PrioritySelection\r\n                            selected={priority}\r\n                            setSelected={setPriority}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\" className=\"f-14 text-dark-gray\">\r\n                                Set Estimate Time{\" \"}\r\n                                <sup className=\"f-14\"> * </sup>\r\n                            </label>\r\n                            <div className=\"d-flex align-items-center\">\r\n                                <input\r\n                                    type=\"number\"\r\n                                    onWheel={(e) => e.currentTarget.blur()}\r\n                                    className=\"form-control height-35 f-14 mr-2\"\r\n                                    value={estimateTimeHour}\r\n                                    onChange={(e) =>\r\n                                        handleChange(e, setEstimateTimeHour)\r\n                                    }\r\n                                />{\" \"}\r\n                                hrs\r\n                                <input\r\n                                    type=\"number\"\r\n                                    onWheel={(e) => e.currentTarget.blur()}\r\n                                    className=\"form-control height-35 f-14 mr-2 ml-2\"\r\n                                    value={estimateTimeMin}\r\n                                    onChange={(e) =>\r\n                                        handleChange(e, setEstimateTimeMin)\r\n                                    }\r\n                                />{\" \"}\r\n                                min\r\n                            </div>\r\n\r\n                            <div style={{ color: \"red\" }}>\r\n                                {estimateError(required_error)}\r\n                            </div>\r\n                            <div style={{ color: \"red\" }}>\r\n                                {/* {console.log({a: projects?.minutes_left})} */}\r\n                                Estimation time can't exceed{\" \"}\r\n                                {convertTime(Number(projects?.minutes_left) > 0 ? Number(projects?.minutes_left) : 0)}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\"> Description </label>\r\n                            <div\r\n                                className=\"sp1_st_write_comment_editor\"\r\n                                style={{ minHeight: \"100px\" }}\r\n                            >\r\n                                <CKEditorComponent\r\n                                    data={description}\r\n                                    onChange={handleEditorChange}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12\">\r\n                        <UploadFilesInLine\r\n                            onPreviousFileDelete={handleFileDelete}\r\n                            previous={attachedFiles}\r\n                            files={files}\r\n                            setFiles={setFiles}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-12 mt-3 mb-5\">\r\n                        <div className=\"d-flex align-items-center justify-content-end\">\r\n                            <Button\r\n                                variant=\"secondary\"\r\n                                className=\"mr-2\"\r\n                                onClick={onClose}\r\n                            >\r\n                                Cancel\r\n                            </Button>\r\n\r\n\r\n                            <Button\r\n                              onClick={handleSubmit}\r\n                              isLoading={isLoading}\r\n                            >\r\n                                <i className=\"fa-regular fa-paper-plane\"></i>\r\n                                Update\r\n                            </Button>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport _ from \"lodash\";\r\nimport Modal from \"../../components/Modal\";\r\nimport { useLocation, useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport Card from \"../../../global/Card\";\r\nimport styles from \"./task-edit-form.module.css\";\r\nimport { CompareDate } from \"../../../utils/dateController\";\r\nimport Input from \"../../components/form/Input\";\r\nimport DatePicker from \"../comments/DatePicker\";\r\nimport CKEditorComponent from \"../../../ckeditor\";\r\nimport Button from '../../../global/Button';\r\nimport TaskCategorySelectionBox from \"./TaskCategorySelectionBox\";\r\nimport AssignedToSelection from \"./AssignedToSelection\";\r\nimport PrioritySelection from \"./PrioritySelection\";\r\nimport UploadFilesInLine from \"../../../file-upload/UploadFilesInLine\";\r\n\r\nimport {\r\n    useDeleteUplaodedFileMutation,\r\n    useGetTaskDetailsQuery,\r\n    useEditSubtaskMutation,\r\n} from \"../../../services/api/SingleTaskPageApi\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useGetMilestoneDetailsQuery } from \"../../../services/api/projectApiSlice\";\r\n\r\nconst dayjs = new CompareDate();\r\n\r\n// Edit form Provider\r\nconst EditFormProvider = ({ task }) => {\r\n    const [searchParams] = useSearchParams(); // get search params\r\n    const isVisible = searchParams.get(\"modal\") === \"edit\"; // check has modal\r\n    const taskId = searchParams.get(\"task\"); // get task id\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    const close = () => navigate(location.pathname, {replace: true});\r\n\r\n\r\n    const [   editSubtask, { isLoading, error } ] = useEditSubtaskMutation();\r\n    // handle submission\r\n    const handleSubmission = (formData) => {\r\n        editSubtask({data: formData, id: task?.id}).unwrap().then(res => {\r\n            toast.success(\"Task Updated successfully!\");\r\n            close();\r\n        }).catch((err) => {\r\n            if(err?.status === 422){\r\n                toast.warn(\"Please fill out all required fields\")\r\n            }\r\n        })\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <Modal isOpen={isVisible}>\r\n            <Card className={styles.form_card}>\r\n                <Card.Head\r\n                  onClose={close}\r\n                  className={styles.form_card_head}\r\n                >\r\n                    <h6> Edit Task # {taskId} </h6>\r\n                </Card.Head>\r\n\r\n                <Card.Body className={styles.form_card_body}>\r\n                    <div className=\"\">\r\n                        {task && (\r\n                            <SubTaskEditModal\r\n                                task={task}\r\n                                onSubmit={handleSubmission}\r\n                                isLoading={isLoading}\r\n                                onClose={close}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default EditFormProvider;\r\n\r\nconst SubTaskEditModal = ({ task, onSubmit, isLoading, onClose}) => {\r\n    const editDataIsFetching = !task;\r\n    //form data\r\n    const [title, setTitle] = useState(task.title);\r\n    const [milestone, setMilestone] = useState({id: task.milestoneID, milestone_title: task.milestoneTitle});\r\n    const [parentTask, setParentTask] = useState(task.parentTaskTitle);\r\n    const [startDate, setStateDate] = useState(new Date(task.startDate));\r\n    const [dueDate, setDueDate] = useState(new Date(task.dueDate));\r\n    const [project, setProject] = useState(task.projectName);\r\n    const [taskCategory, setTaskCategory] = useState({\r\n        id: task.category.id,\r\n        category_name: task.category.name,\r\n    });\r\n    const [assignedTo, setAssignedTo] = useState({\r\n        id: task.assigneeTo.id,\r\n        name: task.assigneeTo.name,\r\n    });\r\n    const [description, setDescription] = useState(task.description);\r\n    const [priority, setPriority] = useState(task.priority);\r\n    const [estimateTimeHour, setEstimateTimeHour] = useState(\r\n        task.estimateHours\r\n    );\r\n    const [estimateTimeMin, setEstimateTimeMin] = useState(\r\n        task.estimateMinutes\r\n    );\r\n    const [attachedFiles, setAttachedFiles] = useState([]);\r\n    const [files, setFiles] = React.useState([]);\r\n    const [error, setError] = useState(null);\r\n\r\n    const { data: estimation, isFetching } = useGetTaskDetailsQuery(\r\n        `/${task.id}/json?mode=estimation_time`\r\n    );\r\n\r\n    const required_error = error?.status === 422 ? error?.data : null;\r\n\r\n    // handle onchange\r\n    const handleChange = (e, setState) => {\r\n        e.preventDefault();\r\n        let value = e.target.value;\r\n        setState(value);\r\n    };\r\n\r\n    // check validation\r\n    const isValid = () => {\r\n      let count = 0;\r\n      const err = new Object();\r\n\r\n      const errorMessages = {\r\n        requiredField: 'This field is required.',\r\n        startDate: 'Please select a start date.',\r\n        dueDate: 'Please select a due date.',\r\n        taskCategory: 'Please select a task category.',\r\n        assignedTo: 'Please select a user.',\r\n        overloadedUser: (name, gender) =>\r\n          `You cannot assign this task to ${name} because ${\r\n            gender === 'male' ? 'he ' : 'she '\r\n          } has more than 10 submittable tasks.`,\r\n        description: 'This field is required.',\r\n      };\r\n\r\n      const showError = (field) => {\r\n        err[field] = errorMessages[field];\r\n        count++;\r\n      }\r\n\r\n\r\n      if(!title) showError('title');\r\n      if(!startDate) showError('startDate');\r\n      if(!dueDate) showError('dueDate');\r\n      if(!taskCategory) showError('taskCategory');\r\n      if(!assignedTo) showError('assignedTo');\r\n\r\n      if (assignedTo && assignedTo?.isOverloaded) {\r\n        err.assignedTo = overloadedUser(assignedTo.name, genderPronoun);\r\n        count++;\r\n      }\r\n\r\n      if(!description) showError('description');\r\n\r\n      setError(error);\r\n      return count === 0;\r\n\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n         //form data\r\n         const _startDate = dayjs.dayjs(startDate).format(\"DD-MM-YYYY\");\r\n         const _dueDate = dayjs.dayjs(dueDate).format(\"DD-MM-YYYY\");\r\n\r\n         const fd = new FormData();\r\n         fd.append(\"milestone_id\", task?.milestoneID);\r\n         fd.append(\"task_id\", task?.parentTaskId);\r\n         fd.append(\"title\", title);\r\n         fd.append(\"start_date\", _startDate);\r\n         fd.append(\"due_date\", _dueDate);\r\n         fd.append(\"project_id\", task?.projectId);\r\n         fd.append(\"task_category_id\", taskCategory?.id);\r\n         fd.append(\"user_id\", assignedTo?.id);\r\n         fd.append(\"description\", description);\r\n         fd.append(\"board_column_id\", task?.boardColumn.id);\r\n         fd.append(\"priority\", _.lowerCase(priority));\r\n         fd.append(\"estimate_hours\", estimateTimeHour);\r\n         fd.append(\"estimate_minutes\", estimateTimeMin);\r\n         fd.append(\"deliverable_id\", milestone?.deliverable_type ?? '');\r\n         fd.append(\"image_url\", null);\r\n         fd.append(\"addedFiles\", null);\r\n         fd.append('subTaskID', task?.subtaskId);\r\n         fd.append(\"_method\", \"PUT\");\r\n         fd.append(\r\n             \"_token\",\r\n             document\r\n                 .querySelector(\"meta[name='csrf-token']\")\r\n                 .getAttribute(\"content\")\r\n         );\r\n         Array.from(files).forEach((file) => {\r\n             fd.append(\"file[]\", file);\r\n         });\r\n\r\n        if(isValid()){\r\n         onSubmit(fd);\r\n        }else{\r\n         toast.warn('Please fill out all required fields!');\r\n        }\r\n\r\n    };\r\n\r\n\r\n      const {data: projects, isFetching: isFetchingMilestone} = useGetMilestoneDetailsQuery(task?.projectId)\r\n\r\n\r\n\r\n    // handle uploaded file delete request\r\n    const [deleteUplaodedFile] = useDeleteUplaodedFileMutation();\r\n    const handleFileDelete = (e, file) => {\r\n        // delete\r\n        deleteUplaodedFile(file?.id).unwrap();\r\n\r\n        // delete form ui\r\n        let previousFile = [...attachedFiles];\r\n        let index = previousFile?.indexOf(file);\r\n        previousFile.splice(index, 1);\r\n        setAttachedFiles(previousFile);\r\n    };\r\n\r\n    // handle loading state\r\n    React.useEffect(() => {\r\n        if (isLoading || editDataIsFetching) {\r\n            document.getElementsByTagName(\"body\")[0].style.cursor = \"progress\";\r\n        } else {\r\n            document.getElementsByTagName(\"body\")[0].style.cursor = \"default\";\r\n        }\r\n    }, [isLoading, editDataIsFetching]);\r\n\r\n    //   editor\r\n    const handleEditorChange = (e, editor) => {\r\n        const data = editor.getData();\r\n        setDescription(data);\r\n    };\r\n\r\n    const estimateError = (err) => {\r\n        let errText = \"\";\r\n        let hoursErr = err?.estimate_hours?.[0];\r\n        let minErr = err?.estimate_minutes?.[0];\r\n        if (hoursErr) errText += hoursErr;\r\n        if (minErr) errText += minErr;\r\n        return errText;\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"sp1-subtask-form --modal-panel-body position-relative\">\r\n                {editDataIsFetching && (\r\n                    <div\r\n                        className=\"w-100\"\r\n                        style={{\r\n                            width: \"100%\",\r\n                            height: \"100%\",\r\n                            position: \"absolute\",\r\n                            top: 0,\r\n                            left: 0,\r\n                            zIndex: 1,\r\n                        }}\r\n                    />\r\n                )}\r\n                <div className=\"sp1-subtask-form --form row\">\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <Input\r\n                            id=\"title\"\r\n                            label=\"Title\"\r\n                            type=\"text\"\r\n                            placeholder=\"Enter a task title\"\r\n                            name=\"title\"\r\n                            required={true}\r\n                            value={title}\r\n                            error={required_error?.title?.[0]}\r\n                            onChange={(e) => handleChange(e, setTitle)}\r\n                        />\r\n                    </div>\r\n\r\n                    {/* project */}\r\n                    {/* <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label\r\n                                className={`f-14 text-dark-gray mb-1`}\r\n                                data-label=\"true\"\r\n                            >\r\n                                Project\r\n                            </label>\r\n                            <input\r\n                                className={`form-control height-35 f-14`}\r\n                                readOnly\r\n                                defaultValue={project}\r\n                            />\r\n                        </div>\r\n                    </div> */}\r\n\r\n\r\n                    {/* Project Milestone Selection Menu */}\r\n                    {/* <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label\r\n                                className={`f-14 text-dark-gray mb-1`}\r\n                                data-label=\"true\"\r\n                            >\r\n                                Milestone\r\n                            </label>\r\n                            <input\r\n                                className={`form-control height-35 f-14`}\r\n                                readOnly\r\n                                defaultValue={milestone?.milestone_title}\r\n                            />\r\n                        </div>\r\n                    </div> */}\r\n\r\n\r\n                    {/* parent task */}\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label\r\n                                className={`f-14 text-dark-gray mb-1`}\r\n                                data-label=\"true\"\r\n                            >\r\n                                Parent Task\r\n                            </label>\r\n                            <input\r\n                                className={`form-control height-35 f-14`}\r\n                                readOnly\r\n                                defaultValue={task?.parentTaskTitle}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\">\r\n                                Start Date <sup className=\"f-14\">*</sup>\r\n                            </label>\r\n                            <div className=\"form-control height-35 f-14\">\r\n                                <DatePicker\r\n                                    placeholderText={`Ex: ${dayjs\r\n                                        .dayjs()\r\n                                        .format(\"DD-MM-YYYY\")}`}\r\n                                    minDate={dayjs\r\n                                        .dayjs(task?.start_date)\r\n                                        .toDate()}\r\n                                    maxDate={\r\n                                        dueDate ||\r\n                                        dayjs.dayjs(task?.due_date).toDate()\r\n                                    }\r\n                                    date={startDate}\r\n                                    setDate={setStateDate}\r\n                                />\r\n                            </div>\r\n                            {required_error?.start_date?.[0] && (\r\n                                <div style={{ color: \"red\" }}>\r\n                                    {required_error?.start_date?.[0]}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\">\r\n                                Due Date <sup className=\"f-14\">*</sup>\r\n                            </label>\r\n                            <div className=\"form-control height-35 f-14\">\r\n                                <DatePicker\r\n                                    placeholderText={`Ex: ${dayjs\r\n                                        .dayjs()\r\n                                        .format(\"DD-MM-YYYY\")}`}\r\n                                    minDate={\r\n                                        startDate ||\r\n                                        dayjs.dayjs(task?.start_date).toDate()\r\n                                    }\r\n                                    maxDate={dayjs\r\n                                        .dayjs(task?.due_date)\r\n                                        .toDate()}\r\n                                    date={dueDate}\r\n                                    setDate={setDueDate}\r\n                                />\r\n                            </div>\r\n                            {required_error?.due_date?.[0] && (\r\n                                <div style={{ color: \"red\" }}>\r\n                                    {required_error?.due_date?.[0]}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <TaskCategorySelectionBox\r\n                            selected={taskCategory}\r\n                            onSelect={setTaskCategory}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <AssignedToSelection\r\n                            selected={assignedTo}\r\n                            onSelect={setAssignedTo}\r\n                        />\r\n                    </div>\r\n                    {/*\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <TaskObserverSelection />\r\n                    </div> */}\r\n\r\n                    {/* <div className=\"col-12 col-md-6\">\r\n                        <StatusSelection />\r\n                    </div> */}\r\n\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <PrioritySelection\r\n                            selected={priority}\r\n                            setSelected={setPriority}\r\n                        />\r\n                    </div>\r\n\r\n                    {/* Set Estimate Time */}\r\n                    {/* <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\" className=\"f-14 text-dark-gray\">\r\n                                Set Estimate Time{\" \"}\r\n                                <sup className=\"f-14\"> * </sup>\r\n                            </label>\r\n                            <div className=\"d-flex align-items-center\">\r\n                                <input\r\n                                    type=\"number\"\r\n                                    onWheel={(e) => e.currentTarget.blur()}\r\n                                    className=\"form-control height-35 f-14 mr-2\"\r\n                                    value={estimateTimeHour}\r\n                                    onChange={(e) =>\r\n                                        handleChange(e, setEstimateTimeHour)\r\n                                    }\r\n                                />{\" \"}\r\n                                hrs\r\n                                <input\r\n                                    type=\"number\"\r\n                                    onWheel={(e) => e.currentTarget.blur()}\r\n                                    className=\"form-control height-35 f-14 mr-2 ml-2\"\r\n                                    value={estimateTimeMin}\r\n                                    onChange={(e) =>\r\n                                        handleChange(e, setEstimateTimeMin)\r\n                                    }\r\n                                />{\" \"}\r\n                                min\r\n                            </div>\r\n\r\n                            <div style={{ color: \"red\" }}>\r\n                                {estimateError(required_error)}\r\n                            </div>\r\n                            <div style={{ color: \"red\" }}>\r\n                                Estimation time can't exceed{\" \"}\r\n                                {estimation?.hours_left} hours{\" \"}\r\n                                {estimation?.minutes_left} minutes\r\n                            </div>\r\n                        </div>\r\n                    </div> */}\r\n\r\n                    <div className=\"col-12\">\r\n                        <div className=\"form-group my-3\">\r\n                            <label htmlFor=\"\"> Description </label>\r\n                            <div\r\n                                className=\"sp1_st_write_comment_editor\"\r\n                                style={{ minHeight: \"100px\" }}\r\n                            >\r\n                                <CKEditorComponent\r\n                                    data={description}\r\n                                    onChange={handleEditorChange}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12\">\r\n                        <UploadFilesInLine\r\n                            onPreviousFileDelete={handleFileDelete}\r\n                            previous={attachedFiles}\r\n                            files={files}\r\n                            setFiles={setFiles}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-12 mt-3 mb-5\">\r\n                        <div className=\"d-flex align-items-center justify-content-end\">\r\n                            <Button\r\n                                variant=\"secondary\"\r\n                                className=\"mr-2\"\r\n                                onClick={onClose}\r\n                            >\r\n                                Cancel\r\n                            </Button>\r\n\r\n\r\n                            <Button\r\n                              onClick={handleSubmit}\r\n                              isLoading={isLoading}\r\n                            >\r\n                                <i className=\"fa-regular fa-paper-plane\"></i>\r\n                                Update\r\n                            </Button>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n","import dayjs from \"dayjs\";\r\nimport _ from \"lodash\";\r\nimport * as React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Toaster from \"../global/Toaster\";\r\nimport {\r\n    useGetTaskDetailsQuery,\r\n    useGetTaskStatusQuery,\r\n    useGetWorkingEnvironmentQuery,\r\n    useLazyGetTaskDetailsQuery,\r\n    useLazyGetTaskStatusQuery,\r\n    useLazyGetWorkingEnvironmentQuery,\r\n} from \"../services/api/SingleTaskPageApi\";\r\nimport { storeTask } from \"../services/features/subTaskSlice\";\r\nimport { BoardColumn, SingleTask } from \"../utils/single-task\";\r\nimport { User } from \"../utils/user-details\";\r\nimport Accordion from \"./components/Accordion\";\r\nimport Guideline from \"./components/Guideline\";\r\nimport Loading from \"./components/Loading\";\r\nimport PMGuideline from \"./components/PMGuideline\";\r\nimport RevisionText from \"./components/RevisionText\";\r\nimport GenarelLoader from \"./components/loader/GenarelLoader\";\r\nimport CommentSection from \"./section/comments/CommentsSection\";\r\nimport DailySubmissionSection from \"./section/daily-submission/DailySubmissionSection\";\r\nimport HistorySection from \"./section/history/HistorySection\";\r\nimport NoteSection from \"./section/notes/NoteSection\";\r\nimport RevisionSection from \"./section/revisions/RevisionSection\";\r\nimport SubTaskSection from \"./section/sub-task/SubTaskSection\";\r\nimport SubmittedWork from \"./section/submitted-work/SubmittedWork\";\r\nimport TaskAction from \"./section/task-actions/TaskAction\";\r\nimport TimeLogSection from \"./section/time-logs/TimeLogSection\";\r\nimport TaskEditForm from \"./section/sub-task/TaskEditForm\";\r\nimport SubTaskEditModal from \"./section/sub-task/SubTaskEditModal\";\r\nimport { singleTaskPagePermission } from \"./permissions\";\r\nimport ERROR from \"../global/ERROR\";\r\nimport { useErrorHandler } from \"../context/ErrorHandleServiceContextProvider\";\r\nimport { toast } from \"react-toastify\";\r\nimport FileUploader from \"../file-upload/FileUploader\";\r\n\r\nconst RefetchTaskProvider = React.createContext({});\r\nexport const useRefetchTaskDetails = () => {\r\n    const { setRefetchTask } = React.useContext(RefetchTaskProvider);\r\n    return () => {\r\n        setRefetchTask((prev) => !prev);\r\n    };\r\n};\r\n\r\nconst SingleIndependentTask = () => {\r\n    const { task: Task } = useSelector((s) => s.subTask);\r\n    const [refetchTask, setRefetchTask] = React.useState(false);\r\n    const { throwError } = useErrorHandler();\r\n    const dispatch = useDispatch();\r\n    const params = useParams();\r\n\r\n    // lazily get task details\r\n    const [\r\n        getTaskDetails,\r\n        { isFetching: isTaskFetching, isLoading: isTaskLoading },\r\n    ] = useLazyGetTaskDetailsQuery();\r\n\r\n    // get task status query\r\n    const { data: taskStatus } = useGetTaskStatusQuery(params?.taskId);\r\n\r\n    // lazily get task working environment\r\n    const [\r\n        getWorkingEnv,\r\n        { isFetching: isWorkingEnvFetching, isLoading: isWorkingEnvLoading },\r\n    ] = useLazyGetWorkingEnvironmentQuery();\r\n\r\n    const task = new SingleTask(Task); // task instance\r\n    const loggedUser = new User(window?.Laravel?.user); // logged users data\r\n\r\n    // console.log(task);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const CurrentTask = {};\r\n\r\n            await getTaskDetails(`/${params?.taskId}/json?mode=basic`)\r\n                .unwrap()\r\n                .then(\r\n                    ({\r\n                        task,\r\n                        parent_task_heading,\r\n                        parent_task_action,\r\n                        subtasks,\r\n                        task_guideline,\r\n                        revisions,\r\n                        Sub_Tasks,\r\n                        ppTaskFiles,\r\n                    }) => {\r\n                        for (const key in task) {\r\n                            CurrentTask[key] = task[key];\r\n                        }\r\n                        CurrentTask.parent_task_title =\r\n                            parent_task_heading?.heading || null;\r\n                        CurrentTask.parent_task_action = parent_task_action;\r\n                        CurrentTask.subtask = subtasks;\r\n                        CurrentTask.pm_task_guideline = task_guideline;\r\n                        CurrentTask.task_revisions = revisions;\r\n                        CurrentTask.taskSubTask = Sub_Tasks;\r\n                        CurrentTask.taskFiles = [...ppTaskFiles];\r\n                    }\r\n                );\r\n\r\n            // console.log(CurrentTask.subtask_id);\r\n\r\n            await getWorkingEnv(\r\n                CurrentTask.subtask_id\r\n                    ? CurrentTask.parent_task_id\r\n                    : CurrentTask.id\r\n            )\r\n                .unwrap()\r\n                .then(({ task_working_environment }) => {\r\n                    CurrentTask.working_environment_data =\r\n                        task_working_environment;\r\n                });\r\n\r\n            // console.log({ CurrentTask });\r\n\r\n            const _task = new SingleTask(CurrentTask);\r\n\r\n            // console.log({ _task });\r\n\r\n            let hasPermission = singleTaskPagePermission(_task, loggedUser);\r\n\r\n            if (!hasPermission) {\r\n                return throwError({\r\n                    title: \"Access Denied\",\r\n                    message:\r\n                        \"Access to this resource is forbidden. Please contact the administrator for assistance.\",\r\n                    code: 403,\r\n                });\r\n            } else {\r\n                // const task = _task;\r\n                dispatch(storeTask(CurrentTask));\r\n            }\r\n        })();\r\n    }, [refetchTask]);\r\n\r\n    const loadingClass =\r\n        isTaskFetching || isTaskLoading ? \"skeleton-loading\" : \"\";\r\n\r\n    if (\r\n        isTaskFetching ||\r\n        isTaskLoading ||\r\n        isWorkingEnvFetching ||\r\n        isWorkingEnvLoading\r\n    ) {\r\n        return <Loading isLoading={true} />;\r\n    }\r\n\r\n    const _taskStatus = new BoardColumn(taskStatus);\r\n\r\n    if (!task) return null;\r\n\r\n    // console.log(\"task revision\", task?.revisions);\r\n\r\n    return (\r\n        <RefetchTaskProvider.Provider value={{ setRefetchTask }}>\r\n            <div className=\"position-relative content-wrapper\">\r\n                <div className=\"mb-3\">\r\n                    <div className={`f-18 ${loadingClass}`}>\r\n                        <span>\r\n                            {\" \"}\r\n                            <strong>Task: </strong>{\" \"}\r\n                        </span>\r\n                        <a href={`/account/tasks/${task?.id}`}>\r\n                            {task?.getSubtaskTitle()}\r\n                        </a>\r\n                        {_.includes(\r\n                            [1, 4, 6, 7, 8],\r\n                            loggedUser?.getRoleId()\r\n                        ) && (\r\n                            <span className=\"ml-2\">\r\n                                (\r\n                                <a\r\n                                    href={`/account/projects/${task.projectId}?tab=tasks`}\r\n                                    className=\"f-14\"\r\n                                >\r\n                                    See All Tasks\r\n                                </a>\r\n                                )\r\n                            </span>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    {isTaskFetching || isTaskLoading ? (\r\n                        <GenarelLoader />\r\n                    ) : (\r\n                        <React.Fragment>\r\n                            <div className=\"col-12 col-md-7 col-lg-8 mb-3\">\r\n                                <div className=\"bg-white rounded-lg p-3\">\r\n                                    <TaskAction\r\n                                        task={task}\r\n                                        status={taskStatus}\r\n                                    />\r\n\r\n                                    {/* task information */}\r\n                                    <div>\r\n                                        <div\r\n                                            className=\"d-flex flex-column py-3\"\r\n                                            style={{ gap: \"10px\" }}\r\n                                        >\r\n                                            {task?.isSubtask && (\r\n                                                <div className=\"sp1_st-list-item\">\r\n                                                    <div className=\"sp1_st-list-item-head\">\r\n                                                        {\" \"}\r\n                                                        Parent Task:{\" \"}\r\n                                                    </div>\r\n                                                    <div className=\"sp1_st-list-item-value\">\r\n                                                        <a\r\n                                                            href={`/account/tasks/${task?.parentTaskId}`}\r\n                                                            className=\"text-hover-underline\"\r\n                                                        >\r\n                                                            {\r\n                                                                task?.parentTaskTitle\r\n                                                            }\r\n                                                        </a>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )}\r\n\r\n                                            {/* project name */}\r\n                                            {/* <div className=\"sp1_st-list-item\">\r\n                                        <div className=\"sp1_st-list-item-head\">Project : </div>\r\n                                        <div className=\"sp1_st-list-item-value\">\r\n                                            <span className=\"dot-color bg-danger mr-2\" />\r\n                                            <a href={`/account/projects/${task?.projectId}`} className=\"text-hover-underline\">\r\n                                                {task?.projectName}\r\n                                            </a>\r\n                                        </div>\r\n                                    </div> */}\r\n\r\n                                            {/* client name */}\r\n                                            <div className=\"sp1_st-list-item\">\r\n                                                <div className=\"sp1_st-list-item-head\">\r\n                                                    Client :{\" \"}\r\n                                                </div>\r\n                                                <div className=\"sp1_st-list-item-value\">\r\n                                                    <span className=\"dot-color bg-info mr-2\" />\r\n                                                    <span>\r\n                                                        {Task?.ind_clientId\r\n                                                            ? Task?.ind_client_name\r\n                                                            : Task?.independent_client_name}\r\n                                                    </span>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {/* project manager */}\r\n                                            {/* <div className=\"sp1_st-list-item\">\r\n                                        <div className=\"sp1_st-list-item-head\">Project Manager: </div>\r\n\r\n                                        <div className=\"sp1_st-list-item-value\">\r\n                                            <div style={{ width: \"32px\", height: \"32px\" }}>\r\n                                                <img\r\n                                                    src={`/user-uploads/avatar/${task?.projectManagerAvatar}`}\r\n                                                    alt={task?.projectManagerName}\r\n                                                    width=\"32px\"\r\n                                                    height=\"32px\"\r\n                                                    className=\"rounded-circle\"\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"ml-2\">\r\n                                                <span\r\n                                                    className={`d-block f-14 font-weight-bold`}\r\n                                                >\r\n                                                    <a\r\n                                                        href={`/account/employees/${task?.projectManagerId}`}\r\n                                                        className=\"hover-underline\"\r\n                                                    >\r\n                                                        {task?.projectManagerName}</a>\r\n                                                    {Number(task?.projectManagerId) ===\r\n                                                        Number(loggedUser?.getId()) && (\r\n                                                        <sup\r\n                                                            className=\"rounded-pill bg-dark text-white px-1 ml-1\"\r\n                                                            style={{ fontSize: \"10px\", whiteSpace: 'nowrap' }}\r\n                                                        >\r\n                                                            It's You\r\n                                                        </sup>\r\n                                                    )}\r\n                                                </span>\r\n\r\n                                                <span style={{ fontSize: \"12px\" }}>\r\n                                                   {task?.projectManagerDesignation}\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div> */}\r\n\r\n                                            {/* milestone */}\r\n                                            {/* <div className=\"sp1_st-list-item\">\r\n                                        <div className=\"sp1_st-list-item-head\">\r\n                                            Milestone :{\" \"}\r\n                                        </div>\r\n                                        <div className=\"sp1_st-list-item-value\">\r\n                                            <span className=\"dot-color bg-primary mr-2\" />\r\n                                            {task?.milestoneTitle}\r\n                                        </div>\r\n                                    </div> */}\r\n\r\n                                            {/* assignee to */}\r\n                                            <div className=\"sp1_st-list-item\">\r\n                                                <div className=\"sp1_st-list-item-head\">\r\n                                                    Assigned To :{\" \"}\r\n                                                </div>\r\n                                                <div className=\"sp1_st-list-item-value\">\r\n                                                    <div\r\n                                                        style={{\r\n                                                            width: \"32px\",\r\n                                                            height: \"32px\",\r\n                                                        }}\r\n                                                    >\r\n                                                        <img\r\n                                                            src={task?.assigneeTo?.getAvatar()}\r\n                                                            alt={task?.assigneeTo?.getName()}\r\n                                                            width=\"32px\"\r\n                                                            height=\"32px\"\r\n                                                            className=\"rounded-circle\"\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"ml-2\">\r\n                                                        <span\r\n                                                            className={`d-block f-14 font-weight-bold`}\r\n                                                        >\r\n                                                            <a\r\n                                                                href={task?.assigneeTo?.getUserLink()}\r\n                                                                className=\"hover-underline\"\r\n                                                            >\r\n                                                                {task?.assigneeTo?.getName()}\r\n                                                            </a>\r\n                                                            {Number(\r\n                                                                task?.assigneeTo?.getId()\r\n                                                            ) ===\r\n                                                                Number(\r\n                                                                    loggedUser?.getId()\r\n                                                                ) && (\r\n                                                                <sup\r\n                                                                    className=\"rounded-pill bg-dark text-white px-1 ml-1\"\r\n                                                                    style={{\r\n                                                                        fontSize:\r\n                                                                            \"10px\",\r\n                                                                        whiteSpace:\r\n                                                                            \"nowrap\",\r\n                                                                    }}\r\n                                                                >\r\n                                                                    It's You\r\n                                                                </sup>\r\n                                                            )}\r\n                                                        </span>\r\n\r\n                                                        <span\r\n                                                            style={{\r\n                                                                fontSize:\r\n                                                                    \"12px\",\r\n                                                            }}\r\n                                                        >\r\n                                                            {task?.assigneeTo?.getDesignationName()}\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {/* assignee by */}\r\n                                            <div className=\"sp1_st-list-item\">\r\n                                                <div className=\"sp1_st-list-item-head\">\r\n                                                    Assigned by:{\" \"}\r\n                                                </div>\r\n                                                <div className=\"sp1_st-list-item-value\">\r\n                                                    <div\r\n                                                        style={{\r\n                                                            width: \"32px\",\r\n                                                            height: \"32px\",\r\n                                                        }}\r\n                                                    >\r\n                                                        <img\r\n                                                            src={task?.assigneeBy?.getAvatar()}\r\n                                                            alt={task?.assigneeBy?.getName()}\r\n                                                            width=\"32px\"\r\n                                                            height=\"32px\"\r\n                                                            className=\"rounded-circle\"\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"ml-2\">\r\n                                                        <span\r\n                                                            className={`d-block f-14 font-weight-bold`}\r\n                                                        >\r\n                                                            <a\r\n                                                                href={task?.assigneeBy?.getUserLink()}\r\n                                                                className=\"hover-underline\"\r\n                                                            >\r\n                                                                {task?.assigneeBy?.getName()}\r\n                                                            </a>\r\n                                                            {Number(\r\n                                                                task?.assigneeBy?.getId()\r\n                                                            ) ===\r\n                                                                Number(\r\n                                                                    loggedUser?.getId()\r\n                                                                ) && (\r\n                                                                <sup\r\n                                                                    className=\"rounded-pill bg-dark text-white px-1\"\r\n                                                                    style={{\r\n                                                                        fontSize:\r\n                                                                            \"10px\",\r\n                                                                    }}\r\n                                                                >\r\n                                                                    It's You\r\n                                                                </sup>\r\n                                                            )}\r\n                                                        </span>\r\n\r\n                                                        <span\r\n                                                            style={{\r\n                                                                fontSize:\r\n                                                                    \"12px\",\r\n                                                            }}\r\n                                                        >\r\n                                                            {task?.assigneeBy?.getDesignationName()}\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {/* TASK CATEGORY */}\r\n                                            {!task.subtaskId ? (\r\n                                                <div className=\"sp1_st-list-item\">\r\n                                                    <div className=\"sp1_st-list-item-head\">\r\n                                                        Task Category :{\" \"}\r\n                                                    </div>\r\n                                                    <div className=\"sp1_st-list-item-value\">\r\n                                                        {/* <span\r\n                                                        className=\"dot-color mr-2\"\r\n                                                        style={{\r\n                                                            background:\r\n                                                                \"rgba(252, 189, 1, 1)\",\r\n                                                        }}\r\n                                                    /> */}\r\n                                                        {task.category.name}\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) : (\r\n                                                <></>\r\n                                            )}\r\n\r\n                                            {/* PRIORITY */}\r\n                                            <div className=\"sp1_st-list-item\">\r\n                                                <div className=\"sp1_st-list-item-head\">\r\n                                                    Priority :{\" \"}\r\n                                                </div>\r\n                                                <div className=\"sp1_st-list-item-value\">\r\n                                                    <span\r\n                                                        className=\"dot-color mr-2\"\r\n                                                        style={{\r\n                                                            background:\r\n                                                                \"rgba(252, 189, 1, 1)\",\r\n                                                        }}\r\n                                                    />\r\n                                                    {task?.priority}\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {/* login url */}\r\n                                            {!task.subtaskId ? (\r\n                                                <div className=\"sp1_st-list-item\">\r\n                                                    <div className=\"sp1_st-list-item-head\">\r\n                                                        Login URL :{\" \"}\r\n                                                    </div>\r\n                                                    <div className=\"sp1_st-list-item-value\">\r\n                                                        {/* <span\r\n                                                        className=\"dot-color mr-2\"\r\n                                                        style={{\r\n                                                            background:\r\n                                                                \"rgba(252, 189, 1, 1)\",\r\n                                                        }}\r\n                                                    /> */}\r\n\r\n                                                        <a\r\n                                                            target=\"__blank\"\r\n                                                            href={\r\n                                                                task\r\n                                                                    ?.additionalInfo\r\n                                                                    ?.loginURL\r\n                                                            }\r\n                                                        >\r\n                                                            {\r\n                                                                task\r\n                                                                    ?.additionalInfo\r\n                                                                    ?.loginURL\r\n                                                            }\r\n                                                        </a>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) : (\r\n                                                <></>\r\n                                            )}\r\n\r\n                                            {/* username */}\r\n                                            {!task.subtaskId ? (\r\n                                                <div className=\"sp1_st-list-item\">\r\n                                                    <div className=\"sp1_st-list-item-head\">\r\n                                                        Username :{\" \"}\r\n                                                    </div>\r\n                                                    <div className=\"sp1_st-list-item-value\">\r\n                                                        {/* <span\r\n                                                        className=\"dot-color mr-2\"\r\n                                                        style={{\r\n                                                            background:\r\n                                                                \"rgba(252, 189, 1, 1)\",\r\n                                                        }}\r\n                                                    /> */}\r\n                                                        {\r\n                                                            task.additionalInfo\r\n                                                                .username\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) : (\r\n                                                <></>\r\n                                            )}\r\n\r\n                                            {/* password */}\r\n                                            {!task.subtaskId ? (\r\n                                                <div className=\"sp1_st-list-item\">\r\n                                                    <div className=\"sp1_st-list-item-head\">\r\n                                                        Password :{\" \"}\r\n                                                    </div>\r\n                                                    <div className=\"sp1_st-list-item-value\">\r\n                                                        {/* <span\r\n                                                        className=\"dot-color mr-2\"\r\n                                                        style={{\r\n                                                            background:\r\n                                                                \"rgba(252, 189, 1, 1)\",\r\n                                                        }}\r\n                                                    /> */}\r\n                                                        {\r\n                                                            task.additionalInfo\r\n                                                                .password\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) : (\r\n                                                <></>\r\n                                            )}\r\n\r\n                                            {/* ref site */}\r\n                                            {!task.subtaskId ? (\r\n                                                <div className=\"sp1_st-list-item\">\r\n                                                    <div className=\"sp1_st-list-item-head\">\r\n                                                        Reference page :{\" \"}\r\n                                                    </div>\r\n                                                    <div className=\"sp1_st-list-item-value\">\r\n                                                        {/* <span\r\n                                                        className=\"dot-color mr-2\"\r\n                                                        style={{\r\n                                                            background:\r\n                                                                \"rgba(252, 189, 1, 1)\",\r\n                                                        }}\r\n                                                    /> */}\r\n                                                        <a\r\n                                                            target=\"__blank\"\r\n                                                            href={\r\n                                                                task\r\n                                                                    ?.additionalInfo\r\n                                                                    ?.refSite\r\n                                                            }\r\n                                                        >\r\n                                                            {\r\n                                                                task\r\n                                                                    ?.additionalInfo\r\n                                                                    ?.refSite\r\n                                                            }\r\n                                                        </a>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) : (\r\n                                                <></>\r\n                                            )}\r\n\r\n                                            {/* category */}\r\n                                            {task?.isSubtask && (\r\n                                                <>\r\n                                                    <div className=\"sp1_st-list-item\">\r\n                                                        <div className=\"sp1_st-list-item-head\">\r\n                                                            Task Category :{\" \"}\r\n                                                        </div>\r\n                                                        <div className=\"sp1_st-list-item-value\">\r\n                                                            {task?.category\r\n                                                                ?.name ?? \"--\"}\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    {/* task type */}\r\n                                                    <div className=\"sp1_st-list-item\">\r\n                                                        <div className=\"sp1_st-list-item-head\">\r\n                                                            Task Type:{\" \"}\r\n                                                        </div>\r\n                                                        <div className=\"sp1_st-list-item-value\">\r\n                                                            {task?.taskType ??\r\n                                                                \"--\"}\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"sp1_st-list-item\">\r\n                                                        <div className=\"sp1_st-list-item-head\">\r\n                                                            Page Type:{\" \"}\r\n                                                        </div>\r\n                                                        <div className=\"sp1_st-list-item-value\">\r\n                                                            {task?.pageType ??\r\n                                                                \"--\"}\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"sp1_st-list-item\">\r\n                                                        <div className=\"sp1_st-list-item-head\">\r\n                                                            Page Name:{\" \"}\r\n                                                        </div>\r\n                                                        <div className=\"sp1_st-list-item-value\">\r\n                                                            {task?.pageName ??\r\n                                                                \"--\"}\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"sp1_st-list-item\">\r\n                                                        <div className=\"sp1_st-list-item-head\">\r\n                                                            Page Url:{\" \"}\r\n                                                        </div>\r\n                                                        <div className=\"sp1_st-list-item-value\">\r\n                                                            {task?.pageUrl ? (\r\n                                                                <a\r\n                                                                    href={\r\n                                                                        task?.pageUrl\r\n                                                                    }\r\n                                                                >\r\n                                                                    ( view )\r\n                                                                </a>\r\n                                                            ) : (\r\n                                                                <span>--</span>\r\n                                                            )}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </>\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"mt-3\">\r\n                                        {/* project manager guideline */}\r\n                                        {(!_.isEmpty(task?.workEnvData) ||\r\n                                            !_.isEmpty(task?.guidelines)) && (\r\n                                            <Accordion\r\n                                                expendable={false}\r\n                                                title=\"General Guidelines\"\r\n                                            >\r\n                                                {/* {task?.hasProjectManagerGuideline && <PMGuideline guideline={task?.PMTaskGuideline} /> } */}\r\n\r\n                                                {!_.isEmpty(\r\n                                                    task?.workEnvData\r\n                                                ) && (\r\n                                                    <div className=\"sp1_task_card--sub-card\">\r\n                                                        <div\r\n                                                            className=\"px-4 py-3\"\r\n                                                            style={{\r\n                                                                background:\r\n                                                                    \"#F3F5F9\",\r\n                                                            }}\r\n                                                        >\r\n                                                            <h6 className=\"mb-2\">\r\n                                                                Working\r\n                                                                Environment\r\n                                                            </h6>\r\n                                                            <hr />\r\n                                                            <div className=\"row\">\r\n                                                                {/* working/staging site's url */}\r\n                                                                <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                                                    <span>\r\n                                                                        <strong>\r\n                                                                            Working/Staging\r\n                                                                            Site's\r\n                                                                            URL\r\n                                                                        </strong>\r\n                                                                        : <br />{\" \"}\r\n                                                                        <a\r\n                                                                            target=\"__blank\"\r\n                                                                            href={\r\n                                                                                task\r\n                                                                                    ?.workEnvData\r\n                                                                                    ?.site_url\r\n                                                                            }\r\n                                                                        >\r\n                                                                            View\r\n                                                                            on\r\n                                                                            new\r\n                                                                            tab\r\n                                                                        </a>\r\n                                                                    </span>\r\n                                                                </div>\r\n\r\n                                                                {/* frontend password */}\r\n                                                                <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                                                    <span>\r\n                                                                        <strong>\r\n                                                                            Frontend\r\n                                                                            Password\r\n                                                                        </strong>\r\n                                                                        : <br />{\" \"}\r\n                                                                        {\r\n                                                                            task\r\n                                                                                ?.workEnvData\r\n                                                                                ?.frontend_password\r\n                                                                        }\r\n                                                                    </span>\r\n                                                                </div>\r\n\r\n                                                                {/* working/staging site's login url */}\r\n                                                                <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                                                    <span>\r\n                                                                        <strong>\r\n                                                                            Working/Staging\r\n                                                                            Site's\r\n                                                                            Login\r\n                                                                            URL\r\n                                                                        </strong>\r\n                                                                        : <br />{\" \"}\r\n                                                                        <a\r\n                                                                            target=\"__blank\"\r\n                                                                            href={\r\n                                                                                task\r\n                                                                                    ?.workEnvData\r\n                                                                                    ?.login_url\r\n                                                                            }\r\n                                                                        >\r\n                                                                            View\r\n                                                                            on\r\n                                                                            new\r\n                                                                            tab\r\n                                                                        </a>{\" \"}\r\n                                                                    </span>\r\n                                                                </div>\r\n\r\n                                                                {/* working/staging site's username/email */}\r\n                                                                <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                                                    <span>\r\n                                                                        <strong>\r\n                                                                            Working/Staging\r\n                                                                            Site's\r\n                                                                            Username/Email\r\n                                                                        </strong>\r\n                                                                        : <br />{\" \"}\r\n                                                                        {task\r\n                                                                            ?.workEnvData\r\n                                                                            ?.email ||\r\n                                                                            task\r\n                                                                                ?.workEnvData\r\n                                                                                ?.user_name}\r\n                                                                    </span>\r\n                                                                </div>\r\n\r\n                                                                {/* password */}\r\n                                                                <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                                                    <span>\r\n                                                                        <strong>\r\n                                                                            Password\r\n                                                                        </strong>\r\n                                                                        : <br />{\" \"}\r\n                                                                        {\r\n                                                                            task\r\n                                                                                ?.workEnvData\r\n                                                                                ?.password\r\n                                                                        }\r\n                                                                    </span>\r\n                                                                </div>\r\n\r\n                                                                {/* Reference Page */}\r\n                                                                {/* <div className=\"col-12 col-lg-6 col-xl-4 mb-2 word-break\">\r\n                                                                    <span>\r\n                                                                        <strong>\r\n                                                                            Reference\r\n                                                                            Page\r\n                                                                        </strong>\r\n                                                                        : <br />{\" \"}\r\n                                                                        <a\r\n                                                                            target=\"__blank\"\r\n                                                                            href={\r\n                                                                                task\r\n                                                                                    ?.workEnvData\r\n                                                                                    ?.reference_site\r\n                                                                            }\r\n                                                                        >\r\n                                                                            View\r\n                                                                            on\r\n                                                                            new\r\n                                                                            tab\r\n                                                                        </a>\r\n                                                                    </span>\r\n                                                                </div> */}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )}\r\n\r\n                                                <Guideline\r\n                                                    text={task?.guidelines}\r\n                                                    workEnv={task?.workEnvData}\r\n                                                />\r\n                                            </Accordion>\r\n                                        )}\r\n\r\n                                        {/* task revision */}\r\n                                        {_.size(task?.revisions) > 0 && (\r\n                                            <Accordion\r\n                                                title={\r\n                                                    _.last(task?.revisions)\r\n                                                        ?.revisionStatus\r\n                                                }\r\n                                                headingClass=\"d-flex align-items-center justify-content-between\"\r\n                                                headingStyle={{\r\n                                                    background:\r\n                                                        \"rgba(227,62,79,1)\",\r\n                                                    color: \"#fff\",\r\n                                                }}\r\n                                            >\r\n                                                {_.map(\r\n                                                    task?.revisions,\r\n                                                    (revision, index) => (\r\n                                                        <RevisionText\r\n                                                            key={revision?.id}\r\n                                                            index={index + 1}\r\n                                                            date={dayjs(\r\n                                                                revision.createdAt\r\n                                                            ).format(\r\n                                                                \"MMM DD, YYYY\"\r\n                                                            )}\r\n                                                            time={dayjs(\r\n                                                                revision.createdAt\r\n                                                            ).format(\"hh:mm a\")}\r\n                                                            text={\r\n                                                                revision?.comment ||\r\n                                                                revision?.devComment ||\r\n                                                                revision?.pmComment\r\n                                                            }\r\n                                                            revision={revision}\r\n                                                        />\r\n                                                    )\r\n                                                )}\r\n                                            </Accordion>\r\n                                        )}\r\n\r\n                                        {/* task description */}\r\n                                        <Accordion\r\n                                            expendable={false}\r\n                                            title=\"Task Descriptions\"\r\n                                        >\r\n                                            <Guideline\r\n                                                text={task?.description}\r\n                                            />\r\n\r\n                                            {_.size(task?.attachments) > 0 ? (\r\n                                                <div className=\"mt-3\">\r\n                                                    <h4 className=\"mb-2\">\r\n                                                        Task Attachments:{\" \"}\r\n                                                    </h4>\r\n                                                    <FileUploader>\r\n                                                        {_.map(\r\n                                                            task?.attachments,\r\n                                                            (attachment) =>\r\n                                                                attachment?.pp_task_file_name ? (\r\n                                                                    <FileUploader.Preview\r\n                                                                        key={\r\n                                                                            attachment?.pp_task_file_id\r\n                                                                        }\r\n                                                                        fileName={\r\n                                                                            attachment?.pp_task_file_name\r\n                                                                        }\r\n                                                                        downloadAble={\r\n                                                                            true\r\n                                                                        }\r\n                                                                        deleteAble={\r\n                                                                            false\r\n                                                                        }\r\n                                                                        downloadUrl={\r\n                                                                            attachment?.pp_task_file_url\r\n                                                                        }\r\n                                                                        previewUrl={\r\n                                                                            attachment?.pp_task_file_url\r\n                                                                        }\r\n                                                                        fileType={\r\n                                                                            _.includes(\r\n                                                                                [\r\n                                                                                    \"png\",\r\n                                                                                    \"jpeg\",\r\n                                                                                    \"jpg\",\r\n                                                                                    \"svg\",\r\n                                                                                    \"webp\",\r\n                                                                                    \"gif\",\r\n                                                                                ],\r\n                                                                                attachment?.pp_task_file_icon\r\n                                                                            )\r\n                                                                                ? \"images\"\r\n                                                                                : \"others\"\r\n                                                                        }\r\n                                                                        classname=\"comment_file\"\r\n                                                                        ext={\r\n                                                                            attachment?.pp_task_file_icon\r\n                                                                        }\r\n                                                                    />\r\n                                                                ) : null\r\n                                                        )}\r\n                                                    </FileUploader>\r\n                                                </div>\r\n                                            ) : null}\r\n                                        </Accordion>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </React.Fragment>\r\n                    )}\r\n\r\n                    <div className=\"col-12 col-md-5 col-lg-4\">\r\n                        <div className=\"d-flex flex-column\">\r\n                            {/* period */}\r\n                            <div\r\n                                className=\"sp1_task_right_card mb-3\"\r\n                                style={{ maxHeight: \"450px\" }}\r\n                            >\r\n                                <div className=\"d-flex align-items-center font-weight-bold border-bottom pl-2 pb-2 mb-2\">\r\n                                    <span\r\n                                        style={{\r\n                                            display: \"block\",\r\n                                            width: \"10px\",\r\n                                            height: \"10px\",\r\n                                            borderRadius: \"100%\",\r\n                                            background: taskStatus?.label_color,\r\n                                            marginRight: \"6px\",\r\n                                            boxShadow:\r\n                                                \"0 0 10px rgba(0,0,0,.1)\",\r\n                                        }}\r\n                                    />\r\n\r\n                                    {_taskStatus.getTaskStatusName(\r\n                                        loggedUser?.getRoleId(),\r\n                                        task.isSubtask\r\n                                    )}\r\n                                </div>\r\n\r\n                                <div className=\"d-flex align-items-center mb-2\">\r\n                                    <div className=\"\">Start Date: </div>\r\n                                    <div\r\n                                        className={`d-flex align-items-center font-weight-bold pl-2 ${loadingClass}`}\r\n                                    >\r\n                                        {task?.getStartDate(\"MMM DD, YYYY\")}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Due Date */}\r\n                                <div className=\"d-flex align-items-center mb-2\">\r\n                                    <div className=\"\">Due Date: </div>\r\n                                    <div\r\n                                        className={`d-flex align-items-center font-weight-bold pl-2 ${loadingClass}`}\r\n                                    >\r\n                                        {task?.getDueDate(\"MMM DD, YYYY\")}\r\n                                    </div>\r\n                                </div>\r\n                                {/* End Due Date */}\r\n\r\n                                {/* Time Estimate */}\r\n                                {/* <div className=\"d-flex align-items-center mb-2\">\r\n                                <div className=\"\">Time Estimate: </div>\r\n                                <div\r\n                                    className={`d-flex align-items-center font-weight-bold pl-2 ${loadingClass}`}\r\n                                >\r\n                                    {task?.getEstimateTime()}\r\n                                </div>\r\n                            </div> */}\r\n                                {/* End Time Estimate */}\r\n\r\n                                {/* <div className=\"d-flex align-items-center mb-2\">\r\n                                <div className=\"\">\r\n                                    Parent Task Hours Logged:\r\n                                </div>\r\n                                <div\r\n                                    className={`d-flex align-items-center font-weight-bold pl-2 ${loadingClass}`}\r\n                                >\r\n                                    {task?.parentTaskTimeLog || \"--\"}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"d-flex align-items-center mb-2\">\r\n                                <div className=\"\">Subtask Hours Logged: </div>\r\n                                <div\r\n                                    className={`d-flex align-items-center font-weight-bold ml-2 pl-2 ${loadingClass}`}\r\n                                >\r\n                                    {task?.subTaskTimeLog || \"--\"}\r\n                                </div>\r\n                            </div> */}\r\n\r\n                                <div className=\"d-flex align-items-center mb-2\">\r\n                                    <div className=\"\">Total Hours Logged: </div>\r\n                                    <div className=\"d-flex align-items-center font-weight-bold pl-2\">\r\n                                        {(task.isSubtask\r\n                                            ? task?.parentTaskTimeLog\r\n                                            : task?.totalTimeLog) || \"--\"}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* comments */}\r\n                            {task && task?.id && <SubmittedWork task={task} />}\r\n                            {!task.isSubtask && (\r\n                                <SubTaskSection status={taskStatus} />\r\n                            )}\r\n                            {task && task?.id && (\r\n                                <DailySubmissionSection task={task} />\r\n                            )}\r\n                            {task && task?.id && (\r\n                                <CommentSection\r\n                                    task={task}\r\n                                    isLoading={isTaskFetching || isTaskLoading}\r\n                                />\r\n                            )}\r\n                            <NoteSection />\r\n                            <TimeLogSection />\r\n                            {task && task?.id && <HistorySection />}\r\n                            {task && task?.id && (\r\n                                <RevisionSection task={task} />\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Toaster />\r\n                <ShowEditModals task={task} auth={loggedUser} />\r\n            </div>\r\n        </RefetchTaskProvider.Provider>\r\n    );\r\n};\r\n\r\nexport default SingleIndependentTask;\r\n\r\nconst ShowEditModals = ({ auth, task }) => {\r\n    let hasAccess = false;\r\n\r\n    let time = task.isSubtask ? task?.parentTaskTimeLog : task?.totalTimeLog;\r\n\r\n    if (auth.getRoleId() === 1) {\r\n        hasAccess = true;\r\n    } else if (\r\n        auth.getId() === task.assigneeBy.id &&\r\n        task.boardColumn.id === 2\r\n    ) {\r\n        hasAccess = true;\r\n    } else hasAccess = false;\r\n\r\n    if (hasAccess) {\r\n        if (task.isSubtask) {\r\n            return <SubTaskEditModal task={task} />;\r\n        } else {\r\n            return <TaskEditForm task={task} />;\r\n        }\r\n    }\r\n\r\n    return null;\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Button = ({\r\n    children, \r\n    type=\"button\",\r\n    disabled=false, \r\n    className = '', \r\n    variant='primary',\r\n    size=\"sm\",\r\n    onClick,\r\n    ...props\r\n}) => {\r\n    const classes = `cnx__btn cnx__btn_${variant} ${disabled ? 'cnx__btn_disabled': ''} cnx__btn_${size} ${className}`\r\n\r\n    const handleOnClick = (e) => {\r\n        onClick && onClick(e)\r\n    }\r\n\r\n\r\n    return (\r\n        <button \r\n            type='button' \r\n            className={classes} \r\n            disabled={disabled} \r\n            onClick={handleOnClick} \r\n            {...props}\r\n        >\r\n            {children}\r\n        </button>\r\n    )\r\n}\r\n\r\nButton.propTypes = {\r\n    children: PropTypes.node.isRequired || PropTypes.string.isRequired || PropTypes.array.isRequired,\r\n    disabled: PropTypes.bool,\r\n    className: PropTypes.string,\r\n    variant: PropTypes.oneOf(['primary', 'secondary', 'tertiary', 'success', 'danger']),\r\n    size: PropTypes.oneOf(['sm', 'md', 'lg']),\r\n    onClick: PropTypes.func,\r\n    href: PropTypes.string\r\n}\r\n\r\nexport default Button;","import * as React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Modal = ({ children, isOpen, className }) => {\r\n    const [isBrowser, setIsBrowser] = React.useState(false);\r\n    // generate random id for dropdown menu\r\n    const id = React.useMemo(() => Math.random().toString(36).substr(2, 9), []);\r\n    let DOM = document.getElementById(id);\r\n \r\n  \r\n    React.useEffect(() => {\r\n        setIsBrowser(true);\r\n        const el = document.createElement('div');\r\n        el.id = id;\r\n        document.body.appendChild(el);\r\n        return () => {\r\n            document.body.removeChild(el);\r\n        }\r\n    }, []);\r\n\r\n\r\n    // React.useEffect(() => {\r\n    //     if(isOpen){\r\n    //         document.body.classList.add('cnx_body-overflow-hidden')\r\n    //     }else{\r\n    //         document.body.classList.remove('cnx_body-overflow-hidden')\r\n    //     }\r\n    // }, [isOpen]) \r\n\r\n    if(!DOM) return;\r\n \r\n\r\n    const modalContent = isOpen ? (\r\n        <div className={`cnx_modal ${className}`}>\r\n            {children}\r\n        </div>\r\n    ) : null;\r\n\r\n    if (isBrowser) {\r\n        return ReactDOM.createPortal(\r\n            modalContent,\r\n            DOM\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n    \r\n\r\n}\r\n\r\n\r\nModal.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    isOpen: PropTypes.bool.isRequired,\r\n    className: PropTypes.string,\r\n}\r\n\r\n\r\nexport default Modal;","import React from \"react\";\r\nimport Button from \"./Button\";\r\n\r\nconst SubmitButton = ({onClick, isLoading, className, variant=\"primary\", children, title}) => {\r\n    let body = document.querySelector('#body');\r\n\r\n    const handleOnClick = (e) => {\r\n        e.stopPropagation();\r\n        onClick(e)\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if(isLoading){\r\n            body.style.cursor = 'progress';\r\n        }else{\r\n            body.style.cursor = 'default';\r\n        }\r\n    }, [isLoading])\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            {!isLoading ? (\r\n                <Button variant={variant} onClick={handleOnClick} className={className}>\r\n                    {children || title}\r\n                </Button>\r\n            ) : (\r\n                <div className=\"cursor-processing cnx__btn cnx__btn_sm cnx__btn_primary\">\r\n                    <div\r\n                        className=\"spinner-border text-white\"\r\n                        role=\"status\"\r\n                        style={{\r\n                            width: \"18px\",\r\n                            height: \"18px\",\r\n                        }}\r\n                    ></div>\r\n                    Processing...\r\n                </div>\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default SubmitButton;\r\n","import * as React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {usePopper} from 'react-popper';\r\nimport {motion, AnimatePresence } from 'framer-motion';\r\n\r\nconst DropdownContext = React.createContext();\r\n\r\n\r\nconst DropdownProvider = ({children}) => {\r\n    const [isOpen, setIsOpen] = React.useState(false);\r\n    const [element, setElement] = React.useState(null);\r\n    const [reference, setReference] = React.useState(null);\r\n\r\n    return (\r\n        <DropdownContext.Provider value={{\r\n            element,\r\n            setElement,\r\n            reference,\r\n            setReference,\r\n            isOpen,\r\n            setIsOpen\r\n        }}>\r\n            {children}\r\n        </DropdownContext.Provider>\r\n    )\r\n}\r\n\r\n// dropdown hooks\r\nconst useDropdown = () => {\r\n    const context = React.useContext(DropdownContext);\r\n    if(!context) {\r\n        throw new Error('useDropdown must be used within a DropdownProvider');\r\n    }\r\n    return context;\r\n}\r\n\r\n\r\n// dropdown item\r\nconst DropdownItem = ({children, className, onClick, disabled=false, ...props}) => {\r\n    const {setIsOpen} = useDropdown();\r\n    return(\r\n        <div \r\n            onMouseUp={() => disabled ? null : setIsOpen(false)}\r\n            onClick={(e) => disabled ? null : onClick ? onClick(e): null}\r\n            className={`cnx_dropdown__item ${disabled ? 'cnx_dropdown__item_disabled}': ''} ${className}`}\r\n            {...props}\r\n        >\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst DropdownToggle = ({children, icon=true, className}) => {\r\n    const {setIsOpen, isOpen, setReference} = useDropdown();\r\n    const toggle = () => setIsOpen(!isOpen);\r\n    return(\r\n        <div\r\n            ref={setReference}\r\n            className={`cnx_dropdown__toggle ${className}`}\r\n            onClick={toggle}\r\n        >\r\n\r\n            {children}\r\n            {icon && <i className={`fas fa-caret-${isOpen ? 'up' : 'down'} cnx_dropdown__toggle_icon`}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\n// dropdown menu\r\nconst DropdownMenu = ({children, className, placement=\"bottom-start\", offset=[0, 3], ...props}) => {\r\n    const { reference, setIsOpen, isOpen} = useDropdown();\r\n    const [popperElement , setPopperElement] = React.useState(null);\r\n    const [width, setWidth] = React.useState(100);\r\n    \r\n    // generate random id for dropdown menu\r\n    const id = React.useMemo(() => Math.random().toString(36).substr(2, 9), []);\r\n\r\n\r\n    let DOM = document.getElementById(id);\r\n    const {styles, attributes} = usePopper(reference, popperElement, {\r\n        placement,\r\n        modifiers: [\r\n            {\r\n                name: 'offset',\r\n                options: {\r\n                    offset,\r\n                },\r\n            },\r\n            {\r\n                name: 'flip',\r\n                options: {\r\n                    fallbackPlacements: ['bottom', 'left', 'right', 'top' ],\r\n                },\r\n            }\r\n        ],\r\n    });\r\n\r\n\r\n    // min width\r\n    React.useEffect(() => {\r\n        if(reference){\r\n            setWidth(reference.offsetWidth);\r\n        }\r\n    }, [reference])\r\n\r\n\r\n    // outside click\r\n\r\n    React.useEffect(() => {\r\n        let timeout;\r\n        const handleClickOutside = (event) => {\r\n            if (popperElement && !popperElement.contains(event.target)) {\r\n                setIsOpen(false);\r\n                clearTimeout(timeout);\r\n                window.removeEventListener('click', handleClickOutside);\r\n            }\r\n        };\r\n\r\n\r\n        if(isOpen) {\r\n            timeout = setTimeout(() => {\r\n                window.addEventListener('click', handleClickOutside);\r\n            }, 100);\r\n        } else {\r\n            window.removeEventListener('click', handleClickOutside);\r\n        }\r\n        return () => {\r\n            window.removeEventListener('click', handleClickOutside);\r\n            clearTimeout(timeout);\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [isOpen, popperElement])\r\n\r\n    // create element in html body\r\n    React.useEffect(() => {\r\n        const el = document.createElement('div');\r\n        el.id = id;\r\n        document.body.appendChild(el);\r\n        \r\n        setPopperElement(el);\r\n        return () => {\r\n            document.body.removeChild(el);\r\n        }\r\n    }, [])\r\n\r\n    \r\n    if(!DOM) {\r\n        return null\r\n    }\r\n\r\n    return(\r\n       ReactDOM.createPortal(\r\n            <AnimatePresence>\r\n                {isOpen && (\r\n                    <motion.div \r\n                        initial={{opacity: 0}}\r\n                        animate={{opacity: 1 }}\r\n                        exit={{opacity: 0}}\r\n                        className={`cnx_dropdown__menu ${isOpen ? 'cnx_dropdown__menu_open' : ''} ${className}`}\r\n                        ref={setPopperElement}\r\n                        style={{...styles.popper, minWidth: width}}\r\n                        {...attributes.popper}\r\n                        {...props}\r\n                    >\r\n                        {children}\r\n                    </motion.div>\r\n                )}\r\n            </AnimatePresence>, \r\n            DOM\r\n       )\r\n    )\r\n} \r\n\r\n\r\n\r\nconst Dropdown = ({children, className=''}) => {\r\n    return(\r\n        <div className={`cnx_dropdown ${className}`}>\r\n            <DropdownProvider>\r\n                {children}\r\n            </DropdownProvider>\r\n        </div>\r\n    )\r\n}\r\n\r\nDropdown.Item = DropdownItem;\r\nDropdown.Toggle = DropdownToggle;\r\nDropdown.Menu = DropdownMenu;\r\n\r\nexport default Dropdown;\r\n\r\n\r\n// type\r\n\r\nDropdownProvider.propTypes = {\r\n    children: PropTypes.node.isRequired\r\n}\r\n\r\nDropdownItem.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    onClick: PropTypes.func,\r\n    disabled: PropTypes.bool,\r\n    className: PropTypes.string,\r\n}\r\n\r\nDropdownToggle.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    icon: PropTypes.bool,\r\n    className: PropTypes.string,\r\n}\r\n\r\n\r\nDropdownMenu.propTypes = {\r\n    children: PropTypes.node.isRequired || PropTypes.arrayOf(PropTypes.node).isRequired,\r\n    className: PropTypes.string,\r\n    placement: PropTypes.string,\r\n    offset: PropTypes.arrayOf(PropTypes.number),\r\n}\r\n\r\nDropdown.propTypes = {\r\n    className: PropTypes.string,\r\n    children: PropTypes.node.isRequired || PropTypes.arrayOf(PropTypes.node).isRequired,\r\n}","import * as React from 'react'\r\nimport CKEditorComponent from '../../../ckeditor';\r\nimport Button from '../../components/Button';\r\nimport EmojiPicker, {Emoji, EmojiStyle} from 'emoji-picker-react';\r\nimport Dropdown from '../../components/Dropdown'; \r\nimport { User } from '../../../utils/user-details';\r\nimport UploadFilesInLine from '../../../file-upload/UploadFilesInLine';\r\nimport FileUploader from '../../../file-upload/FileUploader';\r\nimport dayjs from 'dayjs';\r\n \r\n\r\n\r\n\r\nconst InnerComment = ({comment}) => {\r\n    const [showReplies, setShowReplies] = React.useState(false);\r\n    const [replyMode, setReplyMode] = React.useState(false);\r\n    const [selectedEmoji, setSelectedEmoji] = React.useState('');\r\n    const user =  comment?.user ? new User(comment.user) : null; \r\n\r\n    const replies = comment?.replies;\r\n\r\n\r\n    const handleReplyButtonClick = (e) => {\r\n        e.preventDefault();\r\n        setReplyMode(true);\r\n    }\r\n \r\n\r\n\r\n    // emoji selection control\r\n    const handleEmojiSelect = (emojiData, event) => {\r\n        setSelectedEmoji(emojiData.unified)\r\n    }\r\n\r\n\r\n  return (\r\n    <div className='sp1_task_comment_send_box sp1_task_comment_replied pl-2 pb-2' > \r\n        <div className='__send-box flex-column align-items-start' style={{maxWidth: '100%'}}>\r\n            <div className='d-flex align-items-center'>\r\n                <div className='mr-2'>\r\n                    <div className='rounded-circle'>\r\n                        <img \r\n                            src={user?.getAvatar()}\r\n                            alt={user?.getName()}\r\n                            width=\"32px\"\r\n                            height=\"32px\"\r\n                            className='rounded-circle'\r\n                        />\r\n                    </div> \r\n                </div> \r\n                <div className='sp1_comment'>\r\n                    <span className=\"sp1_comment_user--name\">\r\n                        {user?.getName()} ({user?.getDesignationName()})\r\n                    </span>\r\n                    <span className='sp1_comment_time' style={{color: '#888'}}>\r\n                    {\r\n                        comment?.last_updated_at &&\r\n                        <> \r\n                            {dayjs.unix(comment?.last_updated_at).format('MMM DD, YYYY ')} at &nbsp; \r\n                            {dayjs.unix(comment?.last_updated_at).format('hh:mm a')}\r\n                        </>\r\n                    }\r\n                    </span>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='__box __reply_text w-100 my-1 text-dark'>\r\n                <div \r\n                    className='sp1_ck_content sp1_message--body' \r\n                    style={{overflow: 'hidden'}} \r\n                    dangerouslySetInnerHTML={{__html: comment?.comment}} \r\n                /> \r\n            </div> \r\n\r\n            <div className='files'>\r\n                <FileUploader>\r\n                    {comment?.files_data?.map((file) =>(\r\n                        <FileUploader.Preview\r\n                            key={file?.name}\r\n                            fileName={file?.name} \r\n                            downloadAble={true}\r\n                            deleteAble={false}\r\n                            downloadUrl={file?.url}\r\n                            previewUrl={file?.url}\r\n                            fileType={file?.icon}\r\n                            ext=''\r\n                        />\r\n                    ))}\r\n                </FileUploader>\r\n            </div>\r\n\r\n            <div className=\"sp1_task_comment_actions\">\r\n                <Dropdown>\r\n                    <Dropdown.Toggle icon={false}>\r\n                        <i className=\"fa-regular fa-face-smile\"></i>\r\n                    </Dropdown.Toggle>\r\n                    <Dropdown.Menu> \r\n                        <EmojiPicker\r\n                            lazyLoadEmojis= {true} \r\n                        /> \r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n                \r\n                <span>•</span>\r\n                <a href=\"#\" onClick={handleReplyButtonClick}>Reply</a>\r\n                <span>•</span>\r\n                <a href=\"#\">Delete</a>\r\n                <span>•</span>\r\n                <a href=\"#\"><i className=\"fa-solid fa-paperclip\"></i></a>\r\n\r\n                {\r\n                    replies?.length > 0 && (\r\n                        <div className='replies_count' onClick={() => setShowReplies(!showReplies)}>\r\n                                <div className='reply_auth_avatar'>\r\n                                    <div>\r\n                                        <img \r\n                                            src=\"/user-uploads/avatar/40164f31bc7d575c7dbe99b24b408d75.png\"\r\n                                            alt='sender_name'\r\n                                            width=\"20px\"\r\n                                            height=\"20px\"\r\n                                            className='rounded-circle'\r\n                                        />\r\n                                    </div>\r\n        \r\n                                    <div>\r\n                                        <img \r\n                                            src=\"/user-uploads/avatar/40164f31bc7d575c7dbe99b24b408d75.png\"\r\n                                            alt='sender_name'\r\n                                            width=\"20px\"\r\n                                            height=\"20px\"\r\n                                            className='rounded-circle ml-2'\r\n                                        />\r\n                                    </div>\r\n        \r\n                                    <div>\r\n                                        <img \r\n                                            src=\"/user-uploads/avatar/40164f31bc7d575c7dbe99b24b408d75.png\"\r\n                                            alt='sender_name'\r\n                                            width=\"20px\"\r\n                                            height=\"20px\"\r\n                                            className='rounded-circle ml-3'\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className='ml-2'>\r\n                                    3 replies\r\n                                </div>\r\n                        </div>\r\n                    )\r\n                }\r\n              \r\n            </div>\r\n\r\n\r\n \r\n            {/* reply box */} \r\n            {\r\n                replyMode && \r\n                <div className=\"mt-3 pl-3 w-100\">\r\n                    <div className='w-100'>\r\n                        <div className='ck-editor-holder'>\r\n                            <CKEditorComponent />\r\n                        </div> \r\n                        <div className='mt-3 d-flex align-items-center'>\r\n                            <Button className='mr-2'>Reply</Button>\r\n                            <Button \r\n                            variant='secondary' \r\n                            onClick={() => setReplyMode(false)}\r\n                            >Close</Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }  \r\n            {/* reply box */}\r\n\r\n\r\n            {/* <div className='sp1_task_replies_comment_list w-100'> \r\n                {showReplies && replies ? replies.map((r, i) => (\r\n                    <div key={i} className='pl-3 border-left mt-3 w-100'>\r\n                        <InnerComment replies={r.replies} />\r\n                    </div>\r\n                )) : null}\r\n            </div> */}\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InnerComment;","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".sp1_checkbox--label.disable{color:#aaa}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/react/UI/form/checkbox.css\"],\"names\":[],\"mappings\":\"AAAA,6BACI,UACJ\",\"sourcesContent\":[\".sp1_checkbox--label.disable {\\r\\n    color: #aaa;\\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"._8xXZnlhj3eHMkUUObnMmZw\\\\=\\\\={margin:2rem auto;max-width:90%;min-height:10rem;padding:1rem}._7n-CpR1Fy19zjUlU6WsThQ\\\\=\\\\={margin:0 auto}.SxO-JfljZkxUGDLmlQviZg\\\\=\\\\= th{background-color:#222;color:#fff;font-weight:700;padding:15px 25px;text-align:center}.YQAkXuuhsOlsr6ZIt378wQ\\\\=\\\\= td{padding:15px;text-align:center}.A5JA7hH72pS6vSurU7mqwQ\\\\=\\\\={padding:2rem 15px 15px}.A5JA7hH72pS6vSurU7mqwQ\\\\=\\\\=,.sHn0ikpJ-siiyePWSQMFFA\\\\=\\\\={background-color:#fff}.sHn0ikpJ-siiyePWSQMFFA\\\\=\\\\={border-radius:5px;margin-bottom:16px}.YRqnDsOCvlyUNmnxtR\\\\+\\\\+ug\\\\=\\\\=,.sHn0ikpJ-siiyePWSQMFFA\\\\=\\\\={position:relative}.YRqnDsOCvlyUNmnxtR\\\\+\\\\+ug\\\\=\\\\={background-color:transparent;border:1px solid rgba(0,0,0,.37);border-radius:4px;color:rgba(0,0,0,.85);display:block;font-size:16px;height:40px;margin:0 auto;outline:none!important;padding:6px 4px 4px 14px;transition:all .2s ease-in-out;width:100%}.P-INSzqztmJ-mpd7zZK14w\\\\=\\\\={background:#fff;color:rgba(0,0,0,.519);cursor:text;display:inline-block;font-size:14px;font-weight:700;height:14px;left:12px;line-height:14px;margin:0 auto;padding:0 4px;position:absolute;text-align:left;top:30%;transition:all .15s ease-in-out}.YRqnDsOCvlyUNmnxtR\\\\+\\\\+ug\\\\=\\\\=:focus,.YRqnDsOCvlyUNmnxtR\\\\+\\\\+ug\\\\=\\\\=:hover{border:1px solid #000}.YRqnDsOCvlyUNmnxtR\\\\+\\\\+ug\\\\=\\\\=:focus+.P-INSzqztmJ-mpd7zZK14w\\\\=\\\\=,.YRqnDsOCvlyUNmnxtR\\\\+\\\\+ug\\\\=\\\\=:valid+.P-INSzqztmJ-mpd7zZK14w\\\\=\\\\={color:#000;font-weight:700;top:-6px}.sU7OfO8z\\\\+2G5bBnOIGPJmA\\\\=\\\\={background-color:inherit;color:#e32b2b;padding:0 0 0 3px}.sU7OfO8z\\\\+2G5bBnOIGPJmA\\\\=\\\\=:after{content:\\\"*\\\"}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/react/single-independent-task/section/daily-submission/styles/DailySubmission.module.css\"],\"names\":[],\"mappings\":\"AAIA,6BAGE,gBAAiB,CADjB,aAAc,CAEd,gBAAiB,CAHjB,YAIF,CAEA,6BACE,aACF,CAEA,+BACE,qBAAiC,CAGjC,UAAY,CACZ,eAAiB,CAHjB,iBAAkB,CAClB,iBAGF,CAMA,+BAEE,YAAa,CADb,iBAEF,CAGA,4BAGE,sBAEF,CAGA,wDAJE,qBASF,CALA,4BAIE,iBAAkB,CAHlB,kBAIF,CACA,0DAJE,iBAkBF,CAdA,8BAME,4BAA6B,CAF7B,gCAAiC,CACjC,iBAAkB,CAOlB,qBAAuB,CAVvB,aAAc,CASd,cAAe,CAFf,WAAY,CAFZ,aAAgB,CAGhB,sBAAwB,CAFxB,wBAAyB,CAKzB,8BAA+B,CAV/B,UAWF,CAEA,4BAWE,eAAiB,CACjB,sBAA2B,CAE3B,WAAY,CATZ,oBAAqB,CAIrB,cAAe,CACf,eAAiB,CAHjB,WAAY,CAJZ,SAAU,CAKV,gBAAiB,CAKjB,aAAgB,CAPhB,aAAc,CALd,iBAAkB,CAGlB,eAAgB,CAFhB,OAAQ,CAaR,+BACF,CACA,wEAA6B,qBAAwB,CAErD,gIAEE,UAAW,CACX,eAAiB,CAFjB,QAGF,CACA,6BACI,wBAAyB,CACzB,aAAc,CAEd,iBACJ,CACA,mCACI,WACJ\",\"sourcesContent\":[\".bdr{\\r\\n  /* border: solid; */\\r\\n}\\r\\n\\r\\n.container{\\r\\n  padding: 1rem;\\r\\n  max-width: 90%;\\r\\n  margin: 2rem auto;\\r\\n  min-height: 10rem;\\r\\n}\\r\\n\\r\\n.myTable{\\r\\n  margin: 0 auto;\\r\\n}\\r\\n\\r\\n.headerRow th{\\r\\n  background-color: rgb(34, 34, 34);\\r\\n  padding: 15px 25px;\\r\\n  text-align: center;\\r\\n  color: white;\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\n.bodyRow tr{\\r\\n  /* border-radius: 5px; */\\r\\n}\\r\\n\\r\\n.bodyRow td{\\r\\n  text-align: center;\\r\\n  padding: 15px;\\r\\n}\\r\\n\\r\\n\\r\\n.form{\\r\\n  /* border: solid; */\\r\\n  padding: 15px;\\r\\n  padding-top: 2rem;\\r\\n  background-color: white;\\r\\n}\\r\\n\\r\\n/* floating .label input field */\\r\\n.wrapper {\\r\\n  margin-bottom: 16px;\\r\\n  position: relative;\\r\\n  background-color: white;\\r\\n  border-radius: 5px;\\r\\n}\\r\\n.input {\\r\\n  position: relative;\\r\\n  display: block;\\r\\n  width: 100%;\\r\\n  border: 1px solid rgba(0,0,0,.37);\\r\\n  border-radius: 4px;\\r\\n  background-color: transparent;\\r\\n  margin: 0px auto;\\r\\n  padding: 6px 4px 4px 14px;\\r\\n  height: 40px;\\r\\n  outline: none !important;\\r\\n  font-size: 16px;\\r\\n  color: rgba(0,0,0,0.85);\\r\\n  transition: all .2s ease-in-out;\\r\\n}\\r\\n\\r\\n.label {\\r\\n  position: absolute;\\r\\n  top: 30%; \\r\\n  left: 12px;\\r\\n  text-align: left;\\r\\n  display: inline-block;\\r\\n  padding: 0 4px;\\r\\n  height: 14px;\\r\\n  line-height: 14px;\\r\\n  font-size: 14px;\\r\\n  font-weight: bold;\\r\\n  background: white;\\r\\n  color: rgba(0, 0, 0, 0.519);\\r\\n  margin: 0px auto;\\r\\n  cursor: text;\\r\\n  transition: all .15s ease-in-out;\\r\\n}\\r\\n.input:hover, .input:focus { border: 1px solid #000; }\\r\\n\\r\\n.input:valid + .label, .input:focus + .label { \\r\\n  top: -6px;\\r\\n  color: #000;\\r\\n  font-weight: bold;\\r\\n}\\r\\n.formAsterisk {\\r\\n    background-color: inherit;\\r\\n    color: #e32b2b;\\r\\n    padding: 0;\\r\\n    padding-left: 3px;\\r\\n}\\r\\n.formAsterisk:after {\\r\\n    content: \\\"*\\\";\\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"container\": \"_8xXZnlhj3eHMkUUObnMmZw==\",\n\t\"myTable\": \"_7n-CpR1Fy19zjUlU6WsThQ==\",\n\t\"headerRow\": \"SxO-JfljZkxUGDLmlQviZg==\",\n\t\"bodyRow\": \"YQAkXuuhsOlsr6ZIt378wQ==\",\n\t\"form\": \"A5JA7hH72pS6vSurU7mqwQ==\",\n\t\"wrapper\": \"sHn0ikpJ-siiyePWSQMFFA==\",\n\t\"input\": \"YRqnDsOCvlyUNmnxtR++ug==\",\n\t\"label\": \"P-INSzqztmJ-mpd7zZK14w==\",\n\t\"formAsterisk\": \"sU7OfO8z+2G5bBnOIGPJmA==\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".sp1_tlr_tbl_wrapper{overflow-y:auto}.sp1_tlr_table{width:100%}.sp1_tlr_th{border-bottom:2px solid #dbe4ff;color:#373737;height:36px;padding:3px 10px;position:sticky;text-align:center;top:0;z-index:10}.sp1_tlr_td{border-bottom:1px solid #dbe4ff;max-width:350px;min-width:150px;padding:10px;text-align:center}.sp1_tlr_tbody>.sp1_tlr_tr:hover .sp1_tlr_td{background-color:rgba(233,235,240,.349)}.sp1_tlr_tr .sp1_tlr_td_marged{background-color:rgba(243,244,248,.349);border-inline:1px solid #dbe4ff}.sp1_tlr_tr .sp1_tlr_td_marged:first-child,.sp1_tlr_tr .sp1_tlr_td_marged:nth-child(2){border-left-color:transparent}.sp1_tlr_td_border{border-bottom:2px solid #dbe4ff}.sp1_drag_th.__dragging{background-color:hsla(222,6%,69%,.222)}.sp1_drag_th.__drop-area{background-color:rgba(34,45,71,.349)}.from_body{padding:2rem 1rem 3rem}.openRow_bg{background-color:hsla(218,7%,78%,.32)!important;border:none!important;overflow:visible}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/react/single-independent-task/section/daily-submission/styles/DataTable.css\"],\"names\":[],\"mappings\":\"AAAA,qBACI,eACJ,CAEA,eACI,UACJ,CAEA,YAII,+BAA2C,CAK3C,aAAsB,CARtB,WAAY,CACZ,gBAAiB,CAGjB,eAAgB,CAGhB,iBAAkB,CADlB,KAAM,CADN,UAIJ,CAEA,YAII,+BAA2C,CAF3C,eAAgB,CAChB,eAAgB,CAFhB,YAAa,CAIb,iBACJ,CAEA,6CACI,uCACJ,CAEA,+BACI,uCAA2C,CAC3C,+BACJ,CAEA,uFAEI,6BACJ,CAEA,mBACI,+BACJ,CAQA,wBACI,sCACJ,CAEA,yBACI,oCACJ,CAEA,WACI,sBACJ,CAGA,YACI,+CAAqD,CACrD,qBAAuB,CACvB,gBACJ\",\"sourcesContent\":[\".sp1_tlr_tbl_wrapper{\\r\\n    overflow-y: auto;\\r\\n}\\r\\n\\r\\n.sp1_tlr_table{\\r\\n    width: 100%; \\r\\n}\\r\\n\\r\\n.sp1_tlr_th {\\r\\n    height: 36px;\\r\\n    padding: 3px 10px;\\r\\n    /* background-color: rgb(55, 55, 55); */\\r\\n    border-bottom: 2px solid rgb(219, 228, 255);\\r\\n    position: sticky;\\r\\n    z-index: 10;\\r\\n    top: 0;\\r\\n    text-align: center;\\r\\n    color: rgb(55, 55, 55);\\r\\n}\\r\\n\\r\\n.sp1_tlr_td{\\r\\n    padding: 10px;\\r\\n    max-width: 350px;\\r\\n    min-width: 150px;\\r\\n    border-bottom: 1px solid rgb(219, 228, 255);\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.sp1_tlr_tbody > .sp1_tlr_tr:hover .sp1_tlr_td{\\r\\n    background-color:rgba(233, 235, 240, 0.349);\\r\\n}\\r\\n\\r\\n.sp1_tlr_tr .sp1_tlr_td_marged{\\r\\n    background-color:rgba(243, 244, 248, 0.349);\\r\\n    border-inline: 1px solid rgb(219, 228, 255);\\r\\n}\\r\\n\\r\\n.sp1_tlr_tr .sp1_tlr_td_marged:first-child,\\r\\n.sp1_tlr_tr .sp1_tlr_td_marged:nth-child(2){\\r\\n    border-left-color: transparent;\\r\\n}\\r\\n\\r\\n.sp1_tlr_td_border{\\r\\n    border-bottom: 2px solid rgb(219, 228, 255);\\r\\n}\\r\\n\\r\\n/* .sp1_tlr_tbody > .sp1_tlr_tr:hover .sp1_tlr_td_hover-disable{\\r\\n   background-color: #fff !important; \\r\\n} */\\r\\n\\r\\n\\r\\n\\r\\n.sp1_drag_th.__dragging {\\r\\n    background-color: rgba(170, 173, 180, 0.222);\\r\\n}\\r\\n\\r\\n.sp1_drag_th.__drop-area {\\r\\n    background-color: rgba(34, 45, 71, 0.349);\\r\\n}\\r\\n\\r\\n.from_body{\\r\\n    padding: 2rem 1rem 3rem;\\r\\n}\\r\\n\\r\\n\\r\\n.openRow_bg{\\r\\n    background-color:rgba(194, 197, 202, 0.32) !important;\\r\\n    border: none !important;\\r\\n    overflow: visible;\\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".QWT8SKIOKp3nCIlWnmqvlA\\\\=\\\\={box-shadow:0 10px 16px rgba(0,0,0,.2);font-family:Inter;font-weight:400;left:50%;max-width:800px;position:absolute;top:50%;transform:translate(-50%,-50%);width:100%}._7q1rGYYnwZMgY33fyvn5Rw\\\\=\\\\={background-color:#f3f3f3}._7q1rGYYnwZMgY33fyvn5Rw\\\\=\\\\= h6{font-weight:600;margin:0}.xFa21Dq-VWzqARlTwQw6ug\\\\=\\\\=:not(:last-child){border-bottom:1px dashed rgba(0,0,0,.1)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/react/single-independent-task/section/sub-task/task-edit-form.module.css\"],\"names\":[],\"mappings\":\"AAAA,4BASI,qCAAwC,CAFxC,iBAAkB,CAClB,eAAgB,CAHhB,QAAS,CAJT,eAAgB,CAEhB,iBAAkB,CAClB,OAAQ,CAER,8BAAgC,CAJhC,UAQJ,CAGA,6BACI,wBACJ,CAEA,gCAEI,eAAgB,CADhB,QAEJ,CAEA,6CACI,uCACJ\",\"sourcesContent\":[\".form_card{\\r\\n    max-width: 800px;\\r\\n    width: 100%;\\r\\n    position: absolute;\\r\\n    top: 50%;\\r\\n    left: 50%;\\r\\n    transform: translate(-50%, -50%);\\r\\n    font-family: Inter;\\r\\n    font-weight: 400;\\r\\n    box-shadow: 0 10px 16px rgb(0 0 0 / 20%);\\r\\n}\\r\\n\\r\\n\\r\\n.form_card_head{\\r\\n    background-color: rgb(243, 243, 243);\\r\\n}\\r\\n\\r\\n.form_card_head h6{\\r\\n    margin: 0;\\r\\n    font-weight: 600;\\r\\n}\\r\\n\\r\\n.list_border:not(:last-child){\\r\\n    border-bottom: 1px dashed rgb(0 0 0 / 10%);\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"form_card\": \"QWT8SKIOKp3nCIlWnmqvlA==\",\n\t\"form_card_head\": \"_7q1rGYYnwZMgY33fyvn5Rw==\",\n\t\"list_border\": \"xFa21Dq-VWzqARlTwQw6ug==\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["options","locals","_ref","value","onChange","label","checked","_ref$className","className","_ref$labelClassName","labelClassName","_ref$disabled","disabled","_objectWithoutProperties","_excluded","_jsxs","concat","children","_jsx","type","rating","iconClassName","_Fragment","_toConsumableArray","Array","map","r","idx","parseInt","style","color","useRevision","getLeadDeveloperAcknowladgementOptions","id","revision","isDeniable","getProjectManagerAcknowladgementOptions","_regeneratorRuntime","e","t","Object","prototype","n","hasOwnProperty","o","defineProperty","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","ownKeys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","apply","_objectSpread","arguments","_defineProperty","getOwnPropertyDescriptors","defineProperties","obj","key","input","hint","prim","toPrimitive","undefined","res","String","Number","_toPrimitive","_toPropertyKey","asyncGeneratorStep","gen","reject","_next","_throw","info","error","_asyncToGenerator","fn","self","args","err","_slicedToArray","arr","isArray","_arrayWithHoles","_iterableToArrayLimit","minLen","_arrayLikeToArray","toString","from","test","_unsupportedIterableToArray","_nonIterableRest","len","arr2","useSingleTask","User","_window","window","Laravel","user","_useLazyGetTaskDetail2","useLazyGetTaskDetailsQuery","getTaskDetails","taskDetailsIsFetching","isFetching","getTaskById","_callee","taskId","_res$parent_task_head","task","_context","unwrap","taskFiles","parent_task_action","parent_task_title","parent_task_heading","heading","working_environment","working_environment_data","pm_task_guideline","task_guideline","task_revisions","revisions","taskSubTask","Sub_Tasks","t0","console","log","_x","_useLazyGetSubmittedT2","useLazyGetSubmittedTaskQuery","getSubmittedTask","submittionInfoIsFetching","getSubmittionInfo","_ref2","_callee2","data","_context2","_","_x2","_useApproveSubmittedT2","useApproveSubmittedTaskMutation","approveSubmittedTask","approveTaskLoadingStatus","isLoading","approveTask","_ref3","_callee3","callback","_context3","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","fire","icon","title","_x3","_x4","_ref$expendable","expendable","headingClass","headingStyle","_React$useState2","React","expend","setExpend","init","onClick","cursor","AnimatePresence","motion","div","initial","height","animate","exit","text","editorContainerClass","workEnv","_useState2","useSelector","subTask","useState","isLong","showText","ref","useRef","useClickAway","dangerouslySetInnerHTML","__html","href","preventDefault","Modal","isOpen","background","target","site_url","frontend_password","login_url","email","password","index","date","time","minHeight","revisionAcknowledgement","isDeny","isAccept","textIndent","gap","Placeholder","width","close","comment","Button","InnerComment","setIsOpen","overflow","getUserLink","getName","last_updated_at","dayjs","format","CommentPreview","onCommentPost","editMode","setEditMode","_React$useState4","setComment","_React$useState6","files","setFiles","auth","_useStoreCommentMutat2","useStoreCommentMutation","storeComment","handleEditorChange","editor","getData","handleSubmit","fd","FormData","append","document","querySelector","getAttribute","file","task_id","unix","src","getAvatar","alt","CKEditorComponent","UploadFilesInLine","uploadInputClass","fileWrapperClass","role","variant","_ref$toggleRef","toggleRef","modalRef","setModalRef","_usePopper","usePopper","placement","modifiers","offset","styles","attributes","popper","pointerEvents","zIndex","opacity","Shadow","ReactDOM","top","left","maxWidth","_ref$comments","comments","useWindowSize","CustomModal","CommentSendBox","fallback","InnerCommentLoader","minWidth","setComments","modalIsOpen","setModalIsOpen","openAddCommentModal","setOpenAddCommentModal","_React$useState8","modalToggleRef","setModalToggleRef","toggleModalButton","CommentModal","_comments","unshift","border","borderRightColor","fontSize","CommentWritingModal","textAlign","marginRight","Comment","item","setModalData","modalData","verticalAlign","margin","developer_name","submission_creation_date","AiFillEyeInvisible","AiFillEye","toggle","content","singleData","DailySubmissionItem","timeFormatter","_time$split$0$split2","split","year","month","month_name","columnSchema","header","draggable","accessorKey","cell","padding","getValue","convertTime","DataTable","tableData","tableColumns","tableName","_data$daily_submissio","_useState4","modalTableIsOpen","setModalTableIsOpen","_useState6","modalRefButton","setModalRefButton","_useState8","singleUserSubmissionTableDrawerRef","setSingleUserSubmissionTableDrawerRef","_useState10","_useGetDailyTasksSubm","useGetDailyTasksSubmissionQuery","modalTableClose","useEffect","DailysubmissionDrawerTable","daily_submissions","SingleUserSubmissionTableDrawer","InnerHistoryItem","lazy","_ref$data","InnerHistoryItemLoader","history","HistoryItem","fetcher","url","axios","get","_useSelector","histories","dispatch","useDispatch","_useSWR","useSWR","refreshInterval","storeHistories","Histories","Suspense","note","Link","to","_ref$readOnly","readOnly","_ref$placeholder","placeholder","_ref$inputClass","inputClass","_ref$labelClass","labelClass","_ref$type","defaultValue","rest","htmlFor","required","onWheel","currentTarget","blur","notes","setTitle","errTitle","setErrTitle","setNote","deviceWidth","_useCrateNoteMutation2","useCrateNoteMutation","crateNote","status","_notes","storeNotes","Input","setState","handleChange","_React$useState10","attachedFiles","setAttachedFiles","searchParams","useSearchParams","noteId","_useUpdateNoteMutatio2","useUpdateNoteMutation","updateNote","_useGetTaskDetailsQue","useGetTaskDetailsQuery","skip","refetchOnMountOrArgChange","clearField","handleClose","_notes2","_res$note","message","getElementsByTagName","deleteNoteUploadedFile","useDeleteNoteUploadedFileMutation","handleFileDelete","previousFile","indexOf","splice","previous","onPreviousFileDelete","getDesignationName","mode","setMode","navigate","useNavigate","paramType","CreateNote","EditNote","NoteView","Note","setToggleRef","cmt","commentLength","maxHeight","Rating","deadline_meet","submission_quality","req_fullfillment","overall_tasks","ViewComment","_task$assigneeTo","_task$assigneeTo2","_task$assigneeTo3","_task$assigneeTo4","_task$assigneeTo5","_task$assigneeTo6","_task$assigneeBy","_task$assigneeBy2","_task$assigneeBy3","_task$assigneeBy4","_task$assigneeBy5","_task$assigneeBy6","_task$category","_task$boardColumn","_$last","loggedUser","GenarelLoader","getSubtaskTitle","isSubtask","parentTaskId","parentTaskTitle","assigneeTo","getId","assigneeBy","priority","category","boardColumn","labelColor","columnName","getStartDate","getDueDate","parentTaskTimeLog","size","Accordion","last","revisionStatus","RevisionText","createdAt","Guideline","description","_ref$title","SubmittedWorkItem","submittedWork","loading","Loader","timeLog","TableRow","colSpan","TimeLog","getStartTime","endTime","getEndTime","memo","hoursLogged","review","props","ContentLoader","speed","viewBox","backgroundColor","foregroundColor","x","rx","ry","HistoryLoader","parentTask","setTask","taskID","setSubmittedWork","setTimeLog","setReview","setHistories","_React$useState12","_useSingleTask","detailFetchingStateLoading","SingleTask","fetchData","cb","fetchSubmittedWork","Genarel","SubmittedWork","Comments","History","TaskReview","_arrayWithoutHoles","iter","_iterableToArray","_nonIterableSpread","showApproveForm","setShowApproveForm","completedWithInDeadline","setCompletedWithInDeadline","submittedStar","setSubmittedStar","fullfilledStar","setFullfilledStar","_useState12","oldSubmittion","setOldSubmittion","_useState14","latestSubmittion","setLatestSubmittion","_useGetSubmittedTaskQ","useGetSubmittedTaskQuery","_useState16","setErr","sortBy","latest","old","handleOnSubmit","rating2","rating3","user_id","count","warn","HiOutlineSelector","SubmittedWorkCard","submission_no","action","radius","SubmitButton","_data$text","_ref3$latest","_ref3$className","_ref3$isLoading","links","compact","attaches","submission_date","listStyle","link","FileUploader","Preview","fileName","downloadAble","deleteAble","downloadUrl","previewUrl","fileType","includes","ext","toggleEditForm","_useLazyCheckSubTaskT2","useLazyCheckSubTaskTimerQuery","checkSubTaskTimer","useCheckEditableSubTaskQuery","isEditable","stopPropagation","hasEditPermission","added_by","location","PreviewSubtask","setDate","selected","minDate","maxDate","placeholderText","DatePicker","dateFormat","onSelect","query","setQuery","params","useParams","employees","filteredData","employee","toLowerCase","Combobox","displayValue","Options","Option","_useDeveloperInProgre","useDeveloperInProgressTaskQuery","active","isOverloaded","_ref4","image_url","objectFit","developer_status","setSelected","Listbox","SearchBox","_ref$autoFocus","autoFocus","current","focus","xmlns","propTypes","PropTypes","isRequired","categories","cat","category_name","catIdx","onConfirm","buttonVisible","setButtonVisible","countDown","setCountDown","getRoleId","timeIntervelId","setInterval","timeOutId","setTimeout","clearInterval","clearTimeout","onSubmit","siteUrl","setSiteUrl","frontendPassword","setFrontendPassword","loginUrl","setLoginUrl","siteLoginCredentialUserNameOrEmail","setSiteLoginCredentialUserNameOrEmail","setPassword","_useWorkingEnvironmen2","useWorkingEnvironmentMutation","workingEnvironment","project_id","projectId","checkIsURL","username","isConfirmed","_required_error$title","_required_error$start","_required_error$start2","_required_error$due_d","_required_error$due_d2","_required_error$pageT","_required_error$pageT2","_ref6","_ref9","_ref12","_required_error$page_","_required_error$page_2","_required_error$descr","_required_error$descr2","_ref$isFirstSubtask","isFirstSubtask","refetchTask","useRefetchTaskDetails","taskDetails","isWorkingEnvironmentSubmit","CompareDate","setParentTask","startDate","setStateDate","dueDate","setDueDate","taskCategory","setTaskCategory","assignedTo","setAssignedTo","setDescription","setPriority","pageType","setPageType","pageTypeOthers","setPageTypeOthers","pageName","setPageName","pageURL","setPageURL","numberOfPage","setNumberOfPage","_React$useState14","existingDesignLink","setExistingDesignLink","_React$useState16","pageTypePriority","setPageTypePriority","_React$useState18","pageTypeName","setPageTypeName","_useState18","_useCreateSubtaskMuta2","useCreateSubtaskMutation","createSubtask","_useCreateSubtaskMuta3","_useLazyGetTaskDetail3","_React$useState20","showForm","setShowForm","required_error","_React$useState22","isValid","gender","pageUrl","taskType","_startDate","_dueDate","_res$sub_task","_res$sub_task2","_subtask","sub_task","storeSubTasks","setWorkingEnvironmentStatus","WorkingEnvironmentForm","LeadConfirmationModal","toDate","start_date","due_date","TaskCategorySelectionBox","AssginedToSelection","_ref5","_ref7","_ref8","_ref10","_ref11","_ref13","_ref14","page_type","page_url","PrioritySelection","editId","milestone","setMilestone","Date","project","setProject","_useState20","_useState22","_useState24","_useState26","estimateTimeHour","setEstimateTimeHour","_useState28","estimateTimeMin","setEstimateTimeMin","_useState30","_useEditSubtaskMutati2","useEditSubtaskMutation","editSubtask","_useEditSubtaskMutati3","editDataIsFetching","editSubTask","find","estimation","formatedDate","_res$users","users","milestone_title","project_name","task_category","estimate_hours","estimate_minutes","deleteUplaodedFile","useDeleteUplaodedFileMutation","_err$estimate_hours","_err$estimate_minutes","errText","hoursErr","minErr","hours_left","minutes_left","milestone_id","board_column_id","subtask_id","_subtask2","singleTaskPagePermission","projectManagerId","timeControlPermision","statusPermission","assigneePermission","statusId","assignedUser","_loggedUser","subtask","markAsCompletedButtonPermission","approveButtonPermission","needRevisionPermision","revisionButtonPermission","submitForClientApproval","clientApproveConfirmationButtonPermission","subTaskCreationPermision","assignedBy","edit","setEdit","formMode","setFormMode","isTaskModalOpen","setIsTaskModalOpen","subtaskModalToggleRef","setSubtaskModalToggleRef","_useLazyGetInProgress2","useLazyGetInProgressTaskStatusQuery","inProgressTaskStatus","toggleAddButton","closeAddModal","Task","SubTaskForm","workEnvData","SubtTaskEditForm","sub","SubTask","_data$name","image","marginLeft","previewId","SubmitionView","styte","InnerWorkItem","useLocation","preview","modal","state","SubmittedModalView","WorkItem","StopTimerConfrimationPopUp","stopTimer","startTimer","lessTrackModal","lessTrackModalFor","setLessTrackModal","show","handleTemporarilyStopTimer","_task$ranningTimer","timerStart","setTimerStart","timerId","setTimerId","seconds","setSeconds","isOpenConfirmationModal","setIsOpenConfirmationModal","timerStatus","ranningTimer","taskRunning","useMemo","_task$ranningTimer2","_task$ranningTimer3","serverTime","interval","hours","minutes","sec","min","hr","Toast","startTimerFirstCheck","startTimerFirstCheckIsFetching","_useStartTimerApiMuta2","useStartTimerApiMutation","startTimerApi","timerStartStatusIsLoading","_useStopTimerApiMutat2","useStopTimerApiMutation","stopTimerApi","timerStopStatusIsLoading","startTimerControl","_window2","setTaskStatus","task_status","acknowledgement_submitted","showDenyButton","confirmButtonText","denyButtonText","result","_err$data","daily_submission_submitted","timeId","_useLazyGetUserTrackT2","useLazyGetUserTrackTimeQuery","getUserTrackTime","trackTimerFetcing","Math","floor","currentTime","current_time","set","day","check","isBefore","isDev","tracked_times","target_time","is_first_task","StartTimerConfirmationModal","LessTrackTimerModal","setLinks","linkErr","setLinkErr","isModalUrl","setIsModalUrl","commentErr","setCommentErr","_useMarkAsCompleteMut2","useMarkAsCompleteMutation","markAsComplete","isSubmitting","_useLazyCheckSubTaskS2","useLazyCheckSubTaskStateQuery","checkSubTaskState","markAsCompleteModaIsOpen","setMarkAsCompleteModalIsOpen","pathname","URLSearchParams","search","_links","handleOnLinkInputChange","class","SelectedFiles","_Array$from","previews","onDelete","onRemove","valid","formData","reason","setReason","reasonError","setReasonError","commentError","setCommentError","_useRevision","revisionOptions","_useCreateRevisionMut2","useCreateRevisionMutation","createRevision","option","marginTop","marginBottom","_reason$revision","_reason$isDeniable","errorCount","revision_acknowledgement","acknowledgement_id","is_deniable","revisionModal","setRevisionModal","singleTask","RevisionCreationModal","AcceptAndContinueButton","RevisionAcceptAndContinue","_ref2$isSubmitting","onNext","role_id","roleId","_revision$revision_ac","onAccept","onDeny","onContinue","isContinue","pm_comment","lead_comment","revision_reason","_task$taskSubTask","onBack","_ref$isSubmitting","subtasks","setSubtasks","setSubtaskError","SubtaskSelectionMenu","subTasks","_reason$id","_reason$id2","findIndex","hanldeEditorTextChange","NextAndContinueButton","_task$taskSubTask2","_task$taskSubTask3","multiple","overflowY","tabIndex","assigned_to_name","denyOptions","denyReason","setShow","accept","setAccept","setDenyReason","_useGetRevisionDetail","useGetRevisionDetailsQuery","_useRevisionAcceptOrD2","useRevisionAcceptOrDenyByLeadDeveloperMutation","revisionAcceptOrDeny","isLoadingRevisionReview","_comment$comment","_data$reason","_data$is_deniable","fdata","revision_id","deny_reason","generateModalTitle","useCallback","_Task$create_by","_Task$create_by2","_Task$create_by3","create_by","RevisionView","continue","hanldeAcceptAndContinueSubmition","AssigneeRevisionToDev","DenyAndContinue","hanldeDenyAndContinueSubmition","isFetchingRevision","useRevisionAcceptOrDenyMutation","handleAcceptAndContinueSubmission","_data$comment","_data$denyReason","_data","RevisionViewModal","DeveloperRevisionView","SubmitForClientApproval","closeModal","_useSubmitForClientAp2","useSubmitForClientApprovalMutation","transform","_useConfirmClientAppr2","useConfirmClientApprovalMutation","confirmClientApproval","projectManagerAcknowladgement","createDispute","additionalPaid","setAdditionalPaid","additionalInfo","setAdditionalInfo","additionalAmount","setAdditionalAmount","additionalError","setAdditionalError","hasAdditionalPayment","isPay","onBlur","open","disputeCreate","_additionalInfo$info","additional_amount","additional_status","additional_comment","dispute_create","_useStoreClientRevisi2","useStoreClientRevisionTaskMutation","storeClientRevisionTask","AssigneeToLeadFromClientRevision","fData","ClientAcceptedTask","ClientRevision","ReportForm","reportModalOpen","setReportModalOpen","setOpen","refetch","attachmentLink","setAttachmentLink","setChecked","taskDescription","setTaskDescription","completedSection","setCompletedSection","_useSubmitDailySubmis2","useSubmitDailySubmissionMutation","submitDailySubmission","attachmentLinkError","setAttachmentLinkError","taskDescriptionError","setTaskDescriptionError","completedSectionError","setCompletedSectionError","task_title","total_time_spent","client_name","daily_submission_status","borderTop","borderRadius","Checkbox","_window$Laravel","clientId","_token","mark_as_complete","date_type","_useGetDailySubmissio","useGetDailySubmissionQuery","TodaysUpdateModalTableRow","setTodaysUpdateModalisOpen","TodaysUpdateModalTable","GuideLineText","SubtaskCreationControl","subtaskCreationModalIsOpen","setSubtaskCreationModalIsOpen","fontStyle","fontWeight","_useDeveloperCanCompl","useDeveloperCanCompleteTaskQuery","checkMarkAsCompleteEnableStatus","isLoadingCompleteCheck","ENABLE_MARKASCOMPLETE_BUTTON","totalTimeLog","TimerControl","MarkAsComplete","ApproveTask","RevisionControl","RevisionViewControl","ClientApproval","DailySubmissionControl","display","ReportControl","start_time","end_time","hours_logged","Table","Card","Avatar","CardView","_ref4$data","_objectDestructuringEmpty","TimeLogItem","timeLogs","storeTimeLogs","TimeLogTable","TimeLogItemLoader","isVisible","replace","_useUpdateTaskMutatio2","useUpdateTaskMutation","updateTask","_useUpdateTaskMutatio3","form_card","Head","onClose","form_card_head","Body","form_card_body","TaskEditForm","success","_milestone$milestone_","_$find","milestoneID","milestoneTitle","projectName","estimateHours","estimateMinutes","setError","_useGetMilestoneDetai","useGetMilestoneDetailsQuery","projects","isFetchingMilestone","milestones","list_border","deliverable_type","AssignedToSelection","_milestone$deliverabl","errorMessages","showError","requiredField","overloadedUser","field","genderPronoun","SubTaskEditModal","subtaskId","RefetchTaskProvider","setRefetchTask","_task$additionalInfo","_task$additionalInfo2","_task$additionalInfo3","_task$additionalInfo4","_task$category$name","_task$taskType","_task$pageType","_task$pageName","_task$workEnvData","_task$workEnvData2","_task$workEnvData3","_task$workEnvData4","_task$workEnvData5","_task$workEnvData6","throwError","useErrorHandler","isTaskFetching","isTaskLoading","taskStatus","useGetTaskStatusQuery","_useLazyGetWorkingEnv2","useLazyGetWorkingEnvironmentQuery","getWorkingEnv","_useLazyGetWorkingEnv3","isWorkingEnvFetching","isWorkingEnvLoading","CurrentTask","ppTaskFiles","parent_task_id","task_working_environment","code","storeTask","loadingClass","Loading","_taskStatus","BoardColumn","Provider","TaskAction","ind_clientId","ind_client_name","independent_client_name","whiteSpace","loginURL","refSite","guidelines","user_name","devComment","pmComment","attachments","attachment","pp_task_file_name","pp_task_file_url","pp_task_file_icon","classname","pp_task_file_id","label_color","boxShadow","getTaskStatusName","SubTaskSection","DailySubmissionSection","CommentSection","NoteSection","TimeLogSection","HistorySection","RevisionSection","Toaster","ShowEditModals","_ref$variant","_ref$size","classes","isBrowser","setIsBrowser","random","substr","DOM","getElementById","el","createElement","body","appendChild","removeChild","modalContent","DropdownContext","DropdownProvider","element","setElement","reference","setReference","useDropdown","context","DropdownItem","_ref2$disabled","onMouseUp","DropdownToggle","_ref3$icon","_useDropdown2","DropdownMenu","_ref4$placement","_ref4$offset","_excluded2","_useDropdown3","popperElement","setPopperElement","setWidth","fallbackPlacements","offsetWidth","timeout","handleClickOutside","event","contains","removeEventListener","addEventListener","Dropdown","_ref5$className","Item","Toggle","Menu","_comment$files_data","showReplies","setShowReplies","replyMode","setReplyMode","replies","files_data","EmojiPicker","lazyLoadEmojis","___CSS_LOADER_EXPORT___","module"],"sourceRoot":""}