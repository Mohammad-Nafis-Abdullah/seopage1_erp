{"version":3,"file":"js/react/resources_js_react_single-task_section_task-actions_report_ReportForm_jsx.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAwC;AACI;AACO;AACH;AACY;AACP;AACmB;AACa;AAAA;AAAA;AAErF,IAAMa,OAAO,GAAG,CACZ;EACIC,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE;AACV,CAAC,EACD;EACID,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE;AACV,CAAC,CACJ;AAED,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAAC,IAAA,EAAsB;EAAA,IAAAC,YAAA;EAAA,IAAjBC,KAAK,GAAAF,IAAA,CAALE,KAAK;IAAEC,IAAI,GAAAH,IAAA,CAAJG,IAAI;EAC5B,IAAAC,SAAA,GAA4BpB,+CAAQ,CAAC,CAAC,CAAC,CAAC;IAAAqB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAjCG,MAAM,GAAAF,UAAA;IAAEG,SAAS,GAAAH,UAAA;EACxB,IAAAI,UAAA,GAA4BzB,+CAAQ,CAAC,CAAC,CAAC,CAAC;IAAA0B,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAjCE,MAAM,GAAAD,UAAA;IAAEE,SAAS,GAAAF,UAAA;EACxB,IAAAG,UAAA,GAA8B7B,+CAAQ,CAAC,EAAE,CAAC;IAAA8B,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAAnCE,OAAO,GAAAD,UAAA;IAAEE,UAAU,GAAAF,UAAA;EAC1B,IAAAG,UAAA,GAAoDjC,+CAAQ,CAAC,EAAE,CAAC;IAAAkC,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAAzDE,kBAAkB,GAAAD,UAAA;IAAEE,qBAAqB,GAAAF,UAAA;EAGhD,IAAAG,qBAAA,GAAoC9B,wFAAuB,EAAE;IAAA+B,sBAAA,GAAAhB,cAAA,CAAAe,qBAAA;IAAtDE,YAAY,GAAAD,sBAAA;IAAGE,SAAS,GAAAF,sBAAA,IAATE,SAAS;EAG/B,IAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAAC;IACrBC,KAAK,EAAE,IAAI;IACXC,QAAQ,EAAE,SAAS;IACnBC,iBAAiB,EAAE,KAAK;IACxBC,KAAK,EAAE,IAAI;IACXC,gBAAgB,EAAE;EACtB,CAAC,CAAC;EAEF,IAAMC,QAAQ,GAAE,SAAVA,QAAQA,CAAGC,CAAC,EAAG;IAAA,IAAAC,OAAA,EAAAC,eAAA,EAAAC,oBAAA;IACjBH,CAAC,CAACI,cAAc,EAAE;IAClB,IAAMC,IAAI,GAAG;MACThC,MAAM,EAAEA,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAET,IAAI;MACpBa,MAAM,EAAEA,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEd,EAAE;MAClBkB,OAAO,EAAPA,OAAO;MACPI,kBAAkB,EAAlBA,kBAAkB;MAClBqB,OAAO,GAAAL,OAAA,GAAEM,MAAM,cAAAN,OAAA,wBAAAC,eAAA,GAAND,OAAA,CAAQO,OAAO,cAAAN,eAAA,wBAAAC,oBAAA,GAAfD,eAAA,CAAiBO,IAAI,cAAAN,oBAAA,uBAArBA,oBAAA,CAAuBxC,EAAE;MAClC+C,OAAO,EAAEzC,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEN;IACnB,CAAC;IAED0B,YAAY,CAACgB,IAAI,CAAC,CAACM,MAAM,EAAE,CAC1BC,IAAI,CAAC,UAACC,GAAG,EAAK;MACXtB,KAAK,CAACuB,IAAI,CAAC;QACPC,IAAI,EAAE,SAAS;QACfC,KAAK,EAAE;MACX,CAAC,CAAC;MACFhD,KAAK,EAAE;IACX,CAAC,CAAC;EACN,CAAC;EAED,oBACIT,sDAAA,CAACV,uDAAc;IAAAqE,QAAA,eACXzD,uDAAA;MAAM0D,SAAS,EAAC,MAAM;MAAAD,QAAA,gBAElBzD,uDAAA;QAAK0D,SAAS,EAAC,YAAY;QAAAD,QAAA,gBACvB3D,sDAAA;UAAO6D,OAAO,EAAC,EAAE;UAACD,SAAS,EAAC,kBAAkB;UAAAD,QAAA,EAAC;QAAwB,EAAQ,eAC/E3D,sDAAA;UAAK4D,SAAS,EAAC,8BAA8B;UAAAD,QAAA,eACzCzD,uDAAA,CAACV,sDAAO;YAACsE,KAAK,EAAEhD,MAAO;YAACiD,QAAQ,EAAEhD,SAAU;YAAA4C,QAAA,gBACxCzD,uDAAA,CAACV,6DAAc;cAACoE,SAAS,EAAC,kGAAkG;cAAAD,QAAA,gBACxH3D,sDAAA;gBAAM4D,SAAS,EAAC,SAAS;gBAAAD,QAAA,GAAAnD,YAAA,GACpBM,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAET,IAAI,cAAAG,YAAA,cAAAA,YAAA,gBAAIR,sDAAA;kBAAMgE,KAAK,EAAE;oBAACC,KAAK,EAAE;kBAAM,CAAE;kBAAAN,QAAA,EAAC;gBAAI;cAAO,EACvD,eACP3D,sDAAA,CAACP,6DAAiB;gBAACmE,SAAS,EAAC;cAAM,EAAG;YAAA,EACzB,eAEjB5D,sDAAA,CAACR,8DAAe;cACZoE,SAAS,EAAC,6CAA6C;cACvDI,KAAK,EAAE;gBACHG,MAAM,EAAE,EAAE;gBACVC,SAAS,EAAE,OAAO;gBAClBC,SAAS,EAAE;cACf,CAAE;cAAAV,QAAA,EAEDxD,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEmE,GAAG,CAAC,UAACC,MAAM;gBAAA,oBACjBvE,sDAAA,CAACR,6DAAc;kBAEXsE,KAAK,EAAES,MAAO;kBACdX,SAAS,EAAE,SAAAA,UAAAa,KAAA;oBAAA,IAAGC,QAAQ,GAAAD,KAAA,CAARC,QAAQ;sBAAEC,MAAM,GAAAF,KAAA,CAANE,MAAM;oBAAA,OAC1BD,QAAQ,GACF,qCAAqC,GACrCC,MAAM,GACN,mCAAmC,GACnC,4BAA4B;kBAAA,CACrC;kBAAAhB,QAAA,EAEAY,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAElE;gBAAI,GAVRkE,MAAM,CAACnE,EAAE,CAWD;cAAA,CACpB;YAAC,EACY;UAAA;QACZ,EACR;MAAA,EACJ,eAGNF,uDAAA;QAAK0D,SAAS,EAAC,YAAY;QAAAD,QAAA,gBACvB3D,sDAAA;UAAO6D,OAAO,EAAC,EAAE;UAACD,SAAS,EAAC,kBAAkB;UAAAD,QAAA,EAAC;QAE/C,EAAQ,eACR3D,sDAAA;UAAK4D,SAAS,EAAC,8BAA8B;UAAAD,QAAA,eACzC3D,sDAAA,CAACH,6EAAiB;YAACqB,MAAM,EAAEA,MAAO;YAACC,SAAS,EAAEA;UAAU;QAAG,EACzD;MAAA,EACJ,eAENjB,uDAAA;QAAK0D,SAAS,EAAC,YAAY;QAAAD,QAAA,gBACvB3D,sDAAA;UAAO6D,OAAO,EAAC,QAAQ;UAACD,SAAS,EAAC,kBAAkB;UAAAD,QAAA,EAAC;QAErD,EAAQ,eACR3D,sDAAA;UAAK4D,SAAS,EAAC,kBAAkB;UAAAD,QAAA,eAC7B3D,sDAAA,CAACJ,iDAAiB;YACdmE,QAAQ,EAAE,SAAAA,SAACtB,CAAC,EAAEmC,MAAM,EAAK;cACrB,IAAM9B,IAAI,GAAG8B,MAAM,CAACC,OAAO,EAAE;cAC7BtD,UAAU,CAACuB,IAAI,CAAC;YACpB;UAAE;QACJ,EACA;MAAA,EACJ,eAEN5C,uDAAA;QAAK0D,SAAS,EAAC,YAAY;QAAAD,QAAA,gBACvB3D,sDAAA;UAAO6D,OAAO,EAAC,EAAE;UAACD,SAAS,EAAC,kBAAkB;UAAAD,QAAA,EAAC;QAE/C,EAAQ,eACRzD,uDAAA;UAAK0D,SAAS,EAAC,EAAE;UAAAD,QAAA,gBACbzD,uDAAA;YAAK0D,SAAS,EAAC,8BAA8B;YAAAD,QAAA,gBACzC3D,sDAAA;cACI4D,SAAS,EAAC,kBAAkB;cAC5BkB,IAAI,EAAC,OAAO;cACZzE,IAAI,EAAC,oBAAoB;cACzBD,EAAE,EAAC,cAAc;cACjB0D,KAAK,EAAC,KAAK;cACXC,QAAQ,EAAE,SAAAA,SAACtB,CAAC;gBAAA,OACRd,qBAAqB,CAACc,CAAC,CAACsC,MAAM,CAACjB,KAAK,CAAC;cAAA;YACxC,EACH,eACF9D,sDAAA;cACI4D,SAAS,EAAC,kBAAkB;cAC5BC,OAAO,EAAC,cAAc;cAAAF,QAAA,EACzB;YAED,EAAQ;UAAA,EACN,eACNzD,uDAAA;YAAK0D,SAAS,EAAC,8BAA8B;YAAAD,QAAA,gBACzC3D,sDAAA;cACI4D,SAAS,EAAC,kBAAkB;cAC5BkB,IAAI,EAAC,OAAO;cACZzE,IAAI,EAAC,oBAAoB;cACzBD,EAAE,EAAC,cAAc;cACjB0D,KAAK,EAAC,IAAI;cACVC,QAAQ,EAAE,SAAAA,SAACtB,CAAC;gBAAA,OACRd,qBAAqB,CAACc,CAAC,CAACsC,MAAM,CAACjB,KAAK,CAAC;cAAA;YACxC,EACH,eACF9D,sDAAA;cACI4D,SAAS,EAAC,kBAAkB;cAC5BC,OAAO,EAAC,cAAc;cAAAF,QAAA,EACzB;YAED,EAAQ;UAAA,EACN;QAAA,EACJ;MAAA,EACJ,eAENzD,uDAAA;QAAK0D,SAAS,EAAC,gCAAgC;QAAAD,QAAA,gBAC3C3D,sDAAA,CAACN,0DAAM;UACHsF,OAAO,EAAC,UAAU;UAClBC,OAAO,EAAExE,KAAM;UACfmD,SAAS,EAAC,cAAc;UAAAD,QAAA,EAC3B;QAED,EAAS,eAET3D,sDAAA,CAACL,gEAAY;UAACsF,OAAO,EAAEzC,QAAS;UAACT,SAAS,EAAEA,SAAU;UAAC0B,KAAK,EAAC;QAAQ,EAAG;MAAA,EACtE;IAAA;EACH,EACM;AAEzB,CAAC;AAED,iEAAenD,UAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1Le;AACiB;AACA;AACZ;AACtB;AAC4B;AAAA;AAAA;AAEnD,IAAMT,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAAU,IAAA,EAA8B;EAAA,IAAxBW,MAAM,GAAAX,IAAA,CAANW,MAAM;IAAEC,SAAS,GAAAZ,IAAA,CAATY,SAAS;EAC1C,IAAAmE,SAAA,GAAmCJ,yDAAQ,EAAE;IAArCK,KAAK,GAAAD,SAAA,CAALC,KAAK;IAAEC,eAAe,GAAAF,SAAA,CAAfE,eAAe;EAC9B,IAAA7E,SAAA,GAA4BpB,+CAAQ,CAAC,EAAE,CAAC;IAAAqB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAjC8E,MAAM,GAAA7E,UAAA;IAAE8E,SAAS,GAAA9E,UAAA;EAExB,IAAI+E,KAAK,GAAGN,oDAAQ,CAACE,KAAK,EAAE,UAACrC,IAAI;IAAA,OAAK,CAACmC,oDAAQ,CAACnC,IAAI,CAAC4C,OAAO,CAAC;EAAA,EAAC;EAE9D,IAAIC,aAAa,GACbN,MAAM,KAAK,EAAE,GACPE,KAAK,GACLA,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEC,MAAM,CAAC,UAAC1C,IAAI;IAAA,OACfmC,uDAAW,CAACnC,IAAI,CAAC7C,IAAI,CAAC,CAAC4F,QAAQ,CAACZ,uDAAW,CAACI,MAAM,CAAC,CAAC;EAAA,EACvD;EAEX,oBACIzF,sDAAA;IAAK4D,SAAS,EAAC,8BAA8B;IAAAD,QAAA,eACzCzD,uDAAA,CAACkF,uDAAQ;MAACtB,KAAK,EAAE5C,MAAO;MAAC6C,QAAQ,EAAE5C,SAAU;MAAAwC,QAAA,gBACzCzD,uDAAA,CAACkF,8DAAe;QAACxB,SAAS,EAAC,yBAAyB;QAAAD,QAAA,gBAChD3D,sDAAA,CAACoF,6DAAc;UACXxB,SAAS,EAAC,wFAAwF;UAClGuC,YAAY,EAAE,SAAAA,aAACjF,MAAM;YAAA,OAAKA,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEb,IAAI;UAAA,CAAC;UACvC0D,QAAQ,EAAE,SAAAA,SAACtB,CAAC;YAAA,OAAKiD,SAAS,CAACjD,CAAC,CAACsC,MAAM,CAACjB,KAAK,CAAC;UAAA,CAAC;UAC3CsC,WAAW,EAAC;QAAI,EAClB,eAGFpG,sDAAA;UACIgE,KAAK,EAAE;YACH5B,QAAQ,EAAE,UAAU;YACpBiE,GAAG,EAAE,KAAK;YACVC,KAAK,EAAE,KAAK;YACZC,SAAS,EAAE;UACf,CAAE;UAAA5C,QAAA,eAEF3D,sDAAA,CAACP,6DAAiB;QAAG,EAClB;MAAA,EACO,eAElBO,sDAAA,CAACoF,+DAAgB;QACbxB,SAAS,EAAC,6CAA6C;QACvDI,KAAK,EAAE;UACHG,MAAM,EAAE,EAAE;UACVC,SAAS,EAAE,OAAO;UAClBC,SAAS,EAAE;QACf,CAAE;QAAAV,QAAA,EAEDoC,aAAa,IAAIA,aAAa,CAACS,MAAM,GAClCT,aAAa,CAACzB,GAAG,CAAC,UAACpB,IAAI;UAAA,oBACnBlD,sDAAA,CAACoF,8DAAe;YAEZtB,KAAK,EAAEZ,IAAK;YACZU,SAAS,EAAE,SAAAA,UAAAa,KAAA;cAAA,IAAGC,QAAQ,GAAAD,KAAA,CAARC,QAAQ;gBAAEC,MAAM,GAAAF,KAAA,CAANE,MAAM;cAAA,OAC9BD,QAAQ,GACF,qCAAqC,GACrCC,MAAM,GACN,mCAAmC,GACnC,4BAA4B;YAAA,CACrC;YAAAhB,QAAA,EAEI,SAAAA,SAAA8C,KAAA;cAAA,IAAE/B,QAAQ,GAAA+B,KAAA,CAAR/B,QAAQ;cAAA,oBACPxE,uDAAA;gBAAK0D,SAAS,EAAC,+CAA+C;gBAACI,KAAK,EAAE;kBAAE0C,GAAG,EAAE;gBAAO,CAAE;gBAAA/C,QAAA,gBAClF3D,sDAAA;kBACI2G,GAAG,EAAEzD,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAE0D,SAAU;kBACrBC,GAAG,EAAE3D,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAE7C,IAAK;kBAChByG,KAAK,EAAE,EAAG;kBACVC,MAAM,EAAE,EAAG;kBACXnD,SAAS,EAAC;gBAAgB,EAC5B,EACDc,QAAQ,eACT1E,sDAAA;kBAAM4D,SAAS,EAAC,OAAO;kBAAAD,QAAA,EAAET,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAE7C;gBAAI,EAAQ,EAE1CqE,QAAQ,iBAAIxE,uDAAA;kBAAM0D,SAAS,EAAC,SAAS;kBAAAD,QAAA,GAAC,GAAC,eAAA3D,sDAAA;oBAAG4D,SAAS,EAAC;kBAA8B,EAAG,KAAC;gBAAA,EAAO;cAAA,EAC5F;YAAA;UACT,GAxBIV,IAAI,CAAC9C,EAAE,CAyBE;QAAA,CACrB,CAAC,gBAEFJ,sDAAA;UAAK4D,SAAS,EAAC,4BAA4B;UAAAD,QAAA,EACtC6B,eAAe,GAAG,YAAY,GAAG;QAAgB;MAEzD,EACc;IAAA;EACZ,EACT;AAEd,CAAC;AAED,iEAAe3F,iBAAiB,EAAC;;AAEjC;AACA;;AAEA;AACA;;AAEA;AACA","sources":["webpack:///./resources/js/react/single-task/section/task-actions/report/ReportForm.jsx","webpack:///./resources/js/react/single-task/section/task-actions/stop-timer/options/UserSelectionList.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Listbox } from \"@headlessui/react\";\r\nimport { HiOutlineSelector } from \"react-icons/hi\";\r\nimport Button from \"../../../components/Button\";\r\nimport SubmitButton from \"../../../components/SubmitButton\";\r\nimport CKEditorComponent from \"../../../../ckeditor\";\r\nimport UserSelectionList from \"../stop-timer/options/UserSelectionList\";\r\nimport { useCreateReportMutation } from \"../../../../services/api/SingleTaskPageApi\";\r\n\r\nconst reports = [\r\n    {\r\n        id: 1,\r\n        name: \"Project Manager/Lead Developer Is Making Me Do Their Work Without Top Managementsâ€™ Authorization\",\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Need Further Clarification From Lead Developer/Project Manager\",\r\n    },\r\n];\r\n\r\nconst ReportForm = ({close, task}) => {\r\n    const [reason, setReason] = useState({});\r\n    const [person, setPerson] = useState({});\r\n    const [comment, setComment] = useState(\"\");\r\n    const [previousNotedIssue, setPreviousNotedIssue] = useState(\"\");\r\n\r\n\r\n    const [createReport, {isLoading}] = useCreateReportMutation();\r\n\r\n\r\n    const Toast = Swal.mixin({\r\n        toast: true,\r\n        position: \"top-end\",\r\n        showConfirmButton: false,\r\n        timer: 5000,\r\n        timerProgressBar: true,\r\n    });\r\n\r\n    const onSubmit =(e)=>{\r\n        e.preventDefault();\r\n        const data = {\r\n            reason: reason?.name,\r\n            person: person?.id,\r\n            comment,\r\n            previousNotedIssue,\r\n            user_id: window?.Laravel?.user?.id,\r\n            task_id: task?.id\r\n        }\r\n        \r\n        createReport(data).unwrap()\r\n        .then((res) => { \r\n            Toast.fire({\r\n                icon: 'success',\r\n                title: \"Report Issued Successfully!\"\r\n            });  \r\n            close();\r\n        })\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <form className=\"px-3\">\r\n                {/* reason selection */}\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"\" className=\"font-weight-bold\">Select Reason for report</label>\r\n                    <div className=\"position-relative w-100 mb-3\">\r\n                        <Listbox value={reason} onChange={setReason}>\r\n                            <Listbox.Button className=\"w-100 bg-white py-2 pl-2 pr-1 border text-left d-flex align-items-center justify-content-between\">\r\n                                <span className=\"mr-auto\">\r\n                                    {reason?.name ?? <span style={{color: '#aaa'}}> -- </span>}\r\n                                </span>\r\n                                <HiOutlineSelector className=\"f-16\" />\r\n                            </Listbox.Button>\r\n\r\n                            <Listbox.Options\r\n                                className=\"position-absolute bg-white p-2 shadow w-100\"\r\n                                style={{\r\n                                    zIndex: 10,\r\n                                    maxHeight: \"350px\",\r\n                                    overflowY: \"auto\",\r\n                                }}\r\n                            >\r\n                                {reports?.map((report) => (\r\n                                    <Listbox.Option\r\n                                        key={report.id}\r\n                                        value={report}\r\n                                        className={({ selected, active }) =>\r\n                                            selected\r\n                                                ? \"task-selection-list-option selected\"\r\n                                                : active\r\n                                                ? \"task-selection-list-option active\"\r\n                                                : \"task-selection-list-option\"\r\n                                        }\r\n                                    >\r\n                                        {report?.name}\r\n                                    </Listbox.Option>\r\n                                ))}\r\n                            </Listbox.Options>\r\n                        </Listbox>\r\n                    </div>\r\n                </div>\r\n                {/* reason selection end */}\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                        Responsible Person\r\n                    </label>\r\n                    <div className=\"position-relative w-100 mb-3\">\r\n                        <UserSelectionList person={person} setPerson={setPerson} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"editor\" className=\"font-weight-bold\">\r\n                        Briefly describe the problem here...\r\n                    </label>\r\n                    <div className=\"ck-editor-holder\">\r\n                        <CKEditorComponent\r\n                            onChange={(e, editor) => {\r\n                                const data = editor.getData();\r\n                                setComment(data);\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                        Did you report the same issue previously?\r\n                    </label>\r\n                    <div className=\"\">\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input\r\n                                className=\"form-check-input\"\r\n                                type=\"radio\"\r\n                                name=\"inlineRadioOptions\"\r\n                                id=\"inlineRadio1\"\r\n                                value=\"yes\"\r\n                                onChange={(e) =>\r\n                                    setPreviousNotedIssue(e.target.value)\r\n                                }\r\n                            />\r\n                            <label\r\n                                className=\"form-check-label\"\r\n                                htmlFor=\"inlineRadio1\"\r\n                            >\r\n                                Yes\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input\r\n                                className=\"form-check-input\"\r\n                                type=\"radio\"\r\n                                name=\"inlineRadioOptions\"\r\n                                id=\"inlineRadio2\"\r\n                                value=\"no\"\r\n                                onChange={(e) =>\r\n                                    setPreviousNotedIssue(e.target.value)\r\n                                }\r\n                            />\r\n                            <label\r\n                                className=\"form-check-label\"\r\n                                htmlFor=\"inlineRadio2\"\r\n                            >\r\n                                No\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"my-3 d-flex align-items-center\">\r\n                    <Button\r\n                        variant=\"tertiary\"\r\n                        onClick={close}\r\n                        className=\"ml-auto mr-2\"\r\n                    >\r\n                        Close\r\n                    </Button>\r\n\r\n                    <SubmitButton onClick={onSubmit} isLoading={isLoading} title=\"Report\" />\r\n                </div>\r\n            </form>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ReportForm;\r\n","import React, { useState } from \"react\";\r\nimport { useUsers } from \"../../../../../hooks/useUsers\";\r\nimport { User } from \"../../../../../utils/user-details\";\r\nimport { Combobox } from \"@headlessui/react\";\r\nimport _ from \"lodash\";\r\nimport { HiOutlineSelector } from \"react-icons/hi\";\r\n\r\nconst UserSelectionList = ({ person, setPerson }) => {\r\n    const { users, usersIsFetching } = useUsers();\r\n    const [search, setSearch] = useState(\"\");\r\n\r\n    let _user = _.filter(users, (user) => !_.isNull(user.role_id));\r\n\r\n    let filteredUsers =\r\n        search === \"\"\r\n            ? _user\r\n            : _user?.filter((user) =>\r\n                  _.lowerCase(user.name).includes(_.lowerCase(search))\r\n              );\r\n\r\n    return (\r\n        <div className=\"position-relative w-100 mb-3\">\r\n            <Combobox value={person} onChange={setPerson}>\r\n                <Combobox.Button className=\"position-relative w-100\">\r\n                    <Combobox.Input\r\n                        className=\"w-100 bg-white py-2 pl-2 pr-1 border d-flex align-items-center justify-content-between\"\r\n                        displayValue={(person) => person?.name}\r\n                        onChange={(e) => setSearch(e.target.value)}\r\n                        placeholder=\"--\"\r\n                    />\r\n\r\n                    {/* Selection box icon */}\r\n                    <span\r\n                        style={{\r\n                            position: \"absolute\",\r\n                            top: \"50%\",\r\n                            right: \"5px\",\r\n                            transform: \"translateY(-50%)\",\r\n                        }}\r\n                    >\r\n                        <HiOutlineSelector />\r\n                    </span>\r\n                </Combobox.Button>\r\n\r\n                <Combobox.Options\r\n                    className=\"position-absolute bg-white p-2 shadow w-100\"\r\n                    style={{\r\n                        zIndex: 10,\r\n                        maxHeight: \"350px\",\r\n                        overflowY: \"auto\",\r\n                    }}\r\n                >\r\n                    {filteredUsers && filteredUsers.length ? (\r\n                        filteredUsers.map((user) => (\r\n                            <Combobox.Option\r\n                                key={user.id}\r\n                                value={user}\r\n                                className={({ selected, active }) =>\r\n                                selected\r\n                                    ? \"task-selection-list-option selected\"\r\n                                    : active\r\n                                    ? \"task-selection-list-option active\"\r\n                                    : \"task-selection-list-option\"\r\n                            }\r\n                            >\r\n                                {({selected}) => (\r\n                                    <div className=\"d-flex align-items-center bg-transparent f-14\" style={{ gap: \"10px\" }}>\r\n                                        <img\r\n                                            src={user?.image_url}\r\n                                            alt={user?.name}\r\n                                            width={24}\r\n                                            height={24}\r\n                                            className=\"rounded-circle\"\r\n                                        />\r\n                                        {selected}\r\n                                        <span className=\"w-100\">{user?.name}</span>\r\n\r\n                                        {selected && <span className=\"ml-auto\"> <i className=\"fa-solid fa-check text-white\" /> </span> }\r\n                                    </div>\r\n                                )}\r\n                            </Combobox.Option>\r\n                        ))\r\n                    ) : (\r\n                        <div className=\"task-selection-list-option\">\r\n                            {usersIsFetching ? \"Loading...\" : \"Nothing found.\"}\r\n                        </div>\r\n                    )}\r\n                </Combobox.Options>\r\n            </Combobox>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserSelectionList;\r\n\r\n// const UserList = (props) => {\r\n//     const user = new User(props.user);\r\n\r\n//     if (!user?.getRoleId()) return null;\r\n//     return (\r\n        \r\n//     );\r\n// };\r\n"],"names":["React","useState","Listbox","HiOutlineSelector","Button","SubmitButton","CKEditorComponent","UserSelectionList","useCreateReportMutation","jsx","_jsx","jsxs","_jsxs","reports","id","name","ReportForm","_ref","_reason$name","close","task","_useState","_useState2","_slicedToArray","reason","setReason","_useState3","_useState4","person","setPerson","_useState5","_useState6","comment","setComment","_useState7","_useState8","previousNotedIssue","setPreviousNotedIssue","_useCreateReportMutat","_useCreateReportMutat2","createReport","isLoading","Toast","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","onSubmit","e","_window","_window$Laravel","_window$Laravel$user","preventDefault","data","user_id","window","Laravel","user","task_id","unwrap","then","res","fire","icon","title","Fragment","children","className","htmlFor","value","onChange","style","color","Options","zIndex","maxHeight","overflowY","map","report","Option","_ref2","selected","active","editor","getData","type","target","variant","onClick","useUsers","User","Combobox","_","_useUsers","users","usersIsFetching","search","setSearch","_user","filter","isNull","role_id","filteredUsers","lowerCase","includes","Input","displayValue","placeholder","top","right","transform","length","_ref3","gap","src","image_url","alt","width","height"],"sourceRoot":""}