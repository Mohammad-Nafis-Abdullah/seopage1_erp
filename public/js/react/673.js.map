{"version":3,"file":"js/react/673.js","mappings":"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","sources":["webpack:///./resources/js/react/TimeLogTable/components/EmployeeSessionTableLoader.jsx","webpack:///./resources/js/react/TimeLogTable/components/EmployeeSessionTable.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Placeholder } from \"../../global/Placeholder\";\r\nimport _ from \"lodash\";\r\n\r\n\r\n\r\n\r\nconst EmployeeSessionTableLoader = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <tr className=\"sp1_tlr_tr\">\r\n                <td className=\"sp1_tlr_td\" rowSpan={3}> \r\n                    <Placeholder width=\"250px\" className=\"mb-2\"/>\r\n                    <Placeholder width=\"150px\" />\r\n                </td>\r\n                <td className=\"sp1_tlr_td\" rowSpan={3}> \r\n                    <Placeholder width=\"100%\" className=\"mb-2\"/>\r\n                    <Placeholder width=\"100%\" className=\"mb-2\"/>\r\n                    <Placeholder width=\"50%\" />\r\n                </td> \r\n                <td className=\"sp1_tlr_td\" > <Placeholder width=\"150px\"/> </td>\r\n                \r\n                <td className=\"sp1_tlr_td\" rowSpan={3}><Placeholder width=\"100%\" className=\"mb-2\"/></td>\r\n                \r\n                <td className=\"sp1_tlr_td\" > <Placeholder width=\"120px\"/> </td>\r\n                          \r\n                \r\n                <td className=\"sp1_tlr_td\" > \r\n                    <Placeholder width=\"120px\" className=\"mb-2\"/> \r\n                    <Placeholder width=\"70px\" height={14}/>\r\n                </td>\r\n                \r\n                <td className=\"sp1_tlr_td\" > \r\n                    <Placeholder width=\"150px\" className=\"mb-2\"/> \r\n                    <Placeholder width=\"70px\" height={14}/>\r\n                </td>\r\n\r\n                <td className=\"sp1_tlr_td\" > <Placeholder width=\"100px\"/> </td>\r\n            </tr>\r\n\r\n            {_.times(2, index =>(\r\n                <tr key={index} className=\"sp1_tlr_tr\"> \r\n                <td className=\"sp1_tlr_td\" > <Placeholder width=\"120px\"/> </td>\r\n                \r\n                <td className=\"sp1_tlr_td\" > <Placeholder width=\"120px\"/> </td>\r\n                          \r\n                <td className=\"sp1_tlr_td\" > \r\n                    <Placeholder width=\"150px\" className=\"mb-2\"/> \r\n                    <Placeholder width=\"100px\" height={14}/>\r\n                </td>\r\n                \r\n                <td className=\"sp1_tlr_td\" > \r\n                    <Placeholder width=\"150px\" className=\"mb-2\"/> \r\n                    <Placeholder width=\"100px\" height={14}/>\r\n                </td>\r\n\r\n                <td className=\"sp1_tlr_td\" > <Placeholder width=\"100px\"/> </td>\r\n                </tr>\r\n            ))}\r\n\r\n            {_.times(2, index =>(\r\n                <tr key={index} className=\"sp1_tlr_tr\">\r\n                    <td className=\"sp1_tlr_td\"> \r\n                            <Placeholder width=\"250px\" className=\"mb-2\"/>\r\n                            <Placeholder width=\"60px\" />\r\n                        </td>\r\n                        <td className=\"sp1_tlr_td\"> \r\n                            <Placeholder width=\"100%\" className=\"mb-2\"/>\r\n                            <Placeholder width=\"100%\" className=\"mb-2\"/>\r\n                            <Placeholder width=\"50%\" />\r\n                        </td> \r\n                        <td className=\"sp1_tlr_td\" > <Placeholder width=\"150px\"/> </td>\r\n                        \r\n                \r\n                        <td className=\"sp1_tlr_td\" rowSpan={3}> \r\n                            <Placeholder width=\"100%\" className=\"mb-2\"/>\r\n                        </td>\r\n                        \r\n                        <td className=\"sp1_tlr_td\" > <Placeholder width=\"150px\"/> </td>\r\n                          \r\n                        <td className=\"sp1_tlr_td\" > \r\n                            <Placeholder width=\"150px\" className=\"mb-2\"/> \r\n                            <Placeholder width=\"100px\" height={14}/>\r\n                        </td>\r\n                        \r\n                        <td className=\"sp1_tlr_td\" > \r\n                            <Placeholder width=\"150px\" className=\"mb-2\"/> \r\n                            <Placeholder width=\"100px\" height={14}/>\r\n                        </td>\r\n\r\n                        <td className=\"sp1_tlr_td\" > <Placeholder width=\"100px\"/> </td>\r\n                </tr>\r\n            ))}\r\n\r\n            <tr className=\"sp1_tlr_tr\">\r\n                <td className=\"sp1_tlr_td\" rowSpan={2}> \r\n                    <Placeholder width=\"250px\" className=\"mb-2\"/>\r\n                    <Placeholder width=\"150px\" />\r\n                </td>\r\n                <td className=\"sp1_tlr_td\" rowSpan={2}> \r\n                    <Placeholder width=\"100%\" className=\"mb-2\"/>\r\n                    <Placeholder width=\"100%\" className=\"mb-2\"/>\r\n                    <Placeholder width=\"50%\" />\r\n                </td> \r\n                <td className=\"sp1_tlr_td\" > <Placeholder width=\"150px\"/> </td>\r\n                \r\n                <td className=\"sp1_tlr_td\" rowSpan={3}> \r\n                    <Placeholder width=\"100%\" className=\"mb-2\"/>\r\n                </td>\r\n\r\n\r\n                <td className=\"sp1_tlr_td\" > <Placeholder width=\"150px\"/> </td>\r\n                          \r\n                <td className=\"sp1_tlr_td\" > \r\n                    <Placeholder width=\"150px\" className=\"mb-2\"/> \r\n                    <Placeholder width=\"100px\" height={14}/>\r\n                </td>\r\n                \r\n                <td className=\"sp1_tlr_td\" > \r\n                    <Placeholder width=\"150px\" className=\"mb-2\"/> \r\n                    <Placeholder width=\"100px\" height={14}/>\r\n                </td>\r\n\r\n                <td className=\"sp1_tlr_td\" > <Placeholder width=\"100px\"/> </td>\r\n            </tr>\r\n\r\n            {_.times(1, index =>(\r\n                <tr key={index} className=\"sp1_tlr_tr\"> \r\n                <td className=\"sp1_tlr_td\" > <Placeholder width=\"150px\"/> </td>\r\n                <td className=\"sp1_tlr_td\" > <Placeholder width=\"150px\"/> </td>\r\n                <td className=\"sp1_tlr_td\" > \r\n                    <Placeholder width=\"150px\" className=\"mb-2\"/> \r\n                    <Placeholder width=\"100px\"/>\r\n                </td>\r\n                \r\n                <td className=\"sp1_tlr_td\" > \r\n                    <Placeholder width=\"150px\" className=\"mb-2\"/> \r\n                    <Placeholder width=\"100px\" height={14}/>\r\n                </td>\r\n\r\n                <td className=\"sp1_tlr_td\" > <Placeholder width=\"100px\"/> </td>\r\n                </tr>\r\n            ))}\r\n\r\n            {_.times(3, index =>(\r\n                <tr key={index} className=\"sp1_tlr_tr\">\r\n                     <td className=\"sp1_tlr_td\"> \r\n                            <Placeholder width=\"250px\" className=\"mb-2\"/>\r\n                            <Placeholder width=\"150px\" />\r\n                        </td>\r\n                        <td className=\"sp1_tlr_td\"> \r\n                            <Placeholder width=\"100%\" className=\"mb-2\"/>\r\n                            <Placeholder width=\"100%\" className=\"mb-2\"/>\r\n                            <Placeholder width=\"50%\" />\r\n                        </td> \r\n                        <td className=\"sp1_tlr_td\" > <Placeholder width=\"150px\"/> </td>\r\n                          \r\n                        <td className=\"sp1_tlr_td\" rowSpan={3}> \r\n                            <Placeholder width=\"100%\" className=\"mb-2\"/>\r\n                        </td>\r\n                        <td className=\"sp1_tlr_td\" > <Placeholder width=\"150px\"/> </td>\r\n                          \r\n                        <td className=\"sp1_tlr_td\" > \r\n                            <Placeholder width=\"150px\" className=\"mb-2\"/> \r\n                            <Placeholder width=\"100px\" height={14}/>\r\n                        </td>\r\n                        \r\n                        <td className=\"sp1_tlr_td\" > \r\n                            <Placeholder width=\"150px\" className=\"mb-2\"/> \r\n                            <Placeholder width=\"100px\"height={14}/>\r\n                        </td>\r\n\r\n                        <td className=\"sp1_tlr_td\" > <Placeholder width=\"100px\"/> </td>\r\n                </tr>\r\n            ))}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default EmployeeSessionTableLoader;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./data-table.css\";\r\nimport TableFooter from \"./TableFooter\";\r\nimport TableDragAbleHeader from \"./DragHeader\";\r\nimport EmployeeSessionTableLoader from \"./EmployeeSessionTableLoader\";\r\n\r\n\r\n\r\nconst DataTable = ({\r\n    data,\r\n    columns = [],\r\n    tableName = \"data-table\",\r\n    sortBy = \"\",\r\n    height = \"calc(100vh - 100px)\",\r\n    onPaginate,\r\n    perpageData,\r\n    handlePerPageData,\r\n    totalEntry,\r\n    currentPage,\r\n    isLoading,\r\n}) => {\r\n    const [columnOrder, setColumnOrder] = useState([]);\r\n\r\n    // get columns keys\r\n    useEffect(() => {\r\n        const column_ids = _.map(columns, \"id\");\r\n        setColumnOrder([...column_ids]);\r\n    }, []);\r\n\r\n    const _columns = _.sortBy(columns, (item) =>\r\n        _.indexOf(columnOrder, item.id)\r\n    );\r\n\r\n\r\n    // render row\r\n    const renderRow = (data) => {\r\n        const rows = [];\r\n        if (data) {\r\n            for (const [key, value] of data) {\r\n                {\r\n                    value?.map((item, index) => {\r\n                        const className =\r\n                            value.length === index + 1\r\n                                ? \"sp1_tlr_td f-14 sp1_tlr_td_border\"\r\n                                : \"sp1_tlr_td f-14\"; \r\n                        rows.push(\r\n                            <React.Fragment key={item.start_time}>\r\n                                <tr className=\"sp1_tlr_tr\">\r\n                                    {\r\n                                        _.map(_columns, col =>{\r\n                                            if(col.group){\r\n                                                return index === 0 && (\r\n                                                    <React.Fragment key={col.id}>\r\n                                                        {col.cell({row: item, data: value, rowSpan: _.size(value)})}\r\n                                                    </React.Fragment>\r\n                                                );\r\n                                            }else{\r\n                                                    return <React.Fragment key={col.id}>\r\n                                                        { col.cell({ row: item, data: value, index,  className: `${className} sp1_drag_col_${col?.id}`})}\r\n                                                    </React.Fragment>\r\n                                                }\r\n                                            }\r\n                                        )\r\n                                    }\r\n                                </tr>\r\n                            </React.Fragment>\r\n                        );\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        return rows;\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"p-3\">\r\n                <div\r\n                    className=\"position-relative sp1_tlr_tbl_wrapper\"\r\n                    style={{ height }}\r\n                >\r\n                    <table className=\"sp1_tlr_table\">\r\n                        <thead className=\"sp1_tlr_thead\">\r\n                            <tr className=\"sp1_tlr_tr\">\r\n                                {_.map(_columns, (column) => {\r\n                                    return (\r\n                                        <TableDragAbleHeader\r\n                                            key={column.id}\r\n                                            className=\"sp1_tlr_th\"\r\n                                            column={column}\r\n                                            columns = {_columns}\r\n                                            onSort={() => {}}\r\n                                            onDrop={setColumnOrder}\r\n                                            order={columnOrder}\r\n                                            tableName={tableName}\r\n                                        /> \r\n                                    );\r\n                                })}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"sp1_tlr_tbody\">\r\n                            {!isLoading && renderRow(data)}\r\n                            {isLoading && <EmployeeSessionTableLoader />}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n                <TableFooter\r\n                    onPaginate={onPaginate}\r\n                    perpageData={perpageData}\r\n                    totalEntry={totalEntry}\r\n                    currentPage={currentPage}\r\n                    handlePerPageData={handlePerPageData}\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default DataTable;\r\n"],"names":["_jsxs","React","children","className","rowSpan","_jsx","Placeholder","width","height","_","index","_ref","data","_ref$columns","columns","_ref$tableName","tableName","_ref$height","sortBy","onPaginate","perpageData","handlePerPageData","totalEntry","currentPage","isLoading","_useState2","_slicedToArray","useState","columnOrder","setColumnOrder","useEffect","column_ids","map","_toConsumableArray","_columns","item","indexOf","id","style","column","TableDragAbleHeader","onSort","onDrop","order","rows","_step","_iterator","_createForOfIteratorHelper","_loop","_step$value","value","length","push","col","group","cell","row","size","concat","start_time","s","n","done","err","e","f","renderRow","EmployeeSessionTableLoader","TableFooter"],"sourceRoot":""}