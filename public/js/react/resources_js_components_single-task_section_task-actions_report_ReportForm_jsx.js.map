{"version":3,"file":"js/react/resources_js_components_single-task_section_task-actions_report_ReportForm_jsx.js","mappings":"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","sources":["webpack:///./resources/js/components/single-task/components/SubmitButton.jsx","webpack:///./resources/js/components/single-task/section/task-actions/report/ReportForm.jsx"],"sourcesContent":["import React from \"react\";\r\nimport Button from \"./Button\";\r\n\r\nconst SubmitButton = ({onClick, isLoading, title}) => {\r\n    return (\r\n        <React.Fragment>\r\n            {!isLoading ? (\r\n                <Button onClick={onClick} className=\"\">\r\n                    {title}\r\n                </Button>\r\n            ) : (\r\n                <Button className=\"cursor-processing\">\r\n                    <div\r\n                        className=\"spinner-border text-white\"\r\n                        role=\"status\"\r\n                        style={{\r\n                            width: \"18px\",\r\n                            height: \"18px\",\r\n                        }}\r\n                    ></div>\r\n                    Processing...\r\n                </Button>\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default SubmitButton;\r\n","import React, { useState } from \"react\";\r\nimport { Listbox } from \"@headlessui/react\";\r\nimport { HiOutlineSelector } from \"react-icons/hi\";\r\nimport Button from \"../../../components/Button\";\r\nimport SubmitButton from \"../../../components/SubmitButton\";\r\nimport CKEditorComponent from \"../../../../ckeditor\";\r\n\r\nconst reports = [\r\n    {\r\n        id: 1,\r\n        name: \"Project Manager/Lead Developer Is Making Me Do Their Work Without Top Managementsâ€™ Authorization\",\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Need Further Clarification From Lead Developer/Project Manager\",\r\n    },\r\n];\r\n\r\nconst ReportForm = ({close}) => {\r\n    const [reason, setReason] = useState({});\r\n    const [person, setPerson] = useState({});\r\n    const [comment, setComment] = useState(\"\");\r\n    const [previousNotedIssue, setPreviousNotedIssue] = useState(\"\");\r\n\r\n    const onSubmit =(e)=>{\r\n        e.preventDefault();\r\n        const data = {\r\n            reason,\r\n            person,\r\n            comment,\r\n            previousNotedIssue\r\n        }\r\n\r\n        console.log(data)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <form className=\"px-3\">\r\n                {/* reason selection */}\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"\" className=\"font-weight-bold\">Select Reason for report</label>\r\n                    <div className=\"position-relative w-100 mb-3\">\r\n                        <Listbox value={reason} onChange={setReason}>\r\n                            <Listbox.Button className=\"w-100 bg-white py-2 pl-2 pr-1 border text-left d-flex align-items-center justify-content-between\">\r\n                                <span className=\"mr-auto\">\r\n                                    {reason?.name ||\r\n                                        \"Select Reason for report.\"}\r\n                                </span>\r\n                                <HiOutlineSelector className=\"f-16\" />\r\n                            </Listbox.Button>\r\n\r\n                            <Listbox.Options\r\n                                className=\"position-absolute bg-white p-2 shadow w-100\"\r\n                                style={{\r\n                                    zIndex: 10,\r\n                                    maxHeight: \"350px\",\r\n                                    overflowY: \"auto\",\r\n                                }}\r\n                            >\r\n                                {reports?.map((report) => (\r\n                                    <Listbox.Option\r\n                                        key={report.id}\r\n                                        value={report}\r\n                                        className={({ selected, active }) =>\r\n                                            selected\r\n                                                ? \"task-selection-list-option selected\"\r\n                                                : active\r\n                                                ? \"task-selection-list-option active\"\r\n                                                : \"task-selection-list-option\"\r\n                                        }\r\n                                    >\r\n                                        {report?.name}\r\n                                    </Listbox.Option>\r\n                                ))}\r\n                            </Listbox.Options>\r\n                        </Listbox>\r\n                    </div>\r\n                </div>\r\n                {/* reason selection end */}\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                        Responsible Person\r\n                    </label>\r\n                    <div className=\"position-relative w-100 mb-3\">\r\n                        <Listbox value={person} onChange={setPerson}>\r\n                            <Listbox.Button className=\"w-100 bg-white py-2 pl-2 pr-1 border text-left d-flex align-items-center justify-content-between\">\r\n                                <span className=\"mr-auto\">\r\n                                    {reason?.name ||\r\n                                        \"Select Responsible Person.\"}\r\n                                </span>\r\n                                <HiOutlineSelector className=\"f-16\" />\r\n                            </Listbox.Button>\r\n\r\n                            <Listbox.Options\r\n                                className=\"position-absolute bg-white p-2 shadow w-100\"\r\n                                style={{\r\n                                    zIndex: 10,\r\n                                    maxHeight: \"350px\",\r\n                                    overflowY: \"auto\",\r\n                                }}\r\n                            >\r\n                                {reports?.map((report) => (\r\n                                    <Listbox.Option\r\n                                        key={report.id}\r\n                                        value={report}\r\n                                        className={({ selected, active }) =>\r\n                                            selected\r\n                                                ? \"task-selection-list-option selected\"\r\n                                                : active\r\n                                                ? \"task-selection-list-option active\"\r\n                                                : \"task-selection-list-option\"\r\n                                        }\r\n                                    >\r\n                                        {report?.name}\r\n                                    </Listbox.Option>\r\n                                ))}\r\n                            </Listbox.Options>\r\n                        </Listbox>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"editor\" className=\"font-weight-bold\">\r\n                        Briefly describe the problem here...\r\n                    </label>\r\n                    <div className=\"ck-editor-holder\">\r\n                        <CKEditorComponent\r\n                            onChange={(e, editor) => {\r\n                                const data = editor.getData();\r\n                                setComment(data);\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"\" className=\"font-weight-bold\">\r\n                        Did you report the same issue previously?\r\n                    </label>\r\n                    <div className=\"\">\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input\r\n                                className=\"form-check-input\"\r\n                                type=\"radio\"\r\n                                name=\"inlineRadioOptions\"\r\n                                id=\"inlineRadio1\"\r\n                                value=\"yes\"\r\n                                onChange={(e) =>\r\n                                    setPreviousNotedIssue(e.target.value)\r\n                                }\r\n                            />\r\n                            <label\r\n                                className=\"form-check-label\"\r\n                                htmlFor=\"inlineRadio1\"\r\n                            >\r\n                                Yes\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input\r\n                                className=\"form-check-input\"\r\n                                type=\"radio\"\r\n                                name=\"inlineRadioOptions\"\r\n                                id=\"inlineRadio2\"\r\n                                value=\"no\"\r\n                                onChange={(e) =>\r\n                                    setPreviousNotedIssue(e.target.value)\r\n                                }\r\n                            />\r\n                            <label\r\n                                className=\"form-check-label\"\r\n                                htmlFor=\"inlineRadio2\"\r\n                            >\r\n                                No\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"my-3 d-flex align-items-center\">\r\n                    <Button\r\n                        variant=\"tertiary\"\r\n                        onClick={close}\r\n                        className=\"ml-auto mr-2\"\r\n                    >\r\n                        Close\r\n                    </Button>\r\n\r\n                    <SubmitButton onClick={onSubmit} isLoading={false} title=\"Report\" />\r\n                </div>\r\n            </form>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ReportForm;\r\n"],"names":["React","Button","jsx","_jsx","jsxs","_jsxs","SubmitButton","_ref","onClick","isLoading","title","Fragment","children","className","role","style","width","height","useState","Listbox","HiOutlineSelector","CKEditorComponent","reports","id","name","ReportForm","close","_useState","_useState2","_slicedToArray","reason","setReason","_useState3","_useState4","person","setPerson","_useState5","_useState6","comment","setComment","_useState7","_useState8","previousNotedIssue","setPreviousNotedIssue","onSubmit","e","preventDefault","data","console","log","htmlFor","value","onChange","Options","zIndex","maxHeight","overflowY","map","report","Option","_ref2","selected","active","_ref3","editor","getData","type","target","variant"],"sourceRoot":""}