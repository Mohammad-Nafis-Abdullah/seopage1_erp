{"version":3,"file":"js/react/171.js","mappings":"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","sources":["webpack:///./resources/js/react/TimeLogTable/components/Button.jsx","webpack:///./resources/js/react/TimeLogTable/components/DragHeader.jsx","webpack:///./resources/js/react/TimeLogTable/components/FilterBarItem.jsx","webpack:///./resources/js/react/TimeLogTable/components/JqueryDateRangePicker.jsx","webpack:///./resources/js/react/TimeLogTable/components/Modal.jsx","webpack:///./resources/js/react/TimeLogTable/components/PersonFilter.jsx","webpack:///./resources/js/react/TimeLogTable/components/Tabbar.jsx","webpack:///./resources/js/react/TimeLogTable/components/Pagination.jsx","webpack:///./resources/js/react/TimeLogTable/components/TableFooter.jsx","webpack:///./resources/js/react/TimeLogTable/components/ProjectFilter.jsx","webpack:///./resources/js/react/TimeLogTable/components/TimeLogTableFilterBar.jsx","webpack:///./resources/js/react/TimeLogTable/components/TimeLogTableLoader.jsx","webpack:///./resources/js/react/TimeLogTable/components/UserRender.jsx","webpack:///./resources/js/react/TimeLogTable/components/ProjectWiseTableLoader.jsx","webpack:///./resources/js/react/TimeLogTable/components/ProjectWiseTable.jsx","webpack:///./resources/js/react/TimeLogTable/components/ProjectSessionTableColumn.jsx","webpack:///./resources/js/react/TimeLogTable/components/ProjectSessionTrackTimeButton.jsx","webpack:///./resources/js/react/TimeLogTable/components/ProjectWiseTableColumn.jsx","webpack:///./resources/js/react/TimeLogTable/pages/ProjectWiseTimeLog.jsx","webpack:///./resources/js/react/services/api/timeLogTableApiSlice.js","webpack:///./resources/js/react/services/api/timeLogTableSessionDetails.js","webpack:///./resources/js/react/utils/paginate.js","webpack:///./resources/js/react/TimeLogTable/components/data-table.css","webpack:///./resources/js/react/TimeLogTable/components/data-table.css?f9b8"],"sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst Button = ({\r\n    children, \r\n    type=\"button\",\r\n    disabled=false, \r\n    className = '', \r\n    variant='primary',\r\n    size=\"sm\",\r\n    onClick,\r\n    ...props\r\n}) => {\r\n    const classes = `cnx__btn cnx__btn_${variant} ${disabled ? 'cnx__btn_disabled': ''} cnx__btn_${size} ${className}`\r\n\r\n    const handleOnClick = (e) => {\r\n        onClick && onClick(e)\r\n    }\r\n\r\n\r\n    return (\r\n        <button type='button' className={classes} disabled={disabled} onClick={handleOnClick} {...props}>\r\n            {children}\r\n        </button>\r\n    )\r\n}\r\n\r\nButton.propTypes = {\r\n    children: PropTypes.node.isRequired || PropTypes.string.isRequired || PropTypes.array.isRequired,\r\n    disabled: PropTypes.bool,\r\n    className: PropTypes.string,\r\n    variant: PropTypes.oneOf(['primary', 'secondary', 'tertiary', 'success']),\r\n    size: PropTypes.oneOf(['sm', 'md', 'lg']),\r\n    onClick: PropTypes.func,\r\n    href: PropTypes.string\r\n}\r\n\r\nexport default Button;","import _ from 'lodash';\r\nimport React, {useRef} from 'react'\r\nimport { useDrag, useDrop } from 'react-dnd'\r\nimport { getEmptyImage } from 'react-dnd-html5-backend';\r\n\r\n\r\nconst TableDragAbleHeader = ({\r\n    onSort,\r\n    column,\r\n    columns,\r\n    order,\r\n    onDrop,\r\n    tableName,\r\n    className,\r\n    storeOnLocalStore,\r\n}) =>{\r\n    const ref = useRef(null);\r\n        const reOrder = (curr, target) => {\r\n            order.splice( order.indexOf(target?.id),  0,  order.splice(order.indexOf(curr?.id), 1)[0]  ); \r\n            return [...order];\r\n        };\r\n         \r\n    \r\n        const [{ isDragging }, drag, preview] = useDrag({\r\n            type: \"column\",\r\n            item: { column },\r\n            collect: (monitor) => ({\r\n                isDragging: !!monitor.isDragging(),\r\n            }),\r\n        });\r\n    \r\n        // drop\r\n        const [{isOver}, drop] = useDrop({\r\n            accept: \"column\",\r\n            hover(item, monitor) {\r\n                const dragIndex = order.indexOf(item.column);\r\n                const hoverIndex = order.indexOf(column);\r\n            },\r\n    \r\n            drop: (item, monitor) => {\r\n                if (item.column !== column) {\r\n                    const reOrderColumn = reOrder(item.column, column);\r\n                    onDrop(reOrderColumn);\r\n                    storeOnLocalStore(reOrderColumn);\r\n                }\r\n            },\r\n\r\n            collect: (monitor) =>({\r\n                isOver: !!monitor.isOver()\r\n            })\r\n        });\r\n    \r\n        drag(drop(ref));\r\n\r\n        React.useEffect(() => {\r\n            preview(getEmptyImage(), { captureDraggingState: true })\r\n          }, [])\r\n\r\n    return (\r\n        <th ref={ref} className={`${className} sp1_drag_th sp1_drag_col_${column?.id} ${isDragging ? '__dragging': ''} ${isOver ? '__drop-area': ''}`}>\r\n            {column.header}\r\n        </th>\r\n    )\r\n}\r\nexport default TableDragAbleHeader;","import * as React from 'react';\r\nimport Dropdown from '../../Insights/ui/Dropdown';\r\nimport SearchBox from '../../Insights/ui/Searchbox';\r\n\r\nimport { useGetEmployeeOptionsMutation } from '../../services/api/FilterBarOptionsApiSlice';\r\nimport _ from 'lodash';\r\nimport  TextHighlighter from '../../Insights/components/TextHighlighter';\r\n\r\n\r\nexport default function  FilterItem({\r\n    items= [],\r\n    title,\r\n    selected,\r\n    onSelect,\r\n    isLoading = true\r\n}){\r\n    const [search, setSearch] = React.useState(''); \r\n    const [maxHeight, setMaxHeight] = React.useState(720);\r\n\r\n     // set max height\r\n     React.useEffect(() => {\r\n        if(window){\r\n            if(window.innerHeight < 720){\r\n                 setMaxHeight(window.innerHeight - 150);\r\n            } \r\n         }\r\n    }, [maxHeight])\r\n\r\n\r\n    return(\r\n        <div className='d-flex align-items-center px-3 py-2 border-right'>\r\n            <span className='mr-2'>{title}</span>\r\n            <Dropdown>\r\n                <Dropdown.Toggle\r\n                    className=\"sp1__pp_filter_dd_toggle\"\r\n                >\r\n                {!selected ? 'All' : _.startCase(selected)}\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu\r\n                    className=\"sp1__pp_filter_dd\"\r\n                >\r\n\r\n                {\r\n                    isLoading ? (\r\n                        <React.Fragment>\r\n                            <div\r\n                                className={`mt-2`}    \r\n                            >\r\n                               <div \r\n                                    className=\"spinner-border\" \r\n                                    role=\"status\" \r\n                                    style={{\r\n                                        width: '1rem', \r\n                                        height: '1rem', \r\n                                        borderWidth: '0.15rem', \r\n                                        borderColor: \"#777\",\r\n                                        borderRightColor: 'transparent'\r\n                                    }}\r\n                                >\r\n                                </div>\r\n                                <span className='d-inline ml-2' style={{color:'#777'}}>Loading...</span>\r\n                            </div>\r\n                        </React.Fragment>\r\n                    ) :\r\n                        <React.Fragment> \r\n                             \r\n                            {/* data */}\r\n                            <div\r\n                                className='sp1__pp_menu_items'\r\n                                style={{maxHeight}}\r\n                            >\r\n                                <Dropdown.Item\r\n                                    onClick={(e) => onSelect(null)}\r\n                                    className={`sp1__pp_filter_dd_item mb-1 ${!selected && 'active'}`} \r\n                                >\r\n                                    Select All\r\n                                </Dropdown.Item>\r\n                                \r\n\r\n                                {/* item */}\r\n                                {\r\n                                    items?.filter(item => _.lowerCase(item?.name).includes(_.lowerCase(search)))\r\n                                    .map(item => (\r\n                                        <Dropdown.Item\r\n                                            key={item}\r\n                                            onClick={(e) => onSelect(item)}\r\n                                            className={`sp1__pp_filter_dd_item mb-1 ${selected === item ? 'active': ''}`} \r\n                                        >\r\n                                            \r\n                                             {_.startCase(item)}\r\n                                        </Dropdown.Item>\r\n                                    ))\r\n                                } \r\n                            </div>\r\n                        \r\n                        </React.Fragment>\r\n                }\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n        </div>\r\n    )\r\n}","/* eslint-disable react/prop-types */\r\nimport _ from 'lodash';\r\nimport * as React from 'react';\r\n\r\n\r\nconst JqueryDateRangePicker = ({\r\n    startDate,\r\n    endDate,\r\n    setStartDate,\r\n    setEndDate,\r\n    onApply= () => {} \r\n}) => {\r\n\r\n    const handleTimePicker = () => {\r\n        if(window.$){\r\n            let $ = window.$;\r\n            let moment = window.moment;\r\n            // let today = moment().format('D'); \r\n            \r\n            $(function() {\r\n                let start = moment().startOf('day');\r\n                let end = moment().endOf('day');\r\n \r\n\r\n                // if(today > 20){\r\n                //     end = moment().add(1, 'months').date(20);\r\n                // }else {\r\n                //     end = moment().date(20);\r\n                // }\r\n\r\n                \r\n               setStartDate(start.format());\r\n               setEndDate(end.format()); \r\n\r\n               \r\n                function cb(start, end) {\r\n                    setStartDate(start.format('YYYY-MM-DD'));\r\n                    setEndDate(end.format('YYYY-MM-DD'));\r\n                    onApply && onApply(start.format('YYYY-MM-DD'), end.format('YYYY-MM-DD'));\r\n                    $('#jqueryDatePicker div.sp1__jquery_date_text')\r\n                    .html(start.format('MMM DD, YYYY') + ' to ' + end.format('MMM DD, YYYY'));\r\n                }\r\n\r\n                $('#jqueryDatePicker').daterangepicker({\r\n                    locale: {\r\n                        format: 'MMMM D, YYYY',\r\n                        customRangeLabel: \"Custom Range\",\r\n                        separator: \" To \",\r\n                        applyLabel: \"Apply\",\r\n                        cancelLabel: \"Cancel\",\r\n                        daysOfWeek: [\r\n                            'Su', 'Mo', 'Tu',\r\n                            'We', 'Th', 'Fr',\r\n                            'Sa'\r\n                        ],\r\n                        monthNames: ['January', 'February',\r\n                            \"March\", \"April\",\r\n                            \"May\",\r\n                            \"June\", \"July\",\r\n                            \"August\",\r\n                            \"September\", \"October\",\r\n                            \"November\", \"December\"\r\n                        ],\r\n                        firstDay: parseInt(\"1\")\r\n                    },\r\n                    startDate: start,\r\n                    endDate: end,\r\n                    datePicker: true,\r\n                    ranges: {\r\n                    'Today': [moment(), moment()],\r\n                    'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],\r\n                    'Last 7 Days': [moment().subtract(6, 'days'), moment()],\r\n                    'Last 30 Days': [moment().subtract(29, 'days'), moment()],\r\n                    'This Month': [moment().startOf('month'), moment().endOf('month')],\r\n                    'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]\r\n                    }\r\n                }, cb);\r\n\r\n                cb(start, end);\r\n\r\n            });\r\n        }\r\n    }\r\n   \r\n    React.useEffect(() => {\r\n        handleTimePicker();\r\n    }, []);\r\n\r\n    \r\n   \r\n    return (\r\n        <div id=\"jqueryDatePicker\" className='sp1__jquery_date_picker' style={{position: 'relative'}}>\r\n            <div className='sp1__jquery_date_btn'>\r\n                <i className=\"fa-solid fa-calendar-days\"></i>\r\n            </div>\r\n            <div className='sp1__jquery_date_text'></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JqueryDateRangePicker;","import * as React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Modal = ({ children, isOpen, className }) => {\r\n    const [isBrowser, setIsBrowser] = React.useState(false);\r\n    // generate random id for dropdown menu\r\n    const id = React.useMemo(() => Math.random().toString(36).substr(2, 9), []);\r\n    let DOM = document.getElementById(id);\r\n \r\n  \r\n    React.useEffect(() => {\r\n        setIsBrowser(true);\r\n        const el = document.createElement('div');\r\n        el.id = id;\r\n        document.body.appendChild(el);\r\n        return () => {\r\n            document.body.removeChild(el);\r\n        }\r\n    }, []);\r\n\r\n\r\n    React.useEffect(() => {\r\n        if(isOpen){\r\n            document.body.classList.add('cnx_body-overflow-hidden')\r\n        }else{\r\n            document.body.classList.remove('cnx_body-overflow-hidden')\r\n        }\r\n    }, [isOpen]) \r\n\r\n    if(!DOM) return;\r\n \r\n\r\n    const modalContent = isOpen ? (\r\n        <div className={`cnx_modal ${className}`}>\r\n            {children}\r\n        </div>\r\n    ) : null;\r\n\r\n    if (isBrowser) {\r\n        return ReactDOM.createPortal(\r\n            modalContent,\r\n            DOM\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n    \r\n\r\n}\r\n\r\n\r\nModal.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    isOpen: PropTypes.bool.isRequired,\r\n    className: PropTypes.string,\r\n}\r\n\r\n\r\nexport default Modal;","import * as React from 'react';\r\nimport Dropdown from '../../Insights/ui/Dropdown';\r\nimport SearchBox from '../../Insights/ui/Searchbox';\r\n\r\nimport { useGetEmployeeOptionsMutation } from '../../services/api/FilterBarOptionsApiSlice';\r\nimport _ from 'lodash';\r\nimport  TextHighlighter from '../../Insights/components/TextHighlighter';\r\n\r\n\r\nexport default function PersonFilterItem({\r\n    items= [],\r\n    title,\r\n    selected,\r\n    onSelect,\r\n    isLoading = true,\r\n    selectedAllButton = true\r\n}){\r\n    const [search, setSearch] = React.useState(''); \r\n    const [maxHeight, setMaxHeight] = React.useState(720);\r\n\r\n     // set max height\r\n     React.useEffect(() => {\r\n        if(window){\r\n            if(window.innerHeight < 720){\r\n                 setMaxHeight(window.innerHeight - 150);\r\n            } \r\n         }\r\n    }, [maxHeight])\r\n\r\n\r\n    return(\r\n        <div className='d-flex align-items-center px-3 py-2 border-right'>\r\n            <span className='mr-2'>{title}</span>\r\n            <Dropdown>\r\n                <Dropdown.Toggle\r\n                    className=\"sp1__pp_filter_dd_toggle\"\r\n                >\r\n                    <div>\r\n                        {!selected ? 'All' : \r\n                            <div \r\n                            >{selected?.name}</div>\r\n                        }\r\n                    </div>\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu\r\n                    className=\"sp1__pp_filter_dd\"\r\n                >\r\n\r\n                {\r\n                    isLoading ? (\r\n                        <React.Fragment>\r\n                            <div\r\n                                className={`mt-2`}    \r\n                            >\r\n                               <div \r\n                                    className=\"spinner-border\" \r\n                                    role=\"status\" \r\n                                    style={{\r\n                                        width: '1rem', \r\n                                        height: '1rem', \r\n                                        borderWidth: '0.15rem', \r\n                                        borderColor: \"#777\",\r\n                                        borderRightColor: 'transparent'\r\n                                    }}\r\n                                >\r\n                                </div>\r\n                                <span className='d-inline ml-2' style={{color:'#777'}}>Loading...</span>\r\n                            </div>\r\n                        </React.Fragment>\r\n                    ) :\r\n                        <React.Fragment>\r\n\r\n                            {\r\n                                items?.length > 15 && \r\n                                <React.Fragment>\r\n                                    <div className=\"sp1__pp_filter_dd_search\">\r\n                                        <SearchBox\r\n                                            value={search}\r\n                                            onChange={setSearch}\r\n                                            autoFocus={true}\r\n                                        />\r\n                                    </div>\r\n                                    <div className='cnx_divider'/>\r\n                                </React.Fragment>\r\n                            }\r\n                             \r\n                            {/* data */}\r\n                            <div\r\n                                className='sp1__pp_menu_items'\r\n                                style={{maxHeight}}\r\n                            >\r\n                                {selectedAllButton && <Dropdown.Item\r\n                                    onClick={(e) => onSelect(e, null)}\r\n                                    className={`sp1__pp_filter_dd_item mb-1 ${!selected && 'active'}`} \r\n                                >\r\n                                    Select All\r\n                                </Dropdown.Item>}\r\n                                \r\n\r\n                                {/* item */}\r\n                                {\r\n                                    items?.filter(item => _.lowerCase(item?.name).includes(_.lowerCase(search)))\r\n                                    .map(item => (\r\n                                        <Dropdown.Item\r\n                                            key={item?.id}\r\n                                            onClick={(e) => onSelect(e, item)}\r\n                                            className={`sp1__pp_filter_dd_item mb-1 ${selected?.id === item?.id ? 'active': ''}`} \r\n                                        >\r\n                                            {item.image_url ?\r\n                                                <img\r\n                                                   src={item.image_url} \r\n                                                   alt={item.name}\r\n                                                   style={{\r\n                                                       width: 26,\r\n                                                       height: 26,\r\n                                                       borderRadius: '50%'\r\n                                                       \r\n                                                   }}\r\n                                                />\r\n                                                : null  \r\n                                            }\r\n                                            <TextHighlighter\r\n                                                textToHighlight={item?.name}\r\n                                                searchWords={search}\r\n                                            /> \r\n                                        </Dropdown.Item>\r\n                                    ))\r\n                                } \r\n                            </div>\r\n                        \r\n                        </React.Fragment>\r\n                }\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n        </div>\r\n    )\r\n}","import { NavLink } from 'react-router-dom';\r\n\r\nconst Tabbar = () => {\r\n  return (\r\n    <div className='d-flex flex-wrap align-items-center px-3 mb-2' style={{gap: '10px'}}>\r\n       <NavLink to='/employee-wise' className={({isActive})=> isActive ? \"sp1_tlr_tab active\": \"sp1_tlr_tab\"}>Employee Wise</NavLink>\r\n       <NavLink to='/project-wise' className={({isActive})=> isActive ? \"sp1_tlr_tab active\": \"sp1_tlr_tab\"} > Project Wise </NavLink>\r\n       <NavLink to='/task-wise' className={({isActive})=> isActive ? \"sp1_tlr_tab active\": \"sp1_tlr_tab\"}> Task Wise </NavLink> \r\n       <NavLink to='/time-log-history' className={({isActive})=> isActive ? \"sp1_tlr_tab active\": \"sp1_tlr_tab\"}> Time Log History </NavLink> \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Tabbar","import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '../../Insights/ui/Button';\r\n\r\n\r\nconst Pagination = ({currentPage = 1, perpageRow=10, onPaginate, totalEntry=0}) => {\r\n    \r\n    const [renderButtons,setRenderButtons] = React.useState([]);\r\n    const [totalPages, setTotalPages] = React.useState(1);\r\n\r\n\r\n    const entryChagne = React.useMemo(() => totalEntry, [totalEntry])\r\n    const isTotalPagesChange = React.useMemo(() => totalPages, [totalPages]);\r\n    const rowNumber = React.useMemo(()=> perpageRow, [perpageRow]);\r\n\r\n\r\n    // count total pages\r\n    React.useEffect(() => {\r\n        const tPages = Math.ceil(entryChagne / rowNumber);\r\n        setTotalPages(tPages);\r\n        \r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [entryChagne, rowNumber])\r\n\r\n\r\n    // create render buttons\r\n    React.useEffect(()=> {\r\n        const buttons = [];\r\n\r\n        if(totalPages <= 7){\r\n            for (let i = 1; i <= totalPages; i++) {\r\n                buttons.push(i);\r\n            }\r\n        }else{ \r\n            if (currentPage <= 3) {\r\n                for (let i = 1; i < 5; i++) {\r\n                    buttons.push(i);\r\n                }\r\n                \r\n            }else if (currentPage >= totalPages - 3) {\r\n                for (let i = totalPages - 4; i <= totalPages; i++) {\r\n                    buttons.push(i);\r\n                }\r\n            }else if (currentPage > 3 && currentPage < totalPages - 3) {\r\n                for (let i = currentPage - 2; i <= currentPage + 2; i++) {\r\n                    buttons.push(i);\r\n                }\r\n            }\r\n        }\r\n\r\n        setRenderButtons([...buttons]);\r\n\r\n    }, [totalPages, currentPage, isTotalPagesChange])\r\n\r\n\r\n\r\n    // next \r\n    const nextPage = () => {\r\n        if(currentPage < totalPages){\r\n            onPaginate(currentPage + 1 );\r\n        }\r\n    }\r\n\r\n    // previous \r\n    const prevPage = () => {\r\n        if(currentPage > 1){\r\n            onPaginate(currentPage - 1 );\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='cnx__table_pagination'>\r\n            {/* previous */}\r\n            <Button onClick={prevPage} className='cnx__table_pagination_btn cnx__table_pagination_btn_prev'> Previous </Button>\r\n            {/* pagination */}\r\n            {totalPages > 1 && (\r\n                <React.Fragment>\r\n                    {\r\n                        renderButtons[0] > 1 &&(\r\n                            <>\r\n                                <Button\r\n                                onClick={()=> onPaginate(1)}\r\n                                className={`cnx__table_pagination_btn ${currentPage === 1 ? 'active': ''}`} \r\n                                >\r\n                                    1\r\n                                </Button>\r\n                                <Button\r\n                                   className=\"cnx__table_pagination_btn\" \r\n                                > \r\n                                    ...\r\n                                </Button>\r\n                            </>\r\n                        )\r\n                    }\r\n\r\n                    {renderButtons?.map(number => (\r\n                        <React.Fragment key={number}>\r\n                            <Button\r\n                                onClick={() => onPaginate(number)}\r\n                                className={`cnx__table_pagination_btn ${currentPage === number ? 'active': ''}`} \r\n                            >\r\n                                {number}\r\n                            </Button>\r\n                        </React.Fragment>\r\n                    ))}\r\n\r\n                    {\r\n                                // render dots\r\n                                renderButtons[renderButtons.length - 1] <\r\n                                totalPages - 1 && (\r\n                                    <>\r\n                                         <Button\r\n                                            className=\"cnx__table_pagination_btn\" \r\n                                        > \r\n                                            ...\r\n                                        </Button>\r\n                                        <Button\r\n                                            onClick={()=> onPaginate(totalPages)}\r\n                                            className={`cnx__table_pagination_btn ${currentPage === totalPages ? 'active': ''}`} \r\n                                        >\r\n                                            {totalPages}\r\n                                        </Button>\r\n                                    </>\r\n                                )\r\n                         }\r\n\r\n                </React.Fragment>\r\n            )}    \r\n\r\n            {/* next */}\r\n            <Button \r\n                onClick={nextPage} \r\n                className='cnx__table_pagination_btn cnx__table_pagination_btn_next'> Next  </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination;","import React from 'react'\r\nimport Pagination from './Pagination'\r\n\r\nconst TableFooter = ({\r\n  onPaginate,\r\n  perpageData,\r\n  currentPage,\r\n  handlePerPageData,\r\n  totalEntry,\r\n  \r\n}) => {\r\n\r\n  const showingFrom = (currentPage - 1) * perpageData;\r\n  let showingTo = showingFrom + perpageData;\r\n  if(showingTo > totalEntry) showingTo = totalEntry;\r\n\r\n  return (\r\n    <div className=\"cnx__table_footer mt-3\">\r\n        <div className=\"__show_entries\">\r\n            <span>Show</span>\r\n            <select\r\n                className=\"py-1 border rounded-sm\"\r\n                onChange={(e) => handlePerPageData(Number(e.target.value))}\r\n            >\r\n                <option value=\"10\">10</option>\r\n                <option value=\"20\">20</option>\r\n                <option value=\"30\">30</option>\r\n                <option value=\"50\">50</option>\r\n            </select>\r\n\r\n            <span>entries</span>\r\n        </div>\r\n\r\n        <div className=\"__total_entries\">\r\n           {totalEntry > 0 ? `Showing ${showingFrom + 1} to ${showingTo} of ${totalEntry} entries`: `Showing 0 to 0 of 0 entries`} \r\n        </div>\r\n\r\n        {/* pagination */}\r\n        <Pagination\r\n            onPaginate={onPaginate}\r\n            currentPage={currentPage}\r\n            perpageRow={perpageData}\r\n            totalEntry={totalEntry}\r\n        />\r\n        {/* end pagination */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TableFooter","import * as React from 'react';\r\nimport Dropdown from '../../Insights/ui/Dropdown';\r\nimport SearchBox from '../../Insights/ui/Searchbox';\r\n\r\nimport { useGetEmployeeOptionsMutation } from '../../services/api/FilterBarOptionsApiSlice';\r\nimport _ from 'lodash';\r\nimport  TextHighlighter from '../../Insights/components/TextHighlighter';\r\n\r\n\r\nexport default function ProjectFilterItem({\r\n    items= [],\r\n    title,\r\n    selected,\r\n    onSelect,\r\n    isLoading = true\r\n}){\r\n    const [search, setSearch] = React.useState(''); \r\n    const [maxHeight, setMaxHeight] = React.useState(720);\r\n\r\n     // set max height\r\n     React.useEffect(() => {\r\n        if(window){\r\n            if(window.innerHeight < 720){\r\n                 setMaxHeight(window.innerHeight - 150);\r\n            } \r\n         }\r\n    }, [maxHeight])\r\n\r\n\r\n    return(\r\n        <div className='d-flex align-items-center px-3 py-2 border-right'>\r\n            <span className='mr-2'>{title}</span>\r\n            <Dropdown>\r\n                <Dropdown.Toggle\r\n                    className=\"sp1__pp_filter_dd_toggle\"\r\n                >\r\n                {!selected ? 'All' : selected?.project_name}\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu\r\n                    className=\"sp1__pp_filter_dd\"\r\n                >\r\n\r\n                {\r\n                    isLoading ? (\r\n                        <React.Fragment>\r\n                            <div\r\n                                className={`mt-2`}    \r\n                            >\r\n                               <div \r\n                                    className=\"spinner-border\" \r\n                                    role=\"status\" \r\n                                    style={{\r\n                                        width: '1rem', \r\n                                        height: '1rem', \r\n                                        borderWidth: '0.15rem', \r\n                                        borderColor: \"#777\",\r\n                                        borderRightColor: 'transparent'\r\n                                    }}\r\n                                >\r\n                                </div>\r\n                                <span className='d-inline ml-2' style={{color:'#777'}}>Loading...</span>\r\n                            </div>\r\n                        </React.Fragment>\r\n                    ) :\r\n                        <React.Fragment>\r\n\r\n                            {\r\n                                items?.length > 15 && \r\n                                <React.Fragment>\r\n                                    <div className=\"sp1__pp_filter_dd_search\">\r\n                                        <SearchBox\r\n                                            value={search}\r\n                                            onChange={setSearch}\r\n                                            autoFocus={true}\r\n                                        />\r\n                                    </div>\r\n                                    <div className='cnx_divider'/>\r\n                                </React.Fragment>\r\n                            }\r\n                             \r\n                            {/* data */}\r\n                            <div\r\n                                className='sp1__pp_menu_items'\r\n                                style={{maxHeight}}\r\n                            >\r\n                                <Dropdown.Item\r\n                                    onClick={(e) => onSelect(e, null)}\r\n                                    className={`sp1__pp_filter_dd_item mb-1 ${!selected && 'active'}`} \r\n                                >\r\n                                    Select All\r\n                                </Dropdown.Item>\r\n                                \r\n\r\n                                {/* item */}\r\n                                {\r\n                                    items?.filter(item => _.lowerCase(item?.project_name).includes(_.lowerCase(search)))\r\n                                    .map(item => (\r\n                                        <Dropdown.Item\r\n                                            key={item?.id}\r\n                                            onClick={(e) => onSelect(e, item)}\r\n                                            className={`sp1__pp_filter_dd_item mb-1 ${selected?.id === item?.id ? 'active': ''}`} \r\n                                        >\r\n                                            \r\n                                            <TextHighlighter\r\n                                                textToHighlight={item?.project_name}\r\n                                                searchWords={search}\r\n                                            /> \r\n                                        </Dropdown.Item>\r\n                                    ))\r\n                                } \r\n                            </div>\r\n                        \r\n                        </React.Fragment>\r\n                }\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n        </div>\r\n    )\r\n}","import * as React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport JqueryDateRangePicker from './JqueryDateRangePicker';\r\nimport PersonFilter from './PersonFilter';\r\nimport { useLazyGetAllUsersQuery } from '../../services/api/userSliceApi';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setUsers } from '../../services/features/usersSlice';\r\nimport FilterItem from './FilterBarItem';\r\nimport dayjs from 'dayjs';\r\nimport { useGetProjectsOptionsQuery } from '../../services/api/FilterBarOptionsApiSlice';\r\n// import PersonFilterItem from './ProjectFilter';\r\nimport ProjectFilterItem from './ProjectFilter';\r\n\r\n\r\nexport default function TimeLogTableFilterBar ({onFilter}){\r\n    const { users } = useSelector(s => s.users);\r\n    const dispatch = useDispatch();\r\n    const [startDate, setStartDate] = React.useState(null);\r\n    const [endDate, setEndDate] = React.useState(null);\r\n    const [status, setStatus] = React.useState('in progress');\r\n\r\n    // employee\r\n    const [selectedEmployeeId, setSelectedEmployeeId] = React.useState(null);\r\n    const [selectedPMId, setSelectedPMId] = React.useState(null);\r\n    const [selectedClientId, setSelectedClientId] = React.useState(null);\r\n    const [selectedProject, setSelectedProject] = React.useState(null);\r\n\r\n    const logged_user = window?.Laravel?.user;\r\n    const top_management = [1, 6, 4, 8].includes(Number(logged_user?.role_id));\r\n\r\n\r\n    // fetch all users\r\n    const [getAllUsers, {  isFetching:userIsFetching}] = useLazyGetAllUsersQuery('', {\r\n        skip: users.length\r\n    });\r\n\r\n    const { data: getProjectsOptions, isFetching } = useGetProjectsOptionsQuery('');\r\n\r\n    \r\n    React.useEffect(() => {\r\n        if( !users.length && !userIsFetching){\r\n            (async () => { \r\n                let res = await getAllUsers().unwrap(); \r\n                if(res){\r\n                    dispatch(setUsers(res));\r\n                }\r\n            })()\r\n        }\r\n    }, []) \r\n\r\n\r\n    \r\n    React.useEffect(() => {\r\n        if(users?.length){\r\n            if(!top_management){\r\n                setSelectedEmployeeId(logged_user?.id)\r\n            }\r\n        }\r\n    }, [users]);\r\n\r\n   \r\n\r\n    let content = null;\r\n\r\n    // filter options\r\n    const _selectedEmployeeId = React.useMemo(() => selectedEmployeeId, [selectedEmployeeId]);\r\n    const _selectedClientId = React.useMemo(() => selectedClientId, [selectedClientId]);\r\n    const _selectedPMId = React.useMemo(() => selectedPMId, [selectedPMId]); \r\n    const _status = React.useMemo(() => status, [status]); \r\n    const _selectedProject = React.useMemo(() => selectedProject, [selectedProject])\r\n    const _startDate = React.useMemo(() => startDate, [startDate]);\r\n    const _endDate = React.useMemo(() => endDate, [endDate]);\r\n\r\n    React.useEffect(()=> {\r\n        if(_startDate && endDate){\r\n            onFilter({\r\n                start_date: dayjs(_startDate).format('YYYY-MM-DD'),\r\n                end_date: dayjs(_endDate).format('YYYY-MM-DD'),\r\n                employee_id: _selectedEmployeeId,\r\n                pm_id: _selectedPMId,\r\n                client_id: _selectedClientId,   \r\n                status: _status,\r\n                project_id: _selectedProject ? _selectedProject.id : null\r\n            })\r\n        }\r\n    }, [_selectedClientId, _selectedEmployeeId, _selectedPMId, _status, _selectedProject, _startDate, _endDate]);\r\n\r\n\r\n    const handleStatusFilter = (status) => {\r\n        if(status){\r\n            setStatus(status);\r\n        }else{\r\n            setStatus(null);\r\n        }\r\n    }   \r\n    \r\n    const handleDateFilter = (s, e) => {} \r\n\r\n    const handleProjectFilter = (e, data) => {\r\n        if(data){\r\n            setSelectedProject(data);\r\n        }else{\r\n            setSelectedProject(null)\r\n        }\r\n    }\r\n\r\n    const handleEmployeeFilter = (e, data) => { \r\n        e.preventDefault();\r\n        if(data){\r\n            setSelectedEmployeeId(data.id);\r\n        }else{\r\n            setSelectedEmployeeId(null);\r\n        }\r\n        \r\n    }\r\n\r\n    const handlePMFilter = (e, data) => {\r\n        e.preventDefault();\r\n        if(data){\r\n            setSelectedPMId(data.id);\r\n        }else{\r\n            setSelectedPMId(null);\r\n        }\r\n    }\r\n\r\n\r\n    const handleClientFilter = (e, data) => {\r\n        e.preventDefault();\r\n       if(data){\r\n            setSelectedClientId(data.id);\r\n       } else{\r\n            setSelectedClientId(null);\r\n       }\r\n    }\r\n\r\n \r\n    content =  <div className='d-flex flex-wrap bg-white p-1'>\r\n        <div className='border-right pr-1'>\r\n            <JqueryDateRangePicker \r\n                startDate={startDate}\r\n                setStartDate={setStartDate}\r\n                endDate={endDate}\r\n                setEndDate={setEndDate}\r\n                onApply={handleDateFilter}\r\n            />\r\n        </div>\r\n\r\n        {/* employee */}\r\n        <PersonFilter\r\n            title=\"Employee\"\r\n            items={users ? [...users?.filter(user => {\r\n                if(top_management){\r\n                    return user.role_id && Number(user.role_id) !== 4\r\n                }else{\r\n                    return user.id === logged_user.id\r\n                }\r\n            })]:[]}\r\n            selected={selectedEmployeeId ? users?.find(u => Number(u.id) === selectedEmployeeId) : null}\r\n            isLoading={userIsFetching}\r\n            onSelect={handleEmployeeFilter}\r\n            selectedAllButton = {top_management}\r\n        />\r\n\r\n\r\n        {/* project manager */}\r\n        <PersonFilter\r\n            title=\"Project Manager\"\r\n            items={users ? [...users?.filter(user => user.role_id && Number(user.role_id) === 4)] : []}\r\n            selected={selectedPMId ? users?.find(u => Number(u.id) === selectedPMId): null}\r\n            isLoading={userIsFetching}\r\n            onSelect={handlePMFilter}\r\n        />\r\n\r\n        {/* client */}\r\n        <PersonFilter\r\n            title=\"Client\"\r\n            items={users ? [...users?.filter(user => !user.role_id)] : []}\r\n            selected={selectedClientId ? users?.find(u => Number(u.id) === selectedClientId): null}\r\n            isLoading={userIsFetching}\r\n            onSelect={handleClientFilter}\r\n        />\r\n \r\n\r\n        <ProjectFilterItem\r\n            title=\"Project\"\r\n            items={getProjectsOptions ? [...getProjectsOptions]: []}\r\n            isLoading={isFetching}\r\n            selected={selectedProject}\r\n            onSelect={handleProjectFilter}\r\n        />\r\n    \r\n        <FilterItem\r\n            title=\"Status\"\r\n            items = {[\"finished\", \"canceled\", \"in progress\", \"partially finished\", \"under review\"]}\r\n            selected={status}\r\n            isLoading={false}\r\n            onSelect={handleStatusFilter}\r\n        />\r\n\r\n\r\n\r\n    </div>\r\n\r\n    if(!content) {\r\n        return null;\r\n    }\r\n\r\n    return ReactDOM.createPortal(\r\n        content,\r\n        document.getElementById('timeLogTableFilterBar')\r\n    )\r\n}","import React from \"react\";\r\nimport { Placeholder } from \"../../global/Placeholder\";\r\nimport _ from \"lodash\";\r\n\r\n\r\nconst PersonLoader = () => {\r\n    return(\r\n        <div\r\n            className=\"d-flex align-items-center\"\r\n            style={{ gap: \"10px\" }}\r\n        >\r\n            <Placeholder\r\n                className=\"sp1-item-center border rounded-circle\"\r\n                width=\"36px\"\r\n                height=\"36px\"\r\n            />\r\n\r\n            <div className=\"\">\r\n                <h6 className=\"mb-2 f-14\">\r\n                    <Placeholder width=\"130px\" />\r\n                </h6>\r\n                <span className=\"f-12 text-hover-underline\">\r\n                    <Placeholder height=\"10px\" width=\"80px\" />\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst TimeLogTableLoader = ({}) => {\r\n    return (\r\n        <React.Fragment>\r\n            <tr className=\"sp1_tlr_tr\">\r\n                <td className=\"sp1_tlr_td\" rowSpan={6}>\r\n                    <PersonLoader/>\r\n                </td> \r\n                <td className=\"sp1_tlr_td\">  <Placeholder width=\"250px\"/> </td>\r\n                <td className=\"sp1_tlr_td\"> <PersonLoader/> </td>\r\n                <td className=\"sp1_tlr_td\"> <PersonLoader/> </td>\r\n                <td className=\"sp1_tlr_td\"> <Placeholder /> </td>\r\n                <td className=\"sp1_tlr_td\"> <Placeholder/> </td> \r\n            </tr>\r\n\r\n            {_.times(5, index =>(\r\n                <tr key={index} className=\"sp1_tlr_tr\"> \r\n                    <td className=\"sp1_tlr_td\">  <Placeholder width=\"250px\"/> </td>\r\n                    <td className=\"sp1_tlr_td\"> <PersonLoader/> </td>\r\n                    <td className=\"sp1_tlr_td\"> <PersonLoader/> </td>\r\n                    <td className=\"sp1_tlr_td\"> <Placeholder /> </td>\r\n                    <td className=\"sp1_tlr_td\"> <Placeholder/> </td> \r\n                </tr>\r\n            ))}\r\n\r\n            <tr className=\"sp1_tlr_tr\">\r\n                <td className=\"sp1_tlr_td\" rowSpan={3}>\r\n                    <PersonLoader/>\r\n                </td> \r\n                <td className=\"sp1_tlr_td\">  <Placeholder width=\"250px\"/> </td>\r\n                <td className=\"sp1_tlr_td\"> <PersonLoader/> </td>\r\n                <td className=\"sp1_tlr_td\"> <PersonLoader/> </td>\r\n                <td className=\"sp1_tlr_td\"> <Placeholder /> </td>\r\n                <td className=\"sp1_tlr_td\"> <Placeholder/> </td> \r\n            </tr>\r\n\r\n            {_.times(2, index =>(\r\n                <tr key={index} className=\"sp1_tlr_tr\"> \r\n                    <td className=\"sp1_tlr_td\">  <Placeholder width=\"250px\"/> </td>\r\n                    <td className=\"sp1_tlr_td\"> <PersonLoader/> </td>\r\n                    <td className=\"sp1_tlr_td\"> <PersonLoader/> </td>\r\n                    <td className=\"sp1_tlr_td\"> <Placeholder /> </td>\r\n                    <td className=\"sp1_tlr_td\"> <Placeholder/> </td> \r\n                </tr>\r\n            ))}\r\n\r\n            <tr className=\"sp1_tlr_tr\">\r\n                <td className=\"sp1_tlr_td\"> <PersonLoader/> </td> \r\n                <td className=\"sp1_tlr_td\">  <Placeholder width=\"180px\"/> </td>\r\n                <td className=\"sp1_tlr_td\"> <PersonLoader/> </td>\r\n                <td className=\"sp1_tlr_td\"> <PersonLoader/> </td>\r\n                <td className=\"sp1_tlr_td\"> <Placeholder /> </td>\r\n                <td className=\"sp1_tlr_td\"> <Placeholder/> </td> \r\n            </tr>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default TimeLogTableLoader;\r\n","import React from \"react\";\r\n\r\nconst UserRender = ({ image, name, role, id, profileUrl, roleLink }) => {\r\n    return (\r\n        <div className=\"d-flex align-items-center\" style={{ gap: \"10px\" }}>\r\n            {image ? (\r\n                <img\r\n                    src={`/user-uploads/avatar/${image}`}\r\n                    alt={name}\r\n                    className=\"rounded-circle \"\r\n                    style={{ width: 32, height: 32 }}\r\n                />\r\n            ) : (\r\n                <div\r\n                    className=\"sp1-item-center border rounded-circle\"\r\n                    style={{\r\n                        width: \"36px\",\r\n                        height: \"36px\",\r\n                    }}\r\n                >\r\n                    <span\r\n                        style={{\r\n                            fontSize: \"1.3rem\",\r\n                            fontWeight: \"bold\",\r\n                        }}\r\n                    >\r\n                        {name?.slice(0, 1).toUpperCase()}\r\n                    </span>\r\n                </div>\r\n            )}\r\n\r\n            <div className=\"\">\r\n                <h6 className=\"mb-0 f-14\">\r\n                    <a href={profileUrl} className=\"text-hover-underline\">{name}</a>\r\n                </h6>\r\n                <span className=\"f-12\">\r\n                    {roleLink ? <a href={roleLink} className=\"text-dark text-hover-underline\">{role}</a> : role}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserRender;\r\n","import React from \"react\";\r\nimport { Placeholder } from \"../../global/Placeholder\";\r\nimport _ from \"lodash\";\r\n\r\n\r\nconst PersonLoader = () => {\r\n    return(\r\n        <div\r\n            className=\"d-flex align-items-center\"\r\n            style={{ gap: \"10px\" }}\r\n        >\r\n            <Placeholder\r\n                className=\"sp1-item-center border rounded-circle\"\r\n                width=\"36px\"\r\n                height=\"36px\"\r\n            />\r\n\r\n            <div className=\"\">\r\n                <h6 className=\"mb-2 f-14\">\r\n                    <Placeholder width=\"130px\" />\r\n                </h6>\r\n                <span className=\"f-12 text-hover-underline\">\r\n                    <Placeholder height=\"10px\" width=\"80px\" />\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProjectWiseTimeLogTableLoader = ({}) => {\r\n    return (\r\n        <React.Fragment>\r\n            <tr className=\"sp1_tlr_tr\">\r\n                <td className=\"sp1_tlr_td\" rowSpan={3}> <Placeholder width=\"250px\"/> </td>\r\n                <td className=\"sp1_tlr_td\" rowSpan={3}> <PersonLoader/> </td> \r\n                <td className=\"sp1_tlr_td\" rowSpan={3}> <PersonLoader/> </td> \r\n                <td className=\"sp1_tlr_td\" > <PersonLoader/> </td>\r\n                <td className=\"sp1_tlr_td\"> <Placeholder /> </td>\r\n                <td className=\"sp1_tlr_td\"> <Placeholder/> </td> \r\n            </tr>\r\n\r\n            {_.times(2, index =>(\r\n                <tr key={index} className=\"sp1_tlr_tr\"> \r\n                    <td className=\"sp1_tlr_td\" > <PersonLoader/> </td>\r\n                    <td className=\"sp1_tlr_td\"> <Placeholder /> </td>\r\n                    <td className=\"sp1_tlr_td\"> <Placeholder/> </td> \r\n                </tr>\r\n            ))}\r\n\r\n            {_.times(2, index =>(\r\n                <tr key={index} className=\"sp1_tlr_tr\">\r\n                    <td className=\"sp1_tlr_td\"> <Placeholder width=\"250px\"/> </td>\r\n                    <td className=\"sp1_tlr_td\"> <PersonLoader/> </td> \r\n                    <td className=\"sp1_tlr_td\"> <PersonLoader/> </td> \r\n                    <td className=\"sp1_tlr_td\"> <PersonLoader/> </td>\r\n                    <td className=\"sp1_tlr_td\"> <Placeholder /> </td>\r\n                    <td className=\"sp1_tlr_td\"> <Placeholder/> </td> \r\n                </tr>\r\n            ))}\r\n\r\n            <tr className=\"sp1_tlr_tr\">\r\n                <td className=\"sp1_tlr_td\" rowSpan={2}> <Placeholder width=\"250px\"/> </td>\r\n                <td className=\"sp1_tlr_td\" rowSpan={2}> <PersonLoader/> </td> \r\n                <td className=\"sp1_tlr_td\" rowSpan={2}> <PersonLoader/> </td> \r\n                <td className=\"sp1_tlr_td\" > <PersonLoader/> </td>\r\n                <td className=\"sp1_tlr_td\"> <Placeholder /> </td>\r\n                <td className=\"sp1_tlr_td\"> <Placeholder/> </td> \r\n            </tr>\r\n\r\n            {_.times(1, index =>(\r\n                <tr key={index} className=\"sp1_tlr_tr\"> \r\n                    <td className=\"sp1_tlr_td\" > <PersonLoader/> </td>\r\n                    <td className=\"sp1_tlr_td\"> <Placeholder /> </td>\r\n                    <td className=\"sp1_tlr_td\"> <Placeholder/> </td> \r\n                </tr>\r\n            ))}\r\n\r\n            {_.times(3, index =>(\r\n                <tr key={index} className=\"sp1_tlr_tr\">\r\n                    <td className=\"sp1_tlr_td\"> <Placeholder width=\"250px\"/> </td>\r\n                    <td className=\"sp1_tlr_td\"> <PersonLoader/> </td> \r\n                    <td className=\"sp1_tlr_td\"> <PersonLoader/> </td> \r\n                    <td className=\"sp1_tlr_td\"> <PersonLoader/> </td>\r\n                    <td className=\"sp1_tlr_td\"> <Placeholder /> </td>\r\n                    <td className=\"sp1_tlr_td\"> <Placeholder/> </td> \r\n                </tr>\r\n            ))}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ProjectWiseTimeLogTableLoader;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./data-table.css\";\r\nimport UserRender from \"./UserRender\";\r\nimport { convertTime } from \"../../utils/converTime\";\r\nimport TableFooter from \"./TableFooter\";\r\nimport { Placeholder } from \"../../global/Placeholder\";\r\nimport TimeLogTableLoader from \"./TimeLogTableLoader\";\r\nimport ProjectWiseTimeLogTableLoader from \"./ProjectWiseTableLoader\";\r\nimport TableDragAbleHeader from \"./DragHeader\";\r\nimport { useLocalStorage } from \"react-use\";\r\n\r\nconst DataTable = ({\r\n    data,\r\n    columns = [],\r\n    tableName = \"data-table\",\r\n    sortBy = \"\",\r\n    height = \"calc(100vh - 100px)\",\r\n    onPaginate,\r\n    perpageData,\r\n    handlePerPageData,\r\n    totalEntry,\r\n    currentPage,\r\n    isLoading,\r\n}) => {\r\n    const [columnOrder, setColumnOrder] = useState([]);\r\n    const [value, setValue] = useLocalStorage(tableName);\r\n\r\n    // get columns keys\r\n    useEffect(() => {\r\n        if(value?.columnOrders){\r\n            setColumnOrder(value?.columnOrders);\r\n        }else{\r\n            const column_ids = _.map(columns, \"id\");\r\n            setColumnOrder([...column_ids]);\r\n        }\r\n    }, []);\r\n\r\n    const _columns = _.sortBy(columns, (item) =>\r\n        _.indexOf(columnOrder, item.id)\r\n    );\r\n\r\n    const renderRow = (data) => {\r\n        const rows = [];\r\n        if (data) {\r\n            for (const [key, value] of data) {\r\n                {\r\n                    value?.map((item, index) => {\r\n                        const className =\r\n                            value.length === index + 1\r\n                                ? \"sp1_tlr_td f-14 sp1_tlr_td_border\"\r\n                                : \"sp1_tlr_td f-14\";\r\n                        rows.push(\r\n                            <React.Fragment key={item.start_time}>\r\n                                <tr className=\"sp1_tlr_tr\">\r\n                                    {\r\n                                        _.map(_columns, col =>{\r\n                                            if(col.group){\r\n                                                return index === 0 && (\r\n                                                    <React.Fragment key={col.id}>\r\n                                                        {col.cell({row: item, rowSpan: _.size(value)})}\r\n                                                    </React.Fragment>\r\n                                                );\r\n                                            }else{\r\n                                                    return <React.Fragment key={col.id}>\r\n                                                        { col.cell({ row: item, className: `${className} sp1_drag_col_${col?.id}`})}\r\n                                                    </React.Fragment>\r\n                                                }\r\n                                            }\r\n                                        )\r\n                                    }\r\n                                </tr>\r\n                            </React.Fragment>\r\n                        );\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        return rows;\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"p-3\">\r\n                <div\r\n                    className=\"position-relative sp1_tlr_tbl_wrapper\"\r\n                    style={{ height }}\r\n                >\r\n                    <table className=\"sp1_tlr_table\">\r\n                        <thead className=\"sp1_tlr_thead\">\r\n                            <tr className=\"sp1_tlr_tr\">\r\n                                {_.map(_columns, (column) => {\r\n                                    return (\r\n                                        <TableDragAbleHeader\r\n                                            key={column.id}\r\n                                            className=\"sp1_tlr_th\"\r\n                                            column={column}\r\n                                            columns = {_columns}\r\n                                            onSort={() => {}}\r\n                                            onDrop={setColumnOrder}\r\n                                            order={columnOrder}\r\n                                            tableName={tableName}\r\n                                            storeOnLocalStore={(columns) => setValue({...value, columnOrders: columns})}\r\n                                        />\r\n                                    );\r\n                                })}\r\n                                \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"sp1_tlr_tbody\">\r\n                            {!isLoading && renderRow(data)}\r\n\r\n                            {isLoading && <ProjectWiseTimeLogTableLoader />}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n                <TableFooter\r\n                    onPaginate={onPaginate}\r\n                    perpageData={perpageData}\r\n                    totalEntry={totalEntry}\r\n                    currentPage={currentPage}\r\n                    handlePerPageData={handlePerPageData}\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default DataTable;\r\n","import _ from \"lodash\"\r\nimport { convertTime } from \"../../utils/converTime\"\r\nimport dayjs from \"dayjs\";\r\n\r\nexport const ProjectSessionTableColumn = [\r\n    {\r\n        id: 'task_id',\r\n        header: 'Task Name',\r\n        className: '',\r\n        group: true,\r\n        sorted: false,\r\n        cell: ({row, rowSpan, className}) =>{\r\n                return(\r\n                 <td\r\n                    className={`sp1_tlr_td sp1_tlr_td_border sp1_tlr_td_marged ${ rowSpan? \"sp1_tlr_td_hover-disable\": \"\"}`}\r\n                    rowSpan={rowSpan}\r\n                >\r\n                    <a  href={`/account/tasks/${row?.task_id}`} >{row?.task_name}</a>\r\n                </td>\r\n            )\r\n        }\r\n    },\r\n    {\r\n        id: 'task_details',\r\n        header: 'Session Details',\r\n        className: '',\r\n        group: true,\r\n        sorted: false,\r\n        cell: ({row, data, rowSpan, className}) =>{\r\n            const totalSession = _.size(data);\r\n            const totalLogTime = _.sumBy(data,  (d) => Number(d['total_minutes']));\r\n                return(\r\n                 <td\r\n                    className={`sp1_tlr_td sp1_tlr_td_border sp1_tlr_td_marged ${ rowSpan? \"sp1_tlr_td_hover-disable\": \"\"}`}\r\n                    rowSpan={rowSpan}\r\n                >\r\n                    Total Session: {totalSession} <br/>\r\n                    Total Session Duration: <br/> {convertTime(totalLogTime)}\r\n                </td>\r\n            )\r\n        }\r\n    },\r\n    {\r\n        id: 'session_duration',\r\n        header: 'Session Duration',\r\n        className: '',\r\n        group: false,\r\n        sorted: false,\r\n        cell: ({row, className}) =>{\r\n                return(\r\n                 <td className={className}> \r\n                    {convertTime(row?.total_minutes)}\r\n                </td>\r\n            )\r\n        }\r\n    },\r\n    {\r\n        id: 'start_time',\r\n        header: 'Start Time',\r\n        className: '',\r\n        group: false,\r\n        sorted: false,\r\n        cell: ({row, className}) =>{\r\n                return(\r\n                 <td className={className} >\r\n                    {dayjs(row?.start_time).format('MMM DD, YYYY')} <br/>\r\n                    {dayjs(row?.start_time).format('hh:mm A')}\r\n                </td>\r\n            )\r\n        }\r\n    },\r\n    {\r\n        id: 'end_time',\r\n        header: 'End Time',\r\n        className: '',\r\n        group: false,\r\n        sorted: false,\r\n        cell: ({row, className}) =>{\r\n                return(\r\n                    <td className={className} >\r\n                       {dayjs(row?.end_time).format('MMM DD, YYYY')} <br/>\r\n                       {dayjs(row?.end_time).format('hh:mm A')}\r\n                   </td>\r\n            )\r\n        }\r\n    },\r\n    {\r\n        id: 'task_status',\r\n        header: 'Task Status',\r\n        className: '',\r\n        group: false,\r\n        sorted: false,\r\n        cell: ({row, className}) =>{\r\n                return(\r\n                 <td className={className} >\r\n                    <span className=\"badge text-white\" style={{background: row?.tasks_color_code}}>\r\n                        {row?.tasks_status}\r\n                    </span>\r\n                </td>\r\n            )\r\n        }\r\n    },\r\n\r\n]","import React, { useState, lazy, Suspense, useContext } from \"react\";\r\nimport Modal from \"./Modal\";\r\nimport Button from \"./Button\";\r\nimport { useLazyGetSessionDetailsQuery } from \"../../services/api/timeLogTableSessionDetails\";\r\nimport { groupBy, orderBy } from \"lodash\";\r\nimport { paginate } from \"../../utils/paginate\";\r\nimport { ProjectTableCtx } from \"../context/ProjectWiseTableContext\";\r\nimport { ProjectSessionTableColumn } from \"./ProjectSessionTableColumn\";\r\nconst ProjectSessionTable = lazy(() => import(\"./ProjectSessionTable\"));\r\n\r\nconst ProjectSessionTrackTimeButton = ({ row, children }) => {\r\n    const { filter } = useContext(ProjectTableCtx);\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [data, setData] = useState([]);\r\n    const [perPageData, setParPageData] = useState(10);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [renderData, setRenderData] = useState(null);\r\n    const [sortConfig, setSortConfig] = useState([]);\r\n    \r\n    const [getSessionDetails, {isFetching }] =\r\n        useLazyGetSessionDetailsQuery(\"\");\r\n\r\n    const toggle = () => setIsOpen((prev) => !prev);\r\n    const close = () => setIsOpen(false);\r\n\r\n    // handle data\r\n    const handleData = (data, currentPage, perPageData) => {\r\n        const paginated = paginate(data, currentPage, perPageData);\r\n        const grouped = groupBy(paginated, 'task_id');\r\n        const sorted = Object.entries(grouped).sort(([keyA], [keyB]) => keyB - keyA);\r\n        setRenderData([...sorted]);\r\n    }\r\n\r\n    // data sort handle\r\n    const handleSorting = (sort) => {\r\n        const sortData = orderBy(data, ...sort);\r\n        handleData(sortData, currentPage, perPageData);\r\n    };\r\n\r\n    // handle pagination\r\n    const handlePagination = (page) => {\r\n        setCurrentPage(page);\r\n        handleData(data, page, perPageData);\r\n    };\r\n\r\n    // handle par page data change\r\n    const handlePerPageData = (number) => {\r\n        setParPageData(number);\r\n        handleData(data, currentPage, number);\r\n    };\r\n\r\n    const handleClick = (e) => {\r\n        e.preventDefault();\r\n        toggle();\r\n\r\n        getSessionDetails({\r\n            projectID: row?.project_id,\r\n            employeeID: row?.employee_id,\r\n            startDate: filter?.start_date,\r\n            endDate: filter?.end_date,\r\n        })\r\n            .unwrap()\r\n            .then((res) => {\r\n                const sortedData = orderBy(res, [\"task_id\"], [\"desc\"]);\r\n                handleData(sortedData, currentPage, perPageData);\r\n                setData(sortedData);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <button onClick={handleClick} type=\"button\" className=\"px-2 py-1\">\r\n                {children}\r\n            </button>\r\n            <React.Fragment>\r\n                <Modal isOpen={isOpen} className=\"sp1_mark-as--modal\">\r\n                    <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n                        <div\r\n                            className=\"sp1_mark-as--modal-panel\"\r\n                            style={{ maxWidth: \"80vw\" }}\r\n                        >\r\n                            {/* heading bar */}\r\n                            <div className=\"sp1_mark-as--modal-heading\">\r\n                                <h6 className=\"mb-0\">Project Wise Session</h6>\r\n                                <Button\r\n                                    variant=\"tertiary\"\r\n                                    aria-label=\"closeModal\"\r\n                                    onClick={close}\r\n                                >\r\n                                    <i className=\"fa-solid fa-xmark\" />\r\n                                </Button>\r\n                            </div>\r\n\r\n                            {/* body */}\r\n                            <div\r\n                                className=\"sp1_mark-as--modal-body px-3\"\r\n                                style={{ overflow: \"unset\" }}\r\n                            >\r\n                                <Suspense fallback={<> Loading ...</>}>\r\n                                    <ProjectSessionTable\r\n                                        data={renderData}\r\n                                        columns={ProjectSessionTableColumn}\r\n                                        height=\"70vh\"\r\n                                        tableName=\"project_timelog_sesson_report\"\r\n                                        onSort={handleSorting}\r\n                                        onPaginate={handlePagination}\r\n                                        perpageData={perPageData}\r\n                                        handlePerPageData={handlePerPageData}\r\n                                        currentPage={currentPage}\r\n                                        totalEntry={data?.length}\r\n                                        isLoading={isFetching}\r\n                                    />\r\n                                </Suspense>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            </React.Fragment>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ProjectSessionTrackTimeButton;\r\n","import { convertTime } from \"../../utils/converTime\"\r\nimport ProjectSessionTrackTimeButton from \"./ProjectSessionTrackTimeButton\"\r\nimport UserRender from \"./UserRender\"\r\n\r\n\r\nexport const ProjectWiseTableColumn = [\r\n    {\r\n        id: 'project_id',\r\n        header: 'Project Name',\r\n        className: '',\r\n        group: true,\r\n        sorted: false,\r\n        sortAccessor: 'project_id',\r\n        cell:  ({row, col, rowSpan=1}) => {\r\n            return <td\r\n                className={`sp1_tlr_td sp1_tlr_td_border sp1_drag_col_${col?.id} sp1_tlr_td_marged ${ rowSpan? \"sp1_tlr_td_hover-disable\": \"\"}`}\r\n                rowSpan={rowSpan}\r\n            >\r\n                <a  href={`/account/tasks/${row?.task_id}`} >{row?.project_name}</a>\r\n            </td>\r\n        } \r\n    },\r\n    {\r\n        id: 'client_id',\r\n        header: 'Client Name',\r\n        className: '',\r\n        group: true,\r\n        sorted: false,\r\n        sortAccessor: 'client_id',\r\n        cell:  ({row, col, rowSpan=1}) => {\r\n            return <td\r\n                className={`sp1_tlr_td sp1_tlr_td_border  sp1_drag_col_${col?.id} sp1_tlr_td_marged ${ rowSpan? \"sp1_tlr_td_hover-disable\": \"\"}`}\r\n                rowSpan={rowSpan}\r\n            >\r\n                <UserRender\r\n                    name={row?.client_name}\r\n                    profileUrl={`/account/clients/${row?.client_id}`}\r\n                    image={row?.client_image}\r\n                    role=\"Freelancer.com\"\r\n                    roleLink={row?.client_from}\r\n                    id={row?.client_id}\r\n                />\r\n            </td>\r\n        } \r\n    },\r\n    {\r\n        id: 'pm_id',\r\n        header: 'Project Manager',\r\n        className: '',\r\n        group: true,\r\n        sorted: false,\r\n        sortAccessor: 'pm_id',\r\n        cell:  ({row, col, rowSpan=1}) => {\r\n            return <td\r\n                className={`sp1_tlr_td sp1_tlr_td_border sp1_drag_col_${col?.id} sp1_tlr_td_marged ${ rowSpan? \"sp1_tlr_td_hover-disable\": \"\"}`}\r\n                rowSpan={rowSpan}\r\n            >\r\n                <UserRender\r\n                    name={row?.pm_name}\r\n                    profileUrl={`/account/employees/${row?.pm_id}`}\r\n                    image={row?.pm_image}\r\n                    role={row?.pm_roles}\r\n                    id={row?.pm_id}\r\n                />\r\n            </td>\r\n        } \r\n    },\r\n    {\r\n        id: 'employee_id',\r\n        header: 'Employee Name',\r\n        className: '',\r\n        sorted: true,\r\n        group: false,\r\n        sortAccessor: '', \r\n        cell: ({row, col, className, rowSpan}) => {\r\n            return <td className={className} rowSpan={rowSpan}>\r\n                <UserRender\r\n                    name={row?.employee_name}\r\n                    profileUrl={`/account/employees/${row?.employee_id}`}\r\n                    image={row?.employee_image}\r\n                    role={\r\n                        row?.employee_roles\r\n                    }\r\n                    id={row?.employee_id}\r\n                />\r\n            </td>\r\n        }\r\n        \r\n    },\r\n    {\r\n        id: 'number_of_session',\r\n        header: 'Number Of Session',\r\n        className: '',\r\n        sorted: false,\r\n        cell: ({row, className}) =>{\r\n            return(\r\n                <td className={className}>\r\n                   <ProjectSessionTrackTimeButton row={row}>\r\n                        {row?.number_of_session}\r\n                    </ProjectSessionTrackTimeButton> \r\n                </td>\r\n            )\r\n        }\r\n    },\r\n    {\r\n        id: 'total_track_time',\r\n        header: 'Total Track Time',\r\n        className: '',\r\n        sorted: false,\r\n        cell: ({row, className}) =>{\r\n            return(\r\n                <td className={className}>\r\n                  {row?.total_minutes ? (\r\n                        convertTime(row?.total_minutes)\r\n                    ) : (\r\n                        <span className=\"text-danger\">\r\n                            <i\r\n                                className=\"fa-solid fa-chevron-left mr-1\"\r\n                                style={{ fontSize: \"10px\" }}\r\n                            />\r\n                            1 min\r\n                        </span>\r\n                    )}\r\n                </td>\r\n            )\r\n        }\r\n    }\r\n]","import React, {useState, useContext} from \"react\";\r\nimport { useGetProjectWiseDataMutation } from \"../../services/api/timeLogTableApiSlice\";\r\nimport { paginate } from '../../utils/paginate';\r\nimport { groupBy, orderBy } from \"lodash\";\r\nimport Tabbar from \"../components/Tabbar\";\r\nimport ProjectWiseTable from '../components/ProjectWiseTable'\r\nimport TimeLogTableFilterBar from \"../components/TimeLogTableFilterBar\";\r\nimport { ProjectWiseTableColumn } from \"../components/ProjectWiseTableColumn\";\r\nimport { ProjectTableCtx } from \"../context/ProjectWiseTableContext\";\r\nimport { convertTime } from \"../../utils/converTime\";\r\n\r\nconst ProjectWiseTimeLog = () => {\r\n    const [data, setData] = useState([]);\r\n    const [perPageData, setParPageData] = useState(10);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [renderData, setRenderData] = useState(null);\r\n    const [sortConfig, setSortConfig] = useState([]);\r\n    const [nSession, setNSession] = useState(0);\r\n    const [trackedTime, setTractedTime] = useState(0);\r\n\r\n    const {setFilter} = useContext(ProjectTableCtx);\r\n    const [getProjectWiseData, {isLoading}] = useGetProjectWiseDataMutation();\r\n\r\n    // handle data\r\n    const handleData = (data, currentPage, perPageData) => {\r\n        const paginated = paginate(data, currentPage, perPageData);\r\n        const grouped = groupBy(paginated, 'project_id');\r\n        const sorted = Object.entries(grouped).sort(([keyA], [keyB]) => keyB - keyA);\r\n        setRenderData([...sorted]);\r\n    }\r\n\r\n    // handle fetch data\r\n    const handleFetchData = (filter) => {\r\n        setFilter(filter);\r\n        getProjectWiseData(filter)\r\n        .unwrap()\r\n        .then(res => {\r\n            setCurrentPage(1);\r\n            const sortedData = orderBy(res?.data, [\"project_id\"], [\"desc\"]);\r\n            handleData(sortedData, currentPage, perPageData);\r\n            const totalSession = _.sumBy(sortedData, (d) => Number(d.number_of_session));\r\n            const totalTrackTime = _.sumBy(sortedData, d => Number(d.total_minutes));\r\n            setData(sortedData);\r\n            setNSession(totalSession);\r\n            setTractedTime(totalTrackTime);\r\n        })\r\n    }\r\n \r\n\r\n    // data sort handle \r\n    const handleSorting = (sort) => {\r\n        const sortData = orderBy(data, ...sort);\r\n        handleData(sortData, currentPage, perPageData);\r\n    }\r\n\r\n    // handle pagination\r\n    const handlePagination = (page) => {\r\n        setCurrentPage(page);\r\n        handleData(data, page, perPageData);\r\n    }\r\n\r\n    // handle par page data change\r\n    const handlePerPageData=(number)=>{\r\n        setParPageData(number);\r\n        handleData(data, currentPage, number);\r\n    }\r\n\r\n    return (\r\n        <div className=\"sp1_tlr_container\">\r\n            <TimeLogTableFilterBar onFilter={handleFetchData} />\r\n            <div className=\"sp1_tlr_tbl_container\">\r\n                <div className=\"mb-2\">\r\n                    <Tabbar/>\r\n                </div>\r\n                \r\n                <div className=\" w-100 d-flex flex-wrap justify-center align-items-center\" style={{gap: '10px'}}>\r\n                    <span className=\"mx-auto\">\r\n                        <span>Total No. of Session: <strong> {nSession} </strong> </span> <span className=\"mx-2\">||</span> <span>Total Tracked Time: <strong>{convertTime(trackedTime)}</strong></span>\r\n                    </span>\r\n                </div>\r\n\r\n                <ProjectWiseTable\r\n                    data={renderData}\r\n                    columns={ProjectWiseTableColumn}\r\n                    tableName=\"ProjectWiseTimeLogTable\"\r\n                    onSort={handleSorting}\r\n                    height=\"calc(100vh - 370px)\"\r\n                    onPaginate={handlePagination}\r\n                    perpageData={perPageData}\r\n                    handlePerPageData={handlePerPageData}\r\n                    currentPage={currentPage}\r\n                    totalEntry={data.length}\r\n                    isLoading={isLoading}\r\n                /> \r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProjectWiseTimeLog;\r\n","import { apiSlice } from \"./apiSlice\";            \r\n\r\n\r\nconst timeLogTableApiSlice = apiSlice.injectEndpoints({\r\n    endpoints: (build) => ({\r\n        \r\n       getEmployeeWiseData:  build.mutation({\r\n            query: (data) => ({\r\n                url: `/get-timelogs/employees`,\r\n                method: \"POST\",\r\n                body: {\r\n                    ...data,\r\n                    _token: document.querySelector(\"meta[name='csrf-token']\").getAttribute(\"content\")\r\n                }\r\n            }) \r\n       }),\r\n\r\n       getProjectWiseData: build.mutation({\r\n            query: (data) => ({\r\n                url: `/get-timelogs/projects`,\r\n                method: \"POST\",\r\n                body: {\r\n                    ...data,\r\n                    _token: document.querySelector(\"meta[name='csrf-token']\").getAttribute(\"content\")\r\n                }\r\n            }) \r\n        }), \r\n\r\n        getTaskWiseData: build.mutation({\r\n            query: (data) => ({\r\n                url: `/get-timelogs/tasks`,\r\n                method: \"POST\",\r\n                body: {\r\n                    ...data,\r\n                    _token: document.querySelector(\"meta[name='csrf-token']\").getAttribute(\"content\")\r\n                }\r\n            }) \r\n        }),  \r\n\r\n        getTimeLogHistory: build.mutation({\r\n            query: (data) => ({\r\n                url: `/get-timelogs/time_log_history`,\r\n                method: \"POST\",\r\n                body: {\r\n                    ...data,\r\n                    _token: document.querySelector(\"meta[name='csrf-token']\").getAttribute(\"content\")\r\n                }\r\n            }) \r\n        }),  \r\n\r\n        getTimeLogHistoryDetails: build.query({\r\n            query: (userId) => `/account/tasks/developer-task-history/${userId}`\r\n        })\r\n\r\n\r\n    })\r\n}) ;\r\n\r\n\r\n\r\nexport const { \r\n     useGetEmployeeWiseDataMutation,\r\n     useGetTaskWiseDataMutation,\r\n     useGetProjectWiseDataMutation,\r\n     useGetTimeLogHistoryMutation,\r\n     useLazyGetTimeLogHistoryDetailsQuery \r\n} = timeLogTableApiSlice;\r\n\r\n","import { apiSlice } from \"./apiSlice\";            \r\n\r\n\r\nconst timeLogTableApiSlice = apiSlice.injectEndpoints({\r\n    endpoints: (build) => ({\r\n        \r\n       getSessionDetails:  build.query({\r\n            query: ({projectID, employeeID, startDate, endDate}) => ({\r\n                url: `/account/time-log-report/${projectID}/${employeeID}?start_date=${startDate}&end_date=${endDate}`,\r\n                method: \"GET\", \r\n            }) \r\n       }), \r\n\r\n    })\r\n}) ;\r\n\r\n\r\n\r\nexport const {  \r\n    useGetSessionDetailsQuery,\r\n    useLazyGetSessionDetailsQuery\r\n} = timeLogTableApiSlice;\r\n\r\n","// paginate\r\nexport function paginate(data, currentPage, nPaginate ){\r\n    if (data.length <= nPaginate) return data;\r\n    const startIndex = (currentPage - 1) * nPaginate;\r\n    return data.slice(startIndex, startIndex + nPaginate);\r\n}\r\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".sp1_tlr_tbl_wrapper{overflow-y:auto}.sp1_tlr_table{width:100%}.sp1_tlr_th{background-color:#fff;border-bottom:2px solid #dbe4ff;height:36px;padding:3px 10px;position:sticky;top:0;z-index:10}.sp1_tlr_td{border-bottom:1px solid #dbe4ff;max-width:350px;min-width:150px;padding:10px}.sp1_tlr_tbody>.sp1_tlr_tr:hover .sp1_tlr_td{background-color:rgba(233,235,240,.349)}.sp1_tlr_tr .sp1_tlr_td_marged{background-color:rgba(243,244,248,.349);border-inline:1px solid #dbe4ff}.sp1_tlr_tr .sp1_tlr_td_marged:first-child,.sp1_tlr_tr .sp1_tlr_td_marged:nth-child(2){border-left-color:transparent}.sp1_tlr_td_border{border-bottom:2px solid #dbe4ff}.sp1_drag_th.__dragging{background-color:hsla(222,6%,69%,.222)}.sp1_drag_th.__drop-area{background-color:rgba(34,45,71,.349)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/react/TimeLogTable/components/data-table.css\"],\"names\":[],\"mappings\":\"AAAA,qBACI,eACJ,CAEA,eACI,UACJ,CAEA,YAGI,qBAAoC,CACpC,+BAA2C,CAH3C,WAAY,CACZ,gBAAiB,CAGjB,eAAgB,CAEhB,KAAM,CADN,UAEJ,CAEA,YAII,+BAA2C,CAF3C,eAAgB,CAChB,eAAgB,CAFhB,YAIJ,CAEA,6CACI,uCACJ,CAEA,+BACI,uCAA2C,CAC3C,+BACJ,CAEA,uFAEI,6BACJ,CAEA,mBACI,+BACJ,CAQA,wBACI,sCACJ,CAEA,yBACI,oCACJ\",\"sourcesContent\":[\".sp1_tlr_tbl_wrapper{\\r\\n    overflow-y: auto;\\r\\n}\\r\\n\\r\\n.sp1_tlr_table{\\r\\n    width: 100%; \\r\\n}\\r\\n\\r\\n.sp1_tlr_th {\\r\\n    height: 36px;\\r\\n    padding: 3px 10px;\\r\\n    background-color: rgb(255, 255, 255);\\r\\n    border-bottom: 2px solid rgb(219, 228, 255);\\r\\n    position: sticky;\\r\\n    z-index: 10;\\r\\n    top: 0;\\r\\n}\\r\\n\\r\\n.sp1_tlr_td{\\r\\n    padding: 10px;\\r\\n    max-width: 350px;\\r\\n    min-width: 150px;\\r\\n    border-bottom: 1px solid rgb(219, 228, 255);\\r\\n}\\r\\n\\r\\n.sp1_tlr_tbody > .sp1_tlr_tr:hover .sp1_tlr_td{\\r\\n    background-color:rgba(233, 235, 240, 0.349);\\r\\n}\\r\\n\\r\\n.sp1_tlr_tr .sp1_tlr_td_marged{\\r\\n    background-color:rgba(243, 244, 248, 0.349);\\r\\n    border-inline: 1px solid rgb(219, 228, 255);\\r\\n}\\r\\n\\r\\n.sp1_tlr_tr .sp1_tlr_td_marged:first-child,\\r\\n.sp1_tlr_tr .sp1_tlr_td_marged:nth-child(2){\\r\\n    border-left-color: transparent;\\r\\n}\\r\\n\\r\\n.sp1_tlr_td_border{\\r\\n    border-bottom: 2px solid rgb(219, 228, 255);\\r\\n}\\r\\n\\r\\n/* .sp1_tlr_tbody > .sp1_tlr_tr:hover .sp1_tlr_td_hover-disable{\\r\\n   background-color: #fff !important; \\r\\n} */\\r\\n\\r\\n\\r\\n\\r\\n.sp1_drag_th.__dragging {\\r\\n    background-color: rgba(170, 173, 180, 0.222);\\r\\n}\\r\\n\\r\\n.sp1_drag_th.__drop-area {\\r\\n    background-color: rgba(34, 45, 71, 0.349);\\r\\n}\\r\\n\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[8].oneOf[1].use[2]!./data-table.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};"],"names":["Button","_ref","children","_ref$disabled","type","disabled","_ref$className","className","_ref$variant","variant","_ref$size","size","onClick","props","_objectWithoutProperties","_excluded","classes","concat","_jsx","_objectSpread","e","propTypes","PropTypes","isRequired","href","onSort","column","order","columns","onDrop","tableName","storeOnLocalStore","ref","useRef","_useDrag2","_slicedToArray","useDrag","item","collect","monitor","isDragging","drag","preview","_useDrop2","useDrop","accept","hover","indexOf","drop","reOrderColumn","curr","target","splice","id","_toConsumableArray","isOver","React","getEmptyImage","captureDraggingState","header","FilterItem","_ref$items","items","title","selected","onSelect","_ref$isLoading","isLoading","_React$useState2","search","_React$useState4","maxHeight","setMaxHeight","window","innerHeight","_jsxs","Dropdown","Toggle","_","Menu","role","style","width","height","borderWidth","borderColor","borderRightColor","color","Item","filter","name","includes","map","startDate","endDate","setStartDate","setEndDate","_ref$onApply","onApply","$","moment","start","startOf","end","endOf","cb","format","html","daterangepicker","locale","customRangeLabel","separator","applyLabel","cancelLabel","daysOfWeek","monthNames","firstDay","parseInt","datePicker","ranges","subtract","handleTimePicker","position","Modal","isOpen","isBrowser","setIsBrowser","Math","random","toString","substr","DOM","document","getElementById","el","createElement","body","appendChild","removeChild","classList","add","remove","modalContent","ReactDOM","PersonFilterItem","_ref$selectedAllButto","selectedAllButton","setSearch","length","SearchBox","value","onChange","autoFocus","image_url","src","alt","borderRadius","TextHighlighter","textToHighlight","searchWords","gap","NavLink","to","isActive","_ref2","_ref3","_ref4","_ref$currentPage","currentPage","_ref$perpageRow","perpageRow","onPaginate","_ref$totalEntry","totalEntry","renderButtons","setRenderButtons","totalPages","setTotalPages","entryChagne","isTotalPagesChange","rowNumber","tPages","ceil","buttons","i","push","_Fragment","number","perpageData","handlePerPageData","showingFrom","showingTo","Number","Pagination","ProjectFilterItem","project_name","_regeneratorRuntime","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","arr","Array","isArray","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","minLen","_arrayLikeToArray","from","test","len","arr2","TimeLogTableFilterBar","_window","onFilter","users","useSelector","dispatch","useDispatch","_React$useState6","status","setStatus","_React$useState8","selectedEmployeeId","setSelectedEmployeeId","_React$useState10","selectedPMId","setSelectedPMId","_React$useState12","selectedClientId","setSelectedClientId","_React$useState14","selectedProject","setSelectedProject","logged_user","Laravel","user","top_management","role_id","_useLazyGetAllUsersQu2","useLazyGetAllUsersQuery","skip","getAllUsers","userIsFetching","isFetching","_useGetProjectsOption","useGetProjectsOptionsQuery","getProjectsOptions","data","fn","_callee","res","_context","unwrap","setUsers","self","args","arguments","apply","err","undefined","content","_selectedEmployeeId","_selectedClientId","_selectedPMId","_status","_selectedProject","_startDate","_endDate","start_date","dayjs","end_date","employee_id","pm_id","client_id","project_id","JqueryDateRangePicker","PersonFilter","find","preventDefault","PersonLoader","Placeholder","_objectDestructuringEmpty","rowSpan","index","image","profileUrl","roleLink","fontSize","fontWeight","toUpperCase","_ref$columns","_ref$tableName","_ref$height","sortBy","_useState2","useState","columnOrder","setColumnOrder","_useLocalStorage2","useLocalStorage","setValue","useEffect","columnOrders","column_ids","_columns","TableDragAbleHeader","rows","_step","_iterator","_createForOfIteratorHelper","_loop","_step$value","col","group","cell","row","start_time","renderRow","ProjectWiseTimeLogTableLoader","TableFooter","ProjectSessionTableColumn","sorted","task_id","task_name","totalSession","totalLogTime","convertTime","total_minutes","_ref5","end_time","_ref6","background","tasks_color_code","tasks_status","ProjectSessionTable","lazy","useContext","ProjectTableCtx","setIsOpen","_useState4","setData","_useState6","perPageData","setParPageData","_useState8","setCurrentPage","_useState10","renderData","setRenderData","_useState12","_useLazyGetSessionDet2","useLazyGetSessionDetailsQuery","getSessionDetails","handleData","paginated","paginate","grouped","groupBy","entries","sort","keyA","projectID","employeeID","sortedData","orderBy","maxWidth","overflow","Suspense","fallback","sortData","page","ProjectWiseTableColumn","sortAccessor","_ref$rowSpan","_ref2$rowSpan","UserRender","client_name","client_image","client_from","_ref3$rowSpan","pm_name","pm_image","pm_roles","employee_name","employee_image","employee_roles","ProjectSessionTrackTimeButton","number_of_session","nSession","setNSession","_useState14","trackedTime","setTractedTime","setFilter","_useGetProjectWiseDat2","useGetProjectWiseDataMutation","getProjectWiseData","sumBy","totalTrackTime","Tabbar","ProjectWiseTable","timeLogTableApiSlice","apiSlice","injectEndpoints","endpoints","build","getEmployeeWiseData","mutation","query","url","_token","querySelector","getAttribute","getTaskWiseData","getTimeLogHistory","getTimeLogHistoryDetails","userId","useGetEmployeeWiseDataMutation","useGetTaskWiseDataMutation","useGetTimeLogHistoryMutation","useLazyGetTimeLogHistoryDetailsQuery","useGetSessionDetailsQuery","nPaginate","startIndex","___CSS_LOADER_EXPORT___","module","options","locals"],"sourceRoot":""}