{"version":3,"file":"js/react/resources_js_react_single-task_section_task-actions_stop-timer_options_UserSelectionList_jsx.js","mappings":"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","sources":["webpack:///./resources/js/react/single-task/section/task-actions/stop-timer/options/UserSelectionList.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useUsers } from \"../../../../../hooks/useUsers\";\r\nimport { User } from \"../../../../../utils/user-details\";\r\nimport { Combobox } from \"@headlessui/react\";\r\nimport _ from \"lodash\";\r\nimport { HiOutlineSelector } from \"react-icons/hi\";\r\n\r\nconst UserSelectionList = ({ person, setPerson }) => {\r\n    const { users, usersIsFetching } = useUsers();\r\n    const [search, setSearch] = useState(\"\");\r\n\r\n    let filteredUsers =\r\n        search === \"\"\r\n            ? users\r\n            : users?.filter((user) =>\r\n                  _.lowerCase(user.name).includes(_.lowerCase(search))\r\n              );\r\n\r\n    return (\r\n        <div className=\"position-relative w-100 mb-3\">\r\n            <Combobox value={person} onChange={setPerson}>\r\n                <Combobox.Button className=\"position-relative w-100\">\r\n                    <Combobox.Input\r\n                        className=\"w-100 bg-white py-2 pl-2 pr-1 border d-flex align-items-center justify-content-between\"\r\n                        displayValue={(person) => person?.name}\r\n                        onChange={(e) => setSearch(e.target.value)}\r\n                        placeholder=\"--\"\r\n                    />\r\n\r\n                    {/* Selection box icon */}\r\n                    <span\r\n                        style={{\r\n                            position: \"absolute\",\r\n                            top: \"50%\",\r\n                            right: \"5px\",\r\n                            transform: \"translateY(-50%)\",\r\n                        }}\r\n                    >\r\n                        <HiOutlineSelector />\r\n                    </span>\r\n                </Combobox.Button>\r\n\r\n                <Combobox.Options\r\n                    className=\"position-absolute bg-white p-2 shadow w-100\"\r\n                    style={{\r\n                        zIndex: \"1\",\r\n                        maxHeight: \"350px\",\r\n                        overflowY: \"auto\",\r\n                    }}\r\n                >\r\n                    {filteredUsers && filteredUsers.length ? (\r\n                        filteredUsers.map((user) => (\r\n                            <UserList key={user.id} user={user} />\r\n                        ))\r\n                    ) : (\r\n                        <div className=\"task-selection-list-option\">\r\n                            {usersIsFetching ? \"Loading...\" : \"Nothing found.\"}\r\n                        </div>\r\n                    )}\r\n                </Combobox.Options>\r\n            </Combobox>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserSelectionList;\r\n\r\nconst UserList = (props) => {\r\n    const user = new User(props.user);\r\n\r\n    if (!user?.getRoleId()) return null;\r\n    return (\r\n        <Combobox.Option\r\n            value={user}\r\n            className={({ selected, active }) =>\r\n                selected\r\n                    ? \"task-selection-list-option selected\"\r\n                    : active\r\n                    ? \"task-selection-list-option active\"\r\n                    : \"task-selection-list-option\"\r\n            }\r\n        >\r\n            <div className=\"d-flex align-items-center\" style={{ gap: \"10px\" }}>\r\n                <img\r\n                    src={user?.getAvatar()}\r\n                    alt={user?.name}\r\n                    width={32}\r\n                    height={32}\r\n                    className=\"rounded-circle\"\r\n                />\r\n                <span>{user?.name}</span>\r\n            </div>\r\n        </Combobox.Option>\r\n    );\r\n};\r\n"],"names":["React","useState","useUsers","User","Combobox","_","HiOutlineSelector","jsx","_jsx","jsxs","_jsxs","UserSelectionList","_ref","person","setPerson","_useUsers","users","usersIsFetching","_useState","_useState2","_slicedToArray","search","setSearch","filteredUsers","filter","user","lowerCase","name","includes","className","children","value","onChange","Button","Input","displayValue","e","target","placeholder","style","position","top","right","transform","Options","zIndex","maxHeight","overflowY","length","map","UserList","id","props","getRoleId","Option","_ref2","selected","active","gap","src","getAvatar","alt","width","height"],"sourceRoot":""}