{"version":3,"file":"js/react/794.js","mappings":"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","sources":["webpack:///./resources/js/react/tasks/components/SubtaskTableColumns.jsx","webpack:///./resources/js/react/tasks/pages/Subtasks.jsx"],"sourcesContent":["import dayjs from \"dayjs\";\r\nimport * as React from 'react';\r\nimport Person from \"./Person\";\r\nimport { ExpandTask } from \"./table/ExpandTask\";\r\nimport { convertTime } from \"../../utils/converTime\";\r\nimport ReportButton from \"./ReportButton\";\r\nimport { CompareDate } from \"../../utils/dateController\";\r\nimport _ from \"lodash\";\r\nimport StopWatch from \"./Timer\";\r\nimport Dropdown from \"./Dropdown\";\r\nimport Button from \"./Button\";\r\nimport { SingleTask } from \"../../utils/single-task\";\r\nconst ReportForm = React.lazy(() => import(\"../../single-task/section/task-actions/report/ReportForm\"));\r\nimport Modal from \"./Modal\";\r\nimport Loader from \"./Loader\";\r\nimport { storeSubTasks } from \"../../services/features/tasksSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst compareDate = new CompareDate();\r\n\r\n\r\nexport const SubTasksTableColumns = [\r\n    {\r\n      id: 'expend',\r\n      header: <span className='mx-2'><strong>#</strong></span>,\r\n      cell: ({row}) => <span className='mx-2'><strong>{row.index + 1}</strong></span>\r\n    },\r\n    {\r\n      id: 'task',\r\n      header: 'Task',\r\n      accessorFn: (row) => `${row.id}${row.heading}`,\r\n      cell: ({row}) => {\r\n        const data = row?.original;\r\n        return (\r\n          <abbr title={data?.heading} style={{textDecoration: 'none'}}>\r\n            <div className='d-flex align-items-center' style={{gap: '10px'}}>\r\n                <a href={`/account/tasks/${data?.id}`} className='hover-underline multine-ellipsis'> {data?.heading} </a>\r\n            </div>\r\n          </abbr>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      id: 'timer_status',\r\n      header: 'Timer Status',\r\n      accessorKey: 'subtasks_timer_active',\r\n      cell: ({row}) => {\r\n        const data = row?.original;\r\n        const count = data?.subtasks_timer_active;\r\n        const subtaskCount = _.size(data?.subtasks_count)\r\n        const isActive = count > 0;\r\n        let serverTime = 0;\r\n        let localTime = 0;\r\n        let timer = 0;\r\n\r\n         if(data?.start_time && _.isNull(data?.end_time)){\r\n            serverTime =compareDate.dayjs(data?.start_time).unix();\r\n            localTime = compareDate.dayjs().unix();\r\n            timer = localTime - serverTime;\r\n         }\r\n\r\n         const clockIsRunning = data?.start_time && _.isNull(data?.end_time)\r\n\r\n        const color = (isActive || clockIsRunning) ? '#54B688' : '#DCDEE1'\r\n        return(\r\n          <div style={{color}} className='d-flex align-items-center'>\r\n            <i className=\"fa-solid fa-stopwatch f-18\"/>\r\n            {row.parentId === undefined && subtaskCount === 0 && !clockIsRunning && <span className='ml-2'><strong>{count}</strong></span>}\r\n            {clockIsRunning &&\r\n              <span className='ml-1 badge badge-primary text-white' style={{fontSize: '11px'}}>\r\n                {<StopWatch time={timer} run={clockIsRunning} />}\r\n              </span>\r\n            }\r\n          </div>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      id: 'milestone',\r\n      header: 'Milestone',\r\n      accessorKey: 'milestone_title',\r\n      cell: ({row}) => {\r\n        const data = row?.original;\r\n        return(\r\n          <abbr title={data?.milestone_title} style={{textDecoration: 'none'}}>\r\n            <span className='multine-ellipsis word-break'>\r\n              {data?.milestone_title}\r\n            </span>\r\n          </abbr>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      id: 'deliverable',\r\n      header: 'Deliverable',\r\n      accessorKey: 'deliverable_title',\r\n      cell: ({row}) => {\r\n        const data = row?.original;\r\n        return(\r\n          <abbr title={data?.deliverable_title} style={{textDecoration: 'none'}}>\r\n            <span className='multine-ellipsis word-break'>\r\n              {data?.deliverable_title ?? '--'}\r\n            </span>\r\n          </abbr>\r\n\r\n        )\r\n      }\r\n    },\r\n    {\r\n      id: 'project',\r\n      header: 'Project',\r\n      accessorFn: row => `${row?.project_id}${row?.project_name}`,\r\n      cell: ({row}) => {\r\n        const data = row?.original;\r\n        return(\r\n          <abbr title={data?.project_name} style={{textDecoration: 'none'}}>\r\n            <a href={`/account/projects/${data?.project_id}`} className='multine-ellipsis'>\r\n              {data?.project_name}\r\n            </a>\r\n          </abbr>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      id: 'client',\r\n      header: 'Client',\r\n      accessorKey: 'client_name',\r\n      cell: ({row}) => {\r\n        const data = row?.original;\r\n        return(\r\n          <div>\r\n            <Person\r\n              url={`/account/clients/${data?.client_id}`}\r\n              avatar={data?.client_avatar}\r\n              name={data?.client_name}\r\n            />\r\n          </div>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      id: 'project_manager',\r\n      header: 'Project Manager',\r\n      accessorKey: 'pm_id_name',\r\n      cell: ({row}) => {\r\n        const data = row?.original;\r\n        return(\r\n          <Person\r\n            url={`/account/employees/${data?.project_manager_id}`}\r\n            name={data?.pm_id_name}\r\n            avatar={data?.pm_id_avatar}\r\n          />\r\n        )\r\n      }\r\n    },\r\n\r\n    {\r\n      id: 'creation_date',\r\n      header: 'Creation Date',\r\n      accessorKey: 'creation_date',\r\n      cell: ({row}) => {\r\n        const data = row?.original;\r\n        return(\r\n          <span>\r\n            { data?.creation_date}\r\n          </span>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      id: 'due_date',\r\n      header: 'Due Date',\r\n      accessorFn: row =>row?.due_date ? dayjs(row?.due_date).format('DD-MM-YYYY') : '--' ,\r\n      cell: ({row}) => {\r\n        const data = row?.original;\r\n        let date = data?.due_date;\r\n        const currentDate = compareDate.dayjs();\r\n        let color = ''\r\n\r\n        if(compareDate.isSame(currentDate, date)){\r\n          date = 'Today';\r\n          color= 'red';\r\n        }else if(compareDate.isAfter(currentDate, date)){\r\n          color= 'red'\r\n        }\r\n\r\n        date = date === 'Today' ? date : dayjs(date).format('DD-MM-YYYY');\r\n        return(\r\n          <span style={{color: color}}>\r\n           <strong>{date ?? '--'}</strong>\r\n          </span>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      id: 'start_date',\r\n      header: 'Started Date',\r\n      accessorFn: row =>`${row?.start_date ? dayjs(row?.start_date).format('DD-MM-YYYY') : '--'}` ,\r\n      cell: ({row}) => {\r\n        const data = row?.original;\r\n        return(\r\n          <strong>\r\n            {data?.start_date ? (\r\n              <>\r\n                {dayjs(data?.start_date).format('DD-MM-YYYY')} <br/>\r\n              </>\r\n            ): '--'}\r\n          </strong>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      id: 'completion_date',\r\n      header: 'Completion Date',\r\n      accessorFn: row =>`${row?.completion_date ? dayjs(row?.completion_date).format('DD-MM-YYYY') : '--'}` ,\r\n      cell: ({row}) => {\r\n        const data = row?.original;\r\n        return(\r\n          <strong>\r\n            {Number(data?.board_column_id) === 4 ?\r\n              data?.completion_date && (\r\n                <>\r\n                  {dayjs(data?.completion_date).format('DD-MM-YYYY')} <br/>\r\n                </>\r\n              ): '--'\r\n            }\r\n          </strong>\r\n        )\r\n      }\r\n    },\r\n\r\n    \r\n    {\r\n      id: 'submission_data',\r\n      header: 'Submission Date',\r\n      accessorFn: row =>`${row?.task_submission_date ? dayjs(row?.task_submission_date).format('DD-MM-YYYY') : '--'}` ,\r\n      cell: ({row}) => {\r\n        const data = row?.original;\r\n        return(\r\n          <strong>\r\n            { \r\n              data?.task_submission_date ? (\r\n                <>\r\n                  {dayjs(data?.task_submission_date).format('DD-MM-YYYY')} <br/>\r\n                  {dayjs(data?.task_submission_date).format('hh:mm A')} <br/>\r\n                </>\r\n              ): '--'\r\n            }\r\n          </strong>\r\n        )\r\n      }\r\n    },\r\n\r\n    {\r\n      id: 'approved_on',\r\n      header: 'Approved On',\r\n      accessorFn: row => `${row?.task_approval_date ? dayjs(row?.task_approval_date).format('DD-MM-YYYY') : 'Not Completed Yet!'}`,\r\n      cell: ({row}) => {\r\n        const data = row?.original;\r\n        return(\r\n          <strong>\r\n            {data?.task_approval_date ? (\r\n              <>\r\n                {dayjs(data?.task_approval_date).format('DD-MM-YYYY')}\r\n              </>\r\n            ): <span className='badge text-white word-break' style={{background: '#f5c308'}}>Not Completed Yet!</span>}\r\n          </strong>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      id: 'estimated_time',\r\n      header: 'Estimated Time',\r\n      cell: ({row}) => {\r\n        const data = row?.original;\r\n        return(\r\n          <div>\r\n            {data?.estimate_hours ?? 0} hrs <br/>\r\n            {data?.estimate_minutes ?? 0} mins\r\n          </div>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      id: 'hours_logged',\r\n      header: 'Hours Logged',\r\n      cell: ({row}) => {\r\n        const data = row?.original;\r\n        return(\r\n          <div>\r\n            {convertTime(data?.subtasks_hours_logged)}\r\n          </div>\r\n        )\r\n      }\r\n    },\r\n\r\n    {\r\n      id: 'assigned_by',\r\n      header: 'Assigned By',\r\n      accessorKey: 'added_by_name',\r\n      cell: ({row}) => {\r\n        const data = row?.original;\r\n        return(\r\n          <Person\r\n            url={`/account/employees/${data?.added_by}` }\r\n            avatar={data?.added_by_avatar}\r\n            name={data?.added_by_name}\r\n          />\r\n        )\r\n      }\r\n    },\r\n    {\r\n      id: 'assigned_to',\r\n      header: 'Assigned To',\r\n      accessorKey: 'assigned_to_name',\r\n      cell: ({row}) => {\r\n        const data = row?.original;\r\n        return(\r\n          <Person\r\n            url={`/account/employees/${data?.assigned_to_id}` }\r\n            avatar={data?.assigned_to_avatar}\r\n            name={data?.assigned_to_name}\r\n          />\r\n        )\r\n      }\r\n    },\r\n    {\r\n      id: 'status',\r\n      header: 'Task Status',\r\n      accessorKey: 'column_name',\r\n      cell: ({row}) => {\r\n        const data = row?.original;\r\n        return(\r\n          <span\r\n            className='badge text-white'\r\n            style={{background: data?.label_color}}\r\n          >\r\n            {data?.column_name}\r\n          </span>\r\n        )\r\n      }\r\n    },\r\n    // {\r\n    //   id: 'progress',\r\n    //   header: 'Progress',\r\n    //   cell: ({row}) => {\r\n    //     const data = row?.original;\r\n    //     const count = Number(data?.subtasks_count);\r\n    //     const completed = Number(data?.subtasks_completed_count);\r\n    //     let bg = 'bg-transparent';\r\n    //     let percent = 0;\r\n\r\n    //     if(count > 0){percent = (completed / count) * 100;}\r\n    //     else{percent = Number(data?.board_column_id)=== 4 ? 100 : 0;}\r\n\r\n\r\n    //     if(percent === 100){\r\n    //       bg = 'bg-success'\r\n    //     }else if(percent < 100 && percent >= 75){\r\n    //       bg = 'bg-info';\r\n    //     }else if( percent < 75 && percent >= 25){\r\n    //       bg = 'bg-warning'\r\n    //     }else bg='bg-danger'\r\n\r\n\r\n    //     return(\r\n    //       <div>\r\n    //         <div className=\"progress\" style={{height: '16px'}}>\r\n    //             <div\r\n    //               className={`progress-bar progress-bar-striped progress-bar-animated ${bg}`}\r\n    //               role=\"progressbar\"\r\n    //               style={{width: `${percent}%`}}\r\n    //               aria-valuenow=\"10\"\r\n    //               aria-valuemin=\"0\"\r\n    //               aria-valuemax=\"100\"\r\n    //             >{Math.floor(percent)}%</div>\r\n    //         </div>\r\n    //       </div>\r\n    //     )\r\n    //   }\r\n    // },\r\n    {\r\n      id: 'report',\r\n      header: 'Report',\r\n      cell: ({row}) => {\r\n        const data = row?.original;\r\n        return <ReportButton row={data} />\r\n      }\r\n    },\r\n    {\r\n      id: 'action',\r\n      header: 'Action',\r\n      cell: ({row}) => {\r\n        const data = row?.original;\r\n        return <ActionDropdown row={data} />\r\n      },\r\n    }\r\n  ]\r\n\r\n\r\n\r\n  // Action Dropdown\r\n  const ActionDropdown = ({row}) => {\r\n    const [reportModalOpen, setReportModalOpen] = React.useState(false);\r\n    const singleTask = new SingleTask(row);\r\n    const close = () => setReportModalOpen(false);\r\n    const { subtasks } = useSelector(s => s.tasks);\r\n    const dispatch = useDispatch();\r\n    // handle report\r\n    const handleReport = () => {\r\n      // find the index of current task\r\n      const _index = _.findIndex(subtasks, {id: row?.id});\r\n      // create new instance of this row with updated report count;\r\n      const instance = [...subtasks];\r\n      instance[_index] = {...row, subtasks_reports_count: Number(row.subtasks_reports_count) + 1}\r\n      dispatch(storeSubTasks({subtasks: [...instance]}))\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Dropdown>\r\n            <Dropdown.Toggle icon={false}>\r\n              <Button variant='tertiary'>\r\n                <i className=\"fa-solid fa-ellipsis-vertical\"></i>\r\n              </Button>\r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu placement=\"bottom-end\" className=\"py-2 sp1_tasks_tbl_action_dd_menu\">\r\n              <Dropdown.Item onClick={() => setReportModalOpen(true)} className=\"sp1_tasks_tbl_del\">\r\n                <i className=\"fa-solid fa-bug mr-2\"></i> Report\r\n              </Dropdown.Item>\r\n            </Dropdown.Menu>\r\n        </Dropdown>\r\n\r\n        {/* report form modal */}\r\n        <Modal isOpen={reportModalOpen} className=\"sp1_single_task--modal\">\r\n            <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n                <div className=\"sp1_single_task--modal-panel task-report-form--modal-panel\">\r\n                    <div className=\"border-bottom pb-2 px-3 mb-3 d-flex align-items-center justify-content-between\">\r\n                        <div className=\"font-weight-bold f-14\">\r\n                            Task#{row?.id} : Report\r\n                        </div>\r\n                        <Button onClick={close} className=\"\">\r\n                            <i className=\"fa-solid fa-xmark\" />\r\n                        </Button>\r\n                    </div>\r\n                    <React.Suspense fallback={<div className=\"py-3 d-flex align-items-center justify-content-center\"><Loader /></div>}>\r\n                        <ReportForm task={singleTask} close={close} onSuccess={handleReport} />\r\n                    </React.Suspense>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n","import React, {useState, useEffect, useContext} from \"react\";\r\nimport Tabbar from \"../components/Tabbar\";\r\nimport SubTasksTable from \"../components/SubtaskTable\";\r\nimport FilterContainer from \"../components/Filter-bar/FilterContainer\";\r\nimport Filterbar from \"../components/Filter-bar/Filterbar\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport SearchBox from \"../components/Searchbox\";\r\nimport { useLazyGetAllSubtaskQuery } from \"../../services/api/tasksApiSlice\";\r\nimport { storeSubTasks } from \"../../services/features/tasksSlice\";\r\nimport { SubTasksTableColumns } from \"../components/SubtaskTableColumns\";\r\nimport { User } from \"../../utils/user-details\";\r\nimport TableFilter from \"../components/table/TableFilter\";\r\nimport _ from \"lodash\";\r\nimport { defaultColumnVisibility } from \"../constant\";\r\n\r\n\r\nconst auth = new User(window.Laravel.user);\r\n\r\nconst Subtasks = () => {\r\n    const {tasks} = useSelector(s => s.tasks)\r\n    const dispatch = useDispatch();\r\n    const [filter, setFilter] = React.useState(null);\r\n    const [search,setSearch] = React.useState('');\r\n    const [columnVisibility, setColumnVisibility] = React.useState(new Object(defaultColumnVisibility(auth)))\r\n\r\n    const [getAllSubtask, {isFetching}] = useLazyGetAllSubtaskQuery();\r\n\r\n    const onFilter = (filter) => {\r\n        const queryObject = _.pickBy(filter, Boolean);\r\n        const queryString = new URLSearchParams(queryObject).toString();\r\n        setFilter(queryObject);\r\n\r\n\r\n        if(filter?.start_date && filter?.end_date){\r\n            getAllSubtask(`${queryString}`)\r\n            .unwrap()\r\n            .then(res => {\r\n\r\n                let _data = res?.tasks\r\n                if(auth.getRoleId() === 4){\r\n                    _data = _.filter(res.tasks, d => Number(d.project_manager_id) === auth.getId());\r\n                }else if(auth.getRoleId() === 6){\r\n                    _data = _.filter(res.tasks, d => Number(d.added_by) === auth.getId());\r\n                }else if(auth.getRoleId() === 9 || auth.getRoleId() === 10){\r\n                    _data = _.filter(res.tasks, d => Number(d.assigned_to_id) === auth.getId());\r\n                }\r\n\r\n                const data = _.orderBy(_data, 'due_date', 'desc');\r\n                dispatch(storeSubTasks({subtasks: data}))\r\n            })\r\n            .catch(err => console.log(err))\r\n        }\r\n    }\r\n\r\n    let tableColumns = SubTasksTableColumns;\r\n\r\n    if(auth?.getRoleId() !== 5){\r\n        tableColumns = _.filter(SubTasksTableColumns, d => d.id !== \"action\");\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <FilterContainer>\r\n                <Filterbar onFilter={onFilter} page=\"subtasks\"/>\r\n            </FilterContainer>\r\n            <div className=\"sp1_tlr_container\">\r\n                <div className=\"sp1_tlr_tbl_container\">\r\n                    <div className=\"mb-3 d-flex align-items-center flex-wrap justify-content-between\">\r\n                        <Tabbar/>\r\n                        <div className=\"ml-auto\" style={{maxWidth: '300px'}}>\r\n                            <SearchBox value={search} onChange={setSearch} />\r\n                        </div>\r\n                        <div className=\"ml-2\" style={{marginTop: '2px'}}>\r\n                            <TableFilter\r\n                                tableName=\"subTaskTable\"\r\n                                columns = {_.filter(tableColumns, col => col.id !== 'expend')}\r\n                                columnVisibility={columnVisibility}\r\n                                setColumnVisibility={setColumnVisibility}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <SubTasksTable\r\n                        isLoading={isFetching}\r\n                        filter={filter}\r\n                        tableName=\"subTaskTable\"\r\n                        search={search}\r\n                        reportPermission = {[1,8,5]}\r\n                        columnVisibility = {columnVisibility}\r\n                        setColumnVisibility={setColumnVisibility}\r\n                        tableColumns={tableColumns}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Subtasks;\r\n"],"names":["ReportForm","React","compareDate","CompareDate","SubTasksTableColumns","id","header","_jsx","className","children","cell","_ref","row","index","accessorFn","concat","heading","_ref2","data","original","title","style","textDecoration","gap","_jsxs","href","accessorKey","_ref3","count","subtasks_timer_active","subtaskCount","_","subtasks_count","isActive","serverTime","timer","start_time","end_time","dayjs","unix","clockIsRunning","color","undefined","parentId","fontSize","StopWatch","time","run","_ref4","milestone_title","_ref5","_data$deliverable_tit","deliverable_title","project_id","project_name","_ref6","_ref7","Person","url","client_id","avatar","client_avatar","name","client_name","_ref8","project_manager_id","pm_id_name","pm_id_avatar","_ref9","creation_date","due_date","format","_ref10","_date","date","currentDate","isSame","isAfter","start_date","_ref11","_Fragment","completion_date","_ref12","Number","board_column_id","task_submission_date","_ref13","task_approval_date","_ref14","background","_ref15","_data$estimate_hours","_data$estimate_minute","estimate_hours","estimate_minutes","_ref16","convertTime","subtasks_hours_logged","_ref17","added_by","added_by_avatar","added_by_name","_ref18","assigned_to_id","assigned_to_avatar","assigned_to_name","_ref19","label_color","column_name","_ref20","ReportButton","_ref21","ActionDropdown","_ref22","_React$useState2","_slicedToArray","reportModalOpen","setReportModalOpen","singleTask","SingleTask","close","subtasks","useSelector","s","tasks","dispatch","useDispatch","Dropdown","Toggle","icon","Button","variant","Menu","placement","Item","onClick","Modal","isOpen","fallback","Loader","task","onSuccess","_index","instance","_toConsumableArray","_objectSpread","subtasks_reports_count","storeSubTasks","auth","User","window","Laravel","user","filter","setFilter","_React$useState4","search","setSearch","_React$useState6","Object","defaultColumnVisibility","columnVisibility","setColumnVisibility","_useLazyGetAllSubtask2","useLazyGetAllSubtaskQuery","getAllSubtask","isFetching","tableColumns","getRoleId","d","FilterContainer","Filterbar","onFilter","queryObject","Boolean","queryString","URLSearchParams","toString","end_date","unwrap","then","res","_data","getId","err","console","log","page","Tabbar","maxWidth","SearchBox","value","onChange","marginTop","TableFilter","tableName","columns","col","SubTasksTable","isLoading","reportPermission"],"sourceRoot":""}