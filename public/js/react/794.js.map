{"version":3,"file":"js/react/794.js","mappings":"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","sources":["webpack:///./resources/js/react/tasks/components/SubtaskTableColumns.jsx","webpack:///./resources/js/react/tasks/pages/Subtasks.jsx"],"sourcesContent":["import dayjs from \"dayjs\";\r\nimport * as React from 'react';\r\nimport Person from \"./Person\";\r\nimport { ExpandTask } from \"./table/ExpandTask\";\r\nimport { convertTime } from \"../../utils/converTime\";\r\nimport ReportButton from \"./ReportButton\";\r\nimport { CompareDate } from \"../../utils/dateController\";\r\nimport _ from \"lodash\";\r\nimport StopWatch from \"./Timer\";\r\nimport Dropdown from \"./Dropdown\";\r\nimport Button from \"./Button\";\r\nimport { SingleTask } from \"../../utils/single-task\";\r\nconst ReportForm = React.lazy(() => import(\"../../single-task/section/task-actions/report/ReportForm\"));\r\nimport Modal from \"./Modal\";\r\nimport Loader from \"./Loader\";\r\nimport { storeSubTasks } from \"../../services/features/tasksSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst compareDate = new CompareDate();\r\n\r\n\r\nexport const SubTasksTableColumns = [\r\n    {\r\n      id: 'expend',\r\n      header: <span className='mx-2'><strong>#</strong></span>,\r\n      cell: ({row}) => <span className='mx-2'><strong>{row.index + 1}</strong></span>\r\n    },\r\n    {\r\n      id: 'task',\r\n      header: 'Task',\r\n      accessorFn: (row) => `${row.id}${row.heading}`,\r\n      cell: ({row}) => {\r\n        const data = row?.original;  \r\n        return (\r\n          <abbr title={data?.heading} style={{textDecoration: 'none'}}>\r\n            <div className='d-flex align-items-center' style={{gap: '10px'}}>\r\n                <a href={`/account/tasks/${data?.id}`} className='hover-underline multine-ellipsis'> {data?.heading} </a>\r\n            </div>\r\n          </abbr>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      id: 'timer_status',\r\n      header: 'Timer Status',\r\n      accessorKey: 'subtasks_timer_active',\r\n      cell: ({row}) => {\r\n        const data = row?.original;\r\n        const count = data?.subtasks_timer_active;\r\n        const subtaskCount = _.size(data?.subtasks_count)\r\n        const isActive = count > 0;\r\n        let serverTime = 0;\r\n        let localTime = 0;\r\n        let timer = 0;\r\n\r\n         if(data?.start_time && _.isNull(data?.end_time)){\r\n            serverTime =compareDate.dayjs(data?.start_time).unix();\r\n            localTime = compareDate.dayjs().unix();\r\n            timer = localTime - serverTime;\r\n         }\r\n\r\n         const clockIsRunning = data?.start_time && _.isNull(data?.end_time)\r\n         \r\n        const color = (isActive || clockIsRunning) ? '#54B688' : '#DCDEE1'\r\n        return(\r\n          <div style={{color}} className='d-flex align-items-center'>\r\n            <i className=\"fa-solid fa-stopwatch f-18\"/>\r\n            {row.parentId === undefined && subtaskCount === 0 && !clockIsRunning && <span className='ml-2'><strong>{count}</strong></span>}\r\n            {clockIsRunning && \r\n              <span className='ml-1 badge badge-primary text-white' style={{fontSize: '11px'}}>\r\n                {<StopWatch time={timer} run={clockIsRunning} />}\r\n              </span>\r\n            }\r\n          </div>\r\n        )\r\n      }\r\n    }, \r\n    {\r\n      id: 'milestone',\r\n      header: 'Milestone',\r\n      accessorKey: 'milestone_title',\r\n      cell: ({row}) => {\r\n        const data = row?.original;\r\n        return(\r\n          <abbr title={data?.milestone_title} style={{textDecoration: 'none'}}>\r\n            <span className='multine-ellipsis word-break'>\r\n              {data?.milestone_title}\r\n            </span>\r\n          </abbr>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      id: 'deliverable',\r\n      header: 'Deliverable',\r\n      accessorKey: 'deliverable_title',\r\n      cell: ({row}) => {\r\n        const data = row?.original;\r\n        return(\r\n          <abbr title={data?.deliverable_title} style={{textDecoration: 'none'}}>\r\n            <span className='multine-ellipsis word-break'>\r\n              {data?.deliverable_title ?? '--'}\r\n            </span>\r\n          </abbr>\r\n          \r\n        )\r\n      }\r\n    },\r\n    {\r\n      id: 'project',\r\n      header: 'Project',\r\n      accessorFn: row => `${row?.project_id}${row?.project_name}`,\r\n      cell: ({row}) => {\r\n        const data = row?.original;\r\n        return(\r\n          <abbr title={data?.project_name} style={{textDecoration: 'none'}}>\r\n            <a href={`/account/projects/${data?.project_id}`} className='multine-ellipsis'>\r\n              {data?.project_name}\r\n            </a>\r\n          </abbr>\r\n        )\r\n      }\r\n    }, \r\n    {\r\n      id: 'client',\r\n      header: 'Client',\r\n      accessorKey: 'client_name',\r\n      cell: ({row}) => {\r\n        const data = row?.original;\r\n        return(\r\n          <div>\r\n            <Person\r\n              url={`/account/clients/${data?.client_id}`}\r\n              avatar={data?.client_avatar}\r\n              name={data?.client_name}\r\n            /> \r\n          </div>\r\n        )\r\n      }\r\n    }, \r\n    {\r\n      id: 'project_manager',\r\n      header: 'Project Manager',\r\n      accessorKey: 'pm_id_name',\r\n      cell: ({row}) => {\r\n        const data = row?.original;\r\n        return(\r\n          <Person\r\n            url={`/account/employees/${data?.project_manager_id}`}\r\n            name={data?.pm_id_name}\r\n            avatar={data?.pm_id_avatar}\r\n          /> \r\n        )\r\n      }\r\n    },\r\n    \r\n    {\r\n      id: 'creation_date',\r\n      header: 'Creation Date',\r\n      accessorKey: 'creation_date',\r\n      cell: ({row}) => {\r\n        const data = row?.original;\r\n        return(\r\n          <span>\r\n            { data?.creation_date}\r\n          </span>\r\n        )\r\n      }\r\n    }, \r\n    {\r\n      id: 'due_date',\r\n      header: 'Due Date',\r\n      accessorFn: row =>row?.due_date ? dayjs(row?.due_date).format('DD-MM-YYYY') : '--' ,\r\n      cell: ({row}) => {\r\n        const data = row?.original;\r\n        let date = data?.due_date;\r\n        const currentDate = compareDate.dayjs();\r\n        let color = ''\r\n\r\n        if(compareDate.isSame(currentDate, date)){\r\n          date = 'Today';\r\n          color= 'red';\r\n        }else if(compareDate.isAfter(currentDate, date)){\r\n          color= 'red'\r\n        }\r\n        \r\n        date = date === 'Today' ? date : dayjs(date).format('DD-MM-YYYY');\r\n        return(\r\n          <span style={{color: color}}>\r\n           <strong>{date ?? '--'}</strong> \r\n          </span>\r\n        )\r\n      }\r\n    }, \r\n    {\r\n      id: 'start_date',\r\n      header: 'Started Date',\r\n      accessorFn: row =>`${row?.start_date ? dayjs(row?.start_date).format('DD-MM-YYYY') : '--'}` ,\r\n      cell: ({row}) => {\r\n        const data = row?.original;\r\n        return(\r\n          <strong>\r\n            {data?.start_date ? (\r\n              <>\r\n                {dayjs(data?.start_date).format('DD-MM-YYYY')} <br/> \r\n              </>\r\n            ): '--'}\r\n          </strong>\r\n        )\r\n      }\r\n    }, \r\n    {\r\n      id: 'completion_date',\r\n      header: 'Completion Date',\r\n      accessorFn: row =>`${row?.completion_date ? dayjs(row?.completion_date).format('DD-MM-YYYY') : '--'}` ,\r\n      cell: ({row}) => {\r\n        const data = row?.original;\r\n        return(\r\n          <strong>\r\n            {Number(data?.board_column_id) === 4 ? \r\n              data?.completion_date && (\r\n                <>\r\n                  {dayjs(data?.completion_date).format('DD-MM-YYYY')} <br/> \r\n                </>\r\n              ): '--'\r\n            } \r\n          </strong>\r\n        )\r\n      }\r\n    }, \r\n    \r\n    {\r\n      id: 'approved_on',\r\n      header: 'Approved On',\r\n      accessorFn: row => `${row?.task_approval_date ? dayjs(row?.task_approval_date).format('DD-MM-YYYY') : 'Not Completed Yet!'}`,\r\n      cell: ({row}) => {\r\n        const data = row?.original;\r\n        return(\r\n          <strong> \r\n            {data?.task_approval_date ? (\r\n              <>\r\n                {dayjs(data?.task_approval_date).format('DD-MM-YYYY')}\r\n              </>\r\n            ): <span className='badge text-white word-break' style={{background: '#f5c308'}}>Not Completed Yet!</span>}\r\n          </strong>\r\n        )\r\n      }\r\n    }, \r\n    {\r\n      id: 'estimated_time',\r\n      header: 'Estimated Time',\r\n      cell: ({row}) => {\r\n        const data = row?.original;\r\n        return(\r\n          <div>\r\n            {data?.estimate_hours ?? 0} hrs <br/>\r\n            {data?.estimate_minutes ?? 0} mins\r\n          </div>\r\n        )\r\n      }\r\n    }, \r\n    {\r\n      id: 'hours_logged',\r\n      header: 'Hours Logged',\r\n      cell: ({row}) => {\r\n        const data = row?.original;\r\n        return(\r\n          <div>\r\n            {convertTime(data?.subtasks_hours_logged)}\r\n          </div>\r\n        )\r\n      }\r\n    }, \r\n    \r\n    {\r\n      id: 'assigned_by',\r\n      header: 'Assigned By',\r\n      accessorKey: 'added_by_name',\r\n      cell: ({row}) => {\r\n        const data = row?.original;\r\n        return(\r\n          <Person\r\n            url={`/account/employees/${data?.added_by}` }\r\n            avatar={data?.added_by_avatar}\r\n            name={data?.added_by_name}\r\n          /> \r\n        )\r\n      }\r\n    },\r\n    {\r\n      id: 'assigned_to',\r\n      header: 'Assigned To',\r\n      accessorKey: 'assigned_to_name',\r\n      cell: ({row}) => {\r\n        const data = row?.original;\r\n        return( \r\n          <Person\r\n            url={`/account/employees/${data?.assigned_to_id}` }\r\n            avatar={data?.assigned_to_avatar}\r\n            name={data?.assigned_to_name}\r\n          /> \r\n        )\r\n      }\r\n    },\r\n    {\r\n      id: 'status',\r\n      header: 'Task Status',\r\n      accessorKey: 'column_name',\r\n      cell: ({row}) => {\r\n        const data = row?.original;\r\n        return(\r\n          <span\r\n            className='badge text-white' \r\n            style={{background: data?.label_color}}\r\n          >\r\n            {data?.column_name}\r\n          </span>\r\n        )\r\n      }\r\n    }, \r\n    {\r\n      id: 'progress',\r\n      header: 'Progress',\r\n      cell: ({row}) => {\r\n        const data = row?.original;\r\n        const count = Number(data?.subtasks_count);\r\n        const completed = Number(data?.subtasks_completed_count);\r\n        let bg = 'bg-transparent';\r\n        let percent = 0;\r\n\r\n        if(count > 0){percent = (completed / count) * 100;}\r\n        else{percent = Number(data?.board_column_id)=== 4 ? 100 : 0;}\r\n\r\n\r\n        if(percent === 100){\r\n          bg = 'bg-success'\r\n        }else if(percent < 100 && percent >= 75){\r\n          bg = 'bg-info';\r\n        }else if( percent < 75 && percent >= 25){\r\n          bg = 'bg-warning'\r\n        }else bg='bg-danger'\r\n\r\n\r\n        return(\r\n          <div>\r\n            <div className=\"progress\" style={{height: '16px'}}>\r\n                <div \r\n                  className={`progress-bar progress-bar-striped progress-bar-animated ${bg}`} \r\n                  role=\"progressbar\" \r\n                  style={{width: `${percent}%`}} \r\n                  aria-valuenow=\"10\" \r\n                  aria-valuemin=\"0\" \r\n                  aria-valuemax=\"100\"\r\n                >{Math.floor(percent)}%</div>\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n    }, \r\n    {\r\n      id: 'report',\r\n      header: 'Report',\r\n      cell: ({row}) => {\r\n        const data = row?.original;\r\n        return <ReportButton row={data} />\r\n      }\r\n    },\r\n    {\r\n      id: 'action',\r\n      header: 'Action',\r\n      cell: ({row}) => {\r\n        const data = row?.original;\r\n        return <ActionDropdown row={data} />\r\n      },\r\n    }   \r\n  ]\r\n\r\n\r\n\r\n  // Action Dropdown\r\n  const ActionDropdown = ({row}) => { \r\n    const [reportModalOpen, setReportModalOpen] = React.useState(false);\r\n    const singleTask = new SingleTask(row); \r\n    const close = () => setReportModalOpen(false);  \r\n    const { subtasks } = useSelector(s => s.tasks);\r\n    const dispatch = useDispatch();\r\n    // handle report\r\n    const handleReport = () => {\r\n      // find the index of current task\r\n      const _index = _.findIndex(subtasks, {id: row?.id});\r\n      // create new instance of this row with updated report count;\r\n      const instance = [...subtasks];\r\n      instance[_index] = {...row, subtasks_reports_count: Number(row.subtasks_reports_count) + 1}\r\n      dispatch(storeSubTasks({subtasks: [...instance]}))\r\n    }\r\n    \r\n    return (\r\n      <React.Fragment>\r\n        <Dropdown>\r\n            <Dropdown.Toggle icon={false}>\r\n              <Button variant='tertiary'>\r\n                <i className=\"fa-solid fa-ellipsis-vertical\"></i>\r\n              </Button>\r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu placement=\"bottom-end\" className=\"py-2 sp1_tasks_tbl_action_dd_menu\">\r\n              <Dropdown.Item onClick={() => setReportModalOpen(true)} className=\"sp1_tasks_tbl_del\">\r\n                <i className=\"fa-solid fa-bug mr-2\"></i> Report\r\n              </Dropdown.Item>\r\n            </Dropdown.Menu>\r\n        </Dropdown> \r\n\r\n        {/* report form modal */}\r\n        <Modal isOpen={reportModalOpen} className=\"sp1_single_task--modal\">\r\n            <div className=\"sp1_single_task--modal-panerl-wrapper\">\r\n                <div className=\"sp1_single_task--modal-panel task-report-form--modal-panel\">\r\n                    <div className=\"border-bottom pb-2 px-3 mb-3 d-flex align-items-center justify-content-between\">\r\n                        <div className=\"font-weight-bold f-14\">\r\n                            Task#{row?.id} : Report\r\n                        </div>\r\n                        <Button onClick={close} className=\"\">\r\n                            <i className=\"fa-solid fa-xmark\" />\r\n                        </Button>\r\n                    </div>\r\n                    <React.Suspense fallback={<div className=\"py-3 d-flex align-items-center justify-content-center\"><Loader /></div>}>\r\n                        <ReportForm task={singleTask} close={close} onSuccess={handleReport} />\r\n                    </React.Suspense>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n ","import React, {useState, useEffect, useContext} from \"react\";\r\nimport Tabbar from \"../components/Tabbar\";\r\nimport SubTasksTable from \"../components/SubtaskTable\";\r\nimport FilterContainer from \"../components/Filter-bar/FilterContainer\";\r\nimport Filterbar from \"../components/Filter-bar/Filterbar\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport SearchBox from \"../components/Searchbox\";\r\nimport { useLazyGetAllSubtaskQuery } from \"../../services/api/tasksApiSlice\";\r\nimport { storeSubTasks } from \"../../services/features/tasksSlice\";\r\nimport { SubTasksTableColumns } from \"../components/SubtaskTableColumns\";\r\n\r\nconst Subtasks = () => {\r\n    const {tasks} = useSelector(s => s.tasks)\r\n    const dispatch = useDispatch(); \r\n    const [filter, setFilter] = React.useState(null);\r\n    const [search,setSearch] = React.useState('');\r\n\r\n    const [getAllSubtask, {isFetching}] = useLazyGetAllSubtaskQuery();\r\n\r\n    const onFilter = (filter) => {\r\n        const queryObject = _.pickBy(filter, Boolean);\r\n        const queryString = new URLSearchParams(queryObject).toString();\r\n        setFilter(queryObject);\r\n\r\n\r\n        if(filter?.start_date && filter?.end_date){\r\n            getAllSubtask(`${queryString}`)\r\n            .unwrap()\r\n            .then(res => {\r\n                const data = _.orderBy(res?.tasks, 'due_date', 'desc');\r\n                dispatch(storeSubTasks({subtasks: data}))\r\n            })\r\n            .catch(err => console.log(err))\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <FilterContainer>\r\n                <Filterbar onFilter={onFilter} page=\"subtasks\"/> \r\n            </FilterContainer>\r\n            <div className=\"sp1_tlr_container\">\r\n                <div className=\"sp1_tlr_tbl_container\">\r\n                    <div className=\"mb-3 d-flex align-items-center flex-wrap justify-content-between\">\r\n                        <Tabbar/>\r\n                        <div style={{maxWidth: '300px'}}>\r\n                            <SearchBox value={search} onChange={setSearch} />\r\n                        </div>\r\n                    </div>\r\n                     \r\n                    <SubTasksTable \r\n                        isLoading={isFetching} \r\n                        filter={filter} \r\n                        tableName=\"subTaskTable\"\r\n                        search={search}\r\n                        reportPermission = {[1,8,5]}\r\n                        tableColumns={SubTasksTableColumns}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Subtasks;\r\n"],"names":["ReportForm","React","compareDate","CompareDate","SubTasksTableColumns","id","header","_jsx","className","children","cell","_ref","row","index","accessorFn","concat","heading","_ref2","data","original","title","style","textDecoration","gap","_jsxs","href","accessorKey","_ref3","count","subtasks_timer_active","subtaskCount","_","subtasks_count","isActive","serverTime","timer","start_time","end_time","dayjs","unix","clockIsRunning","color","undefined","parentId","fontSize","StopWatch","time","run","_ref4","milestone_title","_ref5","_data$deliverable_tit","deliverable_title","project_id","project_name","_ref6","_ref7","Person","url","client_id","avatar","client_avatar","name","client_name","_ref8","project_manager_id","pm_id_name","pm_id_avatar","_ref9","creation_date","due_date","format","_ref10","_date","date","currentDate","isSame","isAfter","start_date","_ref11","_Fragment","completion_date","_ref12","Number","board_column_id","task_approval_date","_ref13","background","_ref14","_data$estimate_hours","_data$estimate_minute","estimate_hours","estimate_minutes","_ref15","convertTime","subtasks_hours_logged","_ref16","added_by","added_by_avatar","added_by_name","_ref17","assigned_to_id","assigned_to_avatar","assigned_to_name","_ref18","label_color","column_name","_ref19","completed","subtasks_completed_count","bg","percent","height","role","width","Math","floor","_ref20","ReportButton","_ref21","ActionDropdown","_ref22","_React$useState2","_slicedToArray","reportModalOpen","setReportModalOpen","singleTask","SingleTask","close","subtasks","useSelector","s","tasks","dispatch","useDispatch","Dropdown","icon","Button","variant","placement","onClick","Modal","isOpen","fallback","Loader","task","onSuccess","_index","instance","_toConsumableArray","_objectSpread","subtasks_reports_count","storeSubTasks","filter","setFilter","_React$useState4","search","setSearch","_useLazyGetAllSubtask2","useLazyGetAllSubtaskQuery","getAllSubtask","isFetching","FilterContainer","Filterbar","onFilter","queryObject","pickBy","Boolean","queryString","URLSearchParams","toString","end_date","unwrap","then","res","orderBy","err","console","log","page","Tabbar","maxWidth","SearchBox","value","onChange","SubTasksTable","isLoading","tableName","reportPermission","tableColumns"],"sourceRoot":""}