{"version":3,"file":"js/react/90.js","mappings":"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","sources":["webpack:///./resources/js/react/ckeditor/custom/ImageUploadAdapter.js","webpack:///./resources/js/react/ckeditor/index.jsx","webpack:///./resources/js/react/tasks/components/SubmitButton.jsx","webpack:///./resources/js/react/tasks/components/ReportResolveButton.jsx","webpack:///./resources/js/react/tasks/components/loader/ReportTableLoder.jsx","webpack:///./resources/js/react/tasks/components/ReportTableModal.jsx"],"sourcesContent":["\r\n\r\n\r\nclass UploadAdapter {\r\n    constructor(loader) {\r\n      this.loader = loader;\r\n    }\r\n  \r\n    upload() {\r\n      return this.loader.file.then(\r\n        (file) =>\r\n          new Promise((resolve, reject) => {\r\n            this._initRequest();\r\n            this._initListeners(resolve, reject, file);\r\n            this._sendRequest(file);\r\n          })\r\n      );\r\n    }\r\n  \r\n    abort() {\r\n      if (this.xhr) {\r\n        this.xhr.abort();\r\n      }\r\n    }\r\n  \r\n    _initRequest() {\r\n      const xhr = (this.xhr = new XMLHttpRequest());\r\n      xhr.open('POST', '/upload', true);\r\n      xhr.setRequestHeader(\r\n        'X-CSRF-TOKEN',\r\n        $('meta[name=\"csrf-token\"]').attr('content')\r\n      );\r\n      xhr.responseType = 'json';\r\n    }\r\n  \r\n    _initListeners(resolve, reject, file) {\r\n      const xhr = this.xhr;\r\n      const loader = this.loader;\r\n      const genericErrorText = `Couldn't upload file: ${file.name}.`;\r\n      xhr.addEventListener('error', () => reject(genericErrorText));\r\n      xhr.addEventListener('abort', () => reject());\r\n      xhr.addEventListener('load', () => {\r\n        const response = xhr.response;\r\n        if (!response || response.error) {\r\n          return reject(\r\n            response && response.error\r\n              ? response.error.message\r\n              : genericErrorText\r\n          );\r\n        }\r\n        resolve({\r\n          default: response.filename,\r\n        });\r\n      });\r\n  \r\n      if (xhr.upload) {\r\n        xhr.upload.addEventListener('progress', (evt) => {\r\n          if (evt.lengthComputable) {\r\n            loader.uploadTotal = evt.total;\r\n            loader.uploaded = evt.loaded;\r\n          }\r\n        });\r\n      }\r\n    }\r\n  \r\n    _sendRequest(file) {\r\n      const data = new FormData();\r\n      data.append('image', file);\r\n      this.xhr.send(data);\r\n    }\r\n  }\r\n\r\nfunction ImageUploadAdapterPlugin(editor) { \r\n    editor.plugins.get( 'FileRepository' ).createUploadAdapter = ( loader ) => {\r\n        // Configure the URL to the upload script in your back-end here!\r\n        return new UploadAdapter( loader );\r\n    };\r\n}\r\n\r\nexport default ImageUploadAdapterPlugin;","import * as React from 'react';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';  \r\nimport DecoupledEditor from '@ckeditor/ckeditor5-build-decoupled-document';\r\nimport ImageUploadAdapterPlugin from './custom/ImageUploadAdapter'; \r\n\r\n\r\n\r\nexport default function CKEditorComponent ({data=\"\", onChange, placeholder=\"Type the content here!\"}){\r\n    const [editor, setEditor] = React.useState(null);\r\n\r\n    return (\r\n        <>\r\n            <CKEditor\r\n                onReady={editor => {\r\n                    // Insert the toolbar before the editable area.\r\n                    editor.ui.getEditableElement()?.parentElement.insertBefore(\r\n                        editor.ui.view.toolbar.element,\r\n                        editor.ui.getEditableElement()\r\n                    );\r\n\r\n                    setEditor(editor);\r\n                }}\r\n\r\n                onError={ ( error, { willEditorRestart } ) => {\r\n                    if ( willEditorRestart ) {\r\n                        this.editor.ui.view.toolbar.element.remove();\r\n                    }\r\n                } }\r\n                onChange={ ( event, editor ) => onChange ? onChange(event, editor): null }\r\n                editor={ DecoupledEditor }\r\n                data={data}\r\n                config={{ \r\n                    extraPlugins: [ImageUploadAdapterPlugin],\r\n                    placeholder,\r\n                    toolbar: [ \r\n                        'undo','redo', \r\n                        '|',\r\n                        'heading', \r\n                        '|', \r\n                        'bold', 'italic', \r\n                        {\r\n                            label: 'More basic styles', \r\n                            icon: 'text', \r\n                            items: [\"underline\",\"strikethrough\", \"blockQuote\", 'alignment', \"fontColor\",\"fontBackgroundColor,\"]\r\n                        },\r\n                        '|', \r\n                        {\r\n                            label: 'List',\r\n                            icon: false,\r\n                            items: ['bulletedList', 'numberedList','indent', 'outdent']\r\n                        },\r\n                        '|', \r\n                        'link',\r\n                        {\r\n                            label: 'Insert',\r\n                            icon: 'plus',\r\n                            items: ['imageUpload', 'mediaEmbed', 'insertTable']\r\n                        },\r\n                    ],\r\n\r\n                    image:{\r\n                        toolbar:[\"imageStyle:inline\",\"imageStyle:block\",\"imageStyle:side\",\"|\",\"toggleImageCaption\",\"imageTextAlternative\", \"ImageResize\"]\r\n                    },\r\n                    \r\n                    table:{\r\n                        contentToolbar:[\"tableColumn\",\"tableRow\",\"mergeTableCells\"]\r\n                    },\r\n        \r\n                    heading: {\r\n                        options: [\r\n                            { model: 'paragraph', title: 'Paragraph', class: 'ck-heading_paragraph' },\r\n                            { model: 'heading1', view: 'h1', title: 'Heading 1', class: 'ck-heading_heading1' },\r\n                            { model: 'heading2', view: 'h2', title: 'Heading 2', class: 'ck-heading_heading2' },\r\n                            { model: 'heading3', view: 'h3', title: 'Heading 3', class: 'ck-heading_heading3' },\r\n                            { model: 'heading4', view: 'h4', title: 'Heading 4', class: 'ck-heading_heading4' },\r\n                            { model: 'heading5', view: 'h5', title: 'Heading 5', class: 'ck-heading_heading5' },\r\n                            { model: 'heading6', view: 'h6', title: 'Heading 6', class: 'ck-heading_heading6' },\r\n                        ]\r\n                    },\r\n                }}\r\n            />\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\nimport Button from \"./Button\";\r\n\r\nconst SubmitButton = ({onClick, isLoading, className, variant=\"primary\", children, title}) => {\r\n    let body = document.querySelector('#body');\r\n\r\n    const handleOnClick = (e) => {\r\n        e.stopPropagation();\r\n        onClick(e)\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if(isLoading){\r\n            body.style.cursor = 'progress';\r\n        }else{\r\n            body.style.cursor = 'default';\r\n        }\r\n    }, [isLoading])\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            {!isLoading ? (\r\n                <Button variant={variant} onClick={handleOnClick} className={className}>\r\n                    {children || title}\r\n                </Button>\r\n            ) : (\r\n                <div className=\"cursor-processing cnx__btn cnx__btn_sm cnx__btn_primary\">\r\n                    <div\r\n                        className=\"spinner-border text-white\"\r\n                        role=\"status\"\r\n                        style={{\r\n                            width: \"18px\",\r\n                            height: \"18px\",\r\n                        }}\r\n                    ></div>\r\n                    Processing...\r\n                </div>\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default SubmitButton;\r\n","import React from 'react'\r\nimport Modal from './Modal';\r\nimport Button from './Button';\r\nimport CKEditorComponent from '../../ckeditor/index'\r\nimport SubmitButton from './SubmitButton';\r\nimport { useResolveReportMutation } from '../../services/api/tasksApiSlice';\r\nimport _ from 'lodash';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateReportStatus } from '../../services/features/tasksSlice';\r\n\r\nconst ReportResoveButton = ({row}) => {\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const [search, setSearch] = React.useState('');\r\n  const [comment, setComment] = React.useState('');\r\n  const [resolveReport, {isLoading}] = useResolveReportMutation();\r\n  \r\n  const dispatch = useDispatch();\r\n\r\n \r\n  const handleModal = (e) => { \r\n    setIsOpen(true);\r\n  }\r\n \r\n  const close = () => setIsOpen(false)\r\n\r\n  const isDev = _.includes([5], window?.Laravel?.user?.role_id);\r\n\r\n  const onSubmit = (type) => {\r\n    let data = {\r\n        status: type,\r\n        report_id: row?.id,\r\n        admin_comment: comment,\r\n    }\r\n\r\n    if(comment){\r\n       resolveReport(data)\r\n       .unwrap() \r\n       .then(res => {\r\n            if(res.status === 200){\r\n                dispatch(updateReportStatus({id: row?.id, status: type}));\r\n                close();\r\n            }\r\n       })\r\n    }\r\n  }\r\n\r\n  const handleEditor = (e, editor) => {\r\n    const data = editor.getData();\r\n    setComment(data);\r\n  }\r\n\r\n\r\n  const variant = row?.status ===  'approved' ? 'success' : 'tertiary';\r\n  const title = (row?.status === 'approved' ? 'Resoved' : row?.status === 'pending' ? 'Resove' : _.startCase(row?.status));\r\n\r\n\r\n  const badge = row?.status === 'pending' ? 'badge-primary' : row?.status === 'approved' ? 'badge-success' : 'badge-warning'\r\n\r\n  return (\r\n    <div>\r\n        {isDev && <span className={`badge ${badge}`}>{row?.status}</span>}\r\n       \r\n        {!isDev && \r\n            <React.Fragment>\r\n            <Button onClick={() => row?.status === 'pending' && handleModal()} variant={variant} className={row?.status === 'denied' ? 'sp1_tasks_tbl_report_btn': ''}>\r\n            {title}\r\n            </Button> \r\n            \r\n            <React.Fragment>\r\n                <Modal isOpen={isOpen}> \r\n                    <div className=\"sp1_modal-content-wrapper\">\r\n                        <div className=\"sp1_modal-panel\">\r\n                            {/* header */}\r\n                            <div className=\"sp1_modal-head\">\r\n                                <div className=\"sp1_modal-title pl-2\"><strong>Report Details</strong></div>\r\n                                <Button onClick={close} aria-label=\"ModalClose\" variant='tertiary' className='sp1_modal-close'>\r\n                                    <i className='fa-solid fa-xmark'/>\r\n                                </Button>\r\n                            </div>\r\n                            {/* end header */}\r\n\r\n                            {/* body */}\r\n                            <div className=\"sp1_modal-body p-3\">\r\n                                <div className='ck-editor-holder'>\r\n                                    <CKEditorComponent onChange={handleEditor} placeholder='Write your comment here!'/>\r\n                                </div> \r\n\r\n                                <div className='mt-3 d-flex align-items-center justify-content-end py-4'> \r\n                                    <div className='ml-auto d-flex align-items-center w-fit' style={{gap: '10px'}}>\r\n                                            <SubmitButton variant='success' title=\"Approve & Close\" onClick={() => onSubmit('approved')} isLoading={isLoading} className=\"ml-auto mr-2\" />\r\n                                        {!isLoading &&  <SubmitButton title=\"Deny & Close\" onClick={() => onSubmit('denied')} isLoading={isLoading} className=\"deny_button\" />}\r\n                                    </div>\r\n                                </div>                    \r\n                            </div>\r\n                            {/* end body */}\r\n                        </div>  \r\n                    </div>\r\n                </Modal>\r\n            </React.Fragment>\r\n        </React.Fragment>\r\n        }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ReportResoveButton ","import _ from \"lodash\";\r\nimport { Placeholder } from \"../../../global/Placeholder\";\r\n\r\nexport default function ReportTableLoder(){\r\n    return(\r\n        _.times(5, item => (\r\n            <tr key={item} className=\"sp1_tasks_tr\" > \r\n                <td className=\"sp1_tasks_td\">\r\n                    <Placeholder width=\"50px\" height=\"14px\" className=\"mb-1\"/> \r\n                </td>\r\n\r\n                <td className=\"sp1_tasks_td d-flex align-items-center\">\r\n                    <Placeholder width=\"24px\" height=\"24px\" type=\"circle\" className=\"mb-1 mr-2\"/>\r\n                    <Placeholder width=\"80px\" height=\"13px\" className=\"mb-1\"/>\r\n                </td> \r\n\r\n                <td className=\"sp1_tasks_td d-flex align-items-center\">\r\n                    <Placeholder width=\"24px\" height=\"24px\" type=\"circle\" className=\"mb-1 mr-2\"/>\r\n                    <Placeholder width=\"80px\" height=\"13px\" className=\"mb-1\"/>\r\n                </td>  \r\n                  \r\n                <td className=\"sp1_tasks_td\">\r\n                    <Placeholder width=\"100%\" height=\"13px\" className=\"mb-1\"/>\r\n                    <Placeholder width=\"60%\" height=\"13px\" className=\"mb-1\"/>\r\n                </td> \r\n\r\n                <td className=\"sp1_tasks_td\">\r\n                    <Placeholder width=\"100%\" height=\"13px\" className=\"mb-1\"/>\r\n                    <Placeholder width=\"100%\" height=\"13px\" className=\"mb-1\"/>\r\n                    <Placeholder width=\"40%\" height=\"13px\" className=\"mb-1\"/>\r\n                </td> \r\n                <td className=\"sp1_tasks_td\">\r\n                    <Placeholder width=\"80px\" height=\"13px\" className=\"mb-1\"/> \r\n                </td>  \r\n\r\n                <td className=\"sp1_tasks_td\">\r\n                    <Placeholder width=\"80px\" height=\"20px\" className=\"mb-1\"/> \r\n                </td>\r\n            </tr>\r\n        ))\r\n    )\r\n}","import {\r\n  useReactTable, \r\n  getCoreRowModel,\r\n  getPaginationRowModel,\r\n  getFilteredRowModel, \r\n  getSortedRowModel,\r\n  flexRender\r\n} from '@tanstack/react-table';\r\nimport React from 'react';\r\nimport { DragableColumnHeader } from './table/DragableColumnHeader';\r\nimport demo from './demo.json'\r\nimport Person from './Person';\r\nimport ReportResoveButton from './ReportResolveButton';\r\nimport ReportTableLoder from './loader/ReportTableLoder';\r\n\r\n\r\n// columns model\r\n\r\n\r\n\r\nconst ReportTableModal = ({reports = [], task, search, tableName='sp1-table', isLoading=true}) => {\r\n  const [data, setData] = React.useState([...reports]) \r\n  const [sorting, setSorting] = React.useState([]);\r\n  const [{pageIndex, pageSize}, setPagination] = React.useState({pageIndex: 0, pageSize: 10});\r\n \r\n\r\n\r\n  // \r\n  const defaultColumns = React.useMemo(() => [\r\n    {\r\n      id: 'serial_no',\r\n      header: 'Serial No.',\r\n      accessorKey: 'id',\r\n      cell: (info) => info.getValue() \r\n    }, \r\n    {\r\n      id: 'report_issuer',\r\n      header: 'Report Issuer',\r\n      cell: ({row}) => {\r\n        const data = row?.original;\r\n        return(\r\n          <span>\r\n            <Person \r\n              url={`/account/employees/${data?.added_by}`}\r\n              name={data?.report_issue_added_by}\r\n              avatar={data?.report_issue_added_by_avatar}\r\n            />\r\n          </span>\r\n        )\r\n      } \r\n    },\r\n    {\r\n      id: 'accountable_individual',\r\n      header: 'Accountable Individual',\r\n      cell: ({row}) => {\r\n        const data = row?.original;\r\n        return(\r\n          <span>\r\n            <Person \r\n              url={`/account/employees/${data?.person}`}\r\n              name={data?.responsible_person_name}\r\n              avatar={data?.responsible_person_avatar}\r\n            />\r\n          </span>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      id: 'report_reason',\r\n      header: 'Report Reason',\r\n      cell: ({row}) => {\r\n        const data = row?.original;\r\n        return(\r\n          <span>\r\n            {data?.reason} \r\n          </span>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      id: 'report_reason_details',\r\n      header: 'Report Reason Details',\r\n      cell: ({row}) => {\r\n        const data = row?.original;\r\n        return(\r\n          <div className=\"sp1_ck_content\" dangerouslySetInnerHTML={{__html: data?.comment}}  />\r\n        )\r\n      }\r\n    },\r\n    {\r\n      id: 'pre_reported',\r\n      header: 'Previously Reported',\r\n      cell: ({row}) => {\r\n        const data = row?.original;\r\n        return(\r\n          <span>{data?.previousNotedIssue}</span>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      id: 'action',\r\n      header: 'Action',\r\n      cell: ({row}) => {\r\n        const data = row?.original;\r\n          return <ReportResoveButton row={data} />\r\n      }\r\n    }\r\n  ])\r\n\r\n\r\n\r\n  // columns\r\n  const [columns] = React.useState([...defaultColumns])\r\n  const [columnOrder, setColumnOrder] = React.useState(_.map(columns, 'id')); \r\n  const resetColumnsOrder = () => setColumnOrder(_.map(columns, 'id'))\r\n\r\n  const pagination = React.useMemo(() => ({pageIndex, pageSize}), [pageIndex, pageSize]);\r\n \r\n\r\n  React.useEffect(() => {\r\n    setData([...reports])\r\n  },[reports])\r\n\r\n  const table = useReactTable({\r\n    data,\r\n    columns,\r\n    state: {\r\n      sorting,\r\n      columnOrder,\r\n      pagination,\r\n      tableName,\r\n      globalFilter:search\r\n    },\r\n    onPaginationChange: setPagination,\r\n    onSortingChange: setSorting,\r\n    onColumnOrderChange: setColumnOrder,\r\n    getCoreRowModel: getCoreRowModel(),\r\n    getPaginationRowModel: getPaginationRowModel(),\r\n    getFilteredRowModel: getFilteredRowModel(),\r\n    getSortedRowModel: getSortedRowModel(),\r\n  })\r\n\r\n  return (\r\n      <div className='sp1_tasks_table_wrapper sp1_tasks_report_table_wrapper'>\r\n        <table className='sp1_tasks_table sp1_tasks_report_table'>\r\n          <thead className=\"sp1_tasks_thead\">\r\n            {table.getHeaderGroups().map(headerGroup => (\r\n              <tr key={headerGroup.id} className='sp1_tasks_tr'>\r\n                {headerGroup.headers.map(header => {\r\n                  return <DragableColumnHeader key={header.id} header={header} table={table} className=\"sp1_tasks_report_th\"/> \r\n                })}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody className='sp1_tasks_tbody'> \r\n            {isLoading && <ReportTableLoder />}\r\n            {!isLoading && table.getRowModel().rows.map(row => {\r\n              return (\r\n                <tr\r\n                  className='sp1_tasks_tr'\r\n                    key={row.id}\r\n                  > \r\n                  {row.getVisibleCells().map(cell => { \r\n                    return (\r\n                      <td key={cell.id} className='px-2 sp1_tasks_td sp1_tasks_report_td'>\r\n                        {flexRender(\r\n                          cell.column.columnDef.cell,\r\n                          cell.getContext()\r\n                        )} \r\n                      </td>\r\n                    )\r\n                  })}\r\n                </tr>\r\n              )\r\n            })} \r\n          </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ReportTableModal"],"names":["UploadAdapter","loader","_classCallCheck","this","key","value","_this","file","then","Promise","resolve","reject","_initRequest","_initListeners","_sendRequest","xhr","abort","XMLHttpRequest","open","setRequestHeader","$","attr","responseType","genericErrorText","concat","name","addEventListener","response","error","message","default","filename","upload","evt","lengthComputable","uploadTotal","total","uploaded","loaded","data","FormData","append","send","editor","plugins","get","createUploadAdapter","CKEditorComponent","_ref","_ref$data","onChange","_ref$placeholder","placeholder","_React$useState2","_slicedToArray","React","setEditor","_jsx","_Fragment","children","CKEditor","onReady","_editor$ui$getEditabl","ui","getEditableElement","parentElement","insertBefore","view","toolbar","element","onError","_ref2","willEditorRestart","remove","event","DecoupledEditor","config","extraPlugins","ImageUploadAdapterPlugin","label","icon","items","image","table","contentToolbar","heading","options","model","title","class","onClick","isLoading","className","_ref$variant","variant","body","document","querySelector","style","cursor","_jsxs","role","width","height","Button","e","stopPropagation","_window","_window$Laravel","_window$Laravel$user","row","isOpen","setIsOpen","_React$useState4","_React$useState6","comment","setComment","_useResolveReportMuta2","useResolveReportMutation","resolveReport","dispatch","useDispatch","close","isDev","_","window","Laravel","user","role_id","onSubmit","type","status","report_id","id","admin_comment","unwrap","res","updateReportStatus","badge","Modal","getData","gap","SubmitButton","ReportTableLoder","item","Placeholder","_ref$reports","reports","search","task","_ref$tableName","tableName","_ref$isLoading","_toConsumableArray","setData","sorting","setSorting","pageIndex","pageSize","_React$useState6$","setPagination","defaultColumns","header","accessorKey","cell","info","getValue","original","Person","url","added_by","report_issue_added_by","avatar","report_issue_added_by_avatar","_ref3","person","responsible_person_name","responsible_person_avatar","_ref4","reason","_ref5","dangerouslySetInnerHTML","__html","_ref6","previousNotedIssue","_ref7","ReportResoveButton","columns","_React$useState10","map","columnOrder","setColumnOrder","pagination","useReactTable","state","globalFilter","onPaginationChange","onSortingChange","onColumnOrderChange","getCoreRowModel","getPaginationRowModel","getFilteredRowModel","getSortedRowModel","getHeaderGroups","headerGroup","headers","DragableColumnHeader","getRowModel","rows","getVisibleCells","flexRender","column","columnDef","getContext"],"sourceRoot":""}